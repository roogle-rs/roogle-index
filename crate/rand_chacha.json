{"root":"0:0:1669","crate_version":"0.3.1","includes_private":false,"index":{"0:163":{"id":"0:163","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9275:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:164:674"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:192":{"id":"0:192","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:128:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12175:29811":{"id":"2:12175:29811","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12174:29806"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43911:11601","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:168:1807":{"id":"0:168:1807","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:1782","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:96:1806":{"id":"0:96:1806","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:18:1794","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"b:2:3319-0:204:1659":{"id":"b:2:3319-0:204:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2302","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1512"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:166:1805":{"id":"0:166:1805","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"b:21:270-0:285:1664":{"id":"b:21:270-0:285:1664","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[221,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"21:263:2088","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"21:267:2348","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["21:273:24121"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12165:26057":{"id":"2:12165:26057","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"üóª‚ààüåè\");\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9942:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9942:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2318:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:87-0:275:1663":{"id":"0:87-0:275:1663","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[27,58],"end":[27,69]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Core","name":"ChaCha8Core","id":"0:275:1663","glob":false}}},"2:12171:11603":{"id":"2:12171:11603","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"yÃÜ\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'yÃÜ'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11991:420"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43598:11581","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12170:26079":{"id":"2:12170:26079","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-L√∂f\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-L√∂f\", last);\n}\nassert_eq!(\"PER Martin-L√∂f\", s);\n```","links":{"str::split_at":"2:12169:26078"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12217:31296":{"id":"2:12217:31296","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195":{"id":"0:195","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:196:616"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12249:24238":{"id":"2:12249:24238","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13112"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259:1884":{"id":"0:259:1884","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2740:2303-0:214:1660":{"id":"a:2:2740:2303-0:214:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2303","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12188:7780":{"id":"2:12188:7780","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('√©'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41669:179","prim@char":"1:11991:420","self::pattern":"2:11848:13112"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2249-0:133:1661":{"id":"b:2:2249-0:133:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2302","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:2266"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2554-0:214:1660":{"id":"b:2:2554-0:214:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2557:128","2:2558:1498"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:282":{"id":"0:282","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2694:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:95:1805","0:96:1806","0:97:1807"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12147:821":{"id":"2:12147:821","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"∆íoo\".len(), 4); // fancy f!\nassert_eq!(\"∆íoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11991:420"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:89:1666":{"id":"0:89:1666","crate_id":0,"name":"ChaChaRng","span":{"filename":"src/lib.rs","begin":[31,0],"end":[31,33]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"typedef":{"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"0:261:1892":{"id":"0:261:1892","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:134:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:248:1813","0:250:1814"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2543-0:214:1660":{"id":"b:2:2543-0:214:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:700"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:190:1892":{"id":"0:190:1892","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:217:424":{"id":"0:217:424","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:167:1806":{"id":"0:167:1806","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:18:1794","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"0:114":{"id":"0:114","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:115:1855","0:116:1871","0:117:1884","0:118:1889","0:119:1892"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:680-0:143:1662":{"id":"b:5:680-0:143:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:7799","5:683:7800","5:684:7801"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8382:12904-0:285:1664":{"id":"a:2:8382:12904-0:285:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8382:12904","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12223:2281":{"id":"2:12223:2281","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11848:13112","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11991:420","str::rmatches":"2:12226:31298"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43832:11596","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:680-0:133:1661":{"id":"b:5:680-0:133:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:7799","5:683:7800","5:684:7801"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:148:674":{"id":"0:148:674","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9250:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9239:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:684:7801":{"id":"5:684:7801","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:100:1813":{"id":"0:100:1813","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2318:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2539-0:285:1664":{"id":"b:2:2539-0:285:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:179:1814":{"id":"0:179:1814","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:134:1785","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:250:1814":{"id":"0:250:1814","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:134:1785","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:251":{"id":"0:251","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"20:123:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:252:1845","0:253:1846","0:254:1847","0:255:1849"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:187:1871":{"id":"0:187:1871","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211":{"id":"0:211","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2694:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12185:26098":{"id":"2:12185:26098","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13112"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:134:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:100:1813","0:102:1814"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:92":{"id":"0:92","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9275:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:93:674"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:88-0:285:1664":{"id":"0:88-0:285:1664","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[27,71],"end":[27,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Rng","name":"ChaCha8Rng","id":"0:285:1664","glob":false}}},"0:207:424":{"id":"0:207:424","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:20:131-0:285:1664":{"id":"b:20:131-0:285:1664","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand_core-0.6.4/src/lib.rs","begin":[234,0],"end":[234,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"20:128:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RngCore","id":"20:123:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CryptoRngCore","id":"20:129:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["20:133:24122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2549-0:133:1661":{"id":"b:2:2549-0:133:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:128","2:2553:1499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:20:131-0:143:1662":{"id":"b:20:131-0:143:1662","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand_core-0.6.4/src/lib.rs","begin":[234,0],"end":[234,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"20:128:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RngCore","id":"20:123:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CryptoRngCore","id":"20:129:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["20:133:24122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:184:1849":{"id":"0:184:1849","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41811:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:72:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2700:228-0:143:1662":{"id":"a:2:2700:228-0:143:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2683:220-0:133:1661":{"id":"a:2:2683:220-0:133:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2539-0:204:1659":{"id":"b:2:2539-0:204:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:189:1889":{"id":"0:189:1889","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176":{"id":"0:176","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:134:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:177:1813","0:179:1814"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:0:1669":{"id":"0:0:1669","crate_id":0,"name":"rand_chacha","span":{"filename":"src/lib.rs","begin":[9,0],"end":[33,35]},"visibility":"public","docs":"The ChaCha random number generator.","links":{},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\", html_favicon_url\n= \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://rust-random.github.io/rand/\")]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:3-20:0:1656","0:83-0:204:1659","0:84-0:214:1660","0:85-0:133:1661","0:86-0:143:1662","0:87-0:275:1663","0:88-0:285:1664","0:89:1666","0:90:1668"],"is_stripped":false}}},"2:12173:1848":{"id":"2:12173:1848","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43614:8254","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5511":{"id":"5:5511","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5512:31969","5:5513:13343","5:5516:31970","5:5519:31971","5:5527:31972","5:5528:31973","5:5529:12821","5:5530:27304","5:5531:27305"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:147":{"id":"0:147","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9275:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:148:674"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5530:27304":{"id":"5:5530:27304","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12269:25967"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12150:31288":{"id":"2:12150:31288","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji üßë‚Äçüî¨ (scientist) could be split so that the string only\nincludes üßë (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:137":{"id":"0:137","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2693:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12239:31303":{"id":"2:12239:31303","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2252-0:214:1660":{"id":"b:2:2252-0:214:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2302","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2254:24115"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:680-0:214:1660":{"id":"b:5:680-0:214:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:7799","5:683:7800","5:684:7801"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"21:273:24121":{"id":"21:273:24121","crate_id":21,"name":"vzip","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[226,4],"end":[226,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"V"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:106:1813":{"id":"0:106:1813","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:278:424"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:263":{"id":"0:263","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:128:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:196:616":{"id":"0:196:616","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12148:7741":{"id":"2:12148:7741","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2539-0:214:1660":{"id":"b:2:2539-0:214:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:138":{"id":"0:138","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:139:616"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12237:31302":{"id":"2:12237:31302","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊¢') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2249-0:214:1660":{"id":"b:2:2249-0:214:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2302","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:2266"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12182:26097":{"id":"2:12182:26097","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13112"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"20:133:24122":{"id":"20:133:24122","crate_id":20,"name":"as_rngcore","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand_core-0.6.4/src/lib.rs","begin":[235,4],"end":[235,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"RngCore","id":"20:123:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2554-0:285:1664":{"id":"b:2:2554-0:285:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2557:128","2:2558:1498"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2249-0:285:1664":{"id":"b:2:2249-0:285:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2302","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:2266"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:246":{"id":"0:246","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:128:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12161:26055":{"id":"2:12161:26055","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41669:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9942:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9942:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121":{"id":"0:121","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:128:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:146:424"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2249-0:275:1663":{"id":"b:2:2249-0:275:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2302","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:2266"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12208:31295":{"id":"2:12208:31295","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11848:13112","str::split":"2:12196:26086","prim@char":"1:11991:420","str::split_terminator":"2:12205:31294"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43696:11588","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2249-0:143:1662":{"id":"b:2:2249-0:143:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2302","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:2266"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:281:616":{"id":"0:281:616","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2693:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2700:228-0:285:1664":{"id":"a:2:2700:228-0:285:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:181:1845":{"id":"0:181:1845","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:124":{"id":"0:124","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:125:616"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:275:1663":{"id":"0:275:1663","crate_id":0,"name":"ChaCha8Core","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"ChaCha with 8 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2683:220-0:275:1663","a:2:2700:228-0:275:1663","a:2:2740:2303-0:275:1663","a:2:8381:12705-0:275:1663","a:2:8382:12904-0:275:1663","b:2:2252-0:275:1663","b:2:2554-0:275:1663","b:2:3319-0:275:1663","b:2:2549-0:275:1663","b:2:2539-0:275:1663","b:2:2249-0:275:1663","b:2:2543-0:275:1663","b:5:680-0:275:1663","b:21:270-0:275:1663","0:279","0:264","0:234","0:241","0:236","0:283","0:246","0:280","0:282","0:277"]}}},"2:12220:31297":{"id":"2:12220:31297","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12273:12697":{"id":"2:12273:12697","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4539:12697"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43936:11482","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2683:220-0:204:1659":{"id":"a:2:2683:220-0:204:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2740:2303-0:143:1662":{"id":"a:2:2740:2303-0:143:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2303","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12268:25966":{"id":"2:12268:25966","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√∂S\"));\nassert!(!\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√ñS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12267:25964":{"id":"2:12267:25964","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39698:25976","Self::is_ascii":"2:12266:25963"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39698:25976","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:173:1814":{"id":"0:173:1814","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:134:1785","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:136:424":{"id":"0:136:424","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:1892":{"id":"0:119:1892","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:248:1813":{"id":"0:248:1813","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"2:12269:25967":{"id":"2:12269:25967","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Gr√º√üe, J√ºrgen ‚ù§\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:214:1660":{"id":"0:214:1660","crate_id":0,"name":"ChaCha12Rng","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:154:1781","`RngCore`":"20:123:1784"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:185","a:2:2683:220-0:214:1660","a:2:2700:228-0:214:1660","a:2:2740:2303-0:214:1660","a:2:8381:12705-0:214:1660","a:2:8382:12904-0:214:1660","b:2:2252-0:214:1660","b:2:2554-0:214:1660","b:2:3319-0:214:1660","b:2:2549-0:214:1660","b:2:2539-0:214:1660","b:2:2249-0:214:1660","b:2:2543-0:214:1660","b:5:680-0:214:1660","b:20:131-0:214:1660","b:21:270-0:214:1660","0:193","0:180","0:195","0:176","0:218","0:192","0:216","0:197"]}}},"2:12157:315":{"id":"2:12157:315","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12158:314","`u8`":"1:12008:1521"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:170":{"id":"0:170","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:134:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:171:1813","0:173:1814"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3321:1512":{"id":"2:3321:1512","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39490:11353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:210:616"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:204:1659":{"id":"0:204:1659","crate_id":0,"name":"ChaCha12Core","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"ChaCha with 12 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2683:220-0:204:1659","a:2:2700:228-0:204:1659","a:2:2740:2303-0:204:1659","a:2:8381:12705-0:204:1659","a:2:8382:12904-0:204:1659","b:2:2252-0:204:1659","b:2:2554-0:204:1659","b:2:3319-0:204:1659","b:2:2549-0:204:1659","b:2:2539-0:204:1659","b:2:2249-0:204:1659","b:2:2543-0:204:1659","b:5:680-0:204:1659","b:21:270-0:204:1659","0:193","0:206","0:163","0:208","0:175","0:211","0:212","0:165","0:170","0:209"]}}},"a:2:2740:2303-0:275:1663":{"id":"a:2:2740:2303-0:275:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2303","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12178:29812":{"id":"2:12178:29812","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Za≈º√≥≈Çƒá gƒô≈õlƒÖ ja≈∫≈Ñ\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43920:11602","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8381:12705-0:204:1659":{"id":"a:2:8381:12705-0:204:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8381:12705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3319-0:275:1663":{"id":"b:2:3319-0:275:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2302","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1512"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5516:31970":{"id":"5:5516:31970","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:182:1846":{"id":"0:182:1846","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265:700":{"id":"0:265:700","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12246:31307":{"id":"2:12246:31307","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13112"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:165":{"id":"0:165","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:166:1805","0:167:1806","0:168:1807"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2543-0:285:1664":{"id":"b:2:2543-0:285:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:700"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:237:1805":{"id":"0:237:1805","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:254:1847":{"id":"0:254:1847","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12152:31289":{"id":"2:12152:31289","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°üíõ\");\n```","links":{"str::floor_char_boundary":"2:12150:31288"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5519:31971":{"id":"5:5519:31971","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Œ£\";\n\nassert_eq!(\"œÉ\", sigma.to_lowercase());\n\n// but at the end of a word, it's œÇ, not œÉ:\nlet odysseus = \"·ΩàŒîŒ•Œ£Œ£ŒïŒéŒ£\";\n\nassert_eq!(\"·ΩÄŒ¥œÖœÉœÉŒµœçœÇ\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2700:228-0:214:1660":{"id":"a:2:2700:228-0:214:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:111:1846":{"id":"0:111:1846","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257:1855":{"id":"0:257:1855","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9275:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:674"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:289":{"id":"0:289","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9275:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:290:674"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:680-0:285:1664":{"id":"b:5:680-0:285:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:7799","5:683:7800","5:684:7801"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2318:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:258:1871":{"id":"0:258:1871","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12232:31300":{"id":"2:12232:31300","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11848:13112","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11991:420","str::match_indices":"2:12229:31299"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43796:11594","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:21:270-0:133:1661":{"id":"b:21:270-0:133:1661","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[221,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"21:263:2088","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"21:267:2348","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["21:273:24121"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:133:1661":{"id":"b:2:3319-0:133:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2302","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1512"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:143:1662":{"id":"b:2:3319-0:143:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2302","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1512"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:244:1814":{"id":"0:244:1814","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:134:1785","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:1846":{"id":"0:253:1846","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:281:616"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2251:2266":{"id":"2:2251:2266","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:214:1660":{"id":"b:2:3319-0:214:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2302","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1512"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:680-0:204:1659":{"id":"b:5:680-0:204:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:7799","5:683:7800","5:684:7801"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2252-0:275:1663":{"id":"b:2:2252-0:275:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2302","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2254:24115"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:21:270-0:275:1663":{"id":"b:21:270-0:275:1663","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[221,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"21:263:2088","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"21:267:2348","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["21:273:24121"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:128:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12177:31293":{"id":"2:12177:31293","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43892:11599","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12192:7740":{"id":"2:12192:7740","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('√©'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41669:179","prim@char":"1:11991:420","self::pattern":"2:11848:13112"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:260:1889":{"id":"0:260:1889","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:102:1814":{"id":"0:102:1814","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:134:1785","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12258:31309":{"id":"2:12258:31309","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13112"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5527:31972":{"id":"5:5527:31972","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tsch√º√ü\";\n\nassert_eq!(\"TSCH√úSS\", s.to_uppercase());\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12242:31305":{"id":"2:12242:31305","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219:674":{"id":"0:219:674","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9250:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9239:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:288:424"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12243:31306":{"id":"2:12243:31306","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13112"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11873:13109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:20:131-0:214:1660":{"id":"b:20:131-0:214:1660","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand_core-0.6.4/src/lib.rs","begin":[234,0],"end":[234,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"20:128:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RngCore","id":"20:123:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CryptoRngCore","id":"20:129:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["20:133:24122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12264:31311":{"id":"2:12264:31311","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11809:127","`FromStr`":"2:11808:12915"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41811:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11808:12915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11808:12915","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12163:26056":{"id":"2:12163:26056","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"üóª‚ààüåè\";\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9942:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9942:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12241:31304":{"id":"2:12241:31304","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™\";\nassert!(Some('◊¢') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12211:26092":{"id":"2:12211:26092","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13112","str::rsplitn":"2:12214:26094"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43732:11590","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:123:700":{"id":"0:123:700","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2539-0:143:1662":{"id":"b:2:2539-0:143:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:113:1849":{"id":"0:113:1849","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41811:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:72:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2252-0:204:1659":{"id":"b:2:2252-0:204:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2302","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2254:24115"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2249-0:204:1659":{"id":"b:2:2249-0:204:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2302","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:2266"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:255:1849":{"id":"0:255:1849","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41811:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:72:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2252-0:285:1664":{"id":"b:2:2252-0:285:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2302","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2254:24115"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:207:424"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:93:674":{"id":"0:93:674","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9250:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9239:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12174:29806":{"id":"2:12174:29806","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12175:29811"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43902:11600","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8381:12705-0:285:1664":{"id":"a:2:8381:12705-0:285:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8381:12705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:42-21:274:2083":{"id":"0:42-21:274:2083","crate_id":0,"name":null,"span":{"filename":"src/guts.rs","begin":[14,0],"end":[14,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"ppv_lite86::Machine","name":"Machine","id":"21:274:2083","glob":false}}},"0:116:1871":{"id":"0:116:1871","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2554-0:143:1662":{"id":"b:2:2554-0:143:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2557:128","2:2558:1498"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:193":{"id":"0:193","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:194:700"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2549-0:275:1663":{"id":"b:2:2549-0:275:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:128","2:2553:1499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"20:123:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:110:1845","0:111:1846","0:112:1847","0:113:1849"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:135":{"id":"0:135","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:136:424"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5513:13343":{"id":"5:5513:13343","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5531:27305":{"id":"5:5531:27305","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"gr√º√üe, j√ºrgen ‚ù§\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12270:25968"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183:1847":{"id":"0:183:1847","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:97:1807":{"id":"0:97:1807","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:1782","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12252:26099":{"id":"2:12252:26099","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13112"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:21:270-0:204:1659":{"id":"b:21:270-0:204:1659","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[221,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"21:263:2088","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"21:267:2348","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["21:273:24121"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2542:1859":{"id":"2:2542:1859","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2516:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:682:7799":{"id":"5:682:7799","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"a:2:8382:12904-0:133:1661":{"id":"a:2:8382:12904-0:133:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8382:12904","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:217:424"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:140":{"id":"0:140","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2694:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:290:674":{"id":"0:290:674","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9250:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9239:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84-0:214:1660":{"id":"0:84-0:214:1660","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[27,18],"end":[27,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Rng","name":"ChaCha12Rng","id":"0:214:1660","glob":false}}},"0:86-0:143:1662":{"id":"0:86-0:143:1662","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[27,45],"end":[27,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Rng","name":"ChaCha20Rng","id":"0:143:1662","glob":false}}},"2:12172:11614":{"id":"2:12172:11614","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"yÃÜes\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'yÃÜ')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11991:420"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43604:11582","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:285:1664":{"id":"b:2:3319-0:285:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2302","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1512"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2539-0:133:1661":{"id":"b:2:2539-0:133:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12235:31301":{"id":"2:12235:31301","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2700:228-0:275:1663":{"id":"a:2:2700:228-0:275:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5528:31973":{"id":"5:5528:31973","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:2310","`String`":"5:7451:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2310","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7184:8414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:236":{"id":"0:236","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:237:1805","0:238:1806","0:239:1807"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:139:616":{"id":"0:139:616","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110:1845":{"id":"0:110:1845","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12261:31310":{"id":"2:12261:31310","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13112"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12266:25963":{"id":"2:12266:25963","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:164:674":{"id":"0:164:674","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9250:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9239:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12271:31312":{"id":"2:12271:31312","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"‚ù§\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_debug().to_string(), \"‚ù§\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4538:31312"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43927:11491","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2318:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:252:1845":{"id":"0:252:1845","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12270:25968":{"id":"2:12270:25968","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GR√ú√üE, J√úRGEN ‚ù§\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"gr√ú√üe, j√úrgen ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83-0:204:1659":{"id":"0:83-0:204:1659","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[27,4],"end":[27,16]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Core","name":"ChaCha12Core","id":"0:204:1659","glob":false}}},"a:2:8381:12705-0:275:1663":{"id":"a:2:8381:12705-0:275:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8381:12705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5529:12821":{"id":"5:5529:12821","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2549-0:204:1659":{"id":"b:2:2549-0:204:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:128","2:2553:1499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:234":{"id":"0:234","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9275:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:235:674"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:680-0:275:1663":{"id":"b:5:680-0:275:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:7799","5:683:7800","5:684:7801"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:239:1807":{"id":"0:239:1807","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:1782","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12155:26034":{"id":"2:12155:26034","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11408:13113"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:18:1794":{"id":"0:18:1794","crate_id":0,"name":"Array64","span":{"filename":"src/chacha.rs","begin":[27,0],"end":[27,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"0:175":{"id":"0:175","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:128:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2683:220-0:214:1660":{"id":"a:2:2683:220-0:214:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12229:31299":{"id":"2:12229:31299","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11848:13112","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11991:420","str::rmatch_indices":"2:12232:31300"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43778:11593","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:134:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:242:1813","0:244:1814"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:117:1884":{"id":"0:117:1884","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2543-0:275:1663":{"id":"b:2:2543-0:275:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:700"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12196:26086":{"id":"2:12196:26086","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11848:13112","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11991:420","str::split_whitespace":"2:12174:29806","str::rsplit":"2:12202:26090"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43628:11239","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2558:1498":{"id":"2:2558:1498","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41811:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:21:270-0:143:1662":{"id":"b:21:270-0:143:1662","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[221,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"21:263:2088","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"21:267:2348","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["21:273:24121"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:125:616":{"id":"0:125:616","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:194:700":{"id":"0:194:700","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:267:616":{"id":"0:267:616","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12156:31290":{"id":"2:12156:31290","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"üóª‚ààüåè\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"üçî‚ààüåè\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:265:700"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12274:31313":{"id":"2:12274:31313","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4536:31313"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43945:11490","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:238:1806":{"id":"0:238:1806","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:18:1794","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"0:288:424":{"id":"0:288:424","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12146":{"id":"2:12146","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12147:821","2:12148:7741","2:12149:31287","2:12150:31288","2:12152:31289","2:12155:26034","2:12156:31290","2:12157:315","2:12158:314","2:12159:26054","2:12161:26055","2:12163:26056","2:12165:26057","2:12167:31291","2:12168:31292","2:12169:26078","2:12170:26079","2:12171:11603","2:12172:11614","2:12173:1848","2:12174:29806","2:12175:29811","2:12176:28669","2:12177:31293","2:12178:29812","2:12179:26096","2:12182:26097","2:12185:26098","2:12188:7780","2:12192:7740","2:12196:26086","2:12199:26088","2:12202:26090","2:12205:31294","2:12208:31295","2:12211:26092","2:12214:26094","2:12217:31296","2:12220:31297","2:12223:2281","2:12226:31298","2:12229:31299","2:12232:31300","2:12235:31301","2:12237:31302","2:12239:31303","2:12241:31304","2:12242:31305","2:12243:31306","2:12246:31307","2:12249:24238","2:12252:26099","2:12255:31308","2:12258:31309","2:12261:31310","2:12264:31311","2:12266:25963","2:12267:25964","2:12268:25966","2:12269:25967","2:12270:25968","2:12271:31312","2:12273:12697","2:12274:31313"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8381:12705-0:143:1662":{"id":"a:2:8381:12705-0:143:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8381:12705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2254:24115":{"id":"2:2254:24115","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12176:28669":{"id":"2:12176:28669","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43882:11598","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8381:12705-0:133:1661":{"id":"a:2:8381:12705-0:133:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8381:12705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"20:123:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:181:1845","0:182:1846","0:183:1847","0:184:1849"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:235:674":{"id":"0:235:674","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9250:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9239:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12158:314":{"id":"2:12158:314","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12008:1521"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8382:12904-0:143:1662":{"id":"a:2:8382:12904-0:143:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8382:12904","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5512:31969":{"id":"5:5512:31969","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2310","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7184:8414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:2310","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7184:8414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2557:128":{"id":"2:2557:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32169:10127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:8382:12904-0:214:1660":{"id":"a:2:8382:12904-0:214:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8382:12904","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2700:228-0:133:1661":{"id":"a:2:2700:228-0:133:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2543-0:133:1661":{"id":"b:2:2543-0:133:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:700"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:122":{"id":"0:122","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:123:700"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:185":{"id":"0:185","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:186:1855","0:187:1871","0:188:1884","0:189:1889","0:190:1892"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8381:12705-0:214:1660":{"id":"a:2:8381:12705-0:214:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8381:12705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:242:1813":{"id":"0:242:1813","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:177:1813":{"id":"0:177:1813","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:133:1661":{"id":"0:133:1661","crate_id":0,"name":"ChaCha20Core","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2683:220-0:133:1661","a:2:2700:228-0:133:1661","a:2:2740:2303-0:133:1661","a:2:8381:12705-0:133:1661","a:2:8382:12904-0:133:1661","b:2:2252-0:133:1661","b:2:2554-0:133:1661","b:2:3319-0:133:1661","b:2:2549-0:133:1661","b:2:2539-0:133:1661","b:2:2249-0:133:1661","b:2:2543-0:133:1661","b:5:680-0:133:1661","b:21:270-0:133:1661","0:104","0:135","0:137","0:141","0:94","0:99","0:138","0:92","0:140","0:122"]}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:616"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:188:1884":{"id":"0:188:1884","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2700:228-0:204:1659":{"id":"a:2:2700:228-0:204:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2543-0:204:1659":{"id":"b:2:2543-0:204:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:700"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12226:31298":{"id":"2:12226:31298","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11848:13112","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11991:420","str::matches":"2:12223:2281"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43850:11597","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:186:1855":{"id":"0:186:1855","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12205:31294":{"id":"2:12205:31294","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11848:13112","str::split":"2:12196:26086","prim@char":"1:11991:420","`DoubleEndedIterator`":"2:7306:121","str::rsplit_terminator":"2:12208:31295"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43678:11587","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2740:2303-0:133:1661":{"id":"a:2:2740:2303-0:133:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2303","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12214:26094":{"id":"2:12214:26094","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11991:420","str::splitn":"2:12211:26092","self::pattern":"2:11848:13112"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43750:11591","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2554-0:133:1661":{"id":"b:2:2554-0:133:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2557:128","2:2558:1498"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:115:1855":{"id":"0:115:1855","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:108:1814":{"id":"0:108:1814","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:134:1785","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:683:7800":{"id":"5:683:7800","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12179:26096":{"id":"2:12179:26096","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13112"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2683:220-0:143:1662":{"id":"a:2:2683:220-0:143:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2554-0:204:1659":{"id":"b:2:2554-0:204:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2557:128","2:2558:1498"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2252-0:143:1662":{"id":"b:2:2252-0:143:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2302","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2254:24115"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2318:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:208":{"id":"0:208","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2693:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:256":{"id":"0:256","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:257:1855","0:258:1871","0:259:1884","0:260:1889","0:261:1892"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2683:220-0:285:1664":{"id":"a:2:2683:220-0:285:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12149:31287":{"id":"2:12149:31287","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nassert!(s.is_char_boundary(0));\n// start of `ËÄÅ`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `√∂`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `ËÄÅ`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2740:2303-0:204:1659":{"id":"a:2:2740:2303-0:204:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2303","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2545:700":{"id":"2:2545:700","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:278:424":{"id":"0:278:424","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:21:270-0:214:1660":{"id":"b:21:270-0:214:1660","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[221,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"21:263:2088","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"21:267:2348","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["21:273:24121"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:283":{"id":"0:283","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2318:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12167:31291":{"id":"2:12167:31291","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nunsafe {\n    assert_eq!(\"L√∂we ËÄÅËôé L√©opard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11997:1418","str::slice_mut_unchecked":"2:12168:31292","crate::ops::Index":"2:2980:12730"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:2552:128":{"id":"2:2552:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"b:2:2252-0:133:1661":{"id":"b:2:2252-0:133:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2302","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2254:24115"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:210:616":{"id":"0:210:616","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2539-0:275:1663":{"id":"b:2:2539-0:275:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:90:1668":{"id":"0:90:1668","crate_id":0,"name":"ChaChaCore","span":{"filename":"src/lib.rs","begin":[33,0],"end":[33,35]},"visibility":"public","docs":"ChaCha with 20 rounds, low-level interface","links":{},"attrs":[],"deprecation":null,"inner":{"typedef":{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"b:2:2554-0:275:1663":{"id":"b:2:2554-0:275:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2557:128","2:2558:1498"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12159:26054":{"id":"2:12159:26054","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"üóª‚ààüåè\");\n\nassert_eq!(Some(\"üóª\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41669:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9942:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9942:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:143:1662":{"id":"0:143:1662","crate_id":0,"name":"ChaCha20Rng","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:154:1781","`RngCore`":"20:123:1784"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:114","a:2:2683:220-0:143:1662","a:2:2700:228-0:143:1662","a:2:2740:2303-0:143:1662","a:2:8381:12705-0:143:1662","a:2:8382:12904-0:143:1662","b:2:2252-0:143:1662","b:2:2554-0:143:1662","b:2:3319-0:143:1662","b:2:2549-0:143:1662","b:2:2539-0:143:1662","b:2:2249-0:143:1662","b:2:2543-0:143:1662","b:5:680-0:143:1662","b:20:131-0:143:1662","b:21:270-0:143:1662","0:147","0:109","0:145","0:124","0:126","0:122","0:105","0:121"]}}},"0:95:1805":{"id":"0:95:1805","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"2:12202:26090":{"id":"2:12202:26090","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11848:13112","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11991:420","str::split":"2:12196:26086"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43646:11243","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:118:1889":{"id":"0:118:1889","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112:1847":{"id":"0:112:1847","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2549-0:285:1664":{"id":"b:2:2549-0:285:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:128","2:2553:1499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12199:26088":{"id":"2:12199:26088","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13112"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11664:11242","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2683:220-0:275:1663":{"id":"a:2:2683:220-0:275:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:85-0:133:1661":{"id":"0:85-0:133:1661","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[27,31],"end":[27,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Core","name":"ChaCha20Core","id":"0:133:1661","glob":false}}},"2:12168:31292":{"id":"2:12168:31292","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11997:1418","crate::ops::IndexMut":"2:2984:12731","str::slice_unchecked":"2:12167:31291"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:146:424":{"id":"0:146:424","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12255:31308":{"id":"2:12255:31308","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13112"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:12108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8382:12904-0:204:1659":{"id":"a:2:8382:12904-0:204:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8382:12904","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:171:1813":{"id":"0:171:1813","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"b:2:2543-0:143:1662":{"id":"b:2:2543-0:143:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:700"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2740:2303-0:285:1664":{"id":"a:2:2740:2303-0:285:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2303","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2549-0:143:1662":{"id":"b:2:2549-0:143:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:128","2:2553:1499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2549-0:214:1660":{"id":"b:2:2549-0:214:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:128","2:2553:1499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:285:1664":{"id":"0:285:1664","crate_id":0,"name":"ChaCha8Rng","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:154:1781","`RngCore`":"20:123:1784"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:256","a:2:2683:220-0:285:1664","a:2:2700:228-0:285:1664","a:2:2740:2303-0:285:1664","a:2:8381:12705-0:285:1664","a:2:8382:12904-0:285:1664","b:2:2252-0:285:1664","b:2:2554-0:285:1664","b:2:3319-0:285:1664","b:2:2549-0:285:1664","b:2:2539-0:285:1664","b:2:2249-0:285:1664","b:2:2543-0:285:1664","b:5:680-0:285:1664","b:20:131-0:285:1664","b:21:270-0:285:1664","0:247","0:264","0:251","0:263","0:287","0:289","0:266","0:268"]}}},"0:105":{"id":"0:105","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:134:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:106:1813","0:108:1814"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8382:12904-0:275:1663":{"id":"a:2:8382:12904-0:275:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8382:12904","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2553:1499":{"id":"2:2553:1499","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41811:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3-20:0:1656":{"id":"0:3-20:0:1656","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[21,0],"end":[21,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"rand_core","name":"rand_core","id":"20:0:1656","glob":false}}},"2:12169:26078":{"id":"2:12169:26078","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-L√∂f\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-L√∂f\", last);\n```","links":{"str::split_at_mut":"2:12170:26079"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"2:45814:11658":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"11:1121:12082":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"11:1858:10122":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2:21:687":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:7907:12199":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:44128:11618":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:4770:10636":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:40392:12124":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:9913:11948":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:11664:11242":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:14150:9579":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:42257:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:45832:11659":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:11144:8935":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:41562:8465":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"13:226:8386":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:10933:12115":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"9:507:10187":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"6:6834:11146":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:40168:11489":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:44217:11621":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:1810:12148":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:10090:7882":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:9344:32813":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"21:260:2347":{"crate_id":21,"path":["ppv_lite86","types","u128x4"],"kind":"trait"},"1:2203:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:11862:8744":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:48071:7719":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:41582:29680":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:7268:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"16:6763:9870":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:7517:11178":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:579:10267":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:3930:12836":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:21862:11252":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"6:7463:11175":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:10091:25872":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"6:5051:10782":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"6:1495:10281":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:39483:12121":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:4389:7837":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"16:3295:9700":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"11:332:8025":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:9153:8251":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"6:4556:10573":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:12646:9168":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:40545:8441":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"11:2180:10125":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:11832:9014":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:21984:8427":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"21:1520:7856":{"crate_id":21,"path":["ppv_lite86","x86_64","NoA1"],"kind":"struct"},"2:2705:7817":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:10401:12112":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:40248:11498":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:7859:8494":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"6:6607:11036":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:40215:11493":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:2523:237":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:11642:8976":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:5080:10791":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:45638:11651":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"6:1513:10289":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:4028:12841":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"6:1663:10390":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:46382:11676":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:3196:13077":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:46953:11693":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:7540:11184":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"16:5882:9758":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"6:7250:11161":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:41653:11555":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"6:4992:10752":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:11994:1059":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"6:4729:10615":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"20:116:24110":{"crate_id":20,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"1:3106:12158":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"16:6396:9804":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:7043:8137":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:10182:11242":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:1975:184":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"11:2033:9900":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:40935:11526":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"18:660:11917":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:10520:8876":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"16:6018:20071":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:14301:9624":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:1833:12149":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"16:7525:8369":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:21743:12794":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"16:7313:32805":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:41618:11783":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"18:652:8722":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"5:7184:8414":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"21:180:2086":{"crate_id":21,"path":["ppv_lite86","types","BitOps32"],"kind":"trait"},"16:4476:9712":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"9:393:19063":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:6243:8134":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"6:4568:10582":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"6:4413:10507":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:22589:11277":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:11808:12915":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:20720:29645":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"16:8125:12063":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:9127:11816":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:46261:11672":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"16:6317:8356":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"17:12727:9179":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"20:134:1785":{"crate_id":20,"path":["rand_core","SeedableRng"],"kind":"trait"},"17:1973:11928":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"6:5955:10923":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:11848:13112":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"17:10175:8237":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:2773:13350":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:11578:11843":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:44012:13124":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"5:3570:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"5:0:286":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:4409:7825":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:1884:12151":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:8156:11778":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:2984:12731":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"5:3217:32684":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:9098:218":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"11:447:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:12757:9198":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:3980:12838":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:42714:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:551:12137":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"18:515:8723":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:11613:11592":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"16:3744:9703":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:10509:12161":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:582:8848":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:4050:12845":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"6:4420:10511":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:8899:20136":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"16:5301:9732":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:14236:9605":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:13778:9470":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:22721:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:40279:29693":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:9083:8249":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:12002:648":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:2565:8111":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"16:2589:9677":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:44660:11649":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:13566:9430":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:9899:8256":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"21:183:2331":{"crate_id":21,"path":["ppv_lite86","types","RotateEachWord32"],"kind":"trait"},"2:11868:13110":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:40144:11487":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:10823:29107":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"18:766:24097":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"6:7609:11199":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"5:35:8032":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"5:7201:11214":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:8808:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"5:878:8044":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:4900:12889":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"16:4814:9722":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"18:707:8744":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:10223:8862":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:11496:12171":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:1757:613":{"crate_id":1,"path":["std","env"],"kind":"module"},"17:10471:8869":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"17:11888:8276":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:7758:12120":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:45730:11655":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:1746:11227":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:14205:9598":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"16:6175:8336":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:20925:13370":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"2:47137:11695":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"5:2223:32716":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"16:2689:9681":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:22754:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:44049:11612":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"16:530:8307":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"5:207:8034":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"11:1501:19142":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:3181:30017":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"16:4592:9716":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:5471:8063":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:40724:11522":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:10927:10184":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"17:9952:8841":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:11774:8169":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:43614:8254":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:23234:8461":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"16:6850:9876":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:3217:12162":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"6:4463:10527":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"21:884:2081":{"crate_id":21,"path":["ppv_lite86","dispatch"],"kind":"macro"},"2:10332:12111":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:22097:29695":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:358:12136":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"16:6977:12032":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:46717:2344":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:20911:12979":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"1:10740:11825":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"11:1663:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:46483:11679":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"11:365:8027":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"16:7289:9936":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:10097:11958":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:42296:8466":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:46641:11689":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"17:13069:9252":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:12106:9058":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:30615:29684":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:12493:192":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:43936:11482":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:400:11924":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:46923:11692":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:46285:11673":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:46563:11680":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:9409:32817":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:12921:9224":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"7:79:19055":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:30509:29689":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"21:299:2089":{"crate_id":21,"path":["ppv_lite86","types","StoreBytes"],"kind":"trait"},"11:1838:10119":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"5:5956:8071":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"6:7272:11162":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:3168:13161":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:40949:11528":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:22051:11256":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"6:5863:10872":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:45970:11665":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:30451:29696":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"6:4848:10671":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:0:498":{"crate_id":2,"path":["core"],"kind":"module"},"11:2201:11215":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:10529:8951":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:10745:11827":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:44063:11615":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:12346:9121":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:10141:12224":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"16:3441:9701":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"17:11234:8943":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"17:13803:9475":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"16:6438:9807":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"18:481:8720":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:9942:222":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:9534:13194":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:47595:11722":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"6:5987:10936":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:2838:13357":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"17:11329:20140":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"1:3339:12817":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:6536:12933":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"16:6332:9796":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:22424:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"6:5068:10786":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:7651:12192":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"16:7707:9964":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:10775:8494":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"16:5916:8303":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:42021:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"16:2465:9672":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:42668:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"18:96:24087":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:10302:12181":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"1:10948:27958":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:10038:11952":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:8325:12212":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:2683:220":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:14054:9541":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:4042:12843":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:40522:11513":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"6:4685:10592":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:9866:11944":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:1913:12761":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"17:12851:9215":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:11346:11841":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"11:1048:32787":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:22787:11278":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:2980:12730":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:10763:11833":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"5:2243:8424":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:14102:9578":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:8949:20138":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:5234:190":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:7721:13329":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"16:4868:9724":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:5704:8328":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:2855:13361":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"6:7599:11197":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:11553:11584":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"5:6888:244":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:3520:12812":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:22142:11269":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"11:657:7745":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"16:5720:9742":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"16:5689:8325":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:3456:12168":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"6:4304:10434":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:48003:7715":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:11248:8163":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"6:6868:11155":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"21:1205:8219":{"crate_id":21,"path":["ppv_lite86","x86_64","sse2","u64x2_sse2"],"kind":"struct"},"17:13882:9495":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:9399:11936":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"10:44:8388":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"17:14163:9585":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:8977:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:11271:12236":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:1578:10121":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"17:13697:9447":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"5:4848:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:11498:8966":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:8813:11804":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:9146:11817":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:11098:8927":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:10323:11969":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"2:43911:11601":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:13971:9519":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:434:8807":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"16:5567:9691":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:41499:11538":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"6:5900:10886":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:12017:9036":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:13604:9437":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:12435:9135":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:10621:11988":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"5:4196:8063":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"1:11411:8165":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"6:5008:10757":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:4638:10587":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"9:0:2167":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:43927:11491":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:20722:29647":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:32169:10127":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:2816:13355":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:45893:11661":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:13795:9473":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"11:1103:12081":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:0:1410":{"crate_id":1,"path":["std"],"kind":"module"},"17:13923:9504":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"11:723:8417":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"16:7763:20079":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"14:7:12067":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"5:1374:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:41605:11553":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"2:3647:7745":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"10:36:10132":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:1566:10119":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:4129:25870":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"6:6625:11045":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:9528:32808":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"6:4374:10486":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:13964:9518":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:22036:29686":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:10415:12113":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:40423:8437":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"21:1580:2324":{"crate_id":21,"path":["ppv_lite86","x86_64","vec256_storage"],"kind":"union"},"1:1557:8057":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"11:0:2169":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:1422:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:2516:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:3141:13362":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:7123:25862":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:44379:11641":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:7264:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:3395:11934":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"6:1673:10396":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"16:3025:9698":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:8903:12939":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"16:7038:9897":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"16:2421:9670":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:11753:8995":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:5611:206":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:7726:8482":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"17:10486:8871":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"19:0:1041":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:48133:7721":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"5:6932:8088":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"7:0:1565":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:8351:11786":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:12579:9158":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:12741:12717":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:41785:7875":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:42960:2100":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:42658:11560":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"18:755:8754":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:10319:28030":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"17:13957:9517":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:7445:12054":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"14:160:12067":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:12013:797":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:12053:9045":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:9282:7803":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"9:177:8405":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:2804:9915":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"1:8225:12208":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:13456:9389":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"16:6531:8022":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"1:11043:8161":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"16:2399:9669":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"9:450:19062":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:4325:8097":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"21:1540:7860":{"crate_id":21,"path":["ppv_lite86","x86_64","NoNI"],"kind":"struct"},"17:8997:20116":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"6:5805:10839":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:2928:2306":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:11328:12191":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:3179:28562":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:43628:11239":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"5:3583:7882":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"16:4506:9713":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:42138:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:42432:7812":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:9280:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:7295:11174":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:12089:9050":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:2152:591":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:43526:11250":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:21114:12794":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:47937:7709":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"21:267:2348":{"crate_id":21,"path":["ppv_lite86","types","VZip"],"kind":"trait"},"16:6232:8320":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"18:671:11921":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:4944:10730":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"17:13332:9295":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:4258:12104":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:14015:9529":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:9286:7812":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:32209:11345":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"1:527:8124":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"6:4973:10744":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:3998:12102":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"16:4323:9709":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:8212:11239":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"16:2332:8295":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"6:1702:10407":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:40470:11507":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:20739:29648":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:39511:12122":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"17:11992:9034":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"11:817:12074":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:6533:12188":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:40973:8105":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"6:4535:10564":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:6036:10956":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"9:426:19064":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:43415:11245":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"6:4389:10493":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:13707:9448":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:13140:9263":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"16:7679:8376":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:9665:32815":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"16:8086:10020":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"5:276:2310":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:4022:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:48018:7716":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"16:8152:8380":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:5819:8136":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"16:2373:9668":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:21275:12794":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"17:11290:20139":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:9875:11945":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:9103:219":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"6:5775:10822":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"20:154:1781":{"crate_id":20,"path":["rand_core","block","BlockRng"],"kind":"struct"},"2:42418:7802":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:13167:9266":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"16:5612:9736":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"16:4724:9719":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:10373:11590":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:2133:11929":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:14259:9618":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:11853:12108":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:9275:12149":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"17:12711:9174":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:40203:13184":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"11:2130:19136":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:4186:7835":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:504:11925":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:10511:8875":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"2:41752:7874":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:919:12071":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:7720:12703":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"16:7463:9956":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:7367:28821":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"5:5614:8074":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"5:4350:245":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:39224:7886":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:43507:11249":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:11276:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:4748:10625":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"21:1505:7854":{"crate_id":21,"path":["ppv_lite86","x86_64","YesS4"],"kind":"struct"},"17:10931:11993":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:44347:11633":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"16:4536:9714":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:4738:12854":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:12174:9078":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:45684:11653":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:5990:11236":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:39385:202":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"5:2970:32265":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:11109:8931":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:6740:13333":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"6:4938:10727":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:11408:13113":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:5375:12176":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"6:6688:11065":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"16:8068:10018":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:31013:7729":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:3988:12839":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"16:7061:9899":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:8452:2100":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:4032:9708":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:8990:24234":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:8145:8496":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:4144:8433":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:45952:11664":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:8291:12211":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"18:609:11916":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:1572:10120":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"6:7511:11177":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"16:5972:8309":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:9240:7809":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:26044:8462":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:43945:11490":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"6:506:10222":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:7433:9955":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:11340:11840":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:10906:8914":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:2690:2302":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:9118:8250":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:11136:8451":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"2:42099:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:0:2174":{"crate_id":17,"path":["object"],"kind":"module"},"16:6900:8366":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"5:3238:10122":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:8199:11522":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:4734:12851":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:44605:11645":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:7731:8481":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"17:12671:9170":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:3732:12169":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:4328:10452":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"5:1442:7745":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:3151:234":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:1069:12082":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"5:5925:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:40442:8438":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:30381:8463":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:2265:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"5:7351:12715":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"5:6081:8063":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:8561:11801":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"5:6487:8036":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:14197:9597":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:13109:9257":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"11:736:8418":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"1:8544:7882":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"6:5890:10879":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:20737:29643":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:12840:9214":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:12466:29868":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:12815:9210":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:13591:9432":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:6351:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"5:3183:32681":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:11020:12003":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:7915:12200":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:9020:8487":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"5:7367:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:12001:646":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:43424:12128":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"11:695:8420":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"18:736:24096":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:12878:9218":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:9047:25960":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"6:4963:10738":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:11872:8272":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:14329:9633":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:6484:9808":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:10981:12000":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:44260:11631":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"16:5067:9730":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:44192:11620":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:9223:8253":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:5440:12181":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"11:844:12077":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"5:6790:8086":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"5:4004:8057":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:9655:11940":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:9571:32809":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:2398:2182":{"crate_id":1,"path":["std","io"],"kind":"module"},"17:13949:9514":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"16:6372:8359":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"16:3220:9699":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"1:5774:8483":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"6:4842:10669":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:9318:8235":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:6064:8138":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:6744:11087":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:10249:11962":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:7015:8150":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:11973:27964":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"6:6618:11041":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:4629:11056":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:14341:9635":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:12864:9217":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:44367:11638":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:10512:12163":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"17:11542:8968":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:46017:11666":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:20967:12984":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"18:636:8739":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:10361:8259":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"5:3722:8495":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"5:7465:11222":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:13673:9445":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:5557:12920":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"6:554:10254":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"21:885:2082":{"crate_id":21,"path":["ppv_lite86","dispatch_light128"],"kind":"macro"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:40942:11527":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"11:311:10117":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"6:4908:10706":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"6:5920:10902":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"16:5100:9731":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"6:6720:11075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:7278:11164":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"16:4753:9720":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"18:624:32821":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"14:40:9011":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:8795:12213":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:14037:9534":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"21:253:2141":{"crate_id":21,"path":["ppv_lite86","types","u32x4x4"],"kind":"trait"},"1:4697:12864":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:9968:11550":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:10303:8799":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:2759:9684":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:9442:32814":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:43778:11593":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"18:614:32818":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"6:4955:10733":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"16:8043:10015":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:5737:20069":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:43178:11573":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"6:4695:10599":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:6015:10950":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:9806:20150":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:39490:11353":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"20:162:2319":{"crate_id":20,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"2:4436:7838":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:10785:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"17:3186:11933":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:12444:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:12004:9035":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:10499:8872":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"17:12539:9152":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"18:0:2175":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:22622:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"17:9614:32816":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:6460:8146":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"5:4236:7882":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:1772:12146":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:13096:9256":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"11:760:8076":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"2:12518:12118":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:6028:10954":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:5044:10779":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"5:3142:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"16:5398:8234":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:634:12141":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:42698:9992":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:9336:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"6:5818:10840":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:41854:7882":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:10013:8859":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:6603:8147":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"21:1111:8212":{"crate_id":21,"path":["ppv_lite86","x86_64","sse2","u32x4_sse2"],"kind":"struct"},"18:491:8721":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"16:6142:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:43750:11591":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:46209:11670":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:10072:12148":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:4619:12840":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:30437:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:10231:12639":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:42177:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:44618:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:43604:11582":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"16:7484:9959":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"5:4034:8036":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:12011:1520":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:9539:8450":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:7998:8493":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"6:4446:10521":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:41870:7745":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:46163:11669":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:8475:11798":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"16:7494:9960":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"6:4723:10612":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:13905:9500":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:2371:12783":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:8299:12208":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"5:1411:7882":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:12891:9219":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"18:574:8722":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:41879:183":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:21058:13370":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"2:30415:11224":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"17:12148:9073":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"5:7398:29693":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:8105:10023":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:9294:7811":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:2551:8128":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:47881:8208":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:4787:10647":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:12186:9081":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:2762:9913":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"14:165:19145":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"16:5807:9748":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:46307:11674":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"5:5130:8071":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:11416:8268":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"5:7427:11221":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"9:330:10169":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:11989:373":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:5965:8134":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:10293:11966":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:20707:29468":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:45792:11657":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:41862:7883":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:11032:8160":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"16:5843:9755":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:48094:7720":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"6:4824:10660":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:12133:9067":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:22523:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:4231:12172":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"11:2174:10124":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:43732:11590":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:21044:12980":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"5:5364:13097":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"5:1473:8418":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"6:0:826":{"crate_id":6,"path":["libc"],"kind":"module"},"2:7359:2308":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:9472:12197":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"16:2715:9682":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:2313:188":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:46063:11668":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"8:0:2166":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:21011:12985":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"17:12982:9235":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:7632:11733":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:6424:12187":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:864:8417":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:2541:9675":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"16:7833:9977":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:2826:9919":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"6:4469:10529":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"6:4401:10498":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:8236:12830":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"16:6713:9856":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"0:89:1666":{"crate_id":0,"path":["rand_chacha","ChaChaRng"],"kind":"typedef"},"5:1482:12083":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"16:3777:9704":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:11571:11843":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:43355:12127":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"6:494:10217":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:2767:9910":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"20:90:24106":{"crate_id":20,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"2:21306:12981":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"16:6815:9872":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:6804:12969":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"18:564:8224":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:9977:11940":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:4811:803":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:12566:9157":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"6:488:10214":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:40128:29698":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:8890:11808":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"6:4489:10540":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:8740:20131":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"18:644:8722":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:43598:11581":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:9025:8497":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"1:8402:8579":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:11600:20143":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:10581:11984":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"5:6441:8057":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:43850:11597":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:5836:10852":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"16:6915:32802":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:9734:11942":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:43586:11580":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:8021:10014":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:8827:11805":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"21:967:8211":{"crate_id":21,"path":["ppv_lite86","soft","x4"],"kind":"struct"},"17:14403:9648":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:7714:7884":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:11173:11836":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:40554:11515":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:11074:8921":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:3735:12170":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"16:6658:9843":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"5:1503:8420":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"16:3058:8757":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:40513:11512":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:10555:11980":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"21:1535:7859":{"crate_id":21,"path":["ppv_lite86","x86_64","YesNI"],"kind":"struct"},"2:42939:8470":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:948:12077":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:3670:12832":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:13620:9440":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:8958:11811":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:11852:9024":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:42978:8472":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:21182:12975":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:1037:9900":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:1972:185":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:2926:19209":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:3513:12792":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:8871:11807":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:9561:11939":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:44359:11636":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:13914:9503":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"14:0:2171":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"5:5977:13665":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:8307:11785":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"11:1012:12079":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:42970:8471":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:7631:12794":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"17:9939:11950":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"11:2049:12078":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:10515:12165":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"5:4166:8063":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"17:13427:9378":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"5:2131:8054":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:11164:8264":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:3410:8063":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:9108:11815":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"11:1831:8076":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"16:7622:12062":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:11265:8489":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:8550:11800":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"6:568:10262":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:11034:12004":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:10294:11243":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:46115:2340":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:3317:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"21:235:2340":{"crate_id":21,"path":["ppv_lite86","types","u64x2"],"kind":"trait"},"2:9753:8116":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"10:0:2168":{"crate_id":10,"path":["adler"],"kind":"module"},"2:43902:11600":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"16:5363:20067":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"21:1510:7852":{"crate_id":21,"path":["ppv_lite86","x86_64","NoS4"],"kind":"struct"},"6:4380:10488":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:48056:7718":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:47992:7714":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:43455:11575":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:10313:11968":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"1:12005:750":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"18:699:8227":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"16:4900:9725":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:2846:13359":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:46987:11694":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"6:5025:10765":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:9926:11949":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:13830:9479":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"21:178:2085":{"crate_id":21,"path":["ppv_lite86","types","ArithOps"],"kind":"trait"},"16:55:10005":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"17:10863:8237":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:11990:946":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:40461:11506":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:39341:198":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:4605:13178":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:11428:8965":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"6:5849:10861":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:9655:8107":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"20:123:1784":{"crate_id":20,"path":["rand_core","RngCore"],"kind":"trait"},"2:30421:11280":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:44034:11606":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:47919:11726":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:10721:12232":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:22149:11272":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:2915:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:4862:10679":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:615:12138":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"16:2874:9689":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"6:5829:10848":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:44371:11639":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"6:562:10259":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:9284:7802":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"5:4987:8063":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"16:6789:9871":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:41803:193":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:10544:11979":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:11475:12170":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"17:9966:8237":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:877:8418":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:44355:11635":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:4263:12105":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:40432:11502":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:410:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"6:4984:10750":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:44597:12133":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"18:599:32820":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:45618:11650":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:12952:9229":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:3078:12732":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"16:4785:9721":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"5:3178:10120":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:10900:12114":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:40738:11523":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"16:7515:9961":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:13557:9429":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"16:5553:8324":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"5:7531:8076":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"2:4785:29674":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:8771:20132":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:21130:12971":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:942:12076":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:11992:1537":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"6:4781:10644":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"5:895:7882":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:42060:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"5:2962:11204":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"16:6724:9857":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"6:5979:10935":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:7754:12196":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:39365:199":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"5:4076:7883":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:8383:8443":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:10450:8157":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:6571:20073":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"6:5058:10785":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:13847:9486":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"20:129:2318":{"crate_id":20,"path":["rand_core","CryptoRngCore"],"kind":"trait"},"21:206:2090":{"crate_id":21,"path":["ppv_lite86","types","Vec4"],"kind":"trait"},"2:8803:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"21:1416:8717":{"crate_id":21,"path":["ppv_lite86","x86_64","sse2","G1"],"kind":"struct"},"17:12592:9160":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:2510:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:40493:11510":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"16:7592:20078":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"5:7547:8080":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"17:11591:8265":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:32205:12120":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:2587:12156":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:8003:12820":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:11957:8503":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"18:681:8740":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:3255:12163":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"21:176:2327":{"crate_id":21,"path":["ppv_lite86","types","BSwap"],"kind":"trait"},"17:14282:9619":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:6323:8358":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"16:4698:9718":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:8189:8434":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:12014:1575":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:9163:12221":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"2:39325:200":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:10936:12182":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"6:4854:10674":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:1917:11234":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"11:968:9900":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:5045:12175":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:4764:10633":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"5:2170:8421":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:11943:9025":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:8329:11045":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:1835:12150":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"5:6308:13062":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"21:892:8209":{"crate_id":21,"path":["ppv_lite86","soft","x2"],"kind":"struct"},"17:10403:8864":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:2695:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:7518:8848":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:11590:11589":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:32296:7824":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:4736:12853":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:44080:11616":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"16:4996:9728":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:1629:590":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"18:521:24098":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"16:5028:9729":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:48041:7717":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:12354:9123":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:40222:11494":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"0:90:1668":{"crate_id":0,"path":["rand_chacha","ChaChaCore"],"kind":"typedef"},"17:11250:8944":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"21:296:2349":{"crate_id":21,"path":["ppv_lite86","types","Store"],"kind":"trait"},"17:14216:9602":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:573:10264":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:12479:9143":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"6:653:14103":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:42218:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:44544:205":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"5:1776:8076":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:45915:11662":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"16:7012:9891":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"11:403:32782":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"6:4436:10515":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:4167:12861":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:41735:7883":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:12010:1519":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"17:9032:8234":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:30985:183":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"6:1545:10305":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:2162:13370":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"17:13719:9451":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"18:582:7729":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:43892:11599":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"6:6022:10951":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:12936:9228":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:11199:8939":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:6983:8442":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:890:8057":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:720:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"5:7193:7745":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"5:1102:31213":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:833:7882":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:11767:8996":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:12365:9126":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:43536:12132":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:44227:11625":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:9477:8156":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"5:2461:11207":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"6:6008:10948":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:11192:11815":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:8108:12202":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"17:10969:11999":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"16:7665:8374":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:2383:12789":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"16:7539:8370":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:10750:11737":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:12649:8121":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:1550:7882":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:13448:9388":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"5:7213:8057":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:44375:11640":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:2743:7821":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:22059:11257":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:39310:11348":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"5:676:231":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:7758:31108":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"16:7099:11812":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:4180:12862":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:2962:13079":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"6:541:10248":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:12065:9048":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"16:8176:20081":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"5:4395:8063":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:11007:12002":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:10351:8258":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:41943:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:4380:8098":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"6:6705:11070":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"16:6128:9790":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:12377:9128":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"6:1911:15094":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"6:4716:10611":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:9706:11941":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:13757:9465":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"6:4315:10442":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"6:4291:10425":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:13016:9248":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"6:1681:10397":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:4633:11060":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"6:4872:10685":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:41641:11554":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"5:7440:8072":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"5:7247:7745":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:352:12135":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:12118:9061":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:9840:11943":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:1506:10286":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:42425:7803":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"6:4800:10652":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:2799:13353":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:14007:9528":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:4113:8432":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"21:238:2341":{"crate_id":21,"path":["ppv_lite86","types","u128x1"],"kind":"trait"},"5:7414:11219":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"16:4441:9711":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:13639:8286":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"6:1536:10299":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:11155:8936":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"5:2035:8495":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"6:6130:10979":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:3635:8761":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"6:500:10219":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"16:6667:9844":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:10786:11989":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:12424:9134":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"5:822:8042":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:4254:207":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:13870:9489":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:6598:11035":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:10945:11997":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:4368:10485":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:3215:12161":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:1733:10419":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:12605:9161":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"5:7223:8047":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"21:1530:7858":{"crate_id":21,"path":["ppv_lite86","x86_64","NoA2"],"kind":"struct"},"11:1538:12085":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:10923:12196":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"6:5994:10937":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:1732:13381":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:40414:8435":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:11696:8983":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"17:11967:9029":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:5302:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"6:4543:10569":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:9777:20149":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:21529:12986":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"17:1075:11926":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:40594:11519":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"5:685:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"5:3596:7883":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:582:12696":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:47485:11721":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"14:221:10111":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"6:5882:10874":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:498:8054":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:3182:28559":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:46331:11675":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:2243:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"6:1569:10322":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"16:8166:10024":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"6:4650:10588":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:5625:8135":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"17:14350:9639":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:8136:8442":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:46429:11677":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:47946:7710":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:21968:8455":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:2745:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:22457:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:5531:11235":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:43696:11588":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"16:5673:20068":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:6889:8149":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"16:7753:9965":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:43646:11243":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:2205:12154":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"11:2194:10128":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"16:5590:9693":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:11241:20263":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2:11378:13427":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"15:288:19164":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"6:6573:11017":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"16:2637:9679":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:47843:11725":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:42763:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"21:1560:7849":{"crate_id":21,"path":["ppv_lite86","x86_64","Avx2Machine"],"kind":"struct"},"5:4365:8065":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:1755:11230":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"5:7476:12100":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:5618:8134":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:9475:11937":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:2602:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"11:1845:10120":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:2787:12968":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:9744:32812":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:12003:752":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:5494:12182":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"16:5626:12009":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"1:639:12699":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:5741:12183":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"6:4917:10712":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"1:8972:8484":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"17:13894:9496":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:11045:8916":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:42686:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:2737:7819":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:12007:747":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:11998:1502":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"16:6864:8321":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"6:6775:11113":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:4740:10621":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:8280:11784":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"11:1826:8057":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"5:1523:12089":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"16:2611:9678":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:2783:12966":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"21:1545:7850":{"crate_id":21,"path":["ppv_lite86","x86_64","SseMachine"],"kind":"struct"},"21:224:2339":{"crate_id":21,"path":["ppv_lite86","types","Swap64"],"kind":"trait"},"2:21524:12978":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"6:595:10277":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"16:4965:9727":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:12792:9209":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:915:8420":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"16:6357:9800":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"5:7451:224":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:3156:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"5:3204:10121":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"6:7564:11188":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"21:250:2345":{"crate_id":21,"path":["ppv_lite86","types","u128x2"],"kind":"trait"},"2:2740:2303":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:9738:8111":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:12008:1521":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:2507:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"21:202:2335":{"crate_id":21,"path":["ppv_lite86","types","Vec2"],"kind":"trait"},"2:10139:11239":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"1:4792:8132":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"12:0:2170":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:12035:9044":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:2850:13360":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"11:119:8023":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:8534:8584":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:3994:12840":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:2748:7823":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"1:7738:12750":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:21299:12794":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"5:2690:11210":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:2212:12776":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:45708:11654":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"14:215:10109":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:4550:10571":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"5:2959:7799":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:4010:12103":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:9518:11938":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:41667:181":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"16:8210:9953":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"6:123:13746":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"15:0:2172":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:11118:8932":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"1:5076:12175":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:4045:13076":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:44155:11619":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:7231:13330":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:2355:189":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"6:119:13745":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:2694:225":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"5:778:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:4928:9726":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:6291:206":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"17:11979:9032":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"6:1520:10291":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:10051:11953":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"20:88:24105":{"crate_id":20,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"2:39518:7836":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"6:1631:10367":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:41533:12831":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:9033:11812":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:9604:8237":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:10609:11987":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"11:1822:7745":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"6:6820:11137":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"16:6347:20072":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:13574:9431":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:40352:12123":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"16:6160:9793":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:40502:11511":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:4958:12896":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"16:8252:10031":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:39525:11354":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"17:13683:9446":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"5:7384:11216":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"6:4929:10721":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:4:1024":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"16:5775:8330":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:10161:11961":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"16:7855:20080":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:1543:8063":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"17:11210:8940":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:13155:8265":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"5:1514:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"5:7233:32686":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:43882:11598":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:10110:11959":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:47957:7711":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:40267:11499":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:8983:12216":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"6:4475:10532":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"21:216:2338":{"crate_id":21,"path":["ppv_lite86","types","Words4"],"kind":"trait"},"5:1464:8417":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:44383:8451":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"4:0:2165":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"16:6470:8361":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:43406:11244":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:4151:12859":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:45662:11652":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:22655:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:40752:11524":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:2164:11932":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"6:6805:11130":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"11:1517:12084":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:11371:8963":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:2357:12779":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:22688:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:9296:8255":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:1561:8076":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"16:7240:32804":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:3504:27902":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"6:4678:10590":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:4496:10543":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"16:6303:8354":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:10957:11998":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"6:4518:10556":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:41727:7882":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"15:327:8382":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:4341:10462":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:11189:8265":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:10148:11960":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:12012:1517":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:11791:9010":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:5589:8439":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:43920:11602":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:11178:8937":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"2:40535:11514":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:13029:9249":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:11454:8269":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:6214:12022":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:9013:12220":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:2757:12967":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:2246:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:11962:12704":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:2752:12965":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"21:1411:8716":{"crate_id":21,"path":["ppv_lite86","x86_64","sse2","G0"],"kind":"struct"},"6:1638:10371":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:12431:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:12994:9237":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"6:4456:10524":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:1060:12079":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:41904:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:4909:12890":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"20:18:1782":{"crate_id":20,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"2:39263:13080":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:7227:13331":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:47343:11720":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:11354:8821":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:44435:13467":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"16:7584:12061":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:10458:8868":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"6:6648:11063":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:1666:1097":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:12016:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"11:630:7882":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"3:234:210":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:7569:8152":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:44562:195":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"16:6057:19182":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"5:2960:32264":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:7414:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"6:7558:11187":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:41476:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"6:1595:10338":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:14227:9603":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"16:2663:9680":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:2105:20194":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"18:719:8748":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"16:6886:8365":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:20692:29468":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"17:8659:20129":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:9485:32810":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:13749:9462":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"5:7263:8426":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:45863:11660":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"3:0:444":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"1:10814:29103":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:3385:12101":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:40452:11504":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:12006:751":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:12004:749":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"14:187:19152":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"16:5651:9692":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:1554:7745":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:8801:186":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"11:2168:10123":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:13862:9488":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"2:22000:8456":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:6140:8121":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:10568:11982":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"6:5074:10788":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:13492:9419":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:45762:11656":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"5:6771:8074":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:40983:11532":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:6502:9816":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:6834:13325":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"14:202:13126":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:8231:12210":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:2513:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:2910:7887":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"11:1852:10121":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"7:32:19048":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"16:7693:8377":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:8381:12705":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"16:0:2173":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:10114:7883":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"11:1818:7882":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:8492:12914":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:4704:10604":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:5793:10835":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"5:6800:8087":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"2:12074:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"16:6516:9818":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:2627:12157":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"6:4524:10559":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:2488:12155":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:5748:12186":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:2567:9676":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"17:12412:9132":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:8857:12215":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:11940:12242":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"17:12691:9173":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:47977:7713":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:20873:12794":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:7882:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:2318:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:9850:20151":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"16:5940:12011":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"21:1525:7857":{"crate_id":21,"path":["ppv_lite86","x86_64","YesA2"],"kind":"struct"},"1:8206:8254":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:22076:29692":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"11:986:12078":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"16:6986:9890":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"5:629:12086":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:911:8419":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:10387:11591":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:12318:9114":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:3513:8057":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"16:2825:9687":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:11056:20261":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"16:5639:9740":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:12254:9085":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:13125:9259":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:10080:11955":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"18:507:8722":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"6:5799:10838":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:11220:20262":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:42948:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:9195:11821":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:261:11923":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:7677:8158":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"5:5841:8057":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"16:6939:20075":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:22556:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"17:10199:8861":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"6:1603:10343":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:14380:9644":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"21:1569:2084":{"crate_id":21,"path":["ppv_lite86","x86_64","vec128_storage"],"kind":"union"},"16:6692:20074":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"6:6726:11076":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:6077:10968":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:10654:8877":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:39698:25976":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"6:5767:10820":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:7842:8800":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:21633:29471":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"5:7255:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:3438:11781":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"16:2352:9667":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:14315:9626":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:22113:29699":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"20:128:1783":{"crate_id":20,"path":["rand_core","CryptoRng"],"kind":"trait"},"17:12618:9163":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:10805:11778":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"16:7648:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"17:13732:9457":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:8849:7882":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:12905:9222":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:11726:8987":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:9721:8110":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:40584:11518":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:13303:9275":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:39407:201":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"6:4606:10584":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:4764:390":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:11995:312":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:40958:11529":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:9188:8252":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:4335:7836":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:9990:8857":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"16:7025:9894":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:44647:10131":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:46799:11690":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"5:1672:8036":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"16:7568:32801":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"11:798:12071":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:9185:28432":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"17:10377:8246":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"11:644:7883":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:5409:12179":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"11:97:10113":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:6067:10965":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:1636:11226":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:631:12139":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"11:399:32781":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"14:31:12067":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"16:6197:12018":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"17:8632:20128":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"16:5342:9733":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:11520:8921":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"5:3737:12090":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"17:13083:9255":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:40484:8440":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:41794:2690":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"5:3330:8076":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"6:4395:10495":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:12009:1518":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:12333:9119":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"2:43832:11596":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:13055:9251":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:30190:12833":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"16:7505:9697":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:11434:12169":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:8273:11783":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:40342:8099":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"16:5994:20070":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:6671:11064":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:39429:203":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:10253:11963":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"5:261:8036":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:44363:11637":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"6:482:10211":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:40372:11248":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"16:3042:19211":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"11:2060:12079":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"16:2962:19210":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:8605:20115":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:20923:29891":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"11:836:12076":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:12077:9049":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:44206:13125":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:13854:9487":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:22490:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"6:1500:10283":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:2795:13351":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"5:6957:8092":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:11924:8285":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:12394:9131":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:11815:9011":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:10444:8867":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"21:263:2088":{"crate_id":21,"path":["ppv_lite86","types","MultiLane"],"kind":"trait"},"0:0:1669":{"crate_id":0,"path":["rand_chacha"],"kind":"module"},"6:4506:10550":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:8285:12863":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:2803:9686":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"6:6171:11005":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:13937:9511":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"5:5368:13098":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"21:1299:8220":{"crate_id":21,"path":["ppv_lite86","x86_64","sse2","u128x1_sse2"],"kind":"struct"},"6:1696:10406":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:14189:9594":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"6:474:10206":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:12826:9212":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"18:538:8222":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"9:52:8389":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:40158:11488":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:11394:12116":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"16:2314:9665":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"5:7339:11215":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:41718:1805":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:9499:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:2897:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"5:5320:8036":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:936:12074":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:2349:182":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:40570:8737":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"6:6589:11029":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:11919:13118":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"5:782:8039":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"15:306:19165":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"16:6540:8362":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:8976:8445":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"9:237:2100":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:42923:8467":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:11552:8502":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:8841:20134":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:14026:9533":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:6973:28571":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:22175:12834":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:4491:12865":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:7529:12239":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:8382:12904":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"6:4879:1011":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:40309:12763":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"16:5959:9764":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:10430:8866":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"9:357:19077":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:5554:10966":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"16:5793:8335":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"17:13999:9526":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:7631:9963":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:11623:8973":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:9290:194":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:43444:12129":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"16:4620:9717":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"6:1527:10294":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:7575:11192":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:11272:12006":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:7899:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"16:2519:9674":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"6:4754:10627":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:1184:11927":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:10974:13106":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"1:4383:12174":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:21174:12794":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"16:2737:9683":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:21176:12973":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"5:3671:8036":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:547:10251":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"5:1288:12078":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:8711:20130":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:7306:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:8841:11806":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:44402:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"6:7505:11176":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:41516:11540":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:5122:191":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"17:12161:9077":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"6:1557:10314":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:13787:9471":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:900:8076":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"16:6250:8351":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"11:2186:32788":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:40107:11483":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:14395:9645":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"16:6289:9795":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"17:10799:11990":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:41743:7745":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"6:6044:10959":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:2878:8131":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:43796:11594":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"13:0:2164":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:3966:12837":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:7588:8154":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"16:2857:9688":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"5:1118:32257":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:2373:12784":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"1:6637:217":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:42723:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:10994:12001":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:6156:8142":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"21:1495:7853":{"crate_id":21,"path":["ppv_lite86","x86_64","YesS3"],"kind":"struct"},"2:2693:226":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:3373:13144":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"17:13981:9522":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:40188:11482":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:12638:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:7993:12201":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:43481:11248":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:13548:9425":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:10671:20236":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"5:1426:7883":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"16:7331:32807":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"1:3837:12171":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:2913:210":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"17:12303:9110":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"6:4664:10589":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:4833:10663":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"21:1593:2325":{"crate_id":21,"path":["ppv_lite86","x86_64","vec512_storage"],"kind":"union"},"5:7292:7745":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:13513:9424":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"5:1302:12082":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:13043:9250":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:12686:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"6:1690:10403":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:10123:8256":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:11467:8271":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:11997:1418":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:8168:12793":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:11127:8966":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:42741:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:4038:12842":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"6:6136:10980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:10832:11992":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:4694:12891":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"16:4396:9710":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"15:394:19174":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"5:5771:232":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:10966:11806":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"11:1611:8029":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:8919:12938":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:3296:12166":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"21:244:2343":{"crate_id":21,"path":["ppv_lite86","types","u64x2x2"],"kind":"trait"},"16:6456:8360":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:3936:12835":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:6420:11528":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"16:8265:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:13179:9273":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:13991:9525":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:2842:13358":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:7869:11738":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"16:3867:9706":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:9821:8855":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:2355:11229":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:10066:11954":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:9239:210":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:47966:7712":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"21:220:2087":{"crate_id":21,"path":["ppv_lite86","types","LaneWords4"],"kind":"trait"},"2:44635:11648":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:4159:12860":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"11:1068:12080":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"9:486:19061":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:11669:8977":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:45933:11663":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:43572:11577":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"16:6386:9803":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"5:1011:8036":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:2519:238":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"6:1717:10414":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"16:5414:9734":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"18:690:8743":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"20:72:128":{"crate_id":20,"path":["rand_core","error","Error"],"kind":"struct"},"2:43494:12130":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"6:4483:10537":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:14177:9591":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"16:7474:9696":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:49939:12988":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"18:113:24088":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"21:1500:7851":{"crate_id":21,"path":["ppv_lite86","x86_64","NoS3"],"kind":"struct"},"2:7717:7885":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:3257:12164":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"16:149:8019":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:40262:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:7705:12702":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:8935:12940":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:46093:2118":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:43516:12131":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:12966:9231":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:11873:13109":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:856:7745":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"6:532:10242":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"5:1273:12079":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:40180:11490":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"16:6931:12031":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:44240:11629":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"16:5382:8233":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:47797:11724":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"6:7529:11180":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:4626:10586":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:10417:8865":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:13435:9381":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:13659:9441":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:10883:8913":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:20875:12977":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:6589:12935":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"16:8138:12066":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"11:1027:19141":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"6:587:10272":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"6:4949:10732":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:11264:8947":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:5425:12180":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:21621:8454":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:2700:228":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"6:4587:10583":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:22024:11254":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:11104:11804":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"21:0:1670":{"crate_id":21,"path":["ppv_lite86"],"kind":"module"},"17:11084:8923":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:44423:11642":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"17:11388:20141":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"6:1590:10336":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"21:1515:7855":{"crate_id":21,"path":["ppv_lite86","x86_64","YesA1"],"kind":"struct"},"2:44351:11634":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:46877:11691":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:39504:9953":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:3162:13162":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:9292:7810":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:4311:12173":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:8924:20137":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:7656:11734":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"16:6427:9806":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:1583:10122":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:1920:659":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:11155:11816":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:47673:11723":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:6651:2150":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:6787:29803":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:12659:9169":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:2590:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:5389:12178":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:46687:8206":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"21:241:2342":{"crate_id":21,"path":["ppv_lite86","types","u32x4x2"],"kind":"trait"},"16:2443:9671":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:3233:13078":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:6188:8488":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:40964:11531":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:2921:2304":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"6:1649:10379":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:9093:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:9068:8499":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:5383:8063":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"18:531:8724":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:46239:11671":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:10330:11972":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"6:1709:10410":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"6:4794:10649":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:21745:12974":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:43163:11572":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:3176:24548":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:9887:11946":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:40116:11484":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:11116:11805":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:40196:11491":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"16:6554:9819":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:12552:8882":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:5015:10760":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:2470:12794":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:9288:7813":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:846:7883":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:2471:13189":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:10845:8911":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"5:6560:7745":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"6:4818:10659":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:9016:8233":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:2781:9685":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"18:590:8727":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:10259:12110":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:1051:12078":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"6:1575:10324":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:10221:12109":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:10339:11975":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:47735:8207":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:7852:11737":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"6:5877:10873":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:22163:11273":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"16:3894:9707":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:11049:8162":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:5981:206":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:7277:2309":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"16:3810:9705":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:44554:211":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"5:6639:8036":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"16:7739:8378":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"11:793:12083":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"16:2497:9673":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:11905:8278":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:4895:10696":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:256:11922":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:7523:11179":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:21915:11253":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:1774:12147":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"16:6872:8364":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"11:667:8419":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:21308:8452":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"16:4841:9723":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:4563:12882":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:8488:12108":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"6:526:10239":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:2925:2305":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"5:3212:10119":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:3519:11935":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"21:232:2118":{"crate_id":21,"path":["ppv_lite86","types","u32x4"],"kind":"trait"},"2:42931:8469":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:43678:11587":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"21:247:2344":{"crate_id":21,"path":["ppv_lite86","types","u64x4"],"kind":"trait"},"2:2931:2307":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"20:0:1656":{"crate_id":20,"path":["rand_core"],"kind":"module"},"6:6841:11149":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:906:12083":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"21:1445:8718":{"crate_id":21,"path":["ppv_lite86","x86_64","sse2","avx2","u32x4x2_avx2"],"kind":"struct"},"5:4761:674":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"6:4616:10585":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"5:2049:12090":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:2691:7816":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:10795:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"16:7073:20076":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"13:110:7867":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:925:12716":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"6:7552:11186":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:2779:9914":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:12015:1141":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:6711:11072":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"5:3802:8076":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"17:12457:9142":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:40101:11482":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:2791:13352":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:21280:12972":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"17:8794:20133":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"21:274:2083":{"crate_id":21,"path":["ppv_lite86","types","Machine"],"kind":"trait"},"2:40229:13185":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"6:5737:10795":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:11991:420":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"21:257:2346":{"crate_id":21,"path":["ppv_lite86","types","u64x2x4"],"kind":"trait"},"18:727:8229":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:3294:12165":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:10407:12213":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"16:7553:8371":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:9491:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:8865:7745":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:39451:12709":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:8971:31107":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:11128:29105":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:43182:11574":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:14:1797":{"crate_id":2,"path":["core","write"],"kind":"macro"},"6:6796:11127":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:10266:11964":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:2832:9920":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:2811:13354":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:13771:9468":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:8384:12900":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:10597:11986":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:12502:9148":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:8872:20135":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:2164:13371":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"6:5967:10928":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:10812:8909":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:11955:9028":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"18:80:24086":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:11629:11595":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:40295:11500":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:4631:11058":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"16:6239:32806":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:21196:8452":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:9932:12794":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"5:1257:9900":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:3495:7809":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"16:7362:20077":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:4428:10513":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"6:7546:11185":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"16:2293:19183":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:9275:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:11996:1388":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"5:7284:7745":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:2208:8093":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"17:14417:9651":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:477:8123":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"5:1138:31216":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"5:2141:11202":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"16:7799:9973":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:7847:12197":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:40401:8434":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:8542:20117":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"16:4564:9715":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:9465:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"11:749:8057":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:9716:32811":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:9048:8248":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:2821:13356":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"16:7407:8317":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:10555:8158":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:41982:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:40991:11534":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:4469:12864":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"6:62:13691":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:1820:11233":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:11313:11838":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:3382:11531":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"6:6156:10994":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:11298:11837":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:9250:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"6:4887:10691":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"6:7586:11193":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"6:4810:10656":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:14044:9536":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:21097:12976":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"17:10633:8261":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"16:3580:9702":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"6:6850:11152":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:12631:9165":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:11568:20142":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:42439:7813":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"11:805:12716":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"11:285:10114":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:12526:9149":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:4815:12850":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:9274:8254":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:46460:11678":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"16:2900:9690":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:20679:7729":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"5:4428:8065":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:3934:8063":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"17:14359:9641":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"5:1492:8419":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:10280:11965":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"17:10390:8863":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:7923:8495":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:43434:11247":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"5:2966:32263":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:11564:29144":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"2:41811:210":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"6:6565:11012":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"20:113:24109":{"crate_id":20,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"16:7255:7874":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:8219:11598":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"5:3171:7882":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:12769:9200":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:13368:9326":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"}},"external_crates":{"20":{"name":"rand_core","html_root_url":"https://rust-random.github.io/rand/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"ppv_lite86","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}