{"root":"0:0:2329","crate_version":"0.9.0-alpha.1","includes_private":false,"index":{"b:2:3830-0:214:2320":{"id":"b:2:3830-0:214:2320","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32310:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3828:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3832:1822"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:234:802":{"id":"0:234:802","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10358:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10339:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2770:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:148":{"id":"0:148","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2731:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:149:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42171:13451-0:273:2323":{"id":"a:2:42171:13451-0:273:2323","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42171:13451","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:22:2449","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:149:475":{"id":"0:149:475","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13304:27399":{"id":"2:13304:27399","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12346:471","self::pattern":"2:12955:13884"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13318:26188":{"id":"2:13318:26188","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12955:13884","`DoubleEndedIterator`":"2:8333:129","prim@char":"1:12346:471","str::split_whitespace":"2:13296:31575","str::rsplit":"2:13324:27390"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43969:11989","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13394:27281":{"id":"2:13394:27281","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1061:38384"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:166:802":{"id":"0:166:802","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10358:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10339:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2770:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2988-0:146:2322":{"id":"b:2:2988-0:146:2322","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2965:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2962:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2991:2520"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13361:34018":{"id":"2:13361:34018","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:140:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:104:2474","0:106:2475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3001:137":{"id":"2:3001:137","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2972:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:129:699":{"id":"0:129:699","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:802":{"id":"0:98:802","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10358:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10339:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42172:13670-0:137:2321":{"id":"a:2:42172:13670-0:137:2321","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42172:13670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:273:2323":{"id":"0:273:2323","crate_id":0,"name":"ChaCha8Core","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"ChaCha with 8 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42171:13451-0:273:2323","a:2:3211:247-0:273:2323","a:2:3246:8460-0:273:2323","a:2:42172:13670-0:273:2323","a:2:32368:2979-0:273:2323","a:2:32309:237-0:273:2323","b:2:2718-0:273:2323","b:2:2988-0:273:2323","b:2:3830-0:273:2323","b:2:3003-0:273:2323","b:2:2998-0:273:2323","b:2:2992-0:273:2323","b:2:2715-0:273:2323","b:5:738-0:273:2323","b:22:270-0:273:2323","0:275","0:262","0:244","0:235","0:280","0:233","0:239","0:277","0:278"]}}},"5:5638:13579":{"id":"5:5638:13579","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7652:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7652:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42171:13451-0:214:2320":{"id":"a:2:42171:13451-0:214:2320","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42171:13451","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2998-0:146:2322":{"id":"b:2:2998-0:146:2322","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2972:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2968:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3001:137","2:3002:1809"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13336:27394":{"id":"2:13336:27394","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12346:471","str::splitn":"2:13333:27392","self::pattern":"2:12955:13884"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44091:12224","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12976:13882","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32368:2979-0:205:2319":{"id":"a:2:32368:2979-0:205:2319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32368:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:22:270-0:146:2322":{"id":"b:22:270-0:146:2322","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2750","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3014","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25749"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:94:2326":{"id":"0:94:2326","crate_id":0,"name":"ChaChaRng","span":{"filename":"src/lib.rs","begin":[32,0],"end":[32,33]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"b:2:2998-0:273:2323":{"id":"b:2:2998-0:273:2323","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2972:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2968:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3001:137","2:3002:1809"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2720:25742":{"id":"2:2720:25742","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:89-0:214:2320":{"id":"0:89-0:214:2320","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,18],"end":[28,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Rng","name":"ChaCha12Rng","id":"0:214:2320","glob":false}}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:119:2516","0:120:2532","0:121:2545","0:122:2550","0:123:2553"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2992-0:205:2319":{"id":"b:2:2992-0:205:2319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2965:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2994:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:22:270-0:273:2323":{"id":"b:22:270-0:273:2323","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2750","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3014","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25749"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13374:27401":{"id":"2:13374:27401","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12346:471","self::pattern":"2:12955:13884"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42077:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12976:13882","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2992-0:146:2322":{"id":"b:2:2992-0:146:2322","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2965:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2994:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3246:8460-0:273:2323":{"id":"a:2:3246:8460-0:273:2323","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3246:8460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:248:2475":{"id":"0:248:2475","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2452","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5628:34724":{"id":"5:5628:34724","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7652:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7652:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3211:247-0:282:2324":{"id":"a:2:3211:247-0:282:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3211:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5639:26124":{"id":"5:5639:26124","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13391:26127"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7652:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2718-0:137:2321":{"id":"b:2:2718-0:137:2321","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32310:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2712:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2720:25742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13286:34008":{"id":"2:13286:34008","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12352:1722","str::slice_mut_unchecked":"2:13287:34009","crate::ops::Index":"2:39623:13480"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:125":{"id":"0:125","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:139:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32311:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32309:237-0:205:2319":{"id":"a:2:32309:237-0:205:2319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32309:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2998-0:205:2319":{"id":"b:2:2998-0:205:2319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2972:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2968:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3001:137","2:3002:1809"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:740:8438":{"id":"5:740:8438","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:116:2508":{"id":"0:116:2508","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13310:8418":{"id":"2:13310:8418","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42079:191","prim@char":"1:12346:471","self::pattern":"2:12955:13884"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42077:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3246:8460-0:137:2321":{"id":"a:2:3246:8460-0:137:2321","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3246:8460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:140:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:246:2474","0:248:2475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13287:34009":{"id":"2:13287:34009","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12352:1722","crate::ops::IndexMut":"2:3489:13481","str::slice_unchecked":"2:13286:34008"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:235":{"id":"0:235","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:236:173","0:237:2470","0:238:2471"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:100:173","0:101:2470","0:102:2471"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:127:832":{"id":"0:127:832","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:128":{"id":"0:128","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2765:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:129:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13265":{"id":"2:13265","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13266:997","2:13267:8377","2:13268:34004","2:13269:34005","2:13271:34006","2:13274:26012","2:13275:34007","2:13276:336","2:13277:27358","2:13278:27354","2:13280:27355","2:13282:27356","2:13284:27357","2:13286:34008","2:13287:34009","2:13288:27381","2:13289:27382","2:13290:27385","2:13291:27386","2:13293:12236","2:13294:12247","2:13295:2509","2:13296:31575","2:13297:31577","2:13298:26189","2:13299:34010","2:13300:32153","2:13301:27398","2:13304:27399","2:13307:27400","2:13310:8418","2:13314:8376","2:13318:26188","2:13321:27388","2:13324:27390","2:13327:34011","2:13330:34012","2:13333:27392","2:13336:27394","2:13339:27396","2:13342:27397","2:13345:2949","2:13348:34013","2:13351:34014","2:13354:34015","2:13357:34016","2:13359:34017","2:13361:34018","2:13363:34019","2:13364:34020","2:13365:34021","2:13368:34022","2:13371:26094","2:13374:27401","2:13377:34023","2:13380:34024","2:13383:34025","2:13386:34026","2:13388:26122","2:13389:27277","2:13390:26126","2:13391:26127","2:13392:26128","2:13393:27280","2:13394:27281","2:13395:27282","2:13396:34027","2:13398:13443","2:13399:34028"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:258:2550":{"id":"0:258:2550","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176":{"id":"0:176","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:22:2449","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3211:247-0:273:2323":{"id":"a:2:3211:247-0:273:2323","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3211:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13380:34024":{"id":"2:13380:34024","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12346:471","self::pattern":"2:12955:13884"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42172:13670-0:273:2323":{"id":"a:2:42172:13670-0:273:2323","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42172:13670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:3007:1807":{"id":"2:3007:1807","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42210:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2972:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3830-0:273:2323":{"id":"b:2:3830-0:273:2323","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32310:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3828:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3832:1822"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:185:2510":{"id":"0:185:2510","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42210:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:76:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13290:27385":{"id":"2:13290:27385","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13291:27386"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42077:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32311:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3830-0:146:2322":{"id":"b:2:3830-0:146:2322","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32310:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3828:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3832:1822"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:146:2322":{"id":"0:146:2322","crate_id":0,"name":"ChaCha20Rng","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:178:2447","`RngCore`":"20:133:2451"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:118","a:2:42171:13451-0:146:2322","a:2:3211:247-0:146:2322","a:2:3246:8460-0:146:2322","a:2:42172:13670-0:146:2322","a:2:32368:2979-0:146:2322","a:2:32309:237-0:146:2322","b:2:2718-0:146:2322","b:2:2988-0:146:2322","b:2:3830-0:146:2322","b:2:3003-0:146:2322","b:2:2998-0:146:2322","b:2:2992-0:146:2322","b:2:2715-0:146:2322","b:5:738-0:146:2322","b:22:270-0:146:2322","0:130","0:148","0:125","0:126","0:113","0:128","0:150","0:109"]}}},"a:2:32309:237-0:273:2323":{"id":"a:2:32309:237-0:273:2323","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32309:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:150":{"id":"0:150","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10384:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:151:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10384:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:98:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:0:2329":{"id":"0:0:2329","crate_id":0,"name":"rand_chacha","span":{"filename":"src/lib.rs","begin":[9,0],"end":[34,35]},"visibility":"public","docs":"The ChaCha random number generator.","links":{},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\", html_favicon_url\n= \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://rust-random.github.io/rand/\")]","#![forbid(unsafe_code)]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:3-20:0:2316","0:88-0:205:2319","0:89-0:214:2320","0:90-0:137:2321","0:91-0:146:2322","0:92-0:273:2323","0:93-0:282:2324","0:94:2326","0:95:2328"],"is_stripped":false}}},"0:195:832":{"id":"0:195:832","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:181":{"id":"0:181","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["read_adapter"],"trait":{"name":"RngCore","id":"20:133:2451","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:182:2506","0:183:2507","0:184:2508","0:185:2510"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13300:32153":{"id":"2:13300:32153","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44261:12235","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5637:34726":{"id":"5:5637:34726","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:304:2980","`String`":"5:7652:243"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:304:2980","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7652:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2988-0:214:2320":{"id":"b:2:2988-0:214:2320","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2965:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2962:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2991:2520"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13267:8377":{"id":"2:13267:8377","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13377:34023":{"id":"2:13377:34023","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12346:471","self::pattern":"2:12955:13884"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12976:13882","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:178:2474":{"id":"0:178:2474","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:101:2470":{"id":"0:101:2470","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:19:2459","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"0:211:699":{"id":"0:211:699","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13398:13443":{"id":"2:13398:13443","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5023:13443"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44277:12115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:190:2550":{"id":"0:190:2550","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2731:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:276:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13299:34010":{"id":"2:13299:34010","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44233:12232","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5621:34722":{"id":"5:5621:34722","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:304:2980","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:304:2980","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:738-0:282:2324":{"id":"b:5:738-0:282:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2731:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:8438","5:741:8439","5:742:8440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2718-0:146:2322":{"id":"b:2:2718-0:146:2322","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32310:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2712:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2720:25742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13289:27382":{"id":"2:13289:27382","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13288:27381","str::split_at_mut_checked":"2:13291:27386"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13390:26126":{"id":"2:13390:26126","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2731:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:285:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13293:12236":{"id":"2:13293:12236","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12346:471"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43939:12214","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13388:26122":{"id":"2:13388:26122","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:172:2474":{"id":"0:172:2474","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:110:2474":{"id":"0:110:2474","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:188:2532":{"id":"0:188:2532","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32309:237-0:137:2321":{"id":"a:2:32309:237-0:137:2321","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32309:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3211:247-0:137:2321":{"id":"a:2:3211:247-0:137:2321","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3211:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:143:699":{"id":"0:143:699","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:738-0:214:2320":{"id":"b:5:738-0:214:2320","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2731:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:8438","5:741:8439","5:742:8440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:177":{"id":"0:177","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:140:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:178:2474","0:180:2475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:257:2545":{"id":"0:257:2545","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265:699":{"id":"0:265:699","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:285:475":{"id":"0:285:475","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:169:2470":{"id":"0:169:2470","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:19:2459","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"0:174:2475":{"id":"0:174:2475","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2452","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:240:2474":{"id":"0:240:2474","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"b:2:2718-0:282:2324":{"id":"b:2:2718-0:282:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32310:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2712:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2720:25742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13327:34011":{"id":"2:13327:34011","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12955:13884","str::split":"2:13318:26188","prim@char":"1:12346:471","`DoubleEndedIterator`":"2:8333:129","str::rsplit_terminator":"2:13330:34012"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44019:12220","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32311:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:95:2328":{"id":"0:95:2328","crate_id":0,"name":"ChaChaCore","span":{"filename":"src/lib.rs","begin":[34,0],"end":[34,35]},"visibility":"public","docs":"ChaCha with 20 rounds, low-level interface","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"b:22:270-0:137:2321":{"id":"b:22:270-0:137:2321","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2750","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3014","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25749"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3003-0:137:2321":{"id":"b:2:3003-0:137:2321","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2962:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2972:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3006:137","2:3007:1807"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["read_adapter"],"trait":{"name":"RngCore","id":"20:133:2451","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:114:2506","0:115:2507","0:116:2508","0:117:2510"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:205:2319":{"id":"0:205:2319","crate_id":0,"name":"ChaCha12Core","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"ChaCha with 12 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42171:13451-0:205:2319","a:2:3211:247-0:205:2319","a:2:3246:8460-0:205:2319","a:2:42172:13670-0:205:2319","a:2:32368:2979-0:205:2319","a:2:32309:237-0:205:2319","b:2:2718-0:205:2319","b:2:2988-0:205:2319","b:2:3830-0:205:2319","b:2:3003-0:205:2319","b:2:2998-0:205:2319","b:2:2992-0:205:2319","b:2:2715-0:205:2319","b:5:738-0:205:2319","b:22:270-0:205:2319","0:171","0:212","0:167","0:210","0:209","0:176","0:165","0:194","0:207"]}}},"2:13391:26127":{"id":"2:13391:26127","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:100:173":{"id":"0:100:173","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2965:144","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:263:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3832:1822":{"id":"2:3832:1822","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39792:12113","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180:2475":{"id":"0:180:2475","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2452","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13280:27355":{"id":"2:13280:27355","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42079:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42077:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11045:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11045:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13371:26094":{"id":"2:13371:26094","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12346:471","self::pattern":"2:12955:13884"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42077:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:165":{"id":"0:165","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10384:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:166:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:106:2475":{"id":"0:106:2475","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2452","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13354:34015":{"id":"2:13354:34015","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12955:13884","`DoubleEndedIterator`":"2:8333:129","prim@char":"1:12346:471","str::match_indices":"2:13351:34014"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44137:12227","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12976:13882","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:187:2516","0:188:2532","0:189:2545","0:190:2550","0:191:2553"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13393:27280":{"id":"2:13393:27280","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1061:38384"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2770:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:256:2532":{"id":"0:256:2532","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2994:832":{"id":"2:2994:832","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2715-0:137:2321":{"id":"b:2:2715-0:137:2321","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32310:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2709:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2717:2934"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13307:27400":{"id":"2:13307:27400","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12346:471","self::pattern":"2:12955:13884"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12976:13882","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:741:8439":{"id":"5:741:8439","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10384:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:43-22:274:2745":{"id":"0:43-22:274:2745","crate_id":0,"name":null,"span":{"filename":"src/guts.rs","begin":[14,0],"end":[14,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"ppv_lite86::Machine","name":"Machine","id":"22:274:2745","glob":false}}},"a:2:32368:2979-0:146:2322":{"id":"a:2:32368:2979-0:146:2322","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32368:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:191:2553":{"id":"0:191:2553","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:738-0:273:2323":{"id":"b:5:738-0:273:2323","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2731:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:8438","5:741:8439","5:742:8440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13294:12247":{"id":"2:13294:12247","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12346:471"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43945:12215","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13368:34022":{"id":"2:13368:34022","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12346:471","self::pattern":"2:12955:13884"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2770:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13298:26189":{"id":"2:13298:26189","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44223:12231","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:239":{"id":"0:239","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:140:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:240:2474","0:242:2475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32368:2979-0:214:2320":{"id":"a:2:32368:2979-0:214:2320","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32368:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:251:2507":{"id":"0:251:2507","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3-20:0:2316":{"id":"0:3-20:0:2316","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[22,0],"end":[22,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"rand_core","name":"rand_core","id":"20:0:2316","glob":false}}},"a:2:32368:2979-0:137:2321":{"id":"a:2:32368:2979-0:137:2321","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32368:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:3002:1809":{"id":"2:3002:1809","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42210:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2972:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13330:34012":{"id":"2:13330:34012","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12955:13884","str::split":"2:13318:26188","prim@char":"1:12346:471","str::split_terminator":"2:13327:34011"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44037:12221","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12976:13882","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3211:247-0:146:2322":{"id":"a:2:3211:247-0:146:2322","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3211:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:93-0:282:2324":{"id":"0:93-0:282:2324","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,71],"end":[28,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Rng","name":"ChaCha8Rng","id":"0:282:2324","glob":false}}},"a:2:32368:2979-0:282:2324":{"id":"a:2:32368:2979-0:282:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32368:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13399:34028":{"id":"2:13399:34028","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5020:34028"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44286:12123","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3006:137":{"id":"2:3006:137","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32233:10797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:3246:8460-0:205:2319":{"id":"a:2:3246:8460-0:205:2319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3246:8460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13348:34013":{"id":"2:13348:34013","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12955:13884","`DoubleEndedIterator`":"2:8333:129","prim@char":"1:12346:471","str::matches":"2:13345:2949"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44191:12230","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12976:13882","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:287:802":{"id":"0:287:802","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10358:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10339:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13383:34025":{"id":"2:13383:34025","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12346:471","self::pattern":"2:12955:13884"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12976:13882","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:122:2550":{"id":"0:122:2550","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5625:34723":{"id":"5:5625:34723","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7652:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7652:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:282:2324":{"id":"0:282:2324","crate_id":0,"name":"ChaCha8Rng","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:178:2447","`RngCore`":"20:133:2451"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:254","a:2:42171:13451-0:282:2324","a:2:3211:247-0:282:2324","a:2:3246:8460-0:282:2324","a:2:42172:13670-0:282:2324","a:2:32368:2979-0:282:2324","a:2:32309:237-0:282:2324","b:2:2718-0:282:2324","b:2:2988-0:282:2324","b:2:3830-0:282:2324","b:2:3003-0:282:2324","b:2:2998-0:282:2324","b:2:2992-0:282:2324","b:2:2715-0:282:2324","b:5:738-0:282:2324","b:22:270-0:282:2324","0:245","0:262","0:286","0:261","0:264","0:249","0:266","0:284"]}}},"5:5636:34725":{"id":"5:5636:34725","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7652:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7652:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:255:2516":{"id":"0:255:2516","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183:2507":{"id":"0:183:2507","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13296:31575":{"id":"2:13296:31575","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13297:31577"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44243:12233","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2992-0:282:2324":{"id":"b:2:2992-0:282:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2965:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2994:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2988-0:282:2324":{"id":"b:2:2988-0:282:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2965:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2962:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2991:2520"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:142":{"id":"0:142","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2765:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:143:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2965:144","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:195:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:250:2506":{"id":"0:250:2506","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42171:13451-0:146:2322":{"id":"a:2:42171:13451-0:146:2322","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42171:13451","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3211:247-0:214:2320":{"id":"a:2:3211:247-0:214:2320","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3211:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42172:13670-0:214:2320":{"id":"a:2:42172:13670-0:214:2320","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42172:13670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13357:34016":{"id":"2:13357:34016","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3003-0:273:2323":{"id":"b:2:3003-0:273:2323","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2962:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2972:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3006:137","2:3007:1807"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13291:27386":{"id":"2:13291:27386","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13290:27385"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42077:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42171:13451-0:205:2319":{"id":"a:2:42171:13451-0:205:2319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42171:13451","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32309:237-0:214:2320":{"id":"a:2:32309:237-0:214:2320","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32309:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:151:802":{"id":"0:151:802","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10358:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10339:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:193":{"id":"0:193","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:139:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2992-0:273:2323":{"id":"b:2:2992-0:273:2323","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2965:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2994:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13268:34004":{"id":"2:13268:34004","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:140:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:110:2474","0:112:2475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:120:2532":{"id":"0:120:2532","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13276:336":{"id":"2:13276:336","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13277:27358","`u8`":"1:12365:1852"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13386:34026":{"id":"2:13386:34026","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12916:136","`FromStr`":"2:12915:13526"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42210:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12915:13526","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12915:13526","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:140:475":{"id":"0:140:475","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:197:699":{"id":"0:197:699","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:2510":{"id":"0:253:2510","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42210:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:76:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:196":{"id":"0:196","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2765:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:197:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:249":{"id":"0:249","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["read_adapter"],"trait":{"name":"RngCore","id":"20:133:2451","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:250:2506","0:251:2507","0:252:2508","0:253:2510"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32368:2979-0:273:2323":{"id":"a:2:32368:2979-0:273:2323","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32368:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2731:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:217:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32309:237-0:282:2324":{"id":"a:2:32309:237-0:282:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32309:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:22:270-0:282:2324":{"id":"b:22:270-0:282:2324","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2750","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3014","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25749"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13297:31577":{"id":"2:13297:31577","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13296:31575"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44252:12234","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13324:27390":{"id":"2:13324:27390","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12955:13884","`DoubleEndedIterator`":"2:8333:129","prim@char":"1:12346:471","str::split":"2:13318:26188"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43987:11994","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12976:13882","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5640:26125":{"id":"5:5640:26125","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13392:26128"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7652:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:22:2449","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13389:27277":{"id":"2:13389:27277","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39978:13962","Self::is_ascii":"2:13388:26122"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42077:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39978:13962","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259:2553":{"id":"0:259:2553","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:187:2516":{"id":"0:187:2516","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:236:173":{"id":"0:236:173","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2965:144","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:127:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:233":{"id":"0:233","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10384:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:234:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13314:8376":{"id":"2:13314:8376","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42079:191","prim@char":"1:12346:471","self::pattern":"2:12955:13884"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42077:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12976:13882","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:130":{"id":"0:130","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2770:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3003-0:146:2322":{"id":"b:2:3003-0:146:2322","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2962:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2972:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3006:137","2:3007:1807"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5620":{"id":"5:5620","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5621:34722","5:5622:14123","5:5625:34723","5:5628:34724","5:5636:34725","5:5637:34726","5:5638:13579","5:5639:26124","5:5640:26125"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13351:34014":{"id":"2:13351:34014","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12955:13884","`DoubleEndedIterator`":"2:8333:129","prim@char":"1:12346:471","str::rmatch_indices":"2:13354:34015"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44119:12226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2765:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:211:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:22:270-0:214:2320":{"id":"b:22:270-0:214:2320","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2750","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3014","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25749"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13277:27358":{"id":"2:13277:27358","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12365:1852"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3003-0:205:2319":{"id":"b:2:3003-0:205:2319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2962:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2972:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3006:137","2:3007:1807"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3003-0:282:2324":{"id":"b:2:3003-0:282:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2962:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2972:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3006:137","2:3007:1807"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:742:8440":{"id":"5:742:8440","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:139":{"id":"0:139","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2731:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:140:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42171:13451-0:137:2321":{"id":"a:2:42171:13451-0:137:2321","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42171:13451","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3830-0:137:2321":{"id":"b:2:3830-0:137:2321","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32310:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3828:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3832:1822"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13396:34027":{"id":"2:13396:34027","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5022:34027"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44268:12124","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:19:2459":{"id":"0:19:2459","crate_id":0,"name":"Array64","span":{"filename":"src/chacha.rs","begin":[27,0],"end":[27,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"0:189:2545":{"id":"0:189:2545","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2998-0:282:2324":{"id":"b:2:2998-0:282:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2972:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2968:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3001:137","2:3002:1809"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:214:2320":{"id":"0:214:2320","crate_id":0,"name":"ChaCha12Rng","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:178:2447","`RngCore`":"20:133:2451"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:186","a:2:42171:13451-0:214:2320","a:2:3211:247-0:214:2320","a:2:3246:8460-0:214:2320","a:2:42172:13670-0:214:2320","a:2:32368:2979-0:214:2320","a:2:32309:237-0:214:2320","b:2:2718-0:214:2320","b:2:2988-0:214:2320","b:2:3830-0:214:2320","b:2:3003-0:214:2320","b:2:2998-0:214:2320","b:2:2992-0:214:2320","b:2:2715-0:214:2320","b:5:738-0:214:2320","b:22:270-0:214:2320","0:216","0:181","0:218","0:193","0:198","0:194","0:177","0:196"]}}},"b:2:2718-0:205:2319":{"id":"b:2:2718-0:205:2319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32310:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2712:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2720:25742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13275:34007":{"id":"2:13275:34007","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13295:2509":{"id":"2:13295:2509","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43955:8650","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2998-0:214:2320":{"id":"b:2:2998-0:214:2320","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2972:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2968:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3001:137","2:3002:1809"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:88-0:205:2319":{"id":"0:88-0:205:2319","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,4],"end":[28,16]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Core","name":"ChaCha12Core","id":"0:205:2319","glob":false}}},"2:13392:26128":{"id":"2:13392:26128","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13333:27392":{"id":"2:13333:27392","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12346:471","self::pattern":"2:12955:13884","str::rsplitn":"2:13336:27394"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44073:12223","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2992-0:214:2320":{"id":"b:2:2992-0:214:2320","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2965:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2994:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:263:832":{"id":"0:263:832","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2765:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:265:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:279:699":{"id":"0:279:699","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42172:13670-0:282:2324":{"id":"a:2:42172:13670-0:282:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42172:13670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2715-0:146:2322":{"id":"b:2:2715-0:146:2322","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32310:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2709:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2717:2934"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:167":{"id":"0:167","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:168:173","0:169:2470","0:170:2471"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13365:34021":{"id":"2:13365:34021","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12346:471","self::pattern":"2:12955:13884"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12981:13881","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:104:2474":{"id":"0:104:2474","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:246:2474":{"id":"0:246:2474","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:137:2321":{"id":"0:137:2321","crate_id":0,"name":"ChaCha20Core","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42171:13451-0:137:2321","a:2:3211:247-0:137:2321","a:2:3246:8460-0:137:2321","a:2:42172:13670-0:137:2321","a:2:32368:2979-0:137:2321","a:2:32309:237-0:137:2321","b:2:2718-0:137:2321","b:2:2988-0:137:2321","b:2:3830-0:137:2321","b:2:3003-0:137:2321","b:2:2998-0:137:2321","b:2:2992-0:137:2321","b:2:2715-0:137:2321","b:5:738-0:137:2321","b:22:270-0:137:2321","0:97","0:144","0:99","0:139","0:141","0:126","0:108","0:142","0:103"]}}},"2:13271:34006":{"id":"2:13271:34006","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13269:34005"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2988-0:205:2319":{"id":"b:2:2988-0:205:2319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2965:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2962:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2991:2520"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13288:27381":{"id":"2:13288:27381","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13290:27385","str::split_at_mut":"2:13289:27382"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:92-0:273:2323":{"id":"0:92-0:273:2323","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,58],"end":[28,69]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Core","name":"ChaCha8Core","id":"0:273:2323","glob":false}}},"2:13342:27397":{"id":"2:13342:27397","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42077:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12976:13882","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:123:2553":{"id":"0:123:2553","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3246:8460-0:146:2322":{"id":"a:2:3246:8460-0:146:2322","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3246:8460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:738-0:205:2319":{"id":"b:5:738-0:205:2319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2731:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:8438","5:741:8439","5:742:8440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2988-0:137:2321":{"id":"b:2:2988-0:137:2321","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2965:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2962:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2991:2520"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3830-0:205:2319":{"id":"b:2:3830-0:205:2319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32310:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3828:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3832:1822"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:278":{"id":"0:278","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2765:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:279:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:254":{"id":"0:254","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:255:2516","0:256:2532","0:257:2545","0:258:2550","0:259:2553"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2770:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5622:14123":{"id":"5:5622:14123","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7652:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7652:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112:2475":{"id":"0:112:2475","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2452","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:171":{"id":"0:171","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:140:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:172:2474","0:174:2475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:90-0:137:2321":{"id":"0:90-0:137:2321","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,31],"end":[28,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Core","name":"ChaCha20Core","id":"0:137:2321","glob":false}}},"2:13301:27398":{"id":"2:13301:27398","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12346:471","self::pattern":"2:12955:13884"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2715-0:273:2323":{"id":"b:2:2715-0:273:2323","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32310:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2709:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2717:2934"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:117:2510":{"id":"0:117:2510","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42210:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:76:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:237:2470":{"id":"0:237:2470","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:19:2459","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"2:13278:27354":{"id":"2:13278:27354","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42079:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42077:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11045:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11045:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:139:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2992-0:137:2321":{"id":"b:2:2992-0:137:2321","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2965:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2994:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:102:2471":{"id":"0:102:2471","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:2448","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13284:27357":{"id":"2:13284:27357","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11045:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11045:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:238:2471":{"id":"0:238:2471","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:2448","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13274:26012":{"id":"2:13274:26012","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12502:13885"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42171:13451-0:282:2324":{"id":"a:2:42171:13451-0:282:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42171:13451","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:184:2508":{"id":"0:184:2508","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2991:2520":{"id":"2:2991:2520","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2965:144"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2988-0:273:2323":{"id":"b:2:2988-0:273:2323","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2965:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2962:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2991:2520"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2715-0:282:2324":{"id":"b:2:2715-0:282:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32310:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2709:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2717:2934"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:115:2507":{"id":"0:115:2507","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42172:13670-0:146:2322":{"id":"a:2:42172:13670-0:146:2322","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42172:13670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2998-0:137:2321":{"id":"b:2:2998-0:137:2321","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2972:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2968:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3001:137","2:3002:1809"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13269:34005":{"id":"2:13269:34005","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13339:27396":{"id":"2:13339:27396","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42077:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:182:2506":{"id":"0:182:2506","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2718-0:273:2323":{"id":"b:2:2718-0:273:2323","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32310:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2712:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2720:25742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13359:34017":{"id":"2:13359:34017","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2715-0:214:2320":{"id":"b:2:2715-0:214:2320","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32310:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2709:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2717:2934"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32309:237-0:146:2322":{"id":"a:2:32309:237-0:146:2322","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32309:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:738-0:137:2321":{"id":"b:5:738-0:137:2321","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2731:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:8438","5:741:8439","5:742:8440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:91-0:146:2322":{"id":"0:91-0:146:2322","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,45],"end":[28,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Rng","name":"ChaCha20Rng","id":"0:146:2322","glob":false}}},"0:168:173":{"id":"0:168:173","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"b:2:3830-0:282:2324":{"id":"b:2:3830-0:282:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32310:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3828:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3832:1822"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2717:2934":{"id":"2:2717:2934","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"22:273:25749":{"id":"22:273:25749","crate_id":22,"name":"vzip","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[226,4],"end":[226,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"V"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:2516":{"id":"0:119:2516","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:738-0:146:2322":{"id":"b:5:738-0:146:2322","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2731:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:8438","5:741:8439","5:742:8440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3246:8460-0:214:2320":{"id":"a:2:3246:8460-0:214:2320","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3246:8460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2718-0:214:2320":{"id":"b:2:2718-0:214:2320","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32310:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2712:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2720:25742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:114:2506":{"id":"0:114:2506","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:286":{"id":"0:286","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10384:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:287:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:170:2471":{"id":"0:170:2471","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:2448","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13364:34020":{"id":"2:13364:34020","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13395:27282":{"id":"2:13395:27282","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1061:38384"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:252:2508":{"id":"0:252:2508","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:217:475":{"id":"0:217:475","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:242:2475":{"id":"0:242:2475","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2452","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3211:247-0:205:2319":{"id":"a:2:3211:247-0:205:2319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3211:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:121:2545":{"id":"0:121:2545","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2715-0:205:2319":{"id":"b:2:2715-0:205:2319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32310:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2709:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2717:2934"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:276:475":{"id":"0:276:475","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2731:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:208:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13321:27388":{"id":"2:13321:27388","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12346:471","self::pattern":"2:12955:13884"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12770:11993","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3246:8460-0:282:2324":{"id":"a:2:3246:8460-0:282:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3246:8460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13266:997":{"id":"2:13266:997","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12346:471"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13345:2949":{"id":"2:13345:2949","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12955:13884","`DoubleEndedIterator`":"2:8333:129","prim@char":"1:12346:471","str::rmatches":"2:13348:34013"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44173:12229","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12961:12803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42172:13670-0:205:2319":{"id":"a:2:42172:13670-0:205:2319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42172:13670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13282:27356":{"id":"2:13282:27356","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11045:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11045:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:475":{"id":"0:208:475","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3003-0:214:2320":{"id":"b:2:3003-0:214:2320","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2962:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2972:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3006:137","2:3007:1807"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:22:270-0:205:2319":{"id":"b:22:270-0:205:2319","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2750","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3014","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25749"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:219:802":{"id":"0:219:802","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10358:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10339:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13363:34019":{"id":"2:13363:34019","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"2:47171:8341":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"9:53:8790":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"18:680:9303":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:3438:12873":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:12356:735":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"1:11659:12513":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:10399:206":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"20:107:25687":{"crate_id":20,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"2:46117:12304":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"5:1531:8821":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:11313:9431":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"17:11075:8640":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"6:1680:11074":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"11:1085:34929":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"16:2478:10343":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:9219:13702":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"11:740:8825":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:4201:13612":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:12056:9482":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:46088:12302":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"16:7604:8767":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:12076:12653":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:5112:11257":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:43896:12835":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:3656:254":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:15168:10038":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:15814:10220":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:23061:12019":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:12033:12810":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"2:7831:14109":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"16:6442:10470":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:597:9412":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:41855:12171":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:4725:12796":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:15624:10173":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"21:756:35185":{"crate_id":21,"path":["zerocopy","sealed","ByteSliceSealed"],"kind":"trait"},"1:6199:220":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"17:15126:10024":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:11050:9022":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"21:1408:8601":{"crate_id":21,"path":["zerocopy","byteorder","U64"],"kind":"struct"},"17:12707:12676":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:12716:12225":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"5:680:12762":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:6572:186":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:22632:14152":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"1:4215:13614":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:44903:227":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"0:0:2329":{"crate_id":0,"path":["rand_chacha"],"kind":"module"},"6:4959:11198":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"11:2440:9127":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"2:43867:11999":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"16:2788:10357":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:43969:11989":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"5:1324:10575":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:1510:10962":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:9852:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"16:8073:10689":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:3437:13839":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"17:2234:12594":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:42338:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"21:2342:8605":{"crate_id":21,"path":["zerocopy","byteorder","I32"],"kind":"struct"},"2:30722:31424":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"5:7392:8381":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:3661:146":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:8570:13588":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"18:598:34970":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"21:757:25711":{"crate_id":21,"path":["zerocopy","ByteSlice"],"kind":"trait"},"2:43340:2763":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:46278:12318":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:2712:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:12353:9504":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"17:12433:8659":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"11:2420:8381":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:43928:12213":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:10401:8451":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"5:5081:12489":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:13855:9710":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:22896:8867":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:5776:11703":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"18:563:8615":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:47328:8352":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"6:5083:11255":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:6729:11675":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"16:8136:10695":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:9403:12895":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"17:14788:9902":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"18:726:8620":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:1481:156":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:6629:11637":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:4882:8466":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:10769:9453":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"2:46071:12301":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"5:5234:8836":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:14356:9804":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:45919:12288":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"11:835:12743":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:44889:164":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:6636:11638":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:2037:11963":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:40917:9300":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"11:1049:12751":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:13753:9694":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"18:635:9302":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"6:7306:11749":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"6:5181:11264":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:12478:9513":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"17:15206:10046":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"11:299:10784":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:8216:10699":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:8867:8528":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:39640:213":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"16:6263:10465":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:4651:8478":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:43841:11998":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"6:5160:11261":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:11487:12224":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"5:6076:14452":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:11825:12645":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"21:2099:8604":{"crate_id":21,"path":["zerocopy","byteorder","I16"],"kind":"struct"},"17:2203:12591":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"16:7098:10569":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"16:7052:12703":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:12621:9520":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"1:10969:12502":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"2:8441:178":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:44596:12264":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:10339:226":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"16:2708:10353":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:11877:8655":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:12485:21619":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2:41283:12158":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"16:5742:10406":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"6:5677:11492":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:14855:9957":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:4303:30647":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"5:1549:12755":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"6:6874:11716":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:256:12584":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:11510:12627":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:3473:12596":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:11115:12613":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"16:2508:10344":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"5:883:13464":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:46426:12326":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:7359:11778":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:43319:9008":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:2807:202":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:30658:8873":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"5:5733:13914":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:4153:13609":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:41066:12153":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:40941:12150":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:2315:12861":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"1:9748:127":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"6:6471:11549":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:34122:14136":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:15:2462":{"crate_id":2,"path":["core","write"],"kind":"macro"},"16:6588:10483":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:13252:9589":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:11518:27070":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"16:2854:10360":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"18:651:9285":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:44493:12252":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:16069:10288":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"22:183:3001":{"crate_id":22,"path":["ppv_lite86","types","RotateEachWord32"],"kind":"trait"},"2:46665:12349":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"6:6621:11636":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:5436:11386":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"1:10426:13346":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"17:12929:9541":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:13211:9585":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:8565:12924":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"22:267:3014":{"crate_id":22,"path":["ppv_lite86","types","VZip"],"kind":"trait"},"17:11788:12640":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"11:1601:12757":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"16:2748:10355":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"6:8259:11913":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:10044:8857":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"17:11634:9435":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:11018:12889":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"2:3257:13728":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:40681:11973":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:12297:12958":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"17:13526:9633":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"6:5502:11420":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"6:5466:11407":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"1:938:12769":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"6:0:1002":{"crate_id":6,"path":["libc"],"kind":"module"},"17:12238:12662":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"11:1140:12753":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:8553:12231":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:21694:33042":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"16:7428:21431":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:41324:12163":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:8226:21435":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:45889:12284":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"5:1204:34799":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"16:6532:10481":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:11214:8529":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:47112:12390":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:22983:12007":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:44578:12262":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"14:31:12738":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:23081:12023":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:10609:12927":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:9737:21471":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"17:11405:12624":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:32293:8479":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"5:7383:8815":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:8533:12153":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:11428:10855":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"2:40860:12143":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:14876:9965":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:41090:12155":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"6:1699:11081":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:11773:9524":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:2146:11964":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"6:586:10948":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:40626:14199":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:47211:8345":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"16:8301:10701":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:11128:9405":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"20:127:25692":{"crate_id":20,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"5:6421:13828":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:12189:12658":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:6900:11731":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:6657:11650":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:10905:12606":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"22:210:2753":{"crate_id":22,"path":["ppv_lite86","types","Vec4Ext"],"kind":"trait"},"6:4916:11182":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:15931:9571":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"17:12949:9494":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:11687:12906":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"21:2991:8608":{"crate_id":21,"path":["zerocopy","byteorder","Isize"],"kind":"struct"},"2:33536:13729":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:9249:13703":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"5:1355:12750":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:11321:12506":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"5:40:13482":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:10092:21494":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:13235:9586":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:34295:14137":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"22:260:3013":{"crate_id":22,"path":["ppv_lite86","types","u128x4"],"kind":"trait"},"21:796:8625":{"crate_id":21,"path":["zerocopy","byteorder","BigEndian"],"kind":"enum"},"2:22618:13826":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:5286:33129":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:21711:33053":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"22:1520:8499":{"crate_id":22,"path":["ppv_lite86","x86_64","NoA1"],"kind":"struct"},"17:12792:9383":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"5:4848:802":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"16:6849:10545":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:5643:11479":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"9:447:20413":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:15376:10092":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:6406:9030":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"16:5960:10425":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:3489:13481":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:2541:2848":{"crate_id":1,"path":["std","io"],"kind":"module"},"17:11063:12610":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:46515:8582":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:41983:31438":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"5:3263:33792":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:2935:13546":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:12364:884":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:3067:137":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"5:219:12761":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"6:1559:10993":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"6:5483:11413":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"17:12671:12673":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"1:623:13442":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:12329:26102":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:12597:9519":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"17:14038:9738":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"16:8188:12737":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"16:4502:10382":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:2485:13536":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:11853:12648":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:2469:13531":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"16:4940:10396":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"5:3042:11939":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:6853:9033":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"2:40396:12116":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"5:289:33747":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:12970:9307":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:16105:10295":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"17:12371:9541":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:45025:12283":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"16:6433:8755":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:46627:12347":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:11242:12617":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:10842:27081":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:3701:13848":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"11:854:12746":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"6:6738:11678":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"6:5306:11328":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:33052:10585":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:9234:13701":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:2322:13528":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:2221:189":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"16:4882:10394":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"5:7139:33763":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:13797:9703":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:40798:12135":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"17:15214:10048":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:44886:150":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:47133:8584":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:15616:10172":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:41839:12169":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:9355:26104":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"16:2684:10352":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"11:1564:20493":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:46760:12352":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"2:23260:12037":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"1:8222:139":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:819:190":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"6:553:10931":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:8779:2763":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"14:187:20503":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:22843:12003":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"16:0:2839":{"crate_id":16,"path":["gimli"],"kind":"module"},"6:5200:11276":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:11501:12807":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:42017:12458":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"6:8265:11914":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"17:16138:10302":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"2:39677:212":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"5:3040:33211":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:9190:12481":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"11:1105:12752":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"16:5307:10402":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:1897:12854":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"17:14131:9749":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:6461:12405":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"5:2102:9043":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"16:5781:10363":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:40718:11998":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"16:5863:21422":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:13996:13466":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:6768:11688":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"18:521:25680":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"5:4515:33762":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:14516:9832":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:11792:12876":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:44911:207":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:884:8529":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:38385:14141":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:5598:11453":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:38330:14140":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"5:7500:8381":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:44544:13897":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"6:4864:11156":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:13679:31544":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"21:3594:35176":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","at_least","Shared"],"kind":"trait"},"2:46598:12346":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"16:2878:10361":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:34468:10594":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"16:2394:10339":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:8476:8854":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"16:8259:10628":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:14271:9791":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:15222:10050":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:16187:10317":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"16:7549:10634":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:14025:9736":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"16:6398:8751":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:3677:13566":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"16:5347:10403":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:46441:12327":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:14091:9745":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:42039:12185":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:15748:10208":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:15463:10111":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"11:873:12748":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:14575:8659":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:7994:13546":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"17:13972:9455":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:22663:13546":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"1:11206:9021":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:3935:9127":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"17:13187:9571":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:43955:8650":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"16:7379:34949":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:16212:10322":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"6:4942:11192":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:379:12841":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:15944:9585":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"1:11647:9037":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:9474:12491":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"6:1517:10965":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:11102:12612":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"6:479:10885":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:33264:14131":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:2968:258":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:8247:9019":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"2:42057:12186":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"5:304:2980":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"22:884:2743":{"crate_id":22,"path":["ppv_lite86","dispatch"],"kind":"macro"},"2:13617:8852":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"16:4830:10392":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"17:13785:9701":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:10339:12854":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"2:4860:8480":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:12344:417":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:12342:9500":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"16:2998:10369":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:40582:12127":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:16223:10324":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"2:21655:8364":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:46536:3011":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:15418:10101":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:527:13426":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:14111:9748":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:15760:10210":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:16032:9589":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"16:7857:10648":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:11915:21593":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:15655:10180":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"5:1739:33747":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:3658:31189":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"22:247:3011":{"crate_id":22,"path":["ppv_lite86","types","u64x4"],"kind":"trait"},"17:15799:10219":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:11567:12631":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"11:2545:10795":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"4:0:2831":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"6:5390:11358":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"18:754:9317":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:32369:8464":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:43068:10667":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"5:7492:8381":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:44687:12267":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:9184:8381":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"16:6456:21426":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:15390:10094":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:13538:9636":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"6:8300:11922":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"1:10952:9042":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"17:12851:8662":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:47367:8353":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"6:7561:11875":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:15138:10027":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"20:139:2450":{"crate_id":20,"path":["rand_core","CryptoRng"],"kind":"trait"},"21:512:25702":{"crate_id":21,"path":["zerocopy","DstLayout"],"kind":"struct"},"17:11647:9436":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"6:4985:11211":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:7337:27061":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"22:1540:8503":{"crate_id":22,"path":["ppv_lite86","x86_64","NoNI"],"kind":"struct"},"16:7355:10611":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:13272:9599":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:3051:137":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:46228:12316":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:3673:13928":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:5324:12800":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"22:1500:8494":{"crate_id":22,"path":["ppv_lite86","x86_64","NoS3"],"kind":"struct"},"6:1535:10976":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:12369:1828":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:13674:9660":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:12363:903":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:9160:9022":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:1861:12853":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"6:5250:11299":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:41871:13589":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:14587:9842":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:12000:12809":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"6:6678:11656":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:10360:12935":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"2:45968:12292":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"16:2355:8689":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:43815:12208":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:40738:12826":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:3906:12877":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:47180:8342":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"22:257:2802":{"crate_id":22,"path":["ppv_lite86","types","u64x2x4"],"kind":"trait"},"16:7497:10630":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:40502:12124":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:16151:10308":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"17:11557:12630":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"16:7306:34951":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"15:306:20516":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:8013:12907":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:14463:9826":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:8559:12922":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:11419:8629":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"9:502:10858":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:8540:8650":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"6:564:10936":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:30435:13591":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"6:1653:11061":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:11661:9437":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:46359:12323":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:22527:13822":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"1:7150:13732":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:14752:9871":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:40615:12130":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"6:5636:11476":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"18:689:9306":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:8857:9137":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"17:14177:9773":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"22:1530:8501":{"crate_id":22,"path":["ppv_lite86","x86_64","NoA2"],"kind":"struct"},"5:3292:10789":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"22:0:2330":{"crate_id":22,"path":["ppv_lite86"],"kind":"module"},"2:2959:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"5:939:13465":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:39695:215":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"16:2612:10349":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:3032:12867":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:43804:12832":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:15281:10063":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:10723:12868":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"1:6509:220":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"16:150:8697":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"6:5191:11271":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:3454:140":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:11636:26086":{"crate_id":1,"path":["std","sys","thread_local","fast_local","DtorState"],"kind":"enum"},"1:11698:12516":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"16:2808:10358":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:4008:12878":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:8355:13578":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:43766:11995":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"11:2539:10794":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"16:2902:20561":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"11:1880:8528":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"16:7633:34945":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:15400:10097":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"6:7446:11807":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"15:394:20525":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"6:4787:11096":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:9342:12486":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:14868:9964":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:11095:27076":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"16:7085:10566":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:1663:11067":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:9283:9026":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"17:10068:21476":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:8753:8530":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"5:7734:12769":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"2:2595:672":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"17:14723:9851":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"5:2116:12770":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"16:6634:8759":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:12824:21496":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"6:8351:11934":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"11:1914:10791":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"16:5897:8727":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:32311:244":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:12656:12217":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:13844:9709":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"6:7314:11754":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:7467:11814":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"21:34:25733":{"crate_id":21,"path":["zerocopy","byteorder","Order"],"kind":"enum"},"1:4325:13631":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:4794:11972":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"3:0:505":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"6:517:10910":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:957:12743":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"16:7539:10367":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:568:13431":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:894:8381":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"11:1580:12756":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"11:1893:12769":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"16:6948:8761":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"6:5528:11422":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:3342:12869":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:39792:12113":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:32400:114":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"17:11583:12636":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:44401:12248":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:15992:10274":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"17:10170:8625":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"11:1900:10789":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"16:7769:10639":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"22:235:2800":{"crate_id":22,"path":["ppv_lite86","types","u64x2"],"kind":"trait"},"21:3601:8611":{"crate_id":21,"path":["zerocopy","wrappers","Unalign"],"kind":"struct"},"16:872:12585":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"1:1075:10575":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:11190:8528":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:42796:8445":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"6:8271:11915":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:32310:2978":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"1:10358:12936":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"1:11107:27036":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:13738:9689":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:14260:9790":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:44191:12230":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:4139:13608":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:5992:9023":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"6:6491:11562":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:40548:12126":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:12470:14212":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"16:6342:34948":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"22:1545:8493":{"crate_id":22,"path":["ppv_lite86","x86_64","SseMachine"],"kind":"struct"},"1:4341:13633":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:6460:11541":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:13473:9620":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:12961:12803":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:11256:12490":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"11:2137:12750":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"0:95:2328":{"crate_id":0,"path":["rand_chacha","ChaChaCore"],"kind":"type_alias"},"5:2539:11942":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:42377:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:11230:31030":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"21:587:25693":{"crate_id":21,"path":["zerocopy","IntoBytes"],"kind":"trait"},"5:3661:8528":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:16121:10300":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"1:8188:12912":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:43350:9009":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:15301:10070":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:12993:21497":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:42533:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"11:364:34915":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:11704:12517":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:10524:12600":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"11:1725:156":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"11:102:10783":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"18:608:9280":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:4821:11797":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"6:6664:11651":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:11113:27065":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:10395:8453":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:2936:13961":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:5622:12887":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"5:6440:13829":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"16:2728:10354":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:13325:8672":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:1098:12751":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:4886:13636":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:3297:26608":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:42210:226":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:42613:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"17:10573:34959":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"16:7168:12486":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:44699:12270":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:43358:9010":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:11010:12911":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"1:10729:12872":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"17:13581:9652":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:14235:9786":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:43122:137":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:9415:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:4450:12795":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"22:1411:9270":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","G0"],"kind":"struct"},"6:7339:11772":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"6:5236:11293":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:13986:9732":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"22:1505:8497":{"crate_id":22,"path":["ppv_lite86","x86_64","YesS4"],"kind":"struct"},"2:21665:33046":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"17:15102:10022":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:2175:21551":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:43876:12834":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:44715:12274":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"6:4971:11203":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"16:4856:10393":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"6:8317:11927":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"11:2148:12751":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"22:274:2745":{"crate_id":22,"path":["ppv_lite86","types","Machine"],"kind":"trait"},"17:9858:21488":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:2467:11966":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"22:1515:8498":{"crate_id":22,"path":["ppv_lite86","x86_64","YesA1"],"kind":"struct"},"2:40452:12120":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"16:6066:10434":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:10232:12181":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"2:11321:12804":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:11921:27230":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"2:39755:13456":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:44019:12220":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:8236:127":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"6:7485:11825":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:1620:12769":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"6:4965:11200":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:16269:9609":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"20:133:2451":{"crate_id":20,"path":["rand_core","RngCore"],"kind":"trait"},"7:79:20406":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"16:7656:21432":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:12359:733":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"5:5868:251":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:10600:153":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"16:6758:10519":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:13959:9727":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:13706:205":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:45013:10801":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:14212:9785":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:32840:10588":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:10439:8626":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:39735:216":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:21723:33048":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"17:10218:8645":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"16:7509:12725":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:15010:10008":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:15608:10169":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"6:7389:11800":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:13485:9623":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:42202:8531":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"11:1674:34920":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:6154:11979":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:2030:671":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:14246:9788":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:3448:2975":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"16:3614:10372":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"6:7330:11766":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:2073:198":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:6682:12898":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:12352:1722":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:532:10919":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"5:839:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:7780:31673":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:46295:12319":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:42572:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:44691:12268":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:8714:13666":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:23249:12036":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"5:2127:12771":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"6:5445:11392":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:13015:8659":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:5039:11241":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:11443:9433":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:11273:12505":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"18:670:12583":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:15456:10109":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"5:7464:210":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"6:5352:11338":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"5:956:8528":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:953:8825":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:12969:9543":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:44761:12275":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:22579:14152":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"1:8271:9043":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"6:4952:11195":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:14847:9954":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"22:1299:8597":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","u128x1_sse2"],"kind":"struct"},"6:6756:11686":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"2:22927:8868":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"18:581:8364":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:11238:8864":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"17:4821:12598":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"2:3040:123":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:7484:30648":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"6:5064:11254":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:4925:13624":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:12887:8663":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:40882:12145":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"6:6763:11687":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"2:12770:11993":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"6:6775:11689":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"1:928:9127":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:16079:10289":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"1:1613:8381":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"6:5102:11256":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"6:5382:11353":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"1:4817:11793":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"2:3432:8533":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"15:288:20515":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:8759:14113":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:4068:8381":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"9:482:20412":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"6:5266:11308":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:46146:12306":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"16:3925:10377":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"17:10915:34963":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:14545:9835":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"14:40:9586":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:5995:10428":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"16:5802:21421":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:12367:1840":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:1089:12750":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:11605:8653":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:13173:9570":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:8064:13448":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:13766:9696":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:23238:12035":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"1:4406:12879":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:8253:11912":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"6:538:10922":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"6:465:10877":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"5:3297:33796":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"6:5653:11480":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"16:6574:8758":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"11:2551:34923":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"20:124:25691":{"crate_id":20,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"1:6867:12902":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"2:43987:11994":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"6:578:10944":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:6777:11981":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"17:11674:9438":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"22:1525:8500":{"crate_id":22,"path":["ppv_lite86","x86_64","YesA2"],"kind":"struct"},"16:6246:206":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:42455:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:15720:10199":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"21:427:35256":{"crate_id":21,"path":["zerocopy","wrappers","update","WriteBackOnDrop"],"kind":"struct"},"2:10039:31638":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:13116:9558":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:43886:12000":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"6:1547:10985":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"6:5624:11470":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"1:3529:12161":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:4851:13939":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:10903:12944":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"1:12357:738":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:9168:8528":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:43543:12205":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"5:3885:12769":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:8078:13449":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"6:4876:11159":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"6:5014:11227":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:2232:128":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"1:8681:12461":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"16:7006:12702":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:44351:13896":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"5:1340:12751":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:8084:13500":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"17:9938:21491":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:30711:8441":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:43105:8441":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:21692:33054":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"11:809:12769":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"6:497:10893":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:6698:11665":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"6:1503:10960":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"6:5329:11335":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"2:44223:12231":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:45904:12287":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"16:7144:21430":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:5837:220":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:40475:12122":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"18:515:9286":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:7409:27084":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"5:6023:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"16:6300:12689":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:10726:12870":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"2:44173:12229":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:5335:204":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:47054:8583":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"6:5588:11448":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:13375:9603":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:9334:9045":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"18:643:9285":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"5:5470:13868":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"17:15646:10178":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"6:8012:11899":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"18:613:34971":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"11:2466:12769":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"17:14012:9735":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:10608:157":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"5:1843:12769":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:2770:134":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"16:8118:10693":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:8797:31637":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"21:32:25732":{"crate_id":21,"path":["zerocopy","byteorder","ByteOrder"],"kind":"trait"},"5:7602:14199":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:8304:2977":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:8659:11782":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:2418:10340":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:42172:13670":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:23150:12027":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"17:13723:9685":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"6:6505:11573":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"9:424:20415":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:3592:12456":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"5:1077:33747":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"21:811:8624":{"crate_id":21,"path":["zerocopy","byteorder","LittleEndian"],"kind":"enum"},"16:4560:10384":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:3340:12868":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"5:1184:33212":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:5400:11365":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:46021:12298":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:13344:8679":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"5:7558:13462":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:23172:12029":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"21:595:25707":{"crate_id":21,"path":["zerocopy","Unaligned"],"kind":"trait"},"17:11688:9439":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"17:15368:10089":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"9:0:2833":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:9430:12905":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"5:4252:12489":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:13191:119":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:1844:696":{"crate_id":1,"path":["std","env"],"kind":"module"},"18:706:9307":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"21:3587:35406":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Initialized"],"kind":"enum"},"17:15324:10075":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:8611:12459":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:10818:12604":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:41076:12154":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:9123:199":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:44737:130":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"16:6466:10475":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:44261:12235":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:10887:34958":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"11:2349:12751":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"1:11928:12519":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:15734:10201":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"6:6650:11649":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:12361:891":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:11016:12607":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"16:4587:10385":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"21:3645:25716":{"crate_id":21,"path":["zerocopy","SizeInfo"],"kind":"enum"},"1:4807:13611":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"6:5020:11230":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:8197:11910":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"6:5477:11412":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:42275:196":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"6:4885:11164":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:46781:12353":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:46132:12305":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:10932:12412":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"2:42494:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:22220:8866":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"17:11367:8640":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"11:785:8823":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"16:4614:10386":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"21:762:25713":{"crate_id":21,"path":["zerocopy","IntoByteSlice"],"kind":"trait"},"2:21794:13546":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"11:1884:8381":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"17:11865:12649":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:42193:3322":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"5:7617:11956":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"16:6606:10491":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"16:6620:10493":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"16:4352:10379":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:11898:9449":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:1625:10789":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:13884:9130":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:44719:8864":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:45002:12282":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:15190:10044":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:3583:211":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"6:5290:11321":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:2572:10347":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:21802:13737":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"16:2936:20562":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"6:5489:11415":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"2:5093:13949":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:5366:977":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:12349:1314":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:10648:8862":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"16:7580:10636":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"20:0:2316":{"crate_id":20,"path":["rand_core"],"kind":"module"},"2:23068:12022":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:2765:201":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:13553:9642":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:12351:1688":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"6:6689:11659":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"2:44277:12115":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"5:4282:12489":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"17:14529:9833":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:13861:115":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"16:5927:10418":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"6:4811:11113":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:4362:12489":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:44286:12123":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:1637:10791":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"16:5686:8721":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:12362:9505":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"16:4468:10381":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"18:589:9290":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:10671:34956":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"6:5376:11350":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:46004:12297":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"6:5336:11336":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"17:15521:10153":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:1616:9127":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:1827:14071":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"17:9807:21477":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:41817:170":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"16:5006:10398":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:6714:11673":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"2:40509:13955":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"16:6494:10478":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:5283:11319":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:6788:11696":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:14933:10000":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:3649:8450":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"5:3046:33203":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"11:698:8381":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:10643:13550":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:2780:12866":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"6:7537:11865":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:2962:163":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"1:8193:12412":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"6:5361:11342":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:12251:12663":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"21:3386:8610":{"crate_id":21,"path":["zerocopy","byteorder","F64"],"kind":"struct"},"18:659:12579":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:3342:10590":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"5:1581:210":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:45951:12291":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:1642:10792":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:3216:8458":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:41299:12160":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:15289:10064":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:6915:11742":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:3738:13851":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"6:5314:11331":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:33737:14132":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"14:214:10779":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"5:3251:8528":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:14189:9776":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"6:5046:11243":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:5367:21420":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"17:12318:9494":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"16:7014:21429":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"21:544:25694":{"crate_id":21,"path":["zerocopy","NoCell"],"kind":"trait"},"20:18:2448":{"crate_id":20,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"17:14503:9831":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:10769:34961":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:44037:12221":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:11227:12616":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:22489:13821":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"1:9301:26091":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:13064:9551":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:3246:8460":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"5:3284:10791":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:902:8821":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"6:7516:11851":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:8294:11921":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:3211:247":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:46196:2788":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:44965:32897":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"1:8884:12477":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"17:10534:34964":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:4804:8479":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:10397:8454":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:15116:10023":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"17:513:12587":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"16:6079:8706":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:11282:11993":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"21:607:8479":{"crate_id":21,"path":["zerocopy","Ref"],"kind":"struct"},"1:980:12748":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"5:3050:33202":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:22950:12004":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"5:4481:12489":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:30696:12040":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"10:0:2834":{"crate_id":10,"path":["adler"],"kind":"module"},"17:12454:9511":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"2:38964:14142":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:3419:124":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"22:1416:9271":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","G1"],"kind":"struct"},"6:7366:11782":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:12043:12651":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:8345:12916":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"5:5474:13869":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:23161:12028":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"11:2323:12750":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"16:5769:10410":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:11537:12629":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"6:5212:11283":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:40610:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"11:1888:9127":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"22:967:8588":{"crate_id":22,"path":["ppv_lite86","soft","x4"],"kind":"struct"},"1:7950:27068":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:15445:10108":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:41276:12157":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"6:4979:11208":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:40788:133":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:8655:12926":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:15266:10061":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:373:12839":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:2741:12863":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"16:2458:10342":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:39543:8532":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:11467:9434":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:4211:13613":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:43143:8443":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"16:2592:10348":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:47305:8351":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"11:2400:8529":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"11:0:2835":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"17:12516:12667":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"2:43097:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"14:202:13898":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:14599:9849":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:9147:12480":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:40486:12123":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"16:6976:8763":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:9117:12927":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:14311:9795":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:10652:27074":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"21:139:70":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Any"],"kind":"enum"},"2:40494:12115":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:44683:12266":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:43784:12831":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:42810:8454":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:12863:9540":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"6:5219:11284":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:9719:138":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"2:46388:12324":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"21:3567:35176":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Shared"],"kind":"enum"},"1:12368:1846":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:1686:11077":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:11764:9448":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"2:47237:8347":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:42130:8520":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:41305:12161":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:46175:12315":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:11354:12622":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"11:2533:10793":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:10185:8644":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:38275:14139":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:2155:11967":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:8284:145":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:10927:12494":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"5:843:12763":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"5:7472:8838":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:9781:21487":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:7610:8389":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:6811:11702":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:23216:12033":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"16:6872:10546":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:5708:12889":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"16:4531:10383":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"0:94:2326":{"crate_id":0,"path":["rand_chacha","ChaChaRng"],"kind":"type_alias"},"11:708:8824":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:12557:8640":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"17:11841:12647":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:6895:10547":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"5:6619:33747":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:16249:10328":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"2:32368:2979":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:680:13445":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"16:3810:10374":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"18:113:25670":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:11621:8638":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:42250:8528":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:12768:21474":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:14386:9807":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:9398:187":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"11:1158:12754":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:43056:12200":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"17:13814:9706":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:4109:13606":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"11:1064:20492":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:23723:236":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:40839:12141":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:13941:152":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:11853:12878":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"5:7432:11951":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"17:13832:9707":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:2719:27081":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:40830:8852":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:13029:13890":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:22790:12002":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:40663:13513":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"2:12732:12228":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"5:4117:33747":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"16:6385:10467":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:8817:13680":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:43775:11996":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"5:7442:33329":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"21:1617:8602":{"crate_id":21,"path":["zerocopy","byteorder","U128"],"kind":"struct"},"1:2483:13535":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:11256:9425":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"1:8636:12460":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"2:42299:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:11493:12625":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"16:5075:10400":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:3393:12870":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"6:4824:11123":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:42266:8381":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"6:7461:11812":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"11:1920:10792":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"18:573:9285":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:44976:12838":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"2:32398:8463":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"5:1559:8824":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"16:5415:10404":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"22:180:2748":{"crate_id":22,"path":["ppv_lite86","types","BitOps32"],"kind":"trait"},"1:11936:12519":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:43029:12192":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:42077:194":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"6:1593:11014":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:6648:10494":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:7891:12955":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:2611:14153":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"16:4802:10391":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:12647:12671":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"1:7729:26048":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:14449:9825":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:46342:12322":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:816:13592":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"22:224:3007":{"crate_id":22,"path":["ppv_lite86","types","Swap64"],"kind":"trait"},"2:42161:8521":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:4504:13931":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"17:12530:12669":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"1:4923:13622":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:4913:8481":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"16:6962:8762":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"6:5581:11446":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:8622:12925":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"21:546:25704":{"crate_id":21,"path":["zerocopy","TryFromBytes"],"kind":"trait"},"1:10990:31028":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:12976:13882":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:44695:12269":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:758:154":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:44233:12232":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:13877:9717":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"16:7711:210":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"17:11341:12621":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:44372:12239":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:22353:13736":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:15273:10062":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:12915:13526":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:9322:12933":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"17:13568:9648":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:12300:21617":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"17:11524:12628":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"17:15151:10033":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"16:8175:12734":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:39805:12114":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:44555:12254":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:15197:10045":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"6:5515:11421":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"2:3272:10589":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"6:1496:10957":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:22911:8839":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"16:4743:10389":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:42803:8453":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"16:2660:10351":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:4161:13610":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:15249:10054":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:13292:8666":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:403:12586":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"5:7750:12790":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"6:1490:10954":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:1859:12852":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:41899:9003":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"21:2569:8606":{"crate_id":21,"path":["zerocopy","byteorder","I64"],"kind":"struct"},"21:764:25714":{"crate_id":21,"path":["zerocopy","IntoByteSliceMut"],"kind":"trait"},"11:2228:8788":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"1:8350:9041":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:22232:33040":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"6:1580:11007":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:1954:12489":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"1:2318:12495":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"1:8604:12458":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:4354:13634":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:3292:13847":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"1:7881:9412":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"5:7114:33756":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"21:3657:9277":{"crate_id":21,"path":["zerocopy","TrailingSliceLayout"],"kind":"struct"},"17:12388:9506":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"16:6412:21425":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"17:12030:12650":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"11:488:154":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"19:0:1291":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"11:671:8528":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:22445:13820":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"6:1692:11078":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:33804:14134":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"16:3014:20563":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"9:392:20414":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"16:6782:21428":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:22565:13825":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"2:44944:12836":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"6:5225:11287":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"5:2210:13426":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:40437:31402":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:2972:257":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"16:7741:8773":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"16:2303:20534":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"16:7823:21433":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"16:2528:10345":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:13399:9607":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:3264:12595":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:10384:119":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:8333:129":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:12693:12222":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:1207:12589":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"16:7132:10574":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"11:2559:10798":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"16:6940:8718":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:12683:12674":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"17:14560:9839":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:8546:11989":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:21814:8865":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:15822:10223":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:40711:12825":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:1920:12855":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:11394:11994":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:9288:115":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:8003:8854":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:47200:8344":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:8210:12413":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:10661:12602":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:47275:8349":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:44530:12253":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:1609:8528":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:42105:8528":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"6:7452:11809":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:4772:13654":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"5:4938:217":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"5:3410:12769":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"2:46036:12299":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:8873:12476":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:23205:12032":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"1:8523:8846":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"16:2636:10350":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"5:0:309":{"crate_id":5,"path":["alloc"],"kind":"module"},"5:7456:8381":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"5:3805:9043":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:10500:113":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"6:4837:11133":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:0:2840":{"crate_id":17,"path":["object"],"kind":"module"},"16:7618:8768":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:44703:12271":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:12345:1174":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"16:3899:10376":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:12486:12811":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"16:7590:8766":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:3253:8462":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"1:9425:12904":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"2:6977:11985":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"16:7695:10638":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:22975:12006":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:15434:10104":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:32309:237":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"11:430:34924":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:10399:8650":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"9:357:20428":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"5:4322:8528":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:12371:1912":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:11673:12514":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:5004:13621":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:40848:12142":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:12353:1812":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"22:202:3005":{"crate_id":22,"path":["ppv_lite86","types","Vec2"],"kind":"trait"},"17:13899:9718":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"5:6700:8381":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:13999:9733":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"22:238:3008":{"crate_id":22,"path":["ppv_lite86","types","u128x1"],"kind":"trait"},"17:14341:9800":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"11:434:34925":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:22999:31422":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:3395:12871":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"22:250:3012":{"crate_id":22,"path":["ppv_lite86","types","u128x2"],"kind":"trait"},"9:238:2763":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"6:1526:10970":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:7984:11896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"22:232:2788":{"crate_id":22,"path":["ppv_lite86","types","u32x4"],"kind":"trait"},"2:22:817":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:43794:11997":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:4487:12880":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:10137:21470":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:16050:9599":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"1:12360:909":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:12422:9508":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"2:21677:33046":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"2:21709:33050":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:3686:31859":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"18:718:9311":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:22710:13815":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"5:4436:265":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:15092:10021":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"8:0:2832":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"10:44:8789":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"5:1540:8823":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"18:80:25668":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:40778:12133":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"17:15957:10244":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"1:6374:27078":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"5:3754:33747":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:500:27086":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:11033:26099":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"21:558:25706":{"crate_id":21,"path":["zerocopy","FromBytes"],"kind":"trait"},"1:2705:12864":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:12543:12670":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"17:11153:12604":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:672:12845":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:13509:9625":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:3401:13849":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"11:396:34913":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:11595:8652":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:43715:12830":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:22198:13740":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"21:3666:25715":{"crate_id":21,"path":["zerocopy","CastType"],"kind":"enum"},"16:3475:10371":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:9731:25962":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"5:3820:12770":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:12313:9051":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"11:881:12749":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:10284:8647":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:592:12843":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:11547:9362":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:4730:12797":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:12572:8629":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"5:7412:9127":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"6:7429:11802":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:14402:9811":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"11:1005:10575":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"5:1590:12768":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:1565:10995":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:6678:12159":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:5289:12883":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:4167:13611":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"6:1707:11085":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:6609:11629":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:5002:11221":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:15769:10214":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:12502:13885":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"16:6991:34946":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:9411:12489":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"1:6282:27066":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:6524:11575":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:485:10888":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"22:244:3010":{"crate_id":22,"path":["ppv_lite86","types","u64x2x2"],"kind":"trait"},"1:5258:12883":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"21:3229:8609":{"crate_id":21,"path":["zerocopy","byteorder","F32"],"kind":"struct"},"1:9375:9047":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"5:1441:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:2768:10356":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:9916:21490":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"11:1023:12750":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:11214:12615":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"22:1580:2994":{"crate_id":22,"path":["ppv_lite86","x86_64","vec256_storage"],"kind":"union"},"17:14994:10007":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:10018:21473":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:42789:8444":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:12318:13450":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:13946:9724":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:42416:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:5546:11433":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:6358:9130":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"2:31069:196":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:10825:32907":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"17:15058:8680":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:0:563":{"crate_id":2,"path":["core"],"kind":"module"},"6:6670:11654":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:11574:8788":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"5:5938:9127":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:9671:21472":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:15836:10226":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:3646:14143":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:42258:8529":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:15582:10160":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:13594:12816":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"6:6409:11521":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:43311:9007":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:10184:8442":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"11:685:8529":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:15176:10041":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"5:6975:13916":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"17:13437:9611":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:13904:9132":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"1:5654:113":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:40892:8853":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"16:7910:21434":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:10393:8444":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:40691:12824":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:4572:8844":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"6:5671:11489":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:21922:8865":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:14912:9995":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:7546:11868":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:14284:9793":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"18:538:8613":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"6:6562:11603":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"11:328:10787":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:40747:8846":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:12808:9538":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:974:12746":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"6:6597:11624":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:47252:8348":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:43939:12214":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:47025:12388":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:11365:12949":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"18:698:8618":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:8063:9025":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"16:3196:10335":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"11:351:34917":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"2:44986:180":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"22:216:3006":{"crate_id":22,"path":["ppv_lite86","types","Words4"],"kind":"trait"},"2:8295:165":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:14436:9824":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:10251:8646":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:40597:12129":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:40653:8650":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"6:5260:11305":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"5:6965:13915":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:4438:12794":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:432:185":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:11045:239":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"6:6441:11539":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:3284:13845":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"2:40901:12146":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:4771:10390":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:14298:9794":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:44387:12245":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"18:481:9283":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:8242:9020":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"6:4891:11166":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:46731:12351":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"2:11359:12805":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:43039:8441":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"6:8288:11920":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"5:3318:10792":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:46409:12325":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:46686:12350":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"2:23019:31408":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"16:8202:8777":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:43558:12206":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"10:36:10803":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:8200:9042":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"5:1168:34801":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:44137:12227":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:261:12585":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"6:8341:11932":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"16:6317:12693":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:3303:30868":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"6:5134:11259":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:2076:197":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"17:12695:12675":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"22:1510:8495":{"crate_id":22,"path":["ppv_lite86","x86_64","NoS4"],"kind":"struct"},"2:44252:12234":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:8750:149":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"16:4913:10395":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:3457:141":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:9420:8855":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"16:7648:12732":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"22:1535:8502":{"crate_id":22,"path":["ppv_lite86","x86_64","YesNI"],"kind":"struct"},"6:6435:11536":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:13731:12817":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:2134:14163":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"6:7602:11890":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"20:163:2988":{"crate_id":20,"path":["rand_core","RngReadAdapter"],"kind":"struct"},"2:8386:2976":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"16:6427:8753":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"17:11142:8629":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:13308:8670":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:656:12844":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:15356:10086":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:8616:13635":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:11515:12808":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:9270:12485":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:1639:11050":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:11035:13546":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:14977:10005":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"5:7400:11950":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"16:5831:8725":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:46327:12321":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:8503:13545":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"16:5846:10412":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:5981:12489":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"14:165:20496":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"11:123:8784":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"16:3842:10375":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:4927:13625":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:1631:10790":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"6:5122:11258":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"16:7755:8774":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:963:13463":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:14475:9827":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:10340:8450":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:33949:14135":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:14147:9754":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:437:9369":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"6:6532:11580":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:545:10926":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:15426:10103":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:11653:12952":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"16:8093:10690":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:10828:34957":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"16:7061:10565":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:12508:9517":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"20:195:9282":{"crate_id":20,"path":["rand_core","error","ErrorCode"],"kind":"struct"},"16:6231:10462":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:9984:21492":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:11755:9447":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"1:6796:12899":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"16:4976:10397":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:10720:34962":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:9556:12855":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"6:7575:11884":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:11026:21506":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:4:1256":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"6:6417:11523":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"16:4062:10378":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:12494:9514":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"5:7422:12786":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:4424:10380":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:5851:12406":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"5:7652:243":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:13577:12813":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"2:44073:12223":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"22:213:2754":{"crate_id":22,"path":["ppv_lite86","types","Vector"],"kind":"trait"},"1:3903:12876":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:4103:13607":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:15313:10071":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"22:206:2752":{"crate_id":22,"path":["ppv_lite86","types","Vec4"],"kind":"trait"},"6:1671:11068":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"16:542:8704":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"15:0:2838":{"crate_id":15,"path":["addr2line"],"kind":"module"},"5:4087:9127":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:14986:10006":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:11042:12608":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:2010:785":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"2:6966:11988":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"6:1628:11042":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"5:4162:8529":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:44091:12224":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:8485:9044":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"16:7570:10368":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:12408:8658":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:7931:27079":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"16:3669:9325":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"20:178:2447":{"crate_id":20,"path":["rand_core","block","BlockRng"],"kind":"struct"},"17:13455:9619":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"16:6749:10518":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"16:6335:8717":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:9207:12482":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:5779:13685":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"5:1509:8381":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:42113:8529":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"5:3674:8529":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"11:772:8821":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:46980:12387":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"6:1585:11009":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"12:0:2836":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:1107:12754":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:40465:12121":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"22:1495:8496":{"crate_id":22,"path":["ppv_lite86","x86_64","YesS3"],"kind":"struct"},"6:8006:11897":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:16235:10327":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"2:47083:12389":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:3841:13590":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:12464:21618":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:42096:173":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"5:1570:8825":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:8099:12911":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:11051:12609":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"16:7111:10572":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:10710:12603":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"5:2302:33311":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:4333:13632":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"21:3552:35175":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Invariants"],"kind":"trait"},"1:11769:25966":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:15023:10013":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:13046:9548":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"5:743:118":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:15473:10116":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"6:5407:1243":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:4986:12599":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"1:4672:13636":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:40816:12138":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:40390:12115":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:32300:12105":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:46858:12385":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:871:8528":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:8263:12915":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"16:4718:10388":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:1922:12856":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"7:32:20399":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:44565:12258":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"6:1485:10952":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:2965:144":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:14414:9813":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"16:5037:10399":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:13497:9624":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:40641:12131":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"16:6098:21423":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:491:10890":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"6:4897:11169":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:44243:12233":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"16:5914:8732":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:42005:12184":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:10997:9419":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"20:22:2449":{"crate_id":20,"path":["rand_core","block","CryptoBlockRng"],"kind":"trait"},"2:3828:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:3667:13929":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:23227:12034":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"6:570:10939":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:12089:9484":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:12289:9489":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:3597:12597":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"16:7473:8714":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:5244:11297":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:10759:14223":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"17:12399:9507":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"1:1974:12857":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:3206:117":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:4721:221":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"16:6665:21427":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:21741:13546":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"17:14968:10001":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:38220:14138":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"5:6055:8836":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"6:8029:11909":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:3262:13730":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:43303:9005":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"22:1111:8589":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","u32x4_sse2"],"kind":"struct"},"17:11702:9440":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"21:0:2974":{"crate_id":21,"path":["zerocopy"],"kind":"module"},"6:8306:11923":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:16176:10316":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"17:10457:138":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"18:548:153":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:949:8824":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"5:7573:8834":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:41314:12162":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:11743:9444":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"5:7641:12787":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"17:9886:21489":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:22677:13816":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"2:9857:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"6:5536:11427":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:5089:13655":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:2067:1358":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:14051:9740":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"21:942:8598":{"crate_id":21,"path":["zerocopy","byteorder","U16"],"kind":"struct"},"2:43328:157":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"18:623:34973":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:47226:8346":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:12370:966":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:45983:12293":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"6:5457:11401":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:4603:8845":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:6504:10479":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"17:15678:10193":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:11239:11989":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"16:5700:10362":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"6:4870:11157":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"18:735:25678":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:46486:12344":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"5:6180:12489":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:9294:12929":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:42171:13451":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:41332:12165":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:9420:235":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"6:6721:11674":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"2:2956:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"17:12278:12665":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:12127:9486":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:42652:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:22577:31953":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"6:5370:11348":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"6:559:10934":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:9176:12928":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"5:7675:12788":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:2313:138":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"16:2374:10338":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:7412:11801":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:10943:12501":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"21:535:25703":{"crate_id":21,"path":["zerocopy","KnownLayout"],"kind":"trait"},"6:7584:11887":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:15383:10093":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"22:1205:8596":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","u64x2_sse2"],"kind":"struct"},"2:3092:12793":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"6:6706:11669":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"17:15778:10216":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:5965:12894":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:5277:11316":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:7995:12408":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:12584:12604":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"16:5400:8625":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:944:12755":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:10759:8629":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:11473:12223":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"6:8282:11919":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:6478:11553":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"13:229:8783":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:46213:2800":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"15:327:8779":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:46310:12320":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"6:5415:11371":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"11:2301:10575":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"2:30690:11961":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:5515:128":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"5:5426:33747":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:23271:12038":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"1:8494:12453":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:3559:12489":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:43562:12207":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"16:2548:10346":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:12346:471":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"6:5344:11337":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"1:9726:12912":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"6:5423:11376":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"1:8255:12914":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:2635:12862":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:12175:12654":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"6:5320:11332":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:46257:12317":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"11:2380:8528":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"17:10317:8648":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:12225:12661":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:2342:11970":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"5:2220:11937":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"6:5472:11410":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"17:11730:9443":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"22:241:3009":{"crate_id":22,"path":["ppv_lite86","types","u32x4x2"],"kind":"trait"},"1:11291:162":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"2:21920:13735":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:13387:9604":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:12264:12664":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:3436:12872":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"16:3029:9320":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"16:6026:8700":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:13146:9562":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:44707:12272":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"21:122:9273":{"crate_id":21,"path":["zerocopy","pointer","ptr","def","Ptr"],"kind":"struct"},"1:10922:12492":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"2:10391:8445":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:7715:13958":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"17:9755:21469":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:4485:13844":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:13922:9723":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:46935:12386":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:10389:128":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"17:12659:12672":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"2:44466:12251":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:43854:12833":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:46103:12303":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:40760:8847":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:14079:9744":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"16:6120:21424":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:8630:12922":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:11832:12877":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"16:7727:8771":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:4694:13637":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"5:1478:8528":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"16:6047:12682":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"6:5031:11236":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:10612:12601":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"5:3039:8438":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:16165:10311":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"1:8036:9453":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"22:1445:9272":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","avx2","u32x4x2_avx2"],"kind":"struct"},"1:9456:12490":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"5:2249:8827":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:16259:9604":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"1:5168:13662":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"21:1183:8600":{"crate_id":21,"path":["zerocopy","byteorder","U32"],"kind":"struct"},"1:12358:754":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"11:2495:20488":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"1:12362:897":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"16:6480:8756":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"20:109:25688":{"crate_id":20,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"17:12724:21495":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:8183:9363":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:10622:34960":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"5:7589:11953":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"5:3222:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:11269:21523":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"17:14325:9798":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:13089:9552":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"6:4932:11186":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"16:8313:137":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"6:8328:11928":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"16:6813:10532":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"16:2323:20560":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"16:7799:8775":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:6037:9024":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"18:96:25669":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:21910:13546":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:13774:9698":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"5:7629:11958":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:2731:112":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"17:13024:21498":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"21:1826:8603":{"crate_id":21,"path":["zerocopy","byteorder","Usize"],"kind":"struct"},"6:6542:11587":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:40931:12149":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:23034:31400":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:6268:8851":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"16:6278:8733":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"22:885:2744":{"crate_id":22,"path":["ppv_lite86","dispatch_light128"],"kind":"macro"},"5:7547:11952":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:12150:9487":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:44418:12249":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:4981:12882":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:5447:203":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:42691:9004":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"14:160:12738":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:33603:13731":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:6077:12489":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:21743:13738":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"17:13363:9600":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:12201:12659":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"6:6746:11679":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"2:40426:12117":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"6:6379:11496":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"16:5107:10401":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"6:5174:11262":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"22:253:2794":{"crate_id":22,"path":["ppv_lite86","types","u32x4x4"],"kind":"trait"},"2:44119:12226":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"18:491:9284":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:12132:27073":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:9134:9021":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:12373:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"20:76:137":{"crate_id":20,"path":["rand_core","error","Error"],"kind":"struct"},"16:3329:10370":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:44893:219":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"5:6941:13914":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"3:234:226":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"5:2322:8830":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"16:2438:10341":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:3486:13573":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:11219:12480":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:8251:14114":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"16:7559:10635":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"14:0:2837":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:3460:142":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:11324:12618":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:14066:9743":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"11:2566:11952":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:6543:10482":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:45936:12290":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:46648:12348":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:3667:13544":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:10981:12453":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"1:5844:12405":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:40769:8850":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:15635:10177":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:15701:10194":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"6:5630:11473":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2:2132:14162":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:6718:9032":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"14:7:12738":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"16:5722:10364":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"21:760:25712":{"crate_id":21,"path":["zerocopy","ByteSliceMut"],"kind":"trait"},"2:39623:13480":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:22351:13546":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"22:1569:2746":{"crate_id":22,"path":["ppv_lite86","x86_64","vec128_storage"],"kind":"union"},"2:43915:12210":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"22:220:2749":{"crate_id":22,"path":["ppv_lite86","types","LaneWords4"],"kind":"trait"},"17:10954:21504":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:47191:8343":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:23092:13605":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:8247:14115":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"16:6353:8748":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:13424:9610":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"16:6927:10551":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:12074:13877":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"17:15039:10016":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:13606:9656":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:12711:137":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:5296:11324":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"16:860:12679":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"2:44711:12273":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:4561:12881":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"22:178:2747":{"crate_id":22,"path":["ppv_lite86","types","ArithOps"],"kind":"trait"},"2:22961:31440":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:12981:13881":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:44772:14256":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:44268:12124":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:15410:10100":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:15342:10079":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:10857:32437":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"5:6782:33747":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:12900:8665":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:32275:12821":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:8731:9133":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:32233:10797":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"17:13412:9609":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:10877:12605":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:32279:10628":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"6:5617:11467":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"1:4223:13616":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"5:3648:182":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:31096:8364":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:3610:12875":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:10962:139":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"1:5602:12886":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:39627:12108":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"5:1369:12754":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:3204:8457":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"20:186:2989":{"crate_id":20,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"1:2495:13541":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"6:5052:11245":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:40807:12137":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:10155:8624":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"1:8802:12474":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:36344:10595":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:22705:13817":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"17:15596:10166":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:12350:335":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"11:2366:12760":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"1:3300:30871":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:8247:11911":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:9531:12803":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"6:5665:11487":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:13594:9653":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"16:3778:10373":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"17:12213:12660":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:21796:13734":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"5:734:250":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"16:6560:8757":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:5588:12884":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:9438:162":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:12443:9510":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:4462:109":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:39715:214":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"16:7528:10631":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:11614:12950":{"crate_id":1,"path":["std","sys","thread_local","fast_local","Key"],"kind":"struct"},"2:42121:8381":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"16:7397:34950":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:2609:14152":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"2:10358:143":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:43084:31415":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"17:11392:12623":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:44881:12278":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"11:842:13463":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"22:176:2997":{"crate_id":22,"path":["ppv_lite86","types","BSwap"],"kind":"trait"},"16:7813:10640":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"11:830:12755":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:23194:12031":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"1:9329:9029":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"9:178:8806":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"5:2770:11945":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:10999:31032":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:12372:1419":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:5565:11441":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:15333:10078":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"22:892:8585":{"crate_id":22,"path":["ppv_lite86","soft","x2"],"kind":"struct"},"1:5112:13657":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"1:3065:226":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"1:5958:12890":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"6:1723:11090":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:2709:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"22:1593:2995":{"crate_id":22,"path":["ppv_lite86","x86_64","vec512_storage"],"kind":"union"},"6:473:10882":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:23113:13546":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"9:330:10840":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:12366:1834":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:1098:12588":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:44952:12279":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:46050:12300":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"16:6160:20533":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"6:4924:11184":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"22:1560:8492":{"crate_id":22,"path":["ppv_lite86","x86_64","Avx2Machine"],"kind":"struct"},"17:14372:9805":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"16:5756:12680":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"1:915:8823":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:7366:26642":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:5638:12888":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"16:2838:10359":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"6:4800:11105":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"18:507:9285":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:11812:12643":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"7:0:1902":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:4819:11795":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"16:867:12584":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"2:33670:14133":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:14489:9828":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:15078:10017":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:32286:12822":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"6:5146:11260":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:12328:9496":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:11799:12641":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:16093:10293":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"2:39785:12823":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:22193:13546":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"2:5265:435":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:12955:13884":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"17:2037:12590":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:40869:12144":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"6:523:10913":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:12347:1874":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"14:220:10781":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:5098:13656":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"17:11189:9423":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:8018:12409":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"16:7321:8520":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"18:765:25679":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:11715:9441":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"2:11432:12806":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"11:798:9127":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"5:1493:8529":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:3287:13846":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:0:1714":{"crate_id":1,"path":["std"],"kind":"module"},"18:531:9287":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:46553:12345":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:40589:12128":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"2:26123:267":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:6799:13697":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:10419:8651":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"16:6802:10531":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:986:12749":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:41290:12159":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"6:5557:11439":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"5:7665:11959":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"16:2338:10336":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"22:299:2751":{"crate_id":22,"path":["ppv_lite86","types","StoreBytes"],"kind":"trait"},"2:39579:13850":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"22:296:3015":{"crate_id":22,"path":["ppv_lite86","types","Store"],"kind":"trait"},"17:10350:8649":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:11909:9050":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"5:4451:33762":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"6:6880:11717":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:6519:11574":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:4992:11214":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"6:7348:11773":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:43945:12215":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:10517:25965":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"2:23183:12030":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"18:0:2841":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:12107:8629":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:39978:13962":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"21:2780:8607":{"crate_id":21,"path":["zerocopy","byteorder","I128"],"kind":"struct"},"1:6183:12405":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:11497:12626":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"16:7686:12733":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:6922:233":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"6:4909:11178":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"13:0:2830":{"crate_id":13,"path":["std_detect"],"kind":"module"},"5:7066:264":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:10403:8452":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:47154:12391":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:6972:11987":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"17:11293:21524":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"5:3258:10790":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:7716:13959":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:10982:21505":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:22551:13546":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"16:5385:8624":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:11089:12611":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:675:12847":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"6:1621:11038":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"16:7888:10652":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"21:553:25705":{"crate_id":21,"path":["zerocopy","FromZeros"],"kind":"trait"},"17:11166:9421":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:16198:10318":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"2:47290:8350":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:2801:195":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"20:140:2452":{"crate_id":20,"path":["rand_core","SeedableRng"],"kind":"trait"},"5:6573:9127":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"22:263:2750":{"crate_id":22,"path":["ppv_lite86","types","MultiLane"],"kind":"trait"},"11:1907:10790":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"13:110:8509":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"6:6821:11705":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:39655:210":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:10044:21493":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"11:2121:10575":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"16:5817:8722":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:4883:13658":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"16:8155:10698":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"16:4641:10387":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:2003:13510":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"17:15569:10154":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:12365:1852":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"6:6447:11540":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"}},"external_crates":{"20":{"name":"rand_core","html_root_url":"https://rust-random.github.io/rand/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"ppv_lite86","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"zerocopy","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":29}