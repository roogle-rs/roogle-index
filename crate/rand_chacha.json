{"root":"0:0:1966","crate_version":"0.9.0-alpha.1","includes_private":false,"index":{"2:13224:32993":{"id":"2:13224:32993","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12325:458","self::pattern":"2:12812:13547"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13155:32981":{"id":"2:13155:32981","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43643:11917","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:214:1957":{"id":"0:214:1957","crate_id":0,"name":"ChaCha12Rng","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:178:2080","`RngCore`":"20:133:2084"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:186","a:2:3146:8141-0:214:1957","a:2:41612:13333-0:214:1957","a:2:3111:246-0:214:1957","a:2:32053:2616-0:214:1957","a:2:31996:236-0:214:1957","a:2:41611:13116-0:214:1957","b:2:3727-0:214:1957","b:2:2898-0:214:1957","b:2:2892-0:214:1957","b:2:2615-0:214:1957","b:2:2618-0:214:1957","b:2:2903-0:214:1957","b:2:2888-0:214:1957","b:5:727-0:214:1957","b:22:270-0:214:1957","0:177","0:181","0:216","0:198","0:218","0:196","0:193","0:194"]}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2670:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2907:1755":{"id":"2:2907:1755","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41630:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2872:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148":{"id":"0:148","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2631:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:149:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:94:1963":{"id":"0:94:1963","crate_id":0,"name":"ChaChaRng","span":{"filename":"src/lib.rs","begin":[32,0],"end":[32,33]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"0:19:2094":{"id":"0:19:2094","crate_id":0,"name":"Array64","span":{"filename":"src/chacha.rs","begin":[27,0],"end":[27,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:22:2082","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13123:8058":{"id":"2:13123:8058","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2898-0:205:1956":{"id":"b:2:2898-0:205:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2872:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2868:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2901:136","2:2902:1757"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2670:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13142:32979":{"id":"2:13142:32979","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12331:1672","str::slice_mut_unchecked":"2:13143:32980","crate::ops::Index":"2:39126:13145"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:2151":{"id":"0:119:2151","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5604:33694":{"id":"5:5604:33694","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:295:2617","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:295:2617","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:140:2085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:104:2109","0:106:2110"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:279:678":{"id":"0:279:678","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:22:270-0:214:1957":{"id":"b:22:270-0:214:1957","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2386","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:2651","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25410"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:149:462":{"id":"0:149:462","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2888-0:146:1959":{"id":"b:2:2888-0:146:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2865:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2862:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2891:2155"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:168:172":{"id":"0:168:172","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:191:2188":{"id":"0:191:2188","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41611:13116-0:146:1959":{"id":"a:2:41611:13116-0:146:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41611:13116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:41612:13333-0:282:1961":{"id":"a:2:41612:13333-0:282:1961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41612:13333","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:119:2151","0:120:2167","0:121:2180","0:122:2185","0:123:2188"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:95:1965":{"id":"0:95:1965","crate_id":0,"name":"ChaChaCore","span":{"filename":"src/lib.rs","begin":[34,0],"end":[34,35]},"visibility":"public","docs":"ChaCha with 20 rounds, low-level interface","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"b:2:2903-0:205:1956":{"id":"b:2:2903-0:205:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2862:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2872:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2906:136","2:2907:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5611:33696":{"id":"5:5611:33696","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7632:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:237:2105":{"id":"0:237:2105","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:19:2094","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"2:2617:2571":{"id":"2:2617:2571","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:22:270-0:273:1960":{"id":"b:22:270-0:273:1960","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2386","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:2651","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25410"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:234:780":{"id":"0:234:780","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10221:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10202:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:93-0:282:1961":{"id":"0:93-0:282:1961","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,71],"end":[28,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Rng","name":"ChaCha8Rng","id":"0:282:1961","glob":false}}},"2:13163:25952":{"id":"2:13163:25952","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12325:458","self::pattern":"2:12812:13547"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12833:13545","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:240:2109":{"id":"0:240:2109","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:43-22:274:2381":{"id":"0:43-22:274:2381","crate_id":0,"name":null,"span":{"filename":"src/guts.rs","begin":[14,0],"end":[14,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"ppv_lite86::Machine","name":"Machine","id":"22:274:2381","glob":false}}},"0:125":{"id":"0:125","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:139:2083","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31998:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3111:246-0:214:1957":{"id":"a:2:3111:246-0:214:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3111:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13189:25944":{"id":"2:13189:25944","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12325:458","self::pattern":"2:12812:13547","str::rsplitn":"2:13192:25946"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43483:11908","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41612:13333-0:146:1959":{"id":"a:2:41612:13333-0:146:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41612:13333","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:140:2085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:246:2109","0:248:2110"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:41612:13333-0:137:1958":{"id":"a:2:41612:13333-0:137:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41612:13333","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13239:32996":{"id":"2:13239:32996","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12325:458","self::pattern":"2:12812:13547"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12833:13545","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:276:462":{"id":"0:276:462","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41611:13116-0:137:1958":{"id":"a:2:41611:13116-0:137:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41611:13116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:235":{"id":"0:235","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:2081","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:236:172","0:237:2105","0:238:2106"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:2081","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:100:172","0:101:2105","0:102:2106"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2892-0:214:1957":{"id":"b:2:2892-0:214:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2865:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2894:810"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2906:136":{"id":"2:2906:136","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:31924:10481","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:128":{"id":"0:128","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2665:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:129:678"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:41611:13116-0:273:1960":{"id":"a:2:41611:13116-0:273:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41611:13116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13133:25909":{"id":"2:13133:25909","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12342:1800"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176":{"id":"0:176","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:22:2082","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:184:2143":{"id":"0:184:2143","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3727-0:214:1957":{"id":"b:2:3727-0:214:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31997:2615","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3725:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3729:1770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13245:25797":{"id":"2:13245:25797","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39481:13624","Self::is_ascii":"2:13244:25796"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41517:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39481:13624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13157:25950":{"id":"2:13157:25950","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12325:458","self::pattern":"2:12812:13547"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:236:172":{"id":"0:236:172","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"2:2891:2155":{"id":"2:2891:2155","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2865:143"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:2180":{"id":"0:121:2180","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:92-0:273:1960":{"id":"0:92-0:273:1960","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,58],"end":[28,69]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Core","name":"ChaCha8Core","id":"0:273:1960","glob":false}}},"2:13221:32992":{"id":"2:13221:32992","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12325:458","self::pattern":"2:12812:13547"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12838:13544","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112:2110":{"id":"0:112:2110","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2085","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3111:246-0:205:1956":{"id":"a:2:3111:246-0:205:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3111:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:120:2167":{"id":"0:120:2167","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:102:2106":{"id":"0:102:2106","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:2081","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:462":{"id":"0:208:462","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31998:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:242:2110":{"id":"0:242:2110","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2085","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:100:172":{"id":"0:100:172","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:116:2143":{"id":"0:116:2143","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:114:2141":{"id":"0:114:2141","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2892-0:146:1959":{"id":"b:2:2892-0:146:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2865:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2894:810"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:150":{"id":"0:150","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10247:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:151:780"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10247:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:98:780"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3146:8141-0:282:1961":{"id":"a:2:3146:8141-0:282:1961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3146:8141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:181":{"id":"0:181","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["read_adapter"],"trait":{"name":"RngCore","id":"20:133:2084","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:182:2141","0:183:2142","0:184:2143","0:185:2145"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2892-0:282:1961":{"id":"b:2:2892-0:282:1961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2865:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2894:810"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:137:1958":{"id":"0:137:1958","crate_id":0,"name":"ChaCha20Core","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:3146:8141-0:137:1958","a:2:41612:13333-0:137:1958","a:2:3111:246-0:137:1958","a:2:32053:2616-0:137:1958","a:2:31996:236-0:137:1958","a:2:41611:13116-0:137:1958","b:2:3727-0:137:1958","b:2:2898-0:137:1958","b:2:2892-0:137:1958","b:2:2615-0:137:1958","b:2:2618-0:137:1958","b:2:2903-0:137:1958","b:2:2888-0:137:1958","b:5:727-0:137:1958","b:22:270-0:137:1958","0:108","0:139","0:141","0:142","0:99","0:103","0:126","0:97","0:144"]}}},"b:2:3727-0:146:1959":{"id":"b:2:3727-0:146:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31997:2615","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3725:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3729:1770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2888-0:205:1956":{"id":"b:2:2888-0:205:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2865:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2862:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2891:2155"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:187:2151":{"id":"0:187:2151","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2618-0:273:1960":{"id":"b:2:2618-0:273:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31997:2615","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2612:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2620:25404"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5619:33697":{"id":"5:5619:33697","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7632:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219:780":{"id":"0:219:780","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10221:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10202:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:729:8119":{"id":"5:729:8119","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"a:2:32053:2616-0:205:1956":{"id":"a:2:32053:2616-0:205:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32053:2616","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32053:2616-0:146:1959":{"id":"a:2:32053:2616-0:146:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32053:2616","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2631:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:276:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:88-0:205:1956":{"id":"0:88-0:205:1956","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,4],"end":[28,16]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Core","name":"ChaCha12Core","id":"0:205:1956","glob":false}}},"2:13152:31332":{"id":"2:13152:31332","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13153:31305"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43653:11918","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180:2110":{"id":"0:180:2110","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2085","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:263:810":{"id":"0:263:810","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13138:25907":{"id":"2:13138:25907","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10903:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10903:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31996:236-0:214:1957":{"id":"a:2:31996:236-0:214:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31996:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:110:2109":{"id":"0:110:2109","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:140:462":{"id":"0:140:462","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2631:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:285:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3146:8141-0:214:1957":{"id":"a:2:3146:8141-0:214:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3146:8141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2618-0:205:1956":{"id":"b:2:2618-0:205:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31997:2615","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2612:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2620:25404"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2615-0:137:1958":{"id":"b:2:2615-0:137:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31997:2615","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2609:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2617:2571"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:177":{"id":"0:177","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:140:2085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:178:2109","0:180:2110"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2888-0:282:1961":{"id":"b:2:2888-0:282:1961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2865:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2862:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2891:2155"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2618-0:282:1961":{"id":"b:2:2618-0:282:1961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31997:2615","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2612:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2620:25404"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3729:1770":{"id":"2:3729:1770","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39295:11797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:172:2109":{"id":"0:172:2109","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"2:13145:25933":{"id":"2:13145:25933","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13144:25932","str::split_at_mut_checked":"2:13147:25937"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13198:25949":{"id":"2:13198:25949","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41517:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12833:13545","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31998:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["read_adapter"],"trait":{"name":"RngCore","id":"20:133:2084","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:114:2141","0:115:2142","0:116:2143","0:117:2145"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:285:462":{"id":"0:285:462","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:731:8121":{"id":"5:731:8121","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13147:25937":{"id":"2:13147:25937","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13146:25936"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41517:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2865:143","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:263:810"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2898-0:146:1959":{"id":"b:2:2898-0:146:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2872:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2868:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2901:136","2:2902:1757"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:41612:13333-0:214:1957":{"id":"a:2:41612:13333-0:214:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41612:13333","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:31996:236-0:282:1961":{"id":"a:2:31996:236-0:282:1961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31996:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13213:32987":{"id":"2:13213:32987","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13215:32988":{"id":"2:13215:32988","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:727-0:205:1956":{"id":"b:5:727-0:205:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2631:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:723:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:729:8119","5:730:8120","5:731:8121"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:165":{"id":"0:165","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10247:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:166:780"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5621:13242":{"id":"5:5621:13242","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7632:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:170:2106":{"id":"0:170:2106","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:2081","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:187:2151","0:188:2167","0:189:2180","0:190:2185","0:191:2188"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2670:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13207:32985":{"id":"2:13207:32985","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12812:13547","`DoubleEndedIterator`":"2:8205:129","prim@char":"1:12325:458","str::rmatch_indices":"2:13210:32986"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43529:11911","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13154:28429":{"id":"2:13154:28429","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43633:11916","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5623:27193":{"id":"5:5623:27193","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13248:25801"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3146:8141-0:205:1956":{"id":"a:2:3146:8141-0:205:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3146:8141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2898-0:137:1958":{"id":"b:2:2898-0:137:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2872:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2868:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2901:136","2:2902:1757"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:122:2185":{"id":"0:122:2185","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3111:246-0:137:1958":{"id":"a:2:3111:246-0:137:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3111:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:185:2145":{"id":"0:185:2145","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41630:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:76:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10247:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:780"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:22:270-0:282:1961":{"id":"b:22:270-0:282:1961","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2386","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:2651","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25410"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:251:2142":{"id":"0:251:2142","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:246:2109":{"id":"0:246:2109","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"b:2:2615-0:146:1959":{"id":"b:2:2615-0:146:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31997:2615","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2609:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2617:2571"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3111:246-0:282:1961":{"id":"a:2:3111:246-0:282:1961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3111:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:90-0:137:1958":{"id":"0:90-0:137:1958","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,31],"end":[28,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Core","name":"ChaCha20Core","id":"0:137:1958","glob":false}}},"2:13217:32989":{"id":"2:13217:32989","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257:2180":{"id":"0:257:2180","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2670:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:239":{"id":"0:239","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:140:2085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:240:2109","0:242:2110"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13144:25932":{"id":"2:13144:25932","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13146:25936","str::split_at_mut":"2:13145:25933"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2892-0:205:1956":{"id":"b:2:2892-0:205:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2865:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2894:810"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13156:31348":{"id":"2:13156:31348","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43671:11920","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13134:25905":{"id":"2:13134:25905","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41519:190"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41517:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10903:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10903:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2888-0:273:1960":{"id":"b:2:2888-0:273:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2865:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2862:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2891:2155"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:123:2188":{"id":"0:123:2188","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258:2185":{"id":"0:258:2185","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:287:780":{"id":"0:287:780","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10221:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10202:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2898-0:214:1957":{"id":"b:2:2898-0:214:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2872:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2868:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2901:136","2:2902:1757"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13233:32994":{"id":"2:13233:32994","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12325:458","self::pattern":"2:12812:13547"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12833:13545","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:2145":{"id":"0:253:2145","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41630:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:76:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32053:2616-0:282:1961":{"id":"a:2:32053:2616-0:282:1961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32053:2616","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:189:2180":{"id":"0:189:2180","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3111:246-0:273:1960":{"id":"a:2:3111:246-0:273:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3111:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:31996:236-0:205:1956":{"id":"a:2:31996:236-0:205:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31996:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:41612:13333-0:273:1960":{"id":"a:2:41612:13333-0:273:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41612:13333","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13131:32978":{"id":"2:13131:32978","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:2894:810":{"id":"2:2894:810","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41612:13333-0:205:1956":{"id":"a:2:41612:13333-0:205:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41612:13333","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:188:2167":{"id":"0:188:2167","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13246:25799":{"id":"2:13246:25799","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:151:780":{"id":"0:151:780","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10221:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10202:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2892-0:137:1958":{"id":"b:2:2892-0:137:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2865:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2894:810"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13127:32977":{"id":"2:13127:32977","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13125:32976"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:142":{"id":"0:142","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2665:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:143:678"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:143:678":{"id":"0:143:678","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:146:1959":{"id":"0:146:1959","crate_id":0,"name":"ChaCha20Rng","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:178:2080","`RngCore`":"20:133:2084"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:118","a:2:3146:8141-0:146:1959","a:2:41612:13333-0:146:1959","a:2:3111:246-0:146:1959","a:2:32053:2616-0:146:1959","a:2:31996:236-0:146:1959","a:2:41611:13116-0:146:1959","b:2:3727-0:146:1959","b:2:2898-0:146:1959","b:2:2892-0:146:1959","b:2:2615-0:146:1959","b:2:2618-0:146:1959","b:2:2903-0:146:1959","b:2:2888-0:146:1959","b:5:727-0:146:1959","b:22:270-0:146:1959","0:125","0:128","0:130","0:148","0:113","0:126","0:109","0:150"]}}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2865:143","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:195:810"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:265:678":{"id":"0:265:678","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13183:32982":{"id":"2:13183:32982","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12812:13547","str::split":"2:13174:25938","prim@char":"1:12325:458","`DoubleEndedIterator`":"2:8205:129","str::rsplit_terminator":"2:13186:32983"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43429:11905","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5620:33698":{"id":"5:5620:33698","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:295:2617","`String`":"5:7632:242"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:295:2617","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2618-0:214:1957":{"id":"b:2:2618-0:214:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31997:2615","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2612:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2620:25404"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:193":{"id":"0:193","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:139:2083","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13170:8057":{"id":"2:13170:8057","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41519:190","prim@char":"1:12325:458","self::pattern":"2:12812:13547"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41517:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12833:13545","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:727-0:146:1959":{"id":"b:5:727-0:146:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2631:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:723:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:729:8119","5:730:8120","5:731:8121"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:140:2085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:110:2109","0:112:2110"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13210:32986":{"id":"2:13210:32986","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12812:13547","`DoubleEndedIterator`":"2:8205:129","prim@char":"1:12325:458","str::match_indices":"2:13207:32985"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43547:11912","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12833:13545","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2902:1757":{"id":"2:2902:1757","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41630:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2872:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3727-0:282:1961":{"id":"b:2:3727-0:282:1961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31997:2615","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3725:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3729:1770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:196":{"id":"0:196","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2665:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:197:678"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:249":{"id":"0:249","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["read_adapter"],"trait":{"name":"RngCore","id":"20:133:2084","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:250:2141","0:251:2142","0:252:2143","0:253:2145"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:41611:13116-0:282:1961":{"id":"a:2:41611:13116-0:282:1961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41611:13116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13255:32999":{"id":"2:13255:32999","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4904:32999"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43696:11807","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2631:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:217:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2903-0:214:1957":{"id":"b:2:2903-0:214:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2862:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2872:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2906:136","2:2907:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13204:32984":{"id":"2:13204:32984","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12812:13547","`DoubleEndedIterator`":"2:8205:129","prim@char":"1:12325:458","str::matches":"2:13201:2586"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43601:11915","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12833:13545","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:205:1956":{"id":"0:205:1956","crate_id":0,"name":"ChaCha12Core","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"ChaCha with 12 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:3146:8141-0:205:1956","a:2:41612:13333-0:205:1956","a:2:3111:246-0:205:1956","a:2:32053:2616-0:205:1956","a:2:31996:236-0:205:1956","a:2:41611:13116-0:205:1956","b:2:3727-0:205:1956","b:2:2898-0:205:1956","b:2:2892-0:205:1956","b:2:2615-0:205:1956","b:2:2618-0:205:1956","b:2:2903-0:205:1956","b:2:2888-0:205:1956","b:5:727-0:205:1956","b:22:270-0:205:1956","0:167","0:210","0:212","0:171","0:207","0:209","0:194","0:165","0:176"]}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:22:2082","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13121":{"id":"2:13121","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13122:974","2:13123:8058","2:13124:32975","2:13125:32976","2:13127:32977","2:13130:25875","2:13131:32978","2:13132:334","2:13133:25909","2:13134:25905","2:13136:25906","2:13138:25907","2:13140:25908","2:13142:32979","2:13143:32980","2:13144:25932","2:13145:25933","2:13146:25936","2:13147:25937","2:13149:11921","2:13150:11932","2:13151:2144","2:13152:31332","2:13153:31305","2:13154:28429","2:13155:32981","2:13156:31348","2:13157:25950","2:13160:25951","2:13163:25952","2:13166:8099","2:13170:8057","2:13174:25938","2:13177:25940","2:13180:25942","2:13183:32982","2:13186:32983","2:13189:25944","2:13192:25946","2:13195:25948","2:13198:25949","2:13201:2586","2:13204:32984","2:13207:32985","2:13210:32986","2:13213:32987","2:13215:32988","2:13217:32989","2:13219:32990","2:13220:32991","2:13221:32992","2:13224:32993","2:13227:25452","2:13230:25953","2:13233:32994","2:13236:32995","2:13239:32996","2:13242:32997","2:13244:25796","2:13245:25797","2:13246:25799","2:13247:25800","2:13248:25801","2:13249:25803","2:13250:25804","2:13251:25805","2:13252:32998","2:13254:13108","2:13255:32999"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13136:25906":{"id":"2:13136:25906","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41519:190"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41517:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10903:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10903:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183:2142":{"id":"0:183:2142","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2892-0:273:1960":{"id":"b:2:2892-0:273:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2865:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2894:810"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:106:2110":{"id":"0:106:2110","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2085","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:255:2151":{"id":"0:255:2151","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13160:25951":{"id":"2:13160:25951","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12325:458","self::pattern":"2:12812:13547"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:727-0:214:1957":{"id":"b:5:727-0:214:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2631:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:723:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:729:8119","5:730:8120","5:731:8121"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:0:1966":{"id":"0:0:1966","crate_id":0,"name":"rand_chacha","span":{"filename":"src/lib.rs","begin":[9,0],"end":[34,35]},"visibility":"public","docs":"The ChaCha random number generator.","links":{},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\", html_favicon_url\n= \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://rust-random.github.io/rand/\")]","#![forbid(unsafe_code)]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:3-20:0:1953","0:88-0:205:1956","0:89-0:214:1957","0:90-0:137:1958","0:91-0:146:1959","0:92-0:273:1960","0:93-0:282:1961","0:94:1963","0:95:1965"],"is_stripped":false}}},"a:2:32053:2616-0:137:1958":{"id":"a:2:32053:2616-0:137:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32053:2616","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:233":{"id":"0:233","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10247:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:234:780"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2865:143","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:127:810"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13146:25936":{"id":"2:13146:25936","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13147:25937"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41517:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13250:25804":{"id":"2:13250:25804","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:980:38710"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2620:25404":{"id":"2:2620:25404","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32053:2616-0:214:1957":{"id":"a:2:32053:2616-0:214:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32053:2616","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:195:810":{"id":"0:195:810","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:130":{"id":"0:130","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2670:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13230:25953":{"id":"2:13230:25953","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12325:458","self::pattern":"2:12812:13547"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41517:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12833:13545","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3727-0:137:1958":{"id":"b:2:3727-0:137:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31997:2615","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3725:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3729:1770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13177:25940":{"id":"2:13177:25940","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12325:458","self::pattern":"2:12812:13547"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12628:11677","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2618-0:137:1958":{"id":"b:2:2618-0:137:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31997:2615","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2612:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2620:25404"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2665:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:211:678"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13242:32997":{"id":"2:13242:32997","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12773:135","`FromStr`":"2:12772:13191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41630:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12772:13191","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12772:13191","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5622:27192":{"id":"5:5622:27192","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13247:25800"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:101:2105":{"id":"0:101:2105","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:19:2094","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"0:139":{"id":"0:139","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2631:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:140:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2898-0:273:1960":{"id":"b:2:2898-0:273:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2872:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2868:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2901:136","2:2902:1757"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:273:1960":{"id":"0:273:1960","crate_id":0,"name":"ChaCha8Core","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"ChaCha with 8 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:3146:8141-0:273:1960","a:2:41612:13333-0:273:1960","a:2:3111:246-0:273:1960","a:2:32053:2616-0:273:1960","a:2:31996:236-0:273:1960","a:2:41611:13116-0:273:1960","b:2:3727-0:273:1960","b:2:2898-0:273:1960","b:2:2892-0:273:1960","b:2:2615-0:273:1960","b:2:2618-0:273:1960","b:2:2903-0:273:1960","b:2:2888-0:273:1960","b:5:727-0:273:1960","b:22:270-0:273:1960","0:275","0:278","0:277","0:235","0:239","0:262","0:280","0:244","0:233"]}}},"0:182:2141":{"id":"0:182:2141","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:727-0:282:1961":{"id":"b:5:727-0:282:1961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2631:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:723:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:729:8119","5:730:8120","5:731:8121"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13219:32990":{"id":"2:13219:32990","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:89-0:214:1957":{"id":"0:89-0:214:1957","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,18],"end":[28,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Rng","name":"ChaCha12Rng","id":"0:214:1957","glob":false}}},"b:22:270-0:146:1959":{"id":"b:22:270-0:146:1959","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2386","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:2651","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25410"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:127:810":{"id":"0:127:810","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:256:2167":{"id":"0:256:2167","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13195:25948":{"id":"2:13195:25948","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41517:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31996:236-0:273:1960":{"id":"a:2:31996:236-0:273:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31996:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3-20:0:1953":{"id":"0:3-20:0:1953","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[22,0],"end":[22,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"rand_core","name":"rand_core","id":"20:0:1953","glob":false}}},"0:169:2105":{"id":"0:169:2105","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:19:2094","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"0:91-0:146:1959":{"id":"0:91-0:146:1959","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,45],"end":[28,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Rng","name":"ChaCha20Rng","id":"0:146:1959","glob":false}}},"0:211:678":{"id":"0:211:678","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2665:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:265:678"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13227:25452":{"id":"2:13227:25452","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12325:458","self::pattern":"2:12812:13547"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41517:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:167":{"id":"0:167","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:2081","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:168:172","0:169:2105","0:170:2106"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:248:2110":{"id":"0:248:2110","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2085","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3146:8141-0:137:1958":{"id":"a:2:3146:8141-0:137:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3146:8141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13150:11932":{"id":"2:13150:11932","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12325:458"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43355:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13248:25801":{"id":"2:13248:25801","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:780":{"id":"0:98:780","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10221:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10202:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:166:780":{"id":"0:166:780","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10221:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10202:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:197:678":{"id":"0:197:678","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2615-0:282:1961":{"id":"b:2:2615-0:282:1961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31997:2615","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2609:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2617:2571"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2888-0:137:1958":{"id":"b:2:2888-0:137:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2865:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2862:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2891:2155"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:178:2109":{"id":"0:178:2109","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"b:2:2903-0:137:1958":{"id":"b:2:2903-0:137:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2862:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2872:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2906:136","2:2907:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13151:2144":{"id":"2:13151:2144","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43365:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13192:25946":{"id":"2:13192:25946","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12325:458","str::splitn":"2:13189:25944","self::pattern":"2:12812:13547"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43501:11909","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12833:13545","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13247:25800":{"id":"2:13247:25800","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2901:136":{"id":"2:2901:136","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2872:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"22:273:25410":{"id":"22:273:25410","crate_id":22,"name":"vzip","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[226,4],"end":[226,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"V"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3146:8141-0:146:1959":{"id":"a:2:3146:8141-0:146:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3146:8141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:252:2143":{"id":"0:252:2143","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:250:2141":{"id":"0:250:2141","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13122:974":{"id":"2:13122:974","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12325:458"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:254":{"id":"0:254","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:255:2151","0:256:2167","0:257:2180","0:258:2185","0:259:2188"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:278":{"id":"0:278","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2665:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:279:678"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3727-0:273:1960":{"id":"b:2:3727-0:273:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31997:2615","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3725:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3729:1770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13132:334":{"id":"2:13132:334","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13133:25909","`u8`":"1:12342:1800"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13149:11921":{"id":"2:13149:11921","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12325:458"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43349:11899","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13244:25796":{"id":"2:13244:25796","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2670:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13252:32998":{"id":"2:13252:32998","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4906:32998"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43678:11808","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5608:33695":{"id":"5:5608:33695","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7632:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13236:32995":{"id":"2:13236:32995","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12325:458","self::pattern":"2:12812:13547"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:171":{"id":"0:171","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:140:2085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:172:2109","0:174:2110"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2615-0:214:1957":{"id":"b:2:2615-0:214:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31997:2615","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2609:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2617:2571"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:22:270-0:137:1958":{"id":"b:22:270-0:137:1958","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2386","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:2651","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25410"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5603":{"id":"5:5603","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5604:33694","5:5605:13785","5:5608:33695","5:5611:33696","5:5619:33697","5:5620:33698","5:5621:13242","5:5622:27192","5:5623:27193"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:115:2142":{"id":"0:115:2142","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:217:462":{"id":"0:217:462","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2903-0:273:1960":{"id":"b:2:2903-0:273:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2862:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2872:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2906:136","2:2907:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:139:2083","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13201:2586":{"id":"2:13201:2586","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12812:13547","`DoubleEndedIterator`":"2:8205:129","prim@char":"1:12325:458","str::rmatches":"2:13204:32984"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43583:11914","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13251:25805":{"id":"2:13251:25805","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:980:38710"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:238:2106":{"id":"0:238:2106","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:2081","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:730:8120":{"id":"5:730:8120","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:104:2109":{"id":"0:104:2109","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"b:2:2618-0:146:1959":{"id":"b:2:2618-0:146:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31997:2615","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2612:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2620:25404"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13249:25803":{"id":"2:13249:25803","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:980:38710"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:727-0:273:1960":{"id":"b:5:727-0:273:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2631:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:723:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:729:8119","5:730:8120","5:731:8121"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:31996:236-0:137:1958":{"id":"a:2:31996:236-0:137:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31996:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13186:32983":{"id":"2:13186:32983","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12812:13547","str::split":"2:13174:25938","prim@char":"1:12325:458","str::split_terminator":"2:13183:32982"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43447:11906","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12833:13545","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259:2188":{"id":"0:259:2188","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2903-0:146:1959":{"id":"b:2:2903-0:146:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2862:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2872:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2906:136","2:2907:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2615-0:273:1960":{"id":"b:2:2615-0:273:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31997:2615","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2609:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2617:2571"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32053:2616-0:273:1960":{"id":"a:2:32053:2616-0:273:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32053:2616","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13220:32991":{"id":"2:13220:32991","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3146:8141-0:273:1960":{"id":"a:2:3146:8141-0:273:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3146:8141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:117:2145":{"id":"0:117:2145","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41630:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:76:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13153:31305":{"id":"2:13153:31305","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13152:31332"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43662:11919","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13124:32975":{"id":"2:13124:32975","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2888-0:214:1957":{"id":"b:2:2888-0:214:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2865:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2862:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2891:2155"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13125:32976":{"id":"2:13125:32976","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2898-0:282:1961":{"id":"b:2:2898-0:282:1961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2872:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2868:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2901:136","2:2902:1757"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2615-0:205:1956":{"id":"b:2:2615-0:205:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31997:2615","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2609:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2617:2571"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2903-0:282:1961":{"id":"b:2:2903-0:282:1961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2862:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2872:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2906:136","2:2907:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3727-0:205:1956":{"id":"b:2:3727-0:205:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31997:2615","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3725:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3729:1770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13140:25908":{"id":"2:13140:25908","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10903:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10903:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:286":{"id":"0:286","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10247:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1961","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:287:780"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:129:678":{"id":"0:129:678","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31996:236-0:146:1959":{"id":"a:2:31996:236-0:146:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31996:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13174:25938":{"id":"2:13174:25938","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12812:13547","`DoubleEndedIterator`":"2:8205:129","prim@char":"1:12325:458","str::split_whitespace":"2:13152:31332","str::rsplit":"2:13180:25942"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43379:11673","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:22:270-0:205:1956":{"id":"b:22:270-0:205:1956","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2386","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:2651","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25410"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13180:25942":{"id":"2:13180:25942","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12812:13547","`DoubleEndedIterator`":"2:8205:129","prim@char":"1:12325:458","str::split":"2:13174:25938"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43397:11678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12833:13545","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:282:1961":{"id":"0:282:1961","crate_id":0,"name":"ChaCha8Rng","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:178:2080","`RngCore`":"20:133:2084"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:254","a:2:3146:8141-0:282:1961","a:2:41612:13333-0:282:1961","a:2:3111:246-0:282:1961","a:2:32053:2616-0:282:1961","a:2:31996:236-0:282:1961","a:2:41611:13116-0:282:1961","b:2:3727-0:282:1961","b:2:2898-0:282:1961","b:2:2892-0:282:1961","b:2:2615-0:282:1961","b:2:2618-0:282:1961","b:2:2903-0:282:1961","b:2:2888-0:282:1961","b:5:727-0:282:1961","b:22:270-0:282:1961","0:286","0:249","0:266","0:262","0:261","0:284","0:245","0:264"]}}},"5:5605:13785":{"id":"5:5605:13785","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7632:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2631:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:208:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:174:2110":{"id":"0:174:2110","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2085","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3111:246-0:146:1959":{"id":"a:2:3111:246-0:146:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3111:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13130:25875":{"id":"2:13130:25875","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12360:13548"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13254:13108":{"id":"2:13254:13108","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4907:13108"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43687:11799","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:727-0:137:1958":{"id":"b:5:727-0:137:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2631:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:723:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:729:8119","5:730:8120","5:731:8121"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13143:32980":{"id":"2:13143:32980","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12331:1672","crate::ops::IndexMut":"2:3387:13146","str::slice_unchecked":"2:13142:32979"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41611:13116-0:214:1957":{"id":"a:2:41611:13116-0:214:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41611:13116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13166:8099":{"id":"2:13166:8099","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41519:190","prim@char":"1:12325:458","self::pattern":"2:12812:13547"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41517:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12818:12485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41611:13116-0:205:1956":{"id":"a:2:41611:13116-0:205:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41611:13116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:190:2185":{"id":"0:190:2185","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"2:42530:136":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"6:4824:10807":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"11:742:8506":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"0:94:1963":{"crate_id":0,"path":["rand_chacha","ChaChaRng"],"kind":"type_alias"},"5:1342:12432":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"16:2458:10026":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:10284:8328":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:46602:8032":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"5:6681:8062":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:10262:205":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:9293:12610":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"16:7111:10256":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:14038:9421":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"6:7602:11574":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"16:5927:10102":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:41257:169":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:536:13096":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"6:1503:10644":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:41517:193":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:12297:13115":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"6:5546:11117":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"21:3657:8960":{"crate_id":21,"path":["zerocopy","TrailingSliceLayout"],"kind":"struct"},"16:2748:10039":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:11189:9106":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:10710:12284":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"5:7597:11640":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:43761:13559":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"16:7509:12406":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:11788:12321":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"6:532:10603":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"16:4641:10071":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:9190:13365":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"11:1883:8209":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:41630:225":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:4346:12556":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:9205:13364":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"6:1535:10660":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:46477:8023":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"18:765:25340":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:13785:9384":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"22:224:2644":{"crate_id":22,"path":["ppv_lite86","types","Swap64"],"kind":"trait"},"2:41553:8210":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:643:12524":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"6:4932:10870":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"5:3305:10476":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:3352:139":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:2203:12272":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:45296:11971":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:31962:12498":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"5:1568:209":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:8522:11916":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"6:8006:11581":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"5:5922:8810":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:14516:9515":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:15356:9770":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:7891:25721":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"21:3386:8291":{"crate_id":21,"path":["zerocopy","byteorder","F64"],"kind":"struct"},"6:5557:11123":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:8304:12593":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:40066:13855":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:5645:12566":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"6:5445:11076":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"16:3925:10061":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"16:3029:9003":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"5:3284:34019":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:44356:11963":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:4273:13295":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"6:6629:11321":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:3472:11847":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:44405:10485":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"6:1490:10638":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:6746:11363":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"2:3636:13514":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:41758:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"6:6379:11180":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:6295:8813":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"6:7575:11568":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:13738:9372":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:11089:12292":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"6:1593:10698":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:6343:8713":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:40158:11682":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:7942:8708":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"1:6219:25715":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"15:327:8460":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:22713:11688":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:10439:8307":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"18:507:8968":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:6532:10165":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:3502:12171":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:948:12430":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"5:218:12443":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"6:5436:11070":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"1:954:12431":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:21473:32385":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:41678:8210":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:8472:13210":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"1:4080:13271":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"5:7632:242":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"6:5382:11037":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:12289:9172":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:44369:12515":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"16:0:2478":{"crate_id":16,"path":["gimli"],"kind":"module"},"18:481:8966":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:8788:13343":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:906:12451":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"11:1910:10474":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"17:14111:9431":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:22341:31118":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"2:45375:11977":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"22:176:2634":{"crate_id":22,"path":["ppv_lite86","types","BSwap"],"kind":"trait"},"16:2902:20221":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:3337:13513":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"1:12343:1782":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"16:5756:12361":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:44315:206":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:13485:9306":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:40279:11827":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"5:2236:8508":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:8528:12599":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:44171:11960":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"18:613:34564":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:12349:1371":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:43876:11936":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:12851:8343":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:12189:12339":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"16:4913:10079":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"6:4924:10868":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:8539:13251":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"16:7379:34547":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:44307:226":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:22553:11686":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:43662:11919":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:12557:8321":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"2:10202:225":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"17:10534:34555":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:5788:12088":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:40018:13619":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:22762:31079":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:13664:8815":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"6:5536:11111":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:10978:25457":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:39992:13618":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"9:502:10542":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"5:280:32930":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"17:12993:21158":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"3:234:225":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:624:12521":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"9:357:20088":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:1581:8062":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:5052:13320":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"21:595:25368":{"crate_id":21,"path":["zerocopy","Unaligned"],"kind":"trait"},"2:41445:11870":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:15368:9773":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"16:4502:10066":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:40730:11845":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:9781:21148":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:43355:11900":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:8630:11466":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"20:76:136":{"crate_id":20,"path":["rand_core","error","Error"],"kind":"struct"},"6:5329:11019":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"17:9807:21138":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:13723:9368":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:5686:8402":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"22:1411:8953":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","G0"],"kind":"struct"},"16:2612:10033":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:33625:13798":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:8184:138":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:12516:12348":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"2:4686:11656":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"6:5677:11176":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:10700:25704":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:2702:12540":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"6:4787:10780":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:8593:12602":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"5:7119:32937":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:2199:128":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"1:1605:10475":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:3022:225":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"16:6927:10235":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"9:0:2472":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:13701:151":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"11:1903:10473":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:15010:9691":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:15521:9837":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"6:8029:11593":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"5:7380:11634":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"11:1107:12434":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:14575:8340":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:10920:12183":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"11:844:13128":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:1942:12534":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:9147:12605":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"5:6554:8810":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"16:6317:12374":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:6311:25710":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:10897:12174":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"2:45428:11983":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"18:531:8970":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:22427:13211":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"6:0:979":{"crate_id":6,"path":["libc"],"kind":"module"},"1:7955:12090":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:9858:21149":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:33798:13799":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"18:598:34562":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"6:5400:11049":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"21:607:8160":{"crate_id":21,"path":["zerocopy","Ref"],"kind":"struct"},"2:25886:266":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:11574:8469":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:14246:9471":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:8750:2399":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:43529:11911":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:6446:219":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:21458:32387":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"6:5296:11008":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:8625:8211":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:13568:9331":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:1565:10679":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:9718:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"21:0:2611":{"crate_id":21,"path":["zerocopy"],"kind":"module"},"2:8622:148":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:43365:8331":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:9938:21152":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:40723:11844":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:10463:152":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:640:12522":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:41613:3003":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"6:5191:10955":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"18:754:9000":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"5:870:13129":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"6:4811:10797":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"16:3669:9008":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"6:6915:11426":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:11647:9119":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:45396:11981":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:4757:11477":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"6:5502:11104":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"16:7014:21089":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:11682:12198":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:45480:11986":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"17:11877:8336":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:43349:11899":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:4959:10882":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:13399:9290":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:14977:9688":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:23486:235":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:13477:204":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"9:53:8471":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:41311:13252":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"19:0:1248":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:12332:1760":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"17:10818:12285":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:43547:11912":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"18:643:8968":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"21:2099:8285":{"crate_id":21,"path":["zerocopy","byteorder","I16"],"kind":"struct"},"17:13526:9316":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:8145:9046":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:2234:12275":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:13455:9302":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"6:5102:10940":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:7841:9095":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:8200:127":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:1593:10473":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"6:5290:11005":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:6409:11205":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:6149:8533":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:40011:11811":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:11604:8720":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"6:6738:11362":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"17:14847:9637":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"6:5457:11085":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"6:6706:11353":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"2:30493:31081":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"2:22746:11691":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:12336:733":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:13437:9294":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:22913:11711":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"17:4821:12279":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"16:7006:12383":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"5:1327:12433":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:21487:32383":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"1:3024:136":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"0:95:1965":{"crate_id":0,"path":["rand_chacha","ChaChaCore"],"kind":"type_alias"},"17:13606:9339":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:12454:9194":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:11367:8321":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:2612:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:10511:8545":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:13450:31463":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:30210:13254":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"5:723:249":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:11026:21167":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"1:4294:13297":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:11012:25450":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"16:6480:8437":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"5:830:12445":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"6:5376:11034":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"11:2542:10478":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"21:3666:25376":{"crate_id":21,"path":["zerocopy","CastType"],"kind":"enum"},"17:15190:9727":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:14560:9522":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:13594:9336":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"11:2498:20148":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"17:12201:12340":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"16:7799:8456":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"5:6957:13579":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"1:3382:12550":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"11:1066:20152":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:43782:11924":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"6:5200:10960":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:45928:2648":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"6:8294:11605":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:4427:12557":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:46549:8029":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:484:25717":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:45538:11990":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:11770:12553":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"5:4438:32929":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:45719:12005":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:12969:9226":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:22738:11690":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:10960:12135":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"2:45413:11982":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:10187:11867":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"6:1621:10722":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"16:6278:8414":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:7052:12384":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"22:253:2432":{"crate_id":22,"path":["ppv_lite86","types","u32x4x4"],"kind":"trait"},"2:40093:8331":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"6:4800:10789":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:11115:12294":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:7444:29953":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"1:5902:12571":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:4044:13270":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:13855:9393":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"5:2207:11621":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:10399:8331":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"16:6543:10166":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:15616:9856":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"18:0:2480":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:5560:12564":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"5:6763:32930":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:30482:8122":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:32083:8144":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"17:12621:9203":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"17:12464:21279":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"17:11467:9117":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:45620:12000":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"18:563:8296":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:21996:32381":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"22:892:8266":{"crate_id":22,"path":["ppv_lite86","soft","x2"],"kind":"struct"},"6:5472:11094":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:42711:8688":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"17:13999:9416":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:41601:8202":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:513:12268":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:39126:13145":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:13626:115":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"21:427:34778":{"crate_id":21,"path":["zerocopy","wrappers","update","WriteBackOnDrop"],"kind":"struct"},"1:9254:8709":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"16:7549:10318":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:3244:30156":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:9391:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"16:5700:10046":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:7594:13776":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:2285:12177":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"1:11914:12200":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:8309:8724":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"16:6588:10167":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:16032:9272":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"17:15701:9878":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:13046:9231":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"16:6962:8443":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:13766:9379":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:4921:12559":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"16:7755:8455":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:6727:12576":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:40309:11830":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:7910:25708":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:11209:25460":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:45649:12001":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:3289:12546":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:9396:12581":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"5:6421:13492":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"1:8582:12141":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:22441:13479":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"17:10524:12281":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:33138:13394":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:12572:8310":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"1:7978:12091":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:43811:11933":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:11140:11677":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"5:5217:8517":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:10622:34556":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:40200:8528":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:6853:11671":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"6:5598:11137":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"16:542:8385":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"5:7472:8062":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:10419:8332":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:11048:8209":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:11443:9116":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:39899:11800":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:10317:8329":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:8460:12135":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:16138:9986":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"1:10907:12094":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"17:14189:9459":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:14489:9511":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"16:4531:10067":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"6:5466:11091":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:14503:9514":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"16:4743:10073":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:43325:11895":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:39969:11807":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:15445:9792":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"6:5283:11003":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"9:392:20074":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"21:3229:8290":{"crate_id":21,"path":["zerocopy","byteorder","F32"],"kind":"struct"},"2:39948:11805":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"16:6066:10118":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:4696:8160":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"20:163:2625":{"crate_id":20,"path":["rand_core","RngReadAdapter"],"kind":"struct"},"1:4826:13299":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:9700:25579":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"2:21475:32389":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:10683:32466":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"17:12056:9165":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"21:760:25373":{"crate_id":21,"path":["zerocopy","ByteSliceMut"],"kind":"trait"},"20:186:2626":{"crate_id":20,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"2:40371:11835":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"16:6263:10149":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:10905:12287":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"5:3250:34016":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:12818:12485":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:21686:8548":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:46430:8265":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:43671:11920":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:40381:11836":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:46508:8026":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"14:214:10463":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:12335:717":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:896:8810":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:3618:13230":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:22117:13399":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:4543:8159":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"14:160:12420":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:4973:13612":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"16:7741:8454":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:11373:12490":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:41295:11857":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"21:764:25375":{"crate_id":21,"path":["zerocopy","IntoByteSliceMut"],"kind":"trait"},"2:6658:11665":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:43988:11947":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:12318:9177":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"17:10759:8310":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:5108:13325":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:15582:9844":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"22:296:2652":{"crate_id":22,"path":["ppv_lite86","types","Store"],"kind":"trait"},"1:9313:12168":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"6:5002:10905":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:11891:12492":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"16:5995:10112":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:42449:11878":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:3481:210":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:9402:12485":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:15760:9894":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:44093:11951":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"16:7098:10253":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:12929:9224":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:8838:8209":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:8631:13773":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"16:7473:8395":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:6120:12087":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:11293:21185":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"17:15624:9857":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"5:1465:8209":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:3358:141":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:8167:164":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:11571:12627":{"crate_id":1,"path":["std","sys","thread_local","fast_local","Key"],"kind":"struct"},"2:8205:129":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"6:1485:10636":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"21:942:8279":{"crate_id":21,"path":["zerocopy","byteorder","U16"],"kind":"struct"},"22:1111:8270":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","u32x4_sse2"],"kind":"struct"},"2:45833:12011":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"16:7618:8449":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"16:3196:10019":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"1:3590:8131":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"20:124:25352":{"crate_id":20,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"1:9155:8062":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"6:1671:10752":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:3544:13805":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"16:7590:8447":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"16:5107:10085":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:6136:219":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"6:5336:11020":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"6:1585:10693":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:7882:8536":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:11674:9121":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"5:1546:8505":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:0:2479":{"crate_id":17,"path":["object"],"kind":"module"},"17:11605:8334":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:10264:8132":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:7295:25751":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:9272:25445":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:2282:12538":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"21:122:8956":{"crate_id":21,"path":["zerocopy","pointer","ptr","def","Ptr"],"kind":"struct"},"1:921:8506":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"6:1526:10654":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:7984:11580":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"16:7321:8201":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"20:133:2084":{"crate_id":20,"path":["rand_core","RngCore"],"kind":"trait"},"2:3146:8141":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"6:5630:11157":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"16:6456:21086":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"6:7314:11438":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:5167:32570":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"22:1416:8954":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","G1"],"kind":"struct"},"21:3567:34846":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Shared"],"kind":"enum"},"1:11300:12187":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"16:7168:12168":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"5:3271:10475":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:5742:10090":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:40332:8535":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:6853:232":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"5:7582:13855":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:45878:12028":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:39909:11801":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"5:4502:32929":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:40228:8532":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:43975:11943":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:42504:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:40131:12501":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:13899:9401":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:40357:8983":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:39198:214":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:6491:11246":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:11610:12629":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:15390:9778":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:12251:12344":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:43483:11908":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"6:1663:10751":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:10044:21154":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:40288:11828":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:9369:186":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:1207:12270":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:12360:13548":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"5:7363:8496":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"16:5006:10082":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:5929:8706":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:1584:8810":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:15569:9838":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:45687:12003":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:9886:21150":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:3847:12554":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:16212:10006":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"2:21684:13398":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:45801:12009":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"18:680:8986":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"18:651:8968":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"16:7823:21093":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"6:8247:11595":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:45780:12008":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:917:8505":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:14752:9554":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"16:5075:10084":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:11102:12293":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"6:559:10618":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"5:3648:8209":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"16:6433:8436":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"21:32:25393":{"crate_id":21,"path":["zerocopy","byteorder","ByteOrder"],"kind":"trait"},"16:6813:10216":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:9688:137":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"2:39481:13624":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"2:22209:13483":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"16:3329:10054":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"5:7412:11635":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"17:15456:9793":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"6:485:10572":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"6:6524:11259":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:9220:13366":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:22946:11714":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"1:4243:29958":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"22:1500:8175":{"crate_id":22,"path":["ppv_lite86","x86_64","NoS3"],"kind":"struct"},"2:2249:11654":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"6:5020:10914":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:5122:10942":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"16:5960:10109":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:12076:12334":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:15289:9748":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:4424:10064":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"16:8259:10312":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:43501:11909":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"11:102:10467":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:8206:8703":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"17:13344:8360":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:40256:11824":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:6615:11845":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:9527:12532":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"6:6821:11389":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:44125:11959":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:10455:113":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"7:78:20066":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"11:430:34524":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:12362:9188":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"17:13674:9343":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:12530:12350":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"1:8607:12142":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"2:44121:11958":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"16:6665:21087":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:10258:8134":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:3162:13393":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"22:1540:8184":{"crate_id":22,"path":["ppv_lite86","x86_64","NoNI"],"kind":"struct"},"6:5565:11125":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:11858:12491":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"1:11651:12195":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:13089:9235":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"16:4830:10076":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:22382:13489":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"11:2469:12451":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"8:0:2471":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:43225:11893":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"5:5717:13577":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"6:6562:11287":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:11637:12194":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"16:4352:10063":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"16:6442:10154":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"6:5112:10941":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:15635:9861":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"5:7372:8062":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"17:15992:9958":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"2:43286:12511":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:42513:8122":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"21:3594:34846":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","at_least","Shared"],"kind":"trait"},"17:10671:34553":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"5:3026:8119":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:6619:12575":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"9:178:8487":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:21507:13401":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:45509:11988":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"5:5409:32930":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:11841:12328":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"5:3279:10473":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:560:12520":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"14:165:20156":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"16:8118:10377":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:16269:9292":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"1:4759:11479":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"2:46380:12071":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:13509:9308":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:3157:13391":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:45818:12010":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:13497:9307":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:11810:12554":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:43954:13560":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:2951:136":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"11:1566:20153":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:11075:25726":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:42966:11891":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:16151:9992":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"17:15102:9705":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:10828:34559":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"6:4891:10850":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:14012:9418":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"6:5146:10944":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:8534:12601":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:1588:12451":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"1:8702:8816":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:46057:12033":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:46664:8034":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"16:4587:10069":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:11354:12303":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:11092:25701":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:10887:34551":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:734:13255":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"2:45343:11975":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"5:4423:264":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:33079:13392":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"11:1923:10476":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"6:5314:11015":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:39158:209":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:11497:25723":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"2:5146:423":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"6:6756:11370":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"17:13424:9293":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:10260:8135":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:12590:11913":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:45311:11972":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"16:7428:21091":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:6441:11223":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:15176:9724":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:13553:9325":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:11743:9127":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"2:22990:11718":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"1:12345:1794":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:22935:11713":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"2:31924:10481":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"6:6775:11373":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"11:328:10471":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:10997:12566":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"17:11915:21254":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:40300:11829":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"5:1356:12436":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:21962:13403":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"16:4560:10068":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"16:2636:10034":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:11547:9045":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:12341:862":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:7659:31104":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:12808:9221":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"6:5236:10977":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:13363:9283":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:22690:8551":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:2039:13824":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:15281:9747":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:11595:8333":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:42223:8134":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"9:424:20075":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:38467:13804":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:11227:12297":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"5:826:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:737:189":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"6:6435:11220":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:4864:10840":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:12949:9177":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:40187:8527":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"22:1580:2631":{"crate_id":22,"path":["ppv_lite86","x86_64","vec256_storage"],"kind":"union"},"2:42033:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:7546:11552":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:11899:28068":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"2:43214:12509":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:11051:12290":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"16:4468:10065":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"6:1496:10641":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:15138:9710":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:23034:11722":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"6:6729:11359":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"2:44147:130":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"11:396:34510":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"16:8093:10374":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:41836:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:5862:12171":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"16:7497:10314":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:10902:12176":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"5:3027:32891":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"6:5636:11160":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:8258:2613":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:8601:12599":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"6:5219:10968":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:6504:10163":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:10666:12545":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"11:1582:12438":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"6:6417:11207":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:39295:11797":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"6:5643:11163":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:41797:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"16:2548:10030":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"16:6342:34546":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:11217:12487":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"22:1505:8178":{"crate_id":22,"path":["ppv_lite86","x86_64","YesS4"],"kind":"struct"},"2:1976:1312":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:13877:9400":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:5974:8707":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"6:4885:10848":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:12323:405":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"21:796:8306":{"crate_id":21,"path":["zerocopy","byteorder","BigEndian"],"kind":"enum"},"16:6620:10177":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:31996:236":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:3599:28347":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"6:8271:11599":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:42551:8124":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"1:365:12518":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"16:7910:21094":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"6:8288:11604":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:3264:12276":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"16:8136:10379":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"5:7452:8519":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:10573:34558":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"22:1515:8179":{"crate_id":22,"path":["ppv_lite86","x86_64","YesA1"],"kind":"struct"},"17:12353:9187":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"1:8575:12140":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"6:7561:11559":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"11:2304:10259":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"5:671:12444":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:43397:11678":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:1066:12433":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:10672:12549":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"17:16176:10000":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"1:1978:763":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:7081:13395":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:12337:887":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:2865:143":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"6:6636:11322":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:43338:11898":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"14:31:12420":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"6:497:10577":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:4856:10077":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:15151:9716":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:3337:12547":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"6:5653:11164":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"1:4712:13317":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:32054:8145":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:15383:9777":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:22797:31084":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:11063:12291":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:545:10610":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:4867:13288":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:1599:10474":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:4882:10078":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:8211:8702":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"2:7489:8070":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:10472:25574":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"11:2124:10259":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:44293:163":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:12371:9224":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"17:10218:8326":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:2940:123":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"6:4942:10876":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:11583:12317":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"18:113:25331":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:4164:13279":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:12175:12335":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"22:257:2440":{"crate_id":22,"path":["ppv_lite86","types","u64x2x4"],"kind":"trait"},"5:7730:12472":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"17:11405:12305":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:40322:11831":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"22:884:2379":{"crate_id":22,"path":["ppv_lite86","dispatch"],"kind":"macro"},"2:5205:12482":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"6:1580:10691":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"5:2197:13092":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"11:774:8502":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:13644:8813":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:10251:8327":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:13292:8347":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:3551:12552":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:14986:9689":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:5038:13319":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"17:15822:9907":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:12494:9197":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:12043:12332":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:4501:12558":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:9346:8730":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"16:5914:8413":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"11:1896:12451":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"20:140:2085":{"crate_id":20,"path":["rand_core","SeedableRng"],"kind":"trait"},"17:15769:9898":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"16:8073:10373":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"6:6650:11333":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:11812:12324":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"11:1160:12436":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"16:7695:10322":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"5:3397:12451":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:10350:8330":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:7306:11433":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"6:1653:10745":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:12292:8734":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"11:1007:10259":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:15608:9853":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"6:6621:11320":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:5266:10992":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:15206:9730":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"5:7094:32940":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:2808:10042":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"18:589:8973":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:5576:12565":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"11:687:8210":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:42727:8691":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"5:1311:10259":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"16:5415:10088":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:30836:195":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:39143:212":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"9:330:10524":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:359:12516":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:10989:12588":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"17:9737:21132":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"17:11773:9207":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:15931:9254":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"17:13308:8351":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:15655:9864":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"6:5277:11000":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:4870:10841":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:13412:9292":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:14212:9468":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"16:7648:12414":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:4802:10075":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"22:1525:8181":{"crate_id":22,"path":["ppv_lite86","x86_64","YesA2"],"kind":"struct"},"2:39218:213":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:8126:13775":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"6:6657:11334":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"21:762:25374":{"crate_id":21,"path":["zerocopy","IntoByteSlice"],"kind":"trait"},"16:6079:8387":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:13024:21159":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:11747:25577":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"6:7359:11462":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:41695:195":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:10457:137":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"6:8259:11597":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:15214:9732":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:43940:11938":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"5:7392:8810":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"17:15273:9746":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:45495:11987":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:10715:31721":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"5:7402:12468":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"6:5344:11021":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"6:7584:11571":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:1939:651":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"20:22:2082":{"crate_id":20,"path":["rand_core","block","CryptoBlockRng"],"kind":"trait"},"17:15418:9785":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:12344:1788":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:44378:179":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"16:4614:10070":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:31998:243":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:10564:12604":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:0:543":{"crate_id":2,"path":["core"],"kind":"module"},"21:1826:8284":{"crate_id":21,"path":["zerocopy","byteorder","Usize"],"kind":"struct"},"6:6478:11237":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:8163:144":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"5:7422:34017":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:43643:11917":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"11:2403:8210":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2:2062:11651":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:2053:11648":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"16:6026:8381":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"6:5407:1218":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"18:581:8045":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"6:4837:10817":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"18:538:8294":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:3429:13238":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"5:2289:34371":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:15:2097":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:2128:188":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"11:2369:12442":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"6:4971:10887":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"6:5588:11132":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"6:5174:10946":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:491:10574":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:14587:9525":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:9401:12582":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"2:4360:109":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"16:4771:10074":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"6:5181:10948":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:42459:8122":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"11:1051:12433":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:12514:11902":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:11029:8705":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"1:5781:12087":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:43185:11680":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"6:7389:11484":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:14284:9476":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:8282:11603":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"5:4269:12171":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"1:3287:12545":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:33452:13797":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"6:6609:11313":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:7485:11509":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:8306:11607":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:10669:12547":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"1:3608:13209":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"6:7366:11466":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:14402:9494":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:35847:10279":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"16:8216:10383":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"18:80:25329":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:46155:12067":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:2680:25704":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"18:608:8963":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"16:3899:10060":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"18:515:8969":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:2868:257":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:8502:11839":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:7266:25719":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"1:10294:12531":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"2:22855:13268":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"22:1530:8182":{"crate_id":22,"path":["ppv_lite86","x86_64","NoA2"],"kind":"struct"},"2:3584:32711":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:10954:21165":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:4612:13299":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"6:5483:11097":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"2:12886:13553":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:13797:9386":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:883:8504":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:13844:9392":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:43583:11914":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:10381:13023":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"2:40516:11840":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"17:16235:10011":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"17:12300:21278":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"17:12683:12355":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"17:14271:9474":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"14:202:13561":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"11:2443:8810":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"1:5540:12563":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"16:7559:10319":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:2289:13193":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:11042:12289":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:46523:8027":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:862:8062":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"16:7355:10295":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:39893:11799":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"11:2536:10477":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:40745:11847":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:3559:145":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"16:7306:34545":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:40341:11832":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:2592:10032":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"22:206:2388":{"crate_id":22,"path":["ppv_lite86","types","Vec4"],"kind":"trait"},"17:15126:9707":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"18:706:8990":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:3319:124":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"16:2374:10022":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"16:7686:12415":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:3844:12553":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:11676:12197":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"22:235:2438":{"crate_id":22,"path":["ppv_lite86","types","u64x2"],"kind":"trait"},"6:578:10628":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:2598:12539":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:43194:12508":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"6:6768:11372":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"6:5361:11026":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:10950:127":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"16:3475:10055":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:40178:12503":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"11:2231:8469":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"11:1087:34519":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"11:490:153":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:13272:9282":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:15646:9862":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:44297:218":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"5:7480:8062":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:31987:11789":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"15:306:20176":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:43965:11939":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:41561:8062":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"17:11715:9124":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"16:6758:10203":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"21:139:70":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Any"],"kind":"enum"},"2:45945:12029":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"11:0:2474":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:12350:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:15078:9700":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:8155:12094":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:9265:12606":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:13581:9335":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:4383:13506":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"6:8328:11612":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:10617:13880":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"17:15778:9900":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:44117:11957":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:12478:9196":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"5:295:2617":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:12833:13545":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:7851:12632":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:41953:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:15400:9781":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:14529:9516":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"6:465:10561":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"1:12330:1638":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"22:1545:8174":{"crate_id":22,"path":["ppv_lite86","x86_64","SseMachine"],"kind":"struct"},"22:216:2643":{"crate_id":22,"path":["ppv_lite86","types","Words4"],"kind":"trait"},"13:0:2469":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:11290:12488":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:11557:12311":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"18:735:25339":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:10185:8325":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:16198:10002":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"21:3587:35000":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Initialized"],"kind":"enum"},"11:883:12431":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"6:6542:11271":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:30461:11645":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:12348:1861":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"17:15410:9784":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:41545:8209":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:13252:9272":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:12647:12352":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"1:8652:12143":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:11799:12322":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:22831:11706":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"11:856:12428":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:14356:9487":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:8026:13113":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:11887:8733":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"5:3807:12452":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:21560:13397":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:10050:8123":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"1:4108:13274":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:16079:9973":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"5:732:118":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:4094:13272":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"11:2383:8209":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"17:13473:9303":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:3332:8214":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:6398:12087":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"17:12238:12343":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:39985:11808":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:33315:13796":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:22343:13814":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"function"},"17:16105:9979":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"17:437:9052":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:46040:12032":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"21:2991:8289":{"crate_id":21,"path":["zerocopy","byteorder","Isize"],"kind":"struct"},"1:12338:869":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:21441:32378":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"2:22674:8520":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:15678:9877":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"16:8188:12419":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"16:2788:10041":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"5:1557:8506":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"7:0:1851":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:46277:12069":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"22:299:2387":{"crate_id":22,"path":["ppv_lite86","types","StoreBytes"],"kind":"trait"},"1:8587:13298":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:7689:25562":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:2856:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:39308:11798":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"16:7144:21090":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"16:6353:8429":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"21:512:25363":{"crate_id":21,"path":["zerocopy","DstLayout"],"kind":"struct"},"2:46451:12073":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"6:8341:11616":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:4986:12280":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"1:5385:202":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"16:6940:8399":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:10903:238":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:5895:12567":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"18:521:25341":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:10137:21131":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:13235:9269":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:11865:12330":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"14:40:9269":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"6:5370:11032":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:11853:12329":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:41686:8062":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:21456:32391":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:31966:10312":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"16:2878:10045":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:12342:1800":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"5:1577:12450":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:517:10594":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:2432:11650":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:30863:8045":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"6:5064:10938":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:40055:11816":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:12772:13191":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:41992:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:12030:12331":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:10969:25466":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"6:5306:11012":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:15957:9928":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"17:13375:9286":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:12276:12635":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"5:2757:11629":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:261:12266":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"16:3614:10056":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"5:2526:11626":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:12551:11907":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:11128:9088":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:23023:11721":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"1:5196:12560":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"22:1299:8278":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","u128x1_sse2"],"kind":"struct"},"2:45702:12004":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"16:4976:10081":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"6:6678:11340":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:4348:12477":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:13946:9407":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:3153:8143":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"2:32085:114":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:5247:954":{"crate_id":2,"path":["core","iter"],"kind":"module"},"6:7467:11498":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:3949:12555":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:11345:11909":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:21984:8549":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"20:0:1953":{"crate_id":20,"path":["rand_core"],"kind":"module"},"2:22724:31102":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"4:0:2470":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:6798:12579":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"16:6560:8438":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:11270:161":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"2:45328:11974":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:3597:12278":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"20:109:25349":{"crate_id":20,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"17:13538:9319":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:11214:12296":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:8855:12159":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:12111:25712":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:12408:8339":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:8509:8331":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"16:3014:20223":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:11764:9131":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"16:6948:8442":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:12346:1776":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:12107:8310":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"11:351:34514":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"2:44129:8547":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"17:11269:21184":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"2:42736:156":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"6:5039:10925":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:3250:31008":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"17:13015:8340":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:45907:8263":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:45442:11984":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"22:885:2380":{"crate_id":22,"path":["ppv_lite86","dispatch_light128"],"kind":"macro"},"2:6847:11672":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"22:244:2647":{"crate_id":22,"path":["ppv_lite86","types","u64x2x2"],"kind":"trait"},"17:12264:12345":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:4747:13274":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:41457:12140":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:41611:13116":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:8046:13165":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:40103:13178":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"16:5722:10048":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:8236:8726":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:4142:13275":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:3116:8139":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"7:31:20059":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"5:3245:10474":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:2460:13206":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:2872:256":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"16:867:12265":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"2:43251:11682":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:41570:8201":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:12812:13547":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:2510:13814":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"2:10221:142":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:726:153":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:42970:11892":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:14545:9518":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:43125:12507":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:11537:12310":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:39288:12500":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"16:7813:10324":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:11256:9108":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"1:9386:233":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:4622:12479":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"16:7888:10336":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:7710:13769":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"18:635:8985":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"21:1617:8283":{"crate_id":21,"path":["zerocopy","byteorder","U128"],"kind":"struct"},"1:9259:115":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"17:15473:9800":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:1829:12530":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:21674:13211":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"22:213:2390":{"crate_id":22,"path":["ppv_lite86","types","Vector"],"kind":"trait"},"15:0:2477":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:7973:12584":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"5:1830:12451":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"22:1520:8180":{"crate_id":22,"path":["ppv_lite86","x86_64","NoA1"],"kind":"struct"},"17:16050:9282":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"17:12597:9202":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"6:7452:11493":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:31980:8160":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"17:13753:9377":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:591:13107":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:43687:11799":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:30467:11724":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:13959:9410":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"18:670:12264":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:45734:12006":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"22:267:2651":{"crate_id":22,"path":["ppv_lite86","types","VZip"],"kind":"trait"},"16:2508:10028":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:5591:113":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:9131:8705":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"17:14311:9478":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"11:434:34520":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"9:447:20073":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:1577:8209":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:31997:2615":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"6:6519:11258":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:37723:13800":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"16:6385:10151":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"6:6721:11358":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"16:5781:10047":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"6:6900:11415":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:45524:11989":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"16:6782:21088":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:43447:11906":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:8172:12095":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:6664:11335":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:2992:12475":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"17:12422:9191":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"11:2423:8062":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"17:14463:9509":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"5:6007:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"12:0:2475":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:22824:11703":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"15:288:20175":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:15944:9268":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"16:6648:10178":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"5:7621:12469":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"11:837:12425":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"5:7655:12470":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:12628:11677":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"16:5385:8305":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"5:4074:8810":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:11198:12162":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:12900:8346":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"18:698:8299":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:506:13092":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:12768:21135":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"1:1812:675":{"crate_id":1,"path":["std","env"],"kind":"module"},"21:587:25354":{"crate_id":21,"path":["zerocopy","IntoBytes"],"kind":"trait"},"6:7348:11457":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:33256:13794":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"6:564:10620":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"18:718:8994":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"11:364:34508":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:15799:9903":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:10018:21134":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:256:12265":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:40218:11819":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"17:14177:9456":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:8313:177":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:8061:12588":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:1699:10765":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:4102:13273":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:37888:13803":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"17:12695:12356":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"2:4741:13602":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"16:5817:8403":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:12433:8340":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:39082:13512":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"2:45605:2438":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:2859:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"6:6447:11224":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:15249:9738":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"5:3661:8210":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"16:860:12360":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"1:4863:13285":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"6:6880:11401":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:9178:12164":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"22:1593:2632":{"crate_id":22,"path":["ppv_lite86","x86_64","vec512_storage"],"kind":"union"},"17:14091:9428":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:40121:11657":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:40247:11823":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:45990:12030":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:12659:12353":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"5:6060:14111":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"5:3029:11623":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"16:5367:21080":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:22474:13478":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"17:2175:21212":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"16:2660:10035":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:11252:11678":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:10256:8125":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:1680:10758":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:14475:9510":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"16:7857:10332":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:11634:9118":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:13187:9254":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:41339:8686":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"2:44109:11955":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"6:7330:11450":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:22968:11716":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"16:7604:8448":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:3247:30998":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"16:7633:34541":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:39130:11792":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"16:7656:21092":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:32473:10272":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:14147:9437":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:15836:9910":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:14131:9432":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:12342:9183":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"16:6160:20193":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:30429:8556":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"22:232:2425":{"crate_id":22,"path":["ppv_lite86","types","u32x4"],"kind":"trait"},"17:11153:12285":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:11524:12309":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:3380:12549":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:11898:9132":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"10:44:8470":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"11:787:8504":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"1:1827:12529":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"5:40:13147":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"6:5014:10911":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:1510:10646":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"16:6606:10175":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"16:8313:136":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"11:673:8209":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"16:6246:205":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"16:7528:10315":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"11:700:8062":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:11906:12200":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:33971:10278":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:3565:13592":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:43264:12510":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"6:6763:11371":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"17:12213:12341":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:44105:11954":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"11:875:12430":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:11072:8210":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"18:726:8301":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:8515:11673":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"11:2554:34518":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:3339:12548":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"6:5415:11055":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:40037:11815":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:9161:12163":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:15734:9885":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:13814:9389":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"6:8351:11618":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:5846:10096":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:12339:875":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:2631:112":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:4281:13296":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:5320:11016":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:4617:12478":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"6:6532:11264":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:9984:21153":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"16:7580:10320":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"16:6895:10231":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:3242:10274":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"16:5802:21081":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:42476:31624":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"6:6698:11349":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"11:832:12437":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:22396:13814":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"function"},"2:43903:11937":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:44182:13913":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:46572:8030":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:9118:12162":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"14:7:12420":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:15313:9755":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:7998:9136":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"6:479:10569":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"1:5774:219":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"6:523:10597":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"11:1603:12439":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:14325:9481":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:9094:198":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:11510:12308":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:6335:8398":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:1863:12171":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"16:3810:10058":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:13986:9415":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"5:3792:8726":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"16:2478:10027":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"5:7436:8062":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:22115:13211":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:14855:9640":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"6:8253:11596":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"16:4062:10062":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"18:491:8967":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:10769:34554":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:8220:12591":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"6:5046:10927":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:6494:10162":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"16:7769:10323":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"17:10068:21137":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:2450:13201":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"6:5665:11171":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:15814:9904":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"16:2998:10053":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"17:12508:9200":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"16:2768:10040":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"0:0:1966":{"crate_id":0,"path":["rand_chacha"],"kind":"module"},"2:40081:11817":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"18:548:152":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:10203:8131":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:9305:8728":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"17:13211:9268":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"21:34:25394":{"crate_id":21,"path":["zerocopy","byteorder","Order"],"kind":"enum"},"22:263:2386":{"crate_id":22,"path":["ppv_lite86","types","MultiLane"],"kind":"trait"},"1:11235:12172":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"1:9300:8712":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"5:1191:34312":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:9755:21130":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:14341:9483":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"16:7711:209":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:43601:11915":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:417:184":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:42216:8126":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:912:12437":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:40716:11843":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"17:10661:12283":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"6:8012:11583":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:41719:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"11:800:8810":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:16249:10012":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"17:11621:8319":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"1:11593:27752":{"crate_id":1,"path":["std","sys","thread_local","fast_local","DtorState"],"kind":"enum"},"17:15197:9729":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"22:178:2383":{"crate_id":22,"path":["ppv_lite86","types","ArithOps"],"kind":"trait"},"6:5212:10967":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:43429:11905":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:21957:13211":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"2:46232:12068":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:39180:211":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:14599:9532":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:11497:12307":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:11075:8321":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"11:710:8505":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:22315:13211":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"17:10612:12282":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:22291:13485":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"1:2434:13196":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:44394:11966":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:11331:11908":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:9445:12173":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:1075:12436":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"6:6471:11233":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:8492:8527":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:4:1231":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:10092:21155":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:2496:652":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:2701:194":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"6:4909:10862":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:11831:12555":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:8176:2614":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:13756:13131":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:5225:10971":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:13972:9138":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:6874:11400":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:1098:12269":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"5:1171:32899":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"5:3037:32892":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"5:6924:13577":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:12388:9189":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:5029:13318":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:4156:13277":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:12340:881":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"22:220:2385":{"crate_id":22,"path":["ppv_lite86","types","LaneWords4"],"kind":"trait"},"1:4152:13276":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:12485:21280":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2:21505:13211":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:12326:1822":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"6:4952:10879":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"6:1723:10774":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"16:5769:10094":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:7954:13211":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:3725:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"16:2936:20222":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:12792:9066":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:22957:11715":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"1:12325:458":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"5:2089:8726":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:43204:11681":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:46322:12070":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:2041:197":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:942:12428":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:32053:2616":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"6:8265:11598":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"1:8040:13114":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"11:2326:12432":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"6:4992:10898":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:15301:9754":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:11313:9114":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"1:6655:8715":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:852:8210":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"22:0:1967":{"crate_id":22,"path":["ppv_lite86"],"kind":"module"},"11:123:8465":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"22:241:2646":{"crate_id":22,"path":["ppv_lite86","types","u32x4x2"],"kind":"trait"},"2:43633:11916":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:10915:34552":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:22924:11712":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"16:2303:20194":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"11:2352:12433":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"5:1064:32930":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:11217:8547":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"2:3184:13507":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"2:13046:119":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"11:2151:12433":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:22979:11717":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"17:16187:10001":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"2:44290:149":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:14372:9488":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:3965:8062":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"14:187:20163":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:4750:8161":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"16:7085:10250":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:11324:12299":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:39238:215":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"16:6098:21083":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"5:7538:13127":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"6:8197:11594":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"6:5477:11096":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:12724:21156":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"20:178:2080":{"crate_id":20,"path":["rand_core","block","BlockRng"],"kind":"struct"},"2:13502:12495":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:9326:25459":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:8448:8727":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"6:6714:11357":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"2:42758:8692":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:4259:12171":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"11:1728:155":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"6:4916:10866":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:41914:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:37778:13801":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"6:1559:10677":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"6:7537:11549":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"6:6689:11343":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"2:43306:12512":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:15222:9734":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:43176:11679":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:10877:12286":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"18:659:12260":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:13922:9406":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"5:1536:12437":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:12278:12346":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:3172:10273":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"6:553:10615":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:7338:25713":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:10471:156":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"18:96:25330":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"6:5134:10943":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:14079:9427":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:2989:12544":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"21:3645:25377":{"crate_id":21,"path":["zerocopy","SizeInfo"],"kind":"enum"},"2:12838:13544":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:15426:9787":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:11932:13540":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"17:12328:9179":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:3599:13510":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"16:8226:21095":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:46587:8031":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:6784:8716":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"1:3533:12138":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"6:5489:11099":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"2:44113:11956":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"16:6749:10202":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"5:4149:8210":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"5:6402:13491":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:8669:31836":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:43696:11807":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"6:5423:11060":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"21:544:25355":{"crate_id":21,"path":["zerocopy","NoCell"],"kind":"trait"},"6:473:10566":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:6412:21085":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"5:1480:8210":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"6:5052:10929":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:37833:13802":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"6:6788:11380":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:14298:9477":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"6:7516:11535":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:16165:9995":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"2:11359:12489":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:11755:9130":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"16:7539:10051":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:40151:12502":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:12347:943":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:39935:11804":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"16:7061:10249":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:21566:13400":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:40209:8531":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"13:229:8464":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:13387:9287":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:16121:9984":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"1:8314:13241":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"16:3842:10059":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:2438:10025":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:21578:8548":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:16223:10008":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"21:811:8305":{"crate_id":21,"path":["zerocopy","byteorder","LittleEndian"],"kind":"enum"},"2:45670:12002":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:2448:13200":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:1865:12531":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"16:2572:10031":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:2044:196":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"16:5037:10083":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:12574:11910":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:12329:333":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:11016:12288":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:42951:11890":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"17:15333:9762":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:5528:11106":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:22253:13484":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"16:5307:10086":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"22:1495:8177":{"crate_id":22,"path":["ppv_lite86","x86_64","YesS3"],"kind":"struct"},"5:7527:11636":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:4823:13321":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"5:3741:32930":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"21:2569:8287":{"crate_id":21,"path":["zerocopy","byteorder","I64"],"kind":"struct"},"16:8155:10382":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"22:967:8269":{"crate_id":22,"path":["ppv_lite86","soft","x4"],"kind":"struct"},"2:10266:8133":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"5:3635:181":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:33197:13795":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"10:0:2473":{"crate_id":10,"path":["adler"],"kind":"module"},"1:5716:13348":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"11:299:10468":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:11179:12486":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:12863:9223":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"5:5852:250":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:14912:9678":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:6811:11386":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:23012:11720":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"16:8175:12416":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:41612:13333":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:4770:8147":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:10878:12621":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"1:8228:12592":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"5:1155:34314":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"5:5064:12171":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:1449:155":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:39258:13121":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:13173:9253":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"5:4239:12171":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"16:2728:10038":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:16259:9287":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"2:2836:13623":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:11493:12306":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:40050:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:3187:13508":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"5:0:307":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:42111:8687":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"16:3778:10057":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:22844:11707":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"18:623:34565":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"21:535:25364":{"crate_id":21,"path":["zerocopy","KnownLayout"],"kind":"trait"},"5:1726:32930":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"6:1707:10769":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:40530:11841":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:10155:8305":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"1:9105:8704":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:41536:172":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"5:4468:12171":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:9695:12589":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"1:1610:10476":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:597:9095":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:10941:138":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"16:6398:8432":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:4797:8162":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"6:6597:11308":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:3348:2612":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"22:183:2638":{"crate_id":22,"path":["ppv_lite86","types","RotateEachWord32"],"kind":"trait"},"17:14386:9490":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:46078:12034":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:41497:11872":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"20:195:8965":{"crate_id":20,"path":["rand_core","error","ErrorCode"],"kind":"struct"},"2:21419:8045":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:11407:10539":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"16:6047:12363":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:12707:12357":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"5:7645:11643":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"16:2323:20220":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"5:6947:13578":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"6:7461:11496":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"16:2838:10043":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"11:2569:11636":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"5:7553:8515":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:43653:11918":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:870:8502":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:39920:31090":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:10931:8725":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"21:757:25372":{"crate_id":21,"path":["zerocopy","ByteSlice"],"kind":"trait"},"6:5581:11130":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:9427:12172":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"17:10170:8306":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:39977:11799":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:2741:12543":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:12089:9167":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"16:2338:10020":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"6:1517:10649":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"14:220:10465":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:43828:11934":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"5:1428:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:40739:11846":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:11702:9123":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"1:1888:12532":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:586:10632":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"20:127:25353":{"crate_id":20,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"1:11185:8704":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:46625:8033":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:2670:133":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:11730:9126":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"11:1917:10475":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:1890:12533":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"11:2140:12432":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:2506:2487":{"crate_id":1,"path":["std","io"],"kind":"module"},"6:4965:10884":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"16:5831:8406":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:4265:13294":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"16:2528:10029":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:10252:128":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"5:2114:12453":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"6:4876:10843":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"15:394:20185":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"11:2548:10479":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:4104:32930":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"5:7048:263":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:41279:11855":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:39958:11806":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:10254:8126":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:3355:140":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:22876:13211":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"2:6035:11663":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:11166:9104":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:14868:9647":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"17:13325:8353":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:9910:8540":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"16:6466:10159":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:11392:12304":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"21:3552:34845":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Invariants"],"kind":"trait"},"17:15720:9883":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"6:538:10606":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"5:926:13130":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:3832:8810":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"1:4761:11481":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"6:570:10623":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:46488:8024":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"5:2309:8511":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:2512:13815":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"22:238:2645":{"crate_id":22,"path":["ppv_lite86","types","u128x1"],"kind":"trait"},"6:5617:11151":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"1:5526:12561":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"11:811:12451":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"16:6872:10230":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"16:150:8378":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"5:1496:8062":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:11665:12583":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:4865:13287":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:12887:8344":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:2394:10023":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"21:546:25365":{"crate_id":21,"path":["zerocopy","TryFromBytes"],"kind":"trait"},"22:1205:8277":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","u64x2_sse2"],"kind":"struct"},"17:15116:9706":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"17:11825:12326":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:8685:13329":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:8626:12603":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:5713:11387":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:42488:10351":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:21429:32378":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"17:12711:136":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"22:210:2389":{"crate_id":22,"path":["ppv_lite86","types","Vec4Ext"],"kind":"trait"},"17:10982:21166":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:13116:9241":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"17:11661:9120":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"21:756:34772":{"crate_id":21,"path":["zerocopy","sealed","ByteSliceSealed"],"kind":"trait"},"17:3473:12277":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:21558:13211":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:12324:1149":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:2666:12541":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:3192:13509":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"16:2684:10036":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:14876:9648":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"5:3872:12451":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"6:6505:11257":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:9139:8209":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"16:5863:21082":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:11341:12302":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:9905:31837":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:12671:12354":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"17:11242:12298":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:14968:9684":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"6:7446:11491":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:9292:8537":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:15023:9696":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"5:943:8209":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:22659:8550":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:14260:9473":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:41622:8212":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"6:1639:10734":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:45751:12007":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:5958:12171":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"6:1628:10726":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"5:4309:8209":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:4469:8525":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:13064:9234":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:14449:9508":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:8828:8820":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:2835:13211":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:14788:9585":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:12824:21157":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:12827:8990":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"13:110:8191":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"16:7570:10052":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:2707:201":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:2037:12271":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:11567:12312":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"5:6039:8517":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:10997:9102":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"11:1142:12435":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"14:0:2476":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:5453:128":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:11345:12626":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"6:5624:11154":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"17:13832:9390":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"5:1527:8504":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:22469:13480":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"5:7569:11637":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:8844:12158":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:3387:13146":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:42719:8690":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:14235:9469":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:9374:12572":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"17:15342:9763":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:4500:8526":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"18:689:8989":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"5:6600:32930":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:5227:12560":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"9:238:2399":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:6858:11669":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"2:40754:11848":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"22:247:2648":{"crate_id":22,"path":["ppv_lite86","types","u64x4"],"kind":"trait"},"5:7714:12451":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"17:14051:9423":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:40238:11821":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"16:6991:34540":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"16:5897:8408":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"16:7397:34543":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"1:8773:12156":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"17:15748:9892":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:44417:11967":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"21:2780:8288":{"crate_id":21,"path":["zerocopy","byteorder","I128"],"kind":"struct"},"1:648:13110":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"6:4897:10853":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:10313:12613":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"21:1408:8282":{"crate_id":21,"path":["zerocopy","byteorder","U64"],"kind":"struct"},"6:5671:11173":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:15463:9795":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"5:7609:11642":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:9241:12167":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:5260:10989":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:46409:12072":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:40764:11849":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"22:1569:2382":{"crate_id":22,"path":["ppv_lite86","x86_64","vec128_storage"],"kind":"union"},"6:4979:10892":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:9671:21133":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:45360:11976":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:1043:10259":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"6:8300:11606":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:4613:220":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:23001:11719":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"17:14436:9507":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:15376:9776":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:2665:200":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:40506:11839":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"10:36:10487":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"5:2103:12452":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"17:16069:9972":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"6:4985:10895":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:5352:11022":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"21:2342:8286":{"crate_id":21,"path":["zerocopy","byteorder","I32"],"kind":"struct"},"1:9382:12171":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"2:43379:11673":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:41875:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:12225:12342":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"6:5083:10939":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"16:872:12266":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"22:1510:8176":{"crate_id":22,"path":["ppv_lite86","x86_64","NoS4"],"kind":"struct"},"2:2862:162":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"1:8150:12589":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"11:1025:12432":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:43296:11684":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"21:1183:8281":{"crate_id":21,"path":["zerocopy","byteorder","U32"],"kind":"struct"},"1:931:13128":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"6:8317:11611":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:12328:1269":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"6:5515:11105":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"17:15596:9850":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:42072:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:2280:137":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:4050:13269":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:46497:8025":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:31973:12499":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"17:12543:12351":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"2:11097:11673":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:40004:11810":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:4336:12476":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:15092:9704":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:44348:12513":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:4634:13300":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:12443:9193":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:6460:11225":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:11086:25711":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:14414:9496":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"6:5160:10945":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:12344:12493":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"5:5453:13531":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"17:14994:9690":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:10893:13211":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:45567:11999":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"22:260:2650":{"crate_id":22,"path":["ppv_lite86","types","u128x4"],"kind":"trait"},"2:46534:8028":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:12328:13868":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"16:4718:10072":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"22:1535:8183":{"crate_id":22,"path":["ppv_lite86","x86_64","YesNI"],"kind":"struct"},"17:9916:21151":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"20:107:25348":{"crate_id":20,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"11:1891:8810":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"6:7429:11486":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:9409:161":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:44101:11953":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:12584:12285":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"22:180:2384":{"crate_id":22,"path":["ppv_lite86","types","BitOps32"],"kind":"trait"},"21:558:25367":{"crate_id":21,"path":["zerocopy","FromBytes"],"kind":"trait"},"5:1518:8502":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"6:7412:11485":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:22606:11687":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:3782:13253":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"18:573:8968":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:839:8209":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:41670:8209":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:3111:246":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:12150:9170":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:12308:25440":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:1946:11647":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"6:5244:10981":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:46019:12031":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:8162:8725":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"5:4925:216":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"16:5400:8306":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"5:4835:780":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:3571:13591":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:42209:8125":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:11142:8310":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"21:553:25366":{"crate_id":21,"path":["zerocopy","FromZeros"],"kind":"trait"},"1:6509:185":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:10714:9136":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"16:4940:10080":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:6730:13360":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:4944:13284":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:7595:13777":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:46351:8264":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"22:250:2649":{"crate_id":22,"path":["ppv_lite86","types","u128x2"],"kind":"trait"},"2:2609:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:14723:9534":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:22782:31089":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:45281:11968":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:44097:11952":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:403:12267":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:42766:8693":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:32659:10269":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"6:1692:10762":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:3301:13511":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:46468:8022":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:925:12425":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:1057:12432":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:22:795":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"16:2418:10024":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"6:1686:10761":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:7339:11456":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:41423:31075":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:3106:117":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:44006:11949":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:12399:9190":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"1:12331:1672":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"16:2355:8370":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:43797:11930":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"5:3209:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:9088:12604":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"6:5390:11042":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:10720:34557":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:43277:11683":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"16:6976:8444":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:43678:11808":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:13146:9245":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:5273:203":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:45463:11985":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:11252:12186":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"3:0:485":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:40772:11851":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:14025:9419":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"16:2708:10037":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"6:6670:11338":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:42748:2399":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:10315:12612":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"6:5250:10983":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:4402:13594":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"16:7727:8452":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"16:6849:10229":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:13774:9381":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:42230:8135":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"16:2854:10044":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:15168:9721":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:0:1664":{"crate_id":1,"path":["std"],"kind":"module"},"16:6300:12370":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:10247:119":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"16:6120:21084":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:14933:9683":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"11:1887:8062":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"5:6164:12171":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:10506:13215":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:8130:13774":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"5:5457:13532":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:15058:8361":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:6231:10146":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:39046:8213":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:15266:9745":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"16:6802:10215":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"9:482:20072":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"16:5347:10087":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:22329:13488":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"20:18:2081":{"crate_id":20,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"2:3104:8138":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"16:8202:8458":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:14066:9426":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:1971:13175":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"22:274:2381":{"crate_id":22,"path":["ppv_lite86","types","Machine"],"kind":"trait"},"5:3238:8209":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:3554:253":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:12127:9169":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"11:1676:34512":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"16:6634:8440":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:15434:9788":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"20:139:2083":{"crate_id":20,"path":["rand_core","CryptoRng"],"kind":"trait"},"21:3601:8292":{"crate_id":21,"path":["zerocopy","wrappers","Unalign"],"kind":"struct"},"2:41479:11871":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:8439:8536":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:40270:8534":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"11:2562:10482":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"22:1445:8955":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","avx2","u32x4x2_avx2"],"kind":"struct"},"16:6574:8439":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"5:7444:209":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"16:6427:8434":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"22:1560:8173":{"crate_id":22,"path":["ppv_lite86","x86_64","Avx2Machine"],"kind":"struct"},"2:45588:2425":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:10607:25728":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"17:15324:9759":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:16093:9977":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"6:5031:10920":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"22:202:2642":{"crate_id":22,"path":["ppv_lite86","types","Vec2"],"kind":"trait"},"17:11419:8310":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"6:1547:10669":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:9723:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"16:8301:10385":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:32845:13793":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"16:7132:10258":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:15039:9699":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"5:3033:32895":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"17:11688:9122":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"}},"external_crates":{"20":{"name":"rand_core","html_root_url":"https://rust-random.github.io/rand/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"ppv_lite86","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"zerocopy","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}