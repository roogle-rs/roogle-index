{"root":"0:0:1649","crate_version":"0.3.1","includes_private":false,"index":{"0:163":{"id":"0:163","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:164:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:217:422":{"id":"0:217:422","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:192":{"id":"0:192","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:128:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:0:1649":{"id":"0:0:1649","crate_id":0,"name":"rand_chacha","span":{"filename":"src/lib.rs","begin":[9,0],"end":[33,35]},"visibility":"public","docs":"The ChaCha random number generator.","links":{},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\", html_favicon_url\n= \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://rust-random.github.io/rand/\")]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:3-20:0:1636","0:83-0:204:1639","0:84-0:214:1640","0:85-0:133:1641","0:86-0:143:1642","0:87-0:275:1643","0:88-0:285:1644","0:89:1646","0:90:1648"],"is_stripped":false}}},"2:12014":{"id":"2:12014","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12015:812","2:12016:7721","2:12017:33908","2:12018:33909","2:12020:33910","2:12023:25921","2:12024:33911","2:12025:314","2:12026:26625","2:12027:26621","2:12029:26622","2:12031:26623","2:12033:26624","2:12035:33912","2:12036:33913","2:12037:26647","2:12038:26648","2:12039:11549","2:12040:11560","2:12041:1827","2:12042:31369","2:12043:31368","2:12044:25311","2:12045:33914","2:12046:31436","2:12047:26664","2:12050:26665","2:12053:26666","2:12056:7760","2:12060:7720","2:12064:25310","2:12067:26656","2:12070:26658","2:12073:33915","2:12076:33916","2:12079:26660","2:12082:26662","2:12085:33917","2:12088:33918","2:12091:2261","2:12094:33919","2:12097:33920","2:12100:33921","2:12103:33922","2:12105:33923","2:12107:33924","2:12109:33925","2:12110:33926","2:12111:33927","2:12114:33928","2:12117:25045","2:12120:26667","2:12123:33929","2:12126:33930","2:12129:33931","2:12132:33932","2:12134:26550","2:12135:26551","2:12136:26553","2:12137:26554","2:12138:26555","2:12139:33933","2:12141:12725","2:12142:33934"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:214:1640":{"id":"b:2:2553-0:214:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3320-0:133:1641":{"id":"b:2:3320-0:133:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12035:33912":{"id":"2:12035:33912","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11923:1399","str::slice_mut_unchecked":"2:12036:33913","crate::ops::Index":"2:2981:12756"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12132:33932":{"id":"2:12132:33932","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11677:127","`FromStr`":"2:11676:12942"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41546:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11676:12942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11676:12942","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5425:27861":{"id":"5:5425:27861","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12137:26554"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:204:1639":{"id":"a:2:2684:220-0:204:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:106:1792":{"id":"0:106:1792","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:210:612":{"id":"0:210:612","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:21:270-0:143:1642":{"id":"b:21:270-0:143:1642","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[221,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"21:263:2068","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"21:267:2328","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["21:273:24236"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:195":{"id":"0:195","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:196:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:275:1643":{"id":"0:275:1643","crate_id":0,"name":"ChaCha8Core","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"ChaCha with 8 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2741:2283-0:275:1643","a:2:2701:228-0:275:1643","a:2:2684:220-0:275:1643","a:2:8253:12931-0:275:1643","a:2:8254:12930-0:275:1643","b:2:2553-0:275:1643","b:2:2542-0:275:1643","b:2:2548-0:275:1643","b:2:3320-0:275:1643","b:2:2248-0:275:1643","b:2:2538-0:275:1643","b:2:2251-0:275:1643","b:5:677-0:275:1643","b:21:270-0:275:1643","0:283","0:246","0:241","0:277","0:236","0:234","0:264","0:279","0:282","0:280"]}}},"2:12060:7720":{"id":"2:12060:7720","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41404:179","prim@char":"1:11917:418","self::pattern":"2:11716:13147"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13145","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:166:1784":{"id":"0:166:1784","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:149:1642":{"id":"0:149:1642","crate_id":0,"name":"ChaCha20Rng","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"0:282":{"id":"0:282","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:291:1644":{"id":"0:291:1644","crate_id":0,"name":"ChaCha8Rng","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:1761","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:95:1784","0:96:1785","0:97:1786"],"negative":false,"synthetic":false,"blanket_impl":null}}},"20:133:24237":{"id":"20:133:24237","crate_id":20,"name":"as_rngcore","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand_core-0.6.4/src/lib.rs","begin":[235,4],"end":[235,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"RngCore","id":"20:123:1763","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:196:612":{"id":"0:196:612","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:134:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:248:1792","0:250:1793"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:114":{"id":"0:114","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:115:1834","0:116:1850","0:117:1863","0:118:1868","0:119:1871"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3322:1493":{"id":"2:3322:1493","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39352:11299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:118:1868":{"id":"0:118:1868","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112:1826":{"id":"0:112:1826","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:242:1792":{"id":"0:242:1792","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"b:2:2538-0:133:1641":{"id":"b:2:2538-0:133:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:86-0:143:1642":{"id":"0:86-0:143:1642","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[27,45],"end":[27,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Rng","name":"ChaCha20Rng","id":"0:143:1642","glob":false}}},"2:12114:33928":{"id":"2:12114:33928","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:13147"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3320-0:275:1643":{"id":"b:2:3320-0:275:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:20:131-0:143:1642":{"id":"b:20:131-0:143:1642","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand_core-0.6.4/src/lib.rs","begin":[234,0],"end":[234,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"20:128:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RngCore","id":"20:123:1763","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CryptoRngCore","id":"20:129:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["20:133:24237"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:186:1834":{"id":"0:186:1834","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12123:33929":{"id":"2:12123:33929","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:13147"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13145","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:204:1639":{"id":"b:2:2542-0:204:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:677-0:275:1643":{"id":"b:5:677-0:275:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:673:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:679:7779","5:680:7780","5:681:7781"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:136:422":{"id":"0:136:422","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:278:422":{"id":"0:278:422","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211":{"id":"0:211","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:251":{"id":"0:251","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"20:123:1763","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:252:1824","0:253:1825","0:254:1826","0:255:1828"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:92":{"id":"0:92","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:93:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:134:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:100:1792","0:102:1793"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:204:1639":{"id":"b:2:2248-0:204:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2247"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:90:1648":{"id":"0:90:1648","crate_id":0,"name":"ChaChaCore","span":{"filename":"src/lib.rs","begin":[33,0],"end":[33,35]},"visibility":"public","docs":"ChaCha with 20 rounds, low-level interface","links":{},"attrs":[],"deprecation":null,"inner":{"typedef":{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"0:204:1639":{"id":"0:204:1639","crate_id":0,"name":"ChaCha12Core","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"ChaCha with 12 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2741:2283-0:204:1639","a:2:2701:228-0:204:1639","a:2:2684:220-0:204:1639","a:2:8253:12931-0:204:1639","a:2:8254:12930-0:204:1639","b:2:2553-0:204:1639","b:2:2542-0:204:1639","b:2:2548-0:204:1639","b:2:3320-0:204:1639","b:2:2248-0:204:1639","b:2:2538-0:204:1639","b:2:2251-0:204:1639","b:5:677-0:204:1639","b:21:270-0:204:1639","0:193","0:208","0:206","0:170","0:165","0:209","0:211","0:163","0:175","0:212"]}}},"0:176":{"id":"0:176","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:134:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:177:1792","0:179:1793"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:285:1644":{"id":"b:2:2548-0:285:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:275:1643":{"id":"a:2:2701:228-0:275:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12040:11560":{"id":"2:12040:11560","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11917:418"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43347:11528","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:139:612":{"id":"0:139:612","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:147":{"id":"0:147","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:148:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:137":{"id":"0:137","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12088:33918":{"id":"2:12088:33918","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13145","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12142:33934":{"id":"2:12142:33934","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4537:33934"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43688:11436","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:1871":{"id":"0:119:1871","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:278:422"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:146:422":{"id":"0:146:422","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:263":{"id":"0:263","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:128:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12109:33925":{"id":"2:12109:33925","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:138":{"id":"0:138","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:139:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:42-21:274:2063":{"id":"0:42-21:274:2063","crate_id":0,"name":null,"span":{"filename":"src/guts.rs","begin":[14,0],"end":[14,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"ppv_lite86::Machine","name":"Machine","id":"21:274:2063","glob":false}}},"2:12076:33916":{"id":"2:12076:33916","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11716:13147","str::split":"2:12064:25310","prim@char":"1:11917:418","str::split_terminator":"2:12073:33915"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43439:11534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13145","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3320-0:204:1639":{"id":"b:2:3320-0:204:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2544:695":{"id":"2:2544:695","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12016:7721":{"id":"2:12016:7721","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5422:34587":{"id":"5:5422:34587","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7254:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:254:1826":{"id":"0:254:1826","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:188:1863":{"id":"0:188:1863","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:246":{"id":"0:246","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:128:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:255:1828":{"id":"0:255:1828","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41546:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:72:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:21:270-0:285:1644":{"id":"b:21:270-0:285:1644","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[221,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"21:263:2068","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"21:267:2328","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["21:273:24236"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:121":{"id":"0:121","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:128:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:146:422"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:244:1793":{"id":"0:244:1793","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:134:1764","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:679:7779":{"id":"5:679:7779","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"21:273:24236":{"id":"21:273:24236","crate_id":21,"name":"vzip","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[226,4],"end":[226,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"V"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:143:1642":{"id":"b:2:2542-0:143:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:143:1642":{"id":"b:2:2248-0:143:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2247"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:111:1825":{"id":"0:111:1825","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2283-0:143:1642":{"id":"a:2:2741:2283-0:143:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:124":{"id":"0:124","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:125:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12025:314":{"id":"2:12025:314","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12026:26625","`u8`":"1:11934:1501"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12120:26667":{"id":"2:12120:26667","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:13147"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13145","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:133:1641":{"id":"b:2:2542-0:133:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:275:1643":{"id":"b:2:2538-0:275:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:87-0:275:1643":{"id":"0:87-0:275:1643","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[27,58],"end":[27,69]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Core","name":"ChaCha8Core","id":"0:275:1643","glob":false}}},"5:5424:12847":{"id":"5:5424:12847","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7254:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12138:26555":{"id":"2:12138:26555","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:204:1639":{"id":"b:2:2548-0:204:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:143:1642":{"id":"b:2:2538-0:143:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:164:669":{"id":"0:164:669","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12139:33933":{"id":"2:12139:33933","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4539:33933"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43670:11437","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12036:33913":{"id":"2:12036:33913","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11923:1399","crate::ops::IndexMut":"2:2985:12757","str::slice_unchecked":"2:12035:33912"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:133:1641":{"id":"a:2:2701:228-0:133:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:123:695":{"id":"0:123:695","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12111:33927":{"id":"2:12111:33927","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:13147"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11741:13144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12135:26551":{"id":"2:12135:26551","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39560:26546","Self::is_ascii":"2:12134:26550"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39560:26546","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261:1871":{"id":"0:261:1871","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:170":{"id":"0:170","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:134:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:171:1792","0:173:1793"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:210:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:220:1640":{"id":"0:220:1640","crate_id":0,"name":"ChaCha12Rng","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"0:285:1644":{"id":"0:285:1644","crate_id":0,"name":"ChaCha8Rng","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:154:1760","`RngCore`":"20:123:1763"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:256","a:2:2741:2283-0:285:1644","a:2:2701:228-0:285:1644","a:2:2684:220-0:285:1644","a:2:8253:12931-0:285:1644","a:2:8254:12930-0:285:1644","b:2:2553-0:285:1644","b:2:2542-0:285:1644","b:2:2548-0:285:1644","b:2:3320-0:285:1644","b:2:2248-0:285:1644","b:2:2538-0:285:1644","b:2:2251-0:285:1644","b:5:677-0:285:1644","b:20:131-0:285:1644","b:21:270-0:285:1644","0:266","0:289","0:287","0:247","0:264","0:268","0:263","0:251"]}}},"a:2:8253:12931-0:285:1644":{"id":"a:2:8253:12931-0:285:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:12931","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2548-0:143:1642":{"id":"b:2:2548-0:143:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:100:1792":{"id":"0:100:1792","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"2:12134:26550":{"id":"2:12134:26550","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5423:34588":{"id":"5:5423:34588","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:273:2290","`String`":"5:7254:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:273:2290","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:6994:8392","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:204:1639":{"id":"b:2:2251-0:204:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24234"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12110:33926":{"id":"2:12110:33926","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2541:1838":{"id":"2:2541:1838","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2515:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:12931-0:143:1642":{"id":"a:2:8253:12931-0:143:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:12931","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:165":{"id":"0:165","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:1761","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:166:1784","0:167:1785","0:168:1786"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:204:1639":{"id":"b:2:2553-0:204:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12067:26656":{"id":"2:12067:26656","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:13147"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11539:11188","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:12931-0:275:1643":{"id":"a:2:8253:12931-0:275:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:12931","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:95:1784":{"id":"0:95:1784","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:115:1834":{"id":"0:115:1834","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257:1834":{"id":"0:257:1834","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:680:7780":{"id":"5:680:7780","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:677-0:143:1642":{"id":"b:5:677-0:143:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:673:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:679:7779","5:680:7780","5:681:7781"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2684:220-0:143:1642":{"id":"a:2:2684:220-0:143:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:21:270-0:214:1640":{"id":"b:21:270-0:214:1640","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[221,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"21:263:2068","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"21:267:2328","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["21:273:24236"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:21:270-0:204:1639":{"id":"b:21:270-0:204:1639","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[221,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"21:263:2068","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"21:267:2328","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["21:273:24236"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:289":{"id":"0:289","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:290:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12079:26660":{"id":"2:12079:26660","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:13147","str::rsplitn":"2:12082:26662"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43475:11536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2283-0:133:1641":{"id":"a:2:2741:2283-0:133:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:187:1850":{"id":"0:187:1850","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:214:1640":{"id":"b:2:2251-0:214:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24234"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:183:1826":{"id":"0:183:1826","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:275:1643":{"id":"a:2:2684:220-0:275:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:281:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12064:25310":{"id":"2:12064:25310","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11716:13147","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11917:418","str::split_whitespace":"2:12042:31369","str::rsplit":"2:12070:26658"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43371:11185","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:128:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:143:1642":{"id":"b:2:2553-0:143:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:117:1863":{"id":"0:117:1863","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12100:33921":{"id":"2:12100:33921","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11716:13147","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11917:418","str::match_indices":"2:12097:33920"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43539:11540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13145","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:189:1868":{"id":"0:189:1868","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:275:1643":{"id":"b:2:2553-0:275:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:275:1643":{"id":"b:2:2542-0:275:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12027:26621":{"id":"2:12027:26621","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41404:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110:1824":{"id":"0:110:1824","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2283-0:214:1640":{"id":"a:2:2741:2283-0:214:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:288:422"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12031:26623":{"id":"2:12031:26623","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12041:1827":{"id":"2:12041:1827","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43357:8233","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12103:33922":{"id":"2:12103:33922","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:133:1641":{"id":"b:2:2553-0:133:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12039:11549":{"id":"2:12039:11549","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11917:418"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43341:11527","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8254:12930-0:143:1642":{"id":"a:2:8254:12930-0:143:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:12930","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:677-0:214:1640":{"id":"b:5:677-0:214:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:673:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:679:7779","5:680:7780","5:681:7781"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12045:33914":{"id":"2:12045:33914","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43635:11545","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:182:1825":{"id":"0:182:1825","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2283-0:204:1639":{"id":"a:2:2741:2283-0:204:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12050:26665":{"id":"2:12050:26665","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:13147"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12126:33930":{"id":"2:12126:33930","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:13147"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:207:422"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5407:34584":{"id":"5:5407:34584","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:273:2290","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:6994:8392","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:273:2290","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:6994:8392","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83-0:204:1639":{"id":"0:83-0:204:1639","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[27,4],"end":[27,16]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Core","name":"ChaCha12Core","id":"0:204:1639","glob":false}}},"2:12082:26662":{"id":"2:12082:26662","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11917:418","str::splitn":"2:12079:26660","self::pattern":"2:11716:13147"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43493:11537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13145","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3320-0:143:1642":{"id":"b:2:3320-0:143:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:190:1871":{"id":"0:190:1871","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8254:12930-0:133:1641":{"id":"a:2:8254:12930-0:133:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:12930","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:193":{"id":"0:193","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:194:695"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12020:33910":{"id":"2:12020:33910","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12018:33909"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:235:669":{"id":"0:235:669","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"20:123:1763","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:110:1824","0:111:1825","0:112:1826","0:113:1828"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:135":{"id":"0:135","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:136:422"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:18:1773":{"id":"0:18:1773","crate_id":0,"name":"Array64","span":{"filename":"src/chacha.rs","begin":[27,0],"end":[27,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"b:5:677-0:133:1641":{"id":"b:5:677-0:133:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:673:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:679:7779","5:680:7780","5:681:7781"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8254:12930-0:204:1639":{"id":"a:2:8254:12930-0:204:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:12930","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2701:228-0:214:1640":{"id":"a:2:2701:228-0:214:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:181:1824":{"id":"0:181:1824","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:21:270-0:133:1641":{"id":"b:21:270-0:133:1641","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[221,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"21:263:2068","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"21:267:2328","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["21:273:24236"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12042:31369":{"id":"2:12042:31369","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12043:31368"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43645:11546","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:285:1644":{"id":"a:2:2701:228-0:285:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8253:12931-0:204:1639":{"id":"a:2:8253:12931-0:204:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:12931","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:217:422"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:140":{"id":"0:140","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:214:1640":{"id":"b:2:2542-0:214:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:285:1644":{"id":"b:2:2538-0:285:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:168:1786":{"id":"0:168:1786","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:1761","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259:1863":{"id":"0:259:1863","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:236":{"id":"0:236","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:1761","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:237:1784","0:238:1785","0:239:1786"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:148:669":{"id":"0:148:669","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:248:1792":{"id":"0:248:1792","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"5:681:7781":{"id":"5:681:7781","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:677-0:204:1639":{"id":"b:5:677-0:204:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:673:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:679:7779","5:680:7780","5:681:7781"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:171:1792":{"id":"0:171:1792","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:238:1785":{"id":"0:238:1785","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:18:1773","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"2:12038:26648":{"id":"2:12038:26648","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12037:26647"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265:695":{"id":"0:265:695","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12137:26554":{"id":"2:12137:26554","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:207:422":{"id":"0:207:422","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12091:2261":{"id":"2:12091:2261","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11716:13147","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11917:418","str::matches":"2:12091:2261"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43575:11542","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:234":{"id":"0:234","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:235:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:108:1793":{"id":"0:108:1793","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:134:1764","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:204:1639":{"id":"b:2:2538-0:204:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:167:1785":{"id":"0:167:1785","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:18:1773","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"2:12024:33911":{"id":"2:12024:33911","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:175":{"id":"0:175","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:128:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:281:612":{"id":"0:281:612","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:93:669":{"id":"0:93:669","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:12931-0:214:1640":{"id":"a:2:8253:12931-0:214:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:12931","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:85-0:133:1641":{"id":"0:85-0:133:1641","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[27,31],"end":[27,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Core","name":"ChaCha20Core","id":"0:133:1641","glob":false}}},"2:12070:26658":{"id":"2:12070:26658","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11716:13147","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11917:418","str::split":"2:12064:25310"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43389:11189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13145","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:677-0:285:1644":{"id":"b:5:677-0:285:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:673:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:679:7779","5:680:7780","5:681:7781"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12136:26553":{"id":"2:12136:26553","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12043:31368":{"id":"2:12043:31368","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12042:31369"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43654:11547","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2283-0:275:1643":{"id":"a:2:2741:2283-0:275:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8254:12930-0:275:1643":{"id":"a:2:8254:12930-0:275:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:12930","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8254:12930-0:285:1644":{"id":"a:2:8254:12930-0:285:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:12930","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12105:33923":{"id":"2:12105:33923","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:21:270-0:275:1643":{"id":"b:21:270-0:275:1643","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[221,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"21:263:2068","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"21:267:2328","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["21:273:24236"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:134:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:242:1792","0:244:1793"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:275:1643":{"id":"b:2:2251-0:275:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24234"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:285:1644":{"id":"b:2:2542-0:285:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:143:1642":{"id":"b:2:2251-0:143:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24234"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:250:1793":{"id":"0:250:1793","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:134:1764","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:133:1641":{"id":"a:2:2684:220-0:133:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12026:26625":{"id":"2:12026:26625","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11934:1501"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5411:34585":{"id":"5:5411:34585","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7254:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2557:1479":{"id":"2:2557:1479","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41546:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:265:695"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:285:1644":{"id":"b:2:2553-0:285:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5406":{"id":"5:5406","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5407:34584","5:5408:13378","5:5411:34585","5:5414:34586","5:5422:34587","5:5423:34588","5:5424:12847","5:5425:27861","5:5426:27862"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12015:812":{"id":"2:12015:812","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11917:418"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"20:123:1763","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:181:1824","0:182:1825","0:183:1826","0:184:1828"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12107:33924":{"id":"2:12107:33924","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:290:669":{"id":"0:290:669","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:122":{"id":"0:122","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:123:695"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:185":{"id":"0:185","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:186:1834","0:187:1850","0:188:1863","0:189:1868","0:190:1871"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2253:24234":{"id":"2:2253:24234","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8254:12930-0:214:1640":{"id":"a:2:8254:12930-0:214:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:12930","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2548-0:214:1640":{"id":"b:2:2548-0:214:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:113:1828":{"id":"0:113:1828","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41546:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:72:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84-0:214:1640":{"id":"0:84-0:214:1640","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[27,18],"end":[27,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Rng","name":"ChaCha12Rng","id":"0:214:1640","glob":false}}},"0:88-0:285:1644":{"id":"0:88-0:285:1644","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[27,71],"end":[27,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Rng","name":"ChaCha8Rng","id":"0:285:1644","glob":false}}},"2:12073:33915":{"id":"2:12073:33915","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11716:13147","str::split":"2:12064:25310","prim@char":"1:11917:418","`DoubleEndedIterator`":"2:7244:121","str::rsplit_terminator":"2:12076:33916"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43421:11533","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2552:1480":{"id":"2:2552:1480","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41546:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12117:25045":{"id":"2:12117:25045","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:13147"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:96:1785":{"id":"0:96:1785","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:18:1773","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12029:26622":{"id":"2:12029:26622","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41404:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:194:695":{"id":"0:194:695","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:288:422":{"id":"0:288:422","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3320-0:214:1640":{"id":"b:2:3320-0:214:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:179:1793":{"id":"0:179:1793","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:134:1764","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:116:1850":{"id":"0:116:1850","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:275:1643":{"id":"b:2:2248-0:275:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2247"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:258:1850":{"id":"0:258:1850","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:285:1644":{"id":"b:2:2248-0:285:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2247"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2551:128":{"id":"2:2551:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:125:612":{"id":"0:125:612","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:267:612":{"id":"0:267:612","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:102:1793":{"id":"0:102:1793","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:134:1764","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:239:1786":{"id":"0:239:1786","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:1761","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:133:1641":{"id":"0:133:1641","crate_id":0,"name":"ChaCha20Core","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2741:2283-0:133:1641","a:2:2701:228-0:133:1641","a:2:2684:220-0:133:1641","a:2:8253:12931-0:133:1641","a:2:8254:12930-0:133:1641","b:2:2553-0:133:1641","b:2:2542-0:133:1641","b:2:2548-0:133:1641","b:2:3320-0:133:1641","b:2:2248-0:133:1641","b:2:2538-0:133:1641","b:2:2251-0:133:1641","b:5:677-0:133:1641","b:21:270-0:133:1641","0:137","0:138","0:135","0:122","0:104","0:92","0:94","0:141","0:99","0:140"]}}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12141:12725":{"id":"2:12141:12725","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4540:12725"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43679:11428","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219:669":{"id":"0:219:669","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2283-0:285:1644":{"id":"a:2:2741:2283-0:285:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:143:1642":{"id":"0:143:1642","crate_id":0,"name":"ChaCha20Rng","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:154:1760","`RngCore`":"20:123:1763"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:114","a:2:2741:2283-0:143:1642","a:2:2701:228-0:143:1642","a:2:2684:220-0:143:1642","a:2:8253:12931-0:143:1642","a:2:8254:12930-0:143:1642","b:2:2553-0:143:1642","b:2:2542-0:143:1642","b:2:2548-0:143:1642","b:2:3320-0:143:1642","b:2:2248-0:143:1642","b:2:2538-0:143:1642","b:2:2251-0:143:1642","b:5:677-0:143:1642","b:20:131-0:143:1642","b:21:270-0:143:1642","0:105","0:109","0:145","0:121","0:126","0:122","0:147","0:124"]}}},"0:208":{"id":"0:208","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:256":{"id":"0:256","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:257:1834","0:258:1850","0:259:1863","0:260:1868","0:261:1871"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:260:1868":{"id":"0:260:1868","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:285:1644":{"id":"b:2:2251-0:285:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24234"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:133:1641":{"id":"b:2:2251-0:133:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24234"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:253:1825":{"id":"0:253:1825","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12017:33908":{"id":"2:12017:33908","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12018:33909":{"id":"2:12018:33909","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:184:1828":{"id":"0:184:1828","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41546:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:72:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:97:1786":{"id":"0:97:1786","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:1761","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5414:34586":{"id":"5:5414:34586","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7254:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12094:33919":{"id":"2:12094:33919","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11716:13147","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11917:418","str::matches":"2:12091:2261"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43593:11543","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13145","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:283":{"id":"0:283","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2684:220-0:214:1640":{"id":"a:2:2684:220-0:214:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12037:26647":{"id":"2:12037:26647","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12038:26648"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12129:33931":{"id":"2:12129:33931","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:13147"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13145","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:12931-0:133:1641":{"id":"a:2:8253:12931-0:133:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:12931","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12046:31436":{"id":"2:12046:31436","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43663:11548","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:177:1792":{"id":"0:177:1792","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"2:12056:7760":{"id":"2:12056:7760","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41404:179","prim@char":"1:11917:418","self::pattern":"2:11716:13147"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5426:27862":{"id":"5:5426:27862","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12138:26555"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:204:1639":{"id":"a:2:2701:228-0:204:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:204:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2548-0:275:1643":{"id":"b:2:2548-0:275:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:275:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12097:33920":{"id":"2:12097:33920","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11716:13147","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11917:418","str::rmatch_indices":"2:12100:33921"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43521:11539","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:252:1824":{"id":"0:252:1824","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12033:26624":{"id":"2:12033:26624","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:20:131-0:285:1644":{"id":"b:20:131-0:285:1644","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand_core-0.6.4/src/lib.rs","begin":[234,0],"end":[234,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"20:128:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RngCore","id":"20:123:1763","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CryptoRngCore","id":"20:129:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["20:133:24237"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3320-0:285:1644":{"id":"b:2:3320-0:285:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2684:220-0:285:1644":{"id":"a:2:2684:220-0:285:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:285:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12053:26666":{"id":"2:12053:26666","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:13147"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13145","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:20:131-0:214:1640":{"id":"b:20:131-0:214:1640","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand_core-0.6.4/src/lib.rs","begin":[234,0],"end":[234,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"20:128:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RngCore","id":"20:123:1763","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CryptoRngCore","id":"20:129:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["20:133:24237"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:214:1640":{"id":"0:214:1640","crate_id":0,"name":"ChaCha12Rng","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:154:1760","`RngCore`":"20:123:1763"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:185","a:2:2741:2283-0:214:1640","a:2:2701:228-0:214:1640","a:2:2684:220-0:214:1640","a:2:8253:12931-0:214:1640","a:2:8254:12930-0:214:1640","b:2:2553-0:214:1640","b:2:2542-0:214:1640","b:2:2548-0:214:1640","b:2:3320-0:214:1640","b:2:2248-0:214:1640","b:2:2538-0:214:1640","b:2:2251-0:214:1640","b:5:677-0:214:1640","b:20:131-0:214:1640","b:21:270-0:214:1640","0:193","0:192","0:216","0:197","0:176","0:195","0:180","0:218"]}}},"b:2:2538-0:214:1640":{"id":"b:2:2538-0:214:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2250:2247":{"id":"2:2250:2247","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12047:26664":{"id":"2:12047:26664","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:13147"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:214:1640":{"id":"b:2:2248-0:214:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2247"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12085:33917":{"id":"2:12085:33917","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:89:1646":{"id":"0:89:1646","crate_id":0,"name":"ChaChaRng","span":{"filename":"src/lib.rs","begin":[31,0],"end":[31,33]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"typedef":{"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"2:2556:128":{"id":"2:2556:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32031:10073","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:237:1784":{"id":"0:237:1784","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"2:12023:25921":{"id":"2:12023:25921","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11283:13148"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12044:25311":{"id":"2:12044:25311","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43625:11544","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:133:1641":{"id":"b:2:2548-0:133:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:105":{"id":"0:105","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:134:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:106:1792","0:108:1793"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:133:1641":{"id":"b:2:2248-0:133:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2247"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:143:1642":{"id":"a:2:2701:228-0:143:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:143:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3-20:0:1636":{"id":"0:3-20:0:1636","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[21,0],"end":[21,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"rand_core","name":"rand_core","id":"20:0:1636","glob":false}}},"5:5408:13378":{"id":"5:5408:13378","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7254:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:12050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:173:1793":{"id":"0:173:1793","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:134:1764","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"2:7322:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"18:481:8680":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:11544:8992":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"16:7411:8296":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"5:2957:33533":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:47540:11670":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:41879:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"6:1519:10236":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"11:2180:10071":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:6211:8114":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:41297:8443":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"11:2033:9848":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:45405:11598":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:13194:9404":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"11:1826:8037":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:8416:2080":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"6:4367:10430":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:13169:9395":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:926:8398":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:8989:8474":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"17:10615:8879":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"6:6670:11010":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:4601:11006":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:480:8103":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:11064:8429":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"5:5509:8053":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:2753:12999":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:6876:8342":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"5:3580:7862":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:9322:35076":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:21:682":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:8315:11732":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"6:4394:10440":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"11:630:7862":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:6678:13368":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:11585:9004":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"16:2830:9634":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:2589:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"14:0:2151":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:2348:182":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:9178:11885":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:12236:9143":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:42721:8450":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:20607:31540":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:46730:11640":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"16:5797:8313":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"21:183:2311":{"crate_id":21,"path":["ppv_lite86","types","RotateEachWord32"],"kind":"trait"},"16:4872:9671":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"5:4163:8043":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"3:229:210":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"18:660:11863":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:13639:9538":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:1844:12092":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"9:388:19097":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:2151:588":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:2768:9858":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:2800:13388":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:11600:9010":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:2738:7799":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:2691:2282":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"6:4542:10515":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:123:13781":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:11490:26457":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"5:2458:11153":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"10:0:2148":{"crate_id":10,"path":["adler"],"kind":"module"},"2:21729:11199":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:11918:1517":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"5:6743:8068":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"11:844:12019":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:2796:13386":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"5:779:8019":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"6:4567:10528":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"11:2168:10069":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:4011:12045":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:9121:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"16:6351:20097":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:45361:11596":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:2805:9863":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"16:8025:9962":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:10000:8894":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:13024:9372":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:44145:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"5:682:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:8514:11746":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:45575:11605":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:9188:35080":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"16:2572:9623":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"17:12419:9172":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"21:884:2061":{"crate_id":21,"path":["ppv_lite86","dispatch"],"kind":"macro"},"1:7619:12136":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:487:11871":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:12576:9200":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"16:7529:8347":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:11319:8967":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"6:541:10193":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:8253:12931":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:45858:2320":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:8759:12157":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:10010:12091":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"16:5032:9676":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:7961:12145":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:9839:11910":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"20:162:2299":{"crate_id":20,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"6:4753:10573":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:1708:10355":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"6:4817:10605":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:6606:10982":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:7202:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:9146:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:11721:9028":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"6:4847:10617":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:12126:9112":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:8867:12966":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"16:2470:9619":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"5:0:286":{"crate_id":5,"path":["alloc"],"kind":"module"},"16:2546:9622":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:3472:24279":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:1747:11173":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"6:5993:10883":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:3463:7789":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"5:2167:8399":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:30052:12859":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:40157:11446":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:13803:9582":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"5:4347:245":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:9057:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"11:447:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:1982:185":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:11360:12112":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:41251:11486":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"16:8156:8358":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:40084:11440":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:8525:11747":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"5:3719:8472":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"6:1499:10228":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"21:1205:8199":{"crate_id":21,"path":["ppv_lite86","x86_64","sse2","u64x2_sse2"],"kind":"struct"},"2:23048:8439":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:10452:11942":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:42682:8448":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:10731:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:41388:11501":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"5:2220:34684":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:21956:11215":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:2749:7803":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"17:10015:11921":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"17:9917:8238":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"6:6135:10926":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:40129:11445":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:9011:24317":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"17:10735:8891":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:11532:8991":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:3948:12864":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"16:4624:9664":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:47735:7694":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"17:13651:9541":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:676:12728":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"6:4954:10679":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:13659:9544":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:6767:9818":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:40481:11469":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"16:5779:8309":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:9157:7792":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:9534:11896":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:12033:9100":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:10079:12168":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:7599:13364":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:13121:9388":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:46666:11638":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:13399:9458":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:10478:11944":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:45505:11602":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:7165:13366":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:11628:9020":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:6935:8130":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:40058:11437":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"21:1111:8192":{"crate_id":21,"path":["ppv_lite86","x86_64","sse2","u32x4_sse2"],"kind":"struct"},"2:41376:11500":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:13461:9473":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"6:4943:10676":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"17:12158:9116":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"6:62:13726":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:44110:11584":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:11573:9001":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:13698:9552":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:13443:9469":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:10840:8906":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"16:6293:9742":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:21838:11200":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:7600:11679":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:8255:8421":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:3934:12863":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:9108:35077":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:9478:11891":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"21:216:2318":{"crate_id":21,"path":["ppv_lite86","types","Words4"],"kind":"trait"},"1:5593:8115":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"6:6076:10914":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:2827:9867":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:2741:2283":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:3193:12105":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:1916:11180":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:12293:9155":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:11522:11789":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"6:7539:11130":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"11:1663:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"11:644:7863":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:4135:12887":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:43645:11546":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:40323:11452":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:11653:9024":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:1034:11873":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"16:2319:9612":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:4706:12880":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"16:7837:9925":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:10569:8871":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:2161:13405":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"6:6704:11016":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:3142:11880":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:8076:12146":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"18:515:8683":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:3488:12838":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"6:5881:10820":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:42691:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:12138:9113":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:2933:11879":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:47746:7695":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"6:1574:10269":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:41317:30892":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:11915:371":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"21:1540:7840":{"crate_id":21,"path":["ppv_lite86","x86_64","NoNI"],"kind":"struct"},"15:180:19191":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:2524:9621":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:7815:12141":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"5:7177:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"17:12923:9332":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:7837:11684":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:9641:11900":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:41487:7854":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"17:10626:8880":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"18:652:8682":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:21442:8432":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:8977:12164":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:8132:12819":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:39352:11299":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"6:4747:10571":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:9959:8818":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:12592:9202":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:5462:12125":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"16:6321:8334":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"17:10798:20165":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:43187:12072":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:3935:8043":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"16:5104:9678":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:10068:11928":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"21:241:2322":{"crate_id":21,"path":["ppv_lite86","types","u32x4x2"],"kind":"trait"},"2:45760:11612":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:8255:12155":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"14:187:19185":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"6:4290:10370":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"6:573:10209":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:11879:9075":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:11969:9091":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:43871:11564":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:43663:11548":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"16:6943:20100":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"16:8214:9901":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"6:4871:10631":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:11921:312":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:9907:8237":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:47338:11668":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:40141:30932":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:10134:12053":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:47086:11666":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"16:6854:9824":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:44098:11581":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:11920:1050":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:12835:9269":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"5:1500:8398":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"15:219:8360":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"18:766:24015":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:5991:11182":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:21963:11218":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"6:7522:11125":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:46028:11619":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"16:6575:20098":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:42674:8447":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"0:90:1648":{"crate_id":0,"path":["rand_chacha","ChaChaCore"],"kind":"typedef"},"2:40124:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"6:4303:10379":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"16:4969:9674":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:13763:9571":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:22436:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"16:7244:35072":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"11:0:2149":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"11:1831:8055":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"2:4812:796":{"crate_id":2,"path":["core","iter"],"kind":"module"},"11:1852:10067":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:4665:12890":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:4255:207":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"9:0:2147":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:21094:12820":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"17:12980:9367":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"16:7743:8356":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:4459:12891":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:6396:12131":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"9:502:10132":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"16:7803:9921":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:2758:13001":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:30847:183":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:3996:12867":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:1583:10066":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"6:5014:10706":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:8271:11731":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:40446:11464":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"16:7103:11758":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:8200:12856":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"16:7652:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:4722:10558":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:8366:8556":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:8249:12889":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"5:2128:8034":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:13233:9415":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:39172:11294":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"16:4596:9663":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"5:4031:8016":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:21572:13008":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:45535:11603":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:10670:8883":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:4327:10397":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:2376:12815":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"5:3734:12032":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:30299:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"17:13344:9442":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:857:7863":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:1895:12094":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"6:4555:10519":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:1947:11875":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:12536:9195":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:8120:11724":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:12386:12061":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:6804:11076":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"6:6129:10925":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:13309:9433":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:12358:9162":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"7:0:1545":{"crate_id":7,"path":["unwind"],"kind":"module"},"5:4362:8045":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"17:10303:11934":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:8753:8229":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:13181:9398":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:10589:8876":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:44178:13502":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:8310:20154":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"14:31:12009":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"16:5594:9640":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:3956:12865":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:13292:9426":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:42182:7793":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"11:1027:19174":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"6:4916:10658":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:12331:9160":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"1:8821:12159":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"5:1439:7725":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:618:12081":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:4597:11002":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"16:6179:8314":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:2694:9628":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"6:5079:10737":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:39366:9901":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"5:4938:8043":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"16:0:2153":{"crate_id":16,"path":["gimli"],"kind":"module"},"16:2404:9616":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:8651:8213":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:8389:20156":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"16:5708:8307":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:8909:8233":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:9038:35083":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"20:123:1763":{"crate_id":20,"path":["rand_core","RngCore"],"kind":"trait"},"2:10169:11189":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"6:5798:10784":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:44378:11594":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:40294:11448":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:4517:10502":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"5:1520:12031":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:41605:7725":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"6:7277:11110":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:10354:8857":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:43670:11437":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:39963:11428":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"16:6361:9748":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:11056:25146":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:10096:12052":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"6:4549:10517":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:8765:186":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"16:2668:9627":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:12959:9362":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:10897:8908":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:20933:12820":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:45713:11611":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:12646:9216":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:10491:8138":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"6:1512:10234":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:10262:11537":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:40204:8079":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:10316:8855":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:44166:11588":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"17:13332:9436":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:3063:8717":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:2780:9862":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:8984:8464":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"11:1858:10068":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:731:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:4739:10567":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:5377:12122":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"6:4677:10536":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:11716:13147":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:9817:222":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"16:7626:12004":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:5472:8043":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"16:5643:9687":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:2298:19210":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:3163:13197":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:7043:30367":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"16:5571:9638":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"5:6601:8066":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"6:6833:11092":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"5:5820:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:2851:13395":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:9153:7783":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"5:6699:244":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"11:1012:12021":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"5:1285:12020":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:41919:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:8674:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:11928:643":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:2212:12097":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"14:160:12009":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"5:7279:12042":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:4468:10475":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:41520:7855":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:7206:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"6:4388:10438":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:41999:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"6:4445:10467":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:40416:11461":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:3962:12866":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:39227:199":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:3191:12104":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:42039:8444":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"16:4932:9673":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"21:224:2319":{"crate_id":21,"path":["ppv_lite86","types","Swap64"],"kind":"trait"},"17:247:11869":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"11:332:8005":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"18:609:11862":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:1637:11172":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:2763:9861":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:4199:12115":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"16:5071:9677":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:40716:8085":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:1561:7862":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:42925:11520":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:43439:11534":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"18:690:8703":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"16:8109:9971":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:2963:13114":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:11101:11778":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:2696:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:10823:8780":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"6:1568:10267":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:8788:8230":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"6:5862:10818":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:8683:8227":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:42411:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"5:7003:7725":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"17:13678:9549":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:9986:8820":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"16:2378:9615":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:44126:8429":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"21:202:2315":{"crate_id":21,"path":["ppv_lite86","types","Vec2"],"kind":"trait"},"2:42175:7792":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:21118:12820":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:39247:202":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:13469:9475":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:10334:8217":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"18:719:8708":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:13879:9598":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"16:8180:20106":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:10885:8247":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"16:3815:9652":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"5:6611:8067":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"16:3782:9651":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"11:1611:8009":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:2892:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"5:3209:10065":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:2890:210":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"1:10448:12106":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:2509:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"1:530:8104":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:40364:11457":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"16:7478:9643":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:40110:11444":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"5:3180:33709":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"21:967:8191":{"crate_id":21,"path":["ppv_lite86","soft","x4"],"kind":"struct"},"16:2337:8274":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:21125:13013":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:10721:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:46125:11622":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:22271:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:5044:12118":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:2855:8111":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:2544:8108":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:8490:20159":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:43315:11523":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:11282:8954":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:5949:206":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"6:562:10204":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"10:36:10078":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:21814:8434":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:12894:9321":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:9895:11917":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"16:8072:9966":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"5:4073:7863":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"16:6431:9754":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"6:4786:10593":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:12312:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:4119:12885":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"21:244:2323":{"crate_id":21,"path":["ppv_lite86","types","u64x2x2"],"kind":"trait"},"1:2364:12809":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:1733:13416":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"21:1520:7836":{"crate_id":21,"path":["ppv_lite86","x86_64","NoA1"],"kind":"struct"},"6:5024:10711":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"1:11940:1555":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:4390:7817":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:9613:8091":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"11:723:8395":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"6:7557:11133":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"18:699:8207":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:911:8055":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"17:12634:9209":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:42401:11506":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"6:4488:10486":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"16:2616:9625":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"17:11011:8911":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"6:506:10167":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"17:12098:9108":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:10125:8821":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:4327:9656":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:12563:9199":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"5:4193:8043":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"6:1716:10359":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:8360:12050":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"6:4340:10407":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"6:4861:10625":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:9545:8800":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:4326:8077":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:8847:8423":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"16:7077:20101":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:11821:9066":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:10491:11945":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:44094:11580":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:1594:10068":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:11272:11783":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:1071:12021":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:3158:24948":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:42441:9940":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:6432:8126":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:21454:31359":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:9340:11888":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:11197:12180":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:9138:11884":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:39373:12065":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"21:238:2321":{"crate_id":21,"path":["ppv_lite86","types","u128x1"],"kind":"trait"},"21:1530:7838":{"crate_id":21,"path":["ppv_lite86","x86_64","NoA2"],"kind":"struct"},"16:6990:9838":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:3424:12111":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:40254:12067":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"6:6840:11095":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"16:6474:8339":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"20:128:1762":{"crate_id":20,"path":["rand_core","CryptoRng"],"kind":"trait"},"2:22535:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:355:12078":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:11787:13153":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:2522:237":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"5:7208:30932":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:2932:2287":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"16:6488:9756":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"11:285:10060":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:43421:11533":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"18:624:35087":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"5:1489:8397":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"6:4462:10473":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"16:7767:20104":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:10864:12125":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:11922:1369":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:13477:9476":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:8632:20141":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"18:599:35086":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"11:1121:12024":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"6:6725:11022":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:6774:11059":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:9617:11898":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:7722:12140":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:40276:8413":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:22403:11223":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:44106:11583":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:6921:8420":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"21:267:2328":{"crate_id":21,"path":["ppv_lite86","types","VZip"],"kind":"trait"},"6:5889:10825":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"16:5811:9695":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"11:2049:12020":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:2580:12099":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:45473:11601":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"16:7509:9644":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"6:494:10162":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:13041:9374":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:2744:7801":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:8679:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:11927:641":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:39969:11429":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"18:636:8699":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:11224:11779":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:21676:11198":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:1565:7725":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:12449:9178":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"6:6572:10963":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:4023:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:43279:12075":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:39086:7866":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:12259:9152":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:6156:8465":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:7244:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:10967:8909":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:40495:11470":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:12403:9171":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:11934:1501":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"16:4480:9659":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:47689:7690":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"16:4037:9655":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"16:6201:11960":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:10343:12157":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:10598:8909":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:44403:11595":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:40314:11450":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:5384:8043":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"6:1689:10348":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:5978:10881":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:4097:30370":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:1924:12787":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"5:5736:8037":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:45557:11604":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:3234:13113":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"18:582:7709":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:3157:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"16:8129:12005":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:11266:11782":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"5:2956:7779":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:638:12084":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"6:4780:10590":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:10751:25135":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:11337:8145":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:7883:12144":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"6:1648:10324":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"6:7551:11132":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:9826:11909":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:2898:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:32067:12063":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:1931:654":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:5716:12129":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:13135:9392":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:4868:12915":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:20605:31535":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:587:10217":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:12361:192":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:6460:8338":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:13219:9412":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"11:736:8396":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"5:1299:12024":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:10014:11185":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"6:4379:10433":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"6:4983:10696":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:9853:11911":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:2357:9614":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:40234:11194":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:2469:12820":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:40685:11473":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:2350:12805":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:4928:10667":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:41340:11499":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"8:0:2146":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:3270:12108":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:3152:234":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:2515:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:10445:12104":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:3169:13196":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:6919:35074":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"5:1008:8016":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"16:3749:9650":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:8883:12965":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:9933:8225":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"16:8142:12008":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:12282:9153":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:11446:8975":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:1062:12020":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:1048:9848":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:21865:11202":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:8791:11751":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"5:1511:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:2822:13391":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:2833:9868":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:7810:8759":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"1:10386:8137":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:6390:9751":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"16:6132:9737":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:11391:8264":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:6624:10991":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"5:775:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:47624:8188":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"5:5259:13132":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:10248:11536":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:4046:13111":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:6981:8117":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:20890:13405":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"1:9127:12165":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"6:6617:10987":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:45427:11599":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:8598:20163":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:12496:9192":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"5:6994:8392":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:45636:11607":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"16:7042:9845":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"16:6728:9805":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:11478:8479":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"20:113:24027":{"crate_id":20,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"21:299:2069":{"crate_id":21,"path":["ppv_lite86","types","StoreBytes"],"kind":"trait"},"2:47799:7698":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"16:6696:20099":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:6725:31463":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"6:5774:10768":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"5:5840:8051":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"16:5305:9679":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:8104:8420":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:9772:8815":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:12059:9103":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:7673:12729":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:1787:11874":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"18:681:8700":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:2163:13406":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"1:10686:11683":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:11615:9016":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:45982:11617":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:4:1015":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:4187:7815":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:21850:30901":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:3197:13112":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:47680:7689":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"20:90:24024":{"crate_id":20,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"17:13066:9384":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:44090:11579":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"1:8153:8412":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:30283:11226":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:922:8397":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:20815:13017":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"17:11060:8244":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:9155:7782":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:10527:20272":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"16:8047:9963":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:11283:13148":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"5:7102:7725":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:5742:8460":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:43158:11191":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:11736:13145":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:10977:8142":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:11529:11789":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"6:7504:11122":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:20588:31539":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"17:11800:9062":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"6:1732:10364":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"11:2201:11161":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"21:274:2063":{"crate_id":21,"path":["ppv_lite86","types","Machine"],"kind":"trait"},"2:9628:8096":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:7867:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:13015:9368":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"16:2786:9632":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"5:2032:8472":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:2981:12756":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:20590:31537":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:420:8766":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:11239:11780":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:9443:11889":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"9:174:8383":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"5:7237:11167":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:11032:11750":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"5:1773:8055":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:9965:7862":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"16:154:7999":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"6:6719:11021":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"21:206:2070":{"crate_id":21,"path":["ppv_lite86","types","Vec4"],"kind":"trait"},"1:11044:11751":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:10039:11924":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"5:626:12028":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:4474:10478":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:2812:13389":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"16:7016:9839":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:8498:8561":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:32031:10073":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:2784:13000":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"6:4894:10642":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:7595:7865":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:9530:8087":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"21:253:2121":{"crate_id":21,"path":["ppv_lite86","types","u32x4x4"],"kind":"trait"},"2:12609:12743":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:8263:12152":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:1433:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:9596:8090":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:40214:12066":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"13:0:2144":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:12915:9331":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"17:9596:8813":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:41402:181":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:12299:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:41470:7863":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:11253:13462":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:10505:11946":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:6392:11474":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"17:10761:20164":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"6:4482:10483":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:13516:9488":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"6:4832:10609":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"6:1589:10281":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:12799:9238":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"5:3235:10068":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"17:9653:11901":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:43259:12074":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:8842:33164":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:12550:9198":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"16:3225:9646":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:10207:12054":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:8183:11544":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:1544:8043":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"17:12461:9180":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:47784:7697":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:40432:8697":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:45381:11597":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"16:6662:9791":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:13721:9565":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:11136:8920":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"6:4809:10602":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:32071:11291":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"6:7249:11107":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"6:5766:10766":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:2348:11175":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"16:7557:8349":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:20993:12820":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"16:6890:8343":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:2929:2286":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:13426:9465":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:10440:11941":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:30477:30893":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:44122:11587":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"11:119:8003":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:875:8395":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"6:4841:10615":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:9409:20175":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:9424:8809":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:20781:13405":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"16:4789:9668":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:7850:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"6:4694:10545":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:13376:9450":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"16:7572:35069":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:6609:217":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:5408:12124":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:13240:9417":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:13145:9393":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:5393:12123":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:8289:12156":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:1821:12091":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"16:7467:9904":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"16:6935:11973":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:41546:210":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:13506:9483":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:4145:8411":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:7498:9908":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:46696:11639":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:4599:11004":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:5579:206":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:7875:12143":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:20995:13007":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"6:4625:10532":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:45695:11610":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"16:7437:9903":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"16:7859:20105":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"5:1461:8395":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:1756:11176":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:2312:188":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:40065:13219":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"2:47586:11671":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:2366:12810":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:8823:8231":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:0:496":{"crate_id":2,"path":["core"],"kind":"module"},"1:3378:8043":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"16:7065:9847":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:4606:13213":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:11120:11761":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:1572:8055":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"6:5919:10848":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"16:2967:19237":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:361:12079":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:2847:13394":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"21:232:2098":{"crate_id":21,"path":["ppv_lite86","types","u32x4"],"kind":"trait"},"16:2448:9618":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:6865:8129":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"21:1416:8677":{"crate_id":21,"path":["ppv_lite86","x86_64","sse2","G1"],"kind":"struct"},"6:5007:10703":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:1568:8037":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:2470:13224":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:4259:12046":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:9512:11894":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"6:4715:10557":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:46620:11637":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:20753:13015":{"crate_id":2,"path":["core","core_simd","cast","SimdCastPtr"],"kind":"trait"},"2:45906:11615":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:4587:12866":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:12046:9101":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:10808:12058":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:6772:13360":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"18:644:8682":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"16:5847:9702":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"5:3327:8055":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"1:9091:11762":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:21927:30925":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:39560:26546":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:242:11868":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"16:5693:8304":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"6:5057:10731":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:11923:1399":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:21343:13010":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"5:5666:232":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"5:7268:11168":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"6:4427:10458":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:10255:24712":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"17:10712:20274":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:9072:11761":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:12194:9122":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:22370:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"17:9946:8817":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:41639:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:1978:11878":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"5:1099:34989":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:2512:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:2746:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:25858:8440":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"16:7259:7854":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:10057:11188":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"21:1505:7834":{"crate_id":21,"path":["ppv_lite86","x86_64","YesS4"],"kind":"struct"},"17:12019:8826":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:5787:8116":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:11269:12059":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"13:110:7847":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:11942:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"11:1538:12027":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:10894:11752":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"17:11220:8938":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"5:1115:33543":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:4412:10452":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:8420:20157":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:554:12080":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:6981:11974":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:413:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"5:1135:34990":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"1:3406:11727":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"6:5736:10741":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:10660:8244":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:8163:11468":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:39203:198":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:9886:11914":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"0:89:1646":{"crate_id":0,"path":["rand_chacha","ChaChaRng"],"kind":"typedef"},"11:836:12018":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:46050:11620":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"5:2046:12032":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"17:10691:20273":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:42506:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"1:6108:8101":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"5:5930:8043":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"5:4758:669":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"6:1602:10288":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:11163:8926":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:43224:11194":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"16:5557:8303":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"6:5954:10869":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:10711:8471":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:3514:8037":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"18:736:24014":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:13488:9480":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:43521:11539":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:1783:12089":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"16:6236:8299":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:11938:1497":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"1:6644:12130":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"1:5709:12126":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"21:257:2326":{"crate_id":21,"path":["ppv_lite86","types","u64x2x4"],"kind":"trait"},"2:43371:11185":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:8439:11744":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:11422:12114":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"16:6164:9740":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:1589:10067":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:7827:8471":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:4437:12890":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"6:4637:10533":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:6170:10951":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"16:7317:35071":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"16:3300:9647":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"10:44:8366":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"14:7:12009":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:10657:12176":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"1:11937:1500":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:8360:20155":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"5:4842:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:40304:8416":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:2518:238":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:2839:13392":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"17:11193:8930":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"17:9098:11883":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:2242:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:8922:11757":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"5:204:8014":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"6:4615:10531":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:42703:2080":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:11484:8979":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:43755:13159":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:10855:10129":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:21873:11203":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:22337:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:8858:8232":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:11924:9085":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:40020:11434":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:44361:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:2695:225":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:9410:12141":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:8971:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"1:4531:12908":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:10635:8243":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"20:154:1760":{"crate_id":20,"path":["rand_core","block","BlockRng"],"kind":"struct"},"16:2426:9617":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:20560:31361":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"5:4392:8043":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:13821:9588":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:46306:11626":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:9350:35078":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"5:2967:33536":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"6:6588:10975":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"6:5792:10781":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:10681:8884":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:13257:9420":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"6:6867:11101":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:2694:226":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:8954:25050":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:3315:12843":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"6:7545:11131":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"11:1048:35057":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:40375:11458":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:13324:9435":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:10851:12140":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:43960:11567":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:8854:11754":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:11234:8939":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"20:0:1636":{"crate_id":20,"path":["rand_core"],"kind":"module"},"20:88:24023":{"crate_id":20,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"17:9453:20176":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"17:9275:35075":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"11:2060:12021":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:11861:9074":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"16:6061:19209":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:40734:11480":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"16:5000:9675":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:9228:35081":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:6319:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:43389:11189":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:8237:11729":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:10857:20166":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"16:6327:8336":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:10741:11724":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:3231:12106":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:4926:12922":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:3898:12862":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:11520:8988":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:7891:8472":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"16:6506:9764":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"6:1494:10226":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:1846:12093":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"6:1680:10342":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:9415:8136":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:12433:9174":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"16:5963:9711":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"16:7488:9907":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:4886:10637":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:43475:11536":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:8189:12152":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"16:6254:8329":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"21:235:2320":{"crate_id":21,"path":["ppv_lite86","types","u64x2"],"kind":"trait"},"1:4006:12868":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"11:2174:10070":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:13211:9409":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"12:0:2150":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:40050:11428":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"5:3168:7862":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:11899:25134":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:9876:8758":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:7519:9909":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:635:12082":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:975:11872":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:3703:12113":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:2817:13390":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"9:421:19098":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:3805:12114":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:11993:9092":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"5:3593:7863":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:21570:12820":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"6:6043:10905":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:5090:191":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"5:7065:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:7688:12730":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:6124:8122":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"6:595:10222":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:6589:2130":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:41589:7862":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:9628:11899":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"18:80:24004":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"21:892:8189":{"crate_id":21,"path":["ppv_lite86","soft","x2"],"kind":"struct"},"17:13857:9592":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"21:1593:2305":{"crate_id":21,"path":["ppv_lite86","x86_64","vec512_storage"],"kind":"union"},"18:564:8204":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:9498:8235":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:2856:13396":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:43654:11547":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:10290:12056":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:9068:35084":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:11434:8972":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:3155:24957":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:10428:11940":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:43237:12073":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"5:6582:8053":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:5630:11951":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:21348:13020":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:10681:11769":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:30875:7709":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:46074:11621":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:42168:7783":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:2706:7797":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:7267:2288":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:12554:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:3083:12101":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"21:1500:7831":{"crate_id":21,"path":["ppv_lite86","x86_64","NoS3"],"kind":"struct"},"1:867:7725":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:13564:9525":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:20779:31626":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"6:4769:10582":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:11942:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:45676:11609":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:41453:1784":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"6:4649:10534":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:6710:11018":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"16:4728:9666":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:8443:20158":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:43635:11545":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:11924:1483":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"11:403:35051":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:42666:8445":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:8195:12154":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"20:18:1761":{"crate_id":20,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"1:3700:12112":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:2558:8091":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:20880:13012":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"18:521:24016":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"21:260:2327":{"crate_id":21,"path":["ppv_lite86","types","u128x4"],"kind":"trait"},"2:47416:11669":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:9721:11906":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:41462:7862":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:21989:12860":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:43198:11521":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:11832:9069":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:42921:11519":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:8835:11753":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"18:507:8682":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"9:52:8367":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"17:8718:8228":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:6355:12130":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"6:4663:10535":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"17:10377:8858":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:8170:8233":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:40678:11472":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:40692:11474":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:1768:609":{"crate_id":1,"path":["std","env"],"kind":"module"},"11:986:12020":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:8293:10991":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"6:4972:10690":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:5817:10786":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:8195:20142":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:8548:20161":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"5:3139:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:8805:11752":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:43935:11566":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:9989:7863":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:3233:12107":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"16:6022:20096":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"21:180:2066":{"crate_id":21,"path":["ppv_lite86","types","BitOps32"],"kind":"trait"},"16:6868:8300":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:9557:8217":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:44102:11582":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:11741:13144":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"6:4703:10550":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"21:1569:2064":{"crate_id":21,"path":["ppv_lite86","x86_64","vec128_storage"],"kind":"union"},"2:41959:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"21:296:2329":{"crate_id":21,"path":["ppv_lite86","types","Store"],"kind":"trait"},"16:6520:9766":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"6:4878:1002":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:12517:8101":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"5:7254:224":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:10276:12055":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:12622:8244":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:9032:8476":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"16:5367:19208":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:11401:12113":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"7:79:19089":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:12006:9095":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:2742:9630":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"6:4400:10443":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:4786:32373":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:8936:8461":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:46542:11636":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"6:4763:10579":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:5933:8114":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"1:1577:10065":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"17:12072:9104":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"16:5346:9680":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"11:311:10063":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:11931:744":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:41538:193":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:20575:31361":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:39345:12064":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:46004:11618":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:0:1391":{"crate_id":1,"path":["std"],"kind":"module"},"17:13101:8265":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"6:4586:10529":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:2692:7796":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:1080:12024":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:44348:11591":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:9110:11763":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"5:2687:11156":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:40407:8419":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:11730:8704":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"5:7149:11161":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:5828:10794":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:7271:11108":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:10451:12108":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"17:11502:8987":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"6:4823:10606":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:1669:8016":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"6:5899:10832":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:11891:9077":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:11556:8993":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:43806:11561":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:6575:8127":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"17:12522:9194":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"16:6442:9755":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"9:481:19095":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:3182:33235":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:12334:31781":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"6:4505:10496":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"18:707:8704":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"21:1535:7839":{"crate_id":21,"path":["ppv_lite86","x86_64","YesNI"],"kind":"struct"},"2:11488:11538":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:5525:12947":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:43792:11558":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:11254:12135":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:11888:12731":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"5:4233:7862":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:4279:12116":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"6:1556:10259":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"5:1408:7862":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:2843:13393":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"17:13159:9394":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"6:1544:10250":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:5586:8114":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:562:8914":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:9218:8217":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:46460:2324":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"5:7011:11160":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"21:1411:8676":{"crate_id":21,"path":["ppv_lite86","x86_64","sse2","G0"],"kind":"struct"},"2:2792:13387":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:10705:8887":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:7592:7864":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:10465:11943":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:8176:11185":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"5:7023:8037":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"11:749:8037":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:45606:11606":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:11037:20167":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:3318:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:20771:13011":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"17:13082:9387":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"16:5741:20094":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"6:5835:10798":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:7645:8138":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:47761:7696":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:4760:8112":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"11:695:8398":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:44390:10077":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:20920:13019":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"17:13411:9461":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"21:1545:7830":{"crate_id":21,"path":["ppv_lite86","x86_64","SseMachine"],"kind":"struct"},"21:1510:7832":{"crate_id":21,"path":["ppv_lite86","x86_64","NoS4"],"kind":"struct"},"11:97:10059":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:44114:11585":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:12372:9165":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:42713:8449":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:8979:35079":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"5:3175:10066":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"6:1526:10239":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:7574:11138":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:30277:11170":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"13:226:8364":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:8931:8234":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:47709:7692":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"6:4793:10595":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:43098:12070":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:7636:33162":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:43269:11196":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:2210:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:10971:8141":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:953:12018":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:501:8034":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:21911:30902":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:40091:13220":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:7499:12183":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:40456:11465":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:10960:8140":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:6021:10897":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"19:0:1032":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:5655:9639":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"21:1299:8200":{"crate_id":21,"path":["ppv_lite86","x86_64","sse2","u128x1_sse2"],"kind":"struct"},"16:5944:11953":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:6561:12962":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"21:250:2325":{"crate_id":21,"path":["ppv_lite86","types","u128x2"],"kind":"trait"},"17:10580:8875":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"1:7488:8914":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:9062:218":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"16:7697:8355":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"16:3899:9654":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:39313:12735":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:9566:11886":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"6:6819:11083":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:5050:10728":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"1:10676:11767":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"1:6505:12132":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:2506:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"6:4962:10684":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"6:532:10187":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:10167:12582":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"6:4853:10620":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:40701:11475":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:45952:11616":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:7585:11139":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"5:3567:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"6:4907:10652":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"6:4435:10461":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:12178:9117":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:7699:8458":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"1:8899:12967":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:9028:11882":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:43983:11575":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:13689:9550":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:10699:11775":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"1:11717:8149":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:4010:12869":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:11770:9053":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:8283:20153":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:6032:8118":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"17:9670:11904":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"5:273:2290":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:0:2154":{"crate_id":17,"path":["object"],"kind":"module"},"16:3872:9653":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"16:8256:9979":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:10775:12057":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"6:653:14138":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"5:3668:8016":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:7294:11120":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"6:579:10212":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"16:6376:8337":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"21:263:2068":{"crate_id":21,"path":["ppv_lite86","types","MultiLane"],"kind":"trait"},"17:12483:9191":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"15:198:19192":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:3142:13397":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"5:3214:33714":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:8829:7725":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:12770:9218":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:47720:7693":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:2620:12100":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:13053:9379":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"21:1495:7833":{"crate_id":21,"path":["ppv_lite86","x86_64","YesS3"],"kind":"struct"},"11:798:12013":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:5357:12121":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:12902:9324":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"16:4568:9662":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"11:399:35056":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"6:1505:10231":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:43823:11562":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:9403:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"6:6007:10894":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:4425:8045":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"14:215:10055":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"17:12510:9193":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"6:6564:10958":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:11933:741":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"11:1501:19175":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"5:2138:11148":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"6:1637:10316":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"9:234:2080":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"17:10104:8240":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"16:8090:9968":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:2264:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"6:6035:10902":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:11785:9057":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"16:6400:9752":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:41719:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:13265:9422":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:2391:2162":{"crate_id":1,"path":["std","io"],"kind":"module"},"16:55:9953":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"1:9906:11496":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:10555:8867":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:1667:1088":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:10080:11929":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:7706:12776":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:4877:12916":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"5:875:8024":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:40285:8415":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:10545:8865":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:39125:13115":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"5:1371:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"6:1672:10341":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:2481:12098":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:13667:9545":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"16:5998:20095":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"16:4445:9658":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"16:6717:9804":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:3648:7725":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"16:5677:20093":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:5343:12119":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"6:6027:10900":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"16:8269:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"18:96:24005":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:3272:12109":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:8947:12160":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:3266:11881":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"16:8170:9972":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:21001:13009":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:9312:11887":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:11109:8919":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:49682:13023":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"7:32:19082":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:39387:11300":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:40707:11477":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"16:6307:8332":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:7215:2289":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:41679:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"21:885:2062":{"crate_id":21,"path":["ppv_lite86","dispatch_light128"],"kind":"macro"},"1:888:8396":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"0:0:1649":{"crate_id":0,"path":["rand_chacha"],"kind":"module"},"6:5876:10819":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:11539:11188":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:9148:35082":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"5:5059:8051":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"1:4351:12117":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:6508:12960":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"6:6849:11098":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"21:1580:2304":{"crate_id":21,"path":["ppv_lite86","x86_64","vec256_storage"],"kind":"union"},"1:11916:937":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"16:6558:9767":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"16:6671:9792":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:7726:12063":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:2317:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"16:5976:8288":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:8997:11758":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:12345:9161":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"6:4495:10489":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:11866:12186":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"1:3904:12861":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:11946:9086":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:947:12016":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:2720:9629":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:43898:11565":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"5:7094:7725":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:44340:12076":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:4437:7818":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:39978:11430":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"18:574:8682":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"5:892:7862":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:7966:8470":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:47700:7691":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:11844:9071":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:2788:13002":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:47228:11667":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:13356:9443":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:844:7862":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:10923:8248":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"11:1517:12026":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:1630:587":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:42484:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:40384:11459":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:40397:11460":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"21:176:2307":{"crate_id":21,"path":["ppv_lite86","types","BSwap"],"kind":"trait"},"16:5724:9689":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"6:7516:11124":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:11932:745":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:43539:11540":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"16:5886:9705":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:44305:195":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:9523:11895":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:4510:9660":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"18:113:24006":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:30243:8441":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:43777:11552":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"5:7033:8027":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:11191:8466":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"5:819:8022":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"1:8508:7862":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:44297:211":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:47814:7699":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:12224:9141":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:21782:8433":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"16:7588:12003":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"5:1479:12025":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:11902:9078":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:47478:8187":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:3079:12758":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:12085:9106":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:22238:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:9213:12092":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:9151:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:6893:25758":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:39990:30939":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"16:4400:9657":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"16:7596:20103":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:39380:7816":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"6:1630:10312":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:2985:12757":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"5:7057:7725":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:11936:1499":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:7820:11683":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:41234:11484":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"11:365:8007":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:7624:11680":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:3638:12858":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:9488:11892":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:901:8037":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:45451:11600":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:43625:11544":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:11355:8255":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:3481:12818":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"6:5986:10882":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:42161:7782":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:12607:9206":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"18:614:35088":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"6:1695:10351":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:42457:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:1821:11179":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:9469:11890":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:10402:11935":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"6:7528:11126":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:4148:12888":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:43341:11527":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:4314:10387":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"6:6597:10981":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"6:488:10159":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:11299:8957":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:11459:8977":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:43679:11428":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:13842:9591":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:22601:11224":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:43167:12071":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"5:1270:12021":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:4018:12871":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"16:7293:9884":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:43347:11528":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"5:6119:13097":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"16:3047:19238":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"5:5856:13700":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"14:202:13161":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"20:129:2298":{"crate_id":20,"path":["rand_core","CryptoRngCore"],"kind":"trait"},"17:10257:11931":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:47876:7701":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:30371:30910":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"17:11258:8953":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:8456:12941":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"5:3201:10067":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:8254:12930":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:8111:8473":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:9299:12051":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"16:6336:9743":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"6:4534:10510":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:41268:12857":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"21:1560:7829":{"crate_id":21,"path":["ppv_lite86","x86_64","Avx2Machine"],"kind":"struct"},"6:7563:11134":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:11930:743":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"5:35:8012":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"5:258:8016":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"16:6535:8002":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"6:554:10199":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"6:4523:10505":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"11:2186:35050":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:1985:184":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:41211:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"6:4937:10673":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:9683:11905":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:30313:30933":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"11:1838:10065":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"6:5966:10874":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:9409:13229":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:40332:11453":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:7556:8134":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:10238:12124":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"1:4662:12917":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"6:7510:11123":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:13033:9373":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:11883:8480":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"6:119:13780":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"6:482:10156":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:2911:7867":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"6:4948:10678":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:2774:13385":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"16:4702:9665":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:2215:8073":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"16:5386:8213":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:9973:8819":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:42429:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"6:526:10184":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"5:7073:8404":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:7285:24340":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:917:12025":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:11935:1498":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:7599:12820":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:21015:8430":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:2354:189":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"16:2764:9631":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:5402:8214":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:4381:8078":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"20:72:128":{"crate_id":20,"path":["rand_core","error","Error"],"kind":"struct"},"6:6687:11011":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"21:247:2324":{"crate_id":21,"path":["ppv_lite86","types","u64x4"],"kind":"trait"},"2:40263:8412":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:44287:205":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:10936:8250":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:40726:11478":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"5:6252:8037":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"16:6904:8344":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"5:1254:9848":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"9:325:10114":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:7543:8348":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:6795:11073":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"5:1470:8396":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"6:6014:10896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:44003:11577":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:43149:11190":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:46226:11625":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:11941:1128":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:6155:10940":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"5:5215:8016":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:40006:11433":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:4410:7805":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"16:4540:9661":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:9163:7790":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:9734:11907":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:43250:11195":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:9414:8428":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:9161:194":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"16:3640:8721":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:10283:8853":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"6:5073:10734":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:20949:13005":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"17:9748:8217":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:643:12727":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"16:2905:9637":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:9807:12820":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"11:817:12016":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:9822:11908":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"11:1822:7725":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"18:671:11867":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"5:5263:13133":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"6:4419:10456":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:20852:13018":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"5:4001:8037":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:4264:12047":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"6:4455:10470":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:8521:20160":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"11:760:8055":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"17:11422:8971":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"16:6146:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:10747:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:6647:11009":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"11:657:7725":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:41478:7725":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"6:0:817":{"crate_id":6,"path":["libc"],"kind":"module"},"5:7351:8060":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:41353:11729":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"6:5848:10807":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:936:12742":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:6544:8340":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:11471:8978":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:4114:8410":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:10649:8881":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"5:1423:7863":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"11:2130:19169":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:46430:8186":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"6:568:10207":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"6:5043:10725":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:11069:20168":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:8256:20140":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:11410:8968":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:13499:9481":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:9165:7791":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"6:1662:10335":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:44118:11586":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"6:1701:10352":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:43177:11193":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:40077:11439":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"16:2594:9624":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:4702:12877":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:10721:8888":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"6:500:10164":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"16:7449:11996":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:5532:11181":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:9111:7789":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:13744:9566":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"5:6371:7725":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:11428:11530":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:11676:12942":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:13865:9595":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:4336:7816":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:5590:8417":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:5522:10912":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:12113:9111":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"14:40:8954":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:47662:11672":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"6:5804:10785":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"11:793:12025":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:7169:13365":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"17:12307:9157":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"6:6743:11033":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:1594:10283":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:11339:8251":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:13791:9580":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:535:8286":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:45806:11614":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:8941:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"16:6793:9819":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"6:7462:11121":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:14:1776":{"crate_id":2,"path":["core","write"],"kind":"macro"},"6:7598:11143":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:959:12019":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:32158:7804":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"21:178:2065":{"crate_id":21,"path":["ppv_lite86","types","ArithOps"],"kind":"trait"},"16:2502:9620":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:12318:9158":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:9159:7793":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"11:968:9848":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:10029:24717":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"6:1535:10244":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:9577:8811":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"6:1910:15128":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:8244:11730":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:1785:12090":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"16:7366:20102":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:4684:10538":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:39269:201":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:9110:210":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"17:9696:8235":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:13249:9418":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:10092:11930":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"5:2959:11150":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"6:4373:10431":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:41759:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"11:1845:10066":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:40030:11435":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:40042:11436":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:20547:7709":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:3386:12043":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"5:7043:33711":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"16:7669:8352":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:11813:9064":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"17:11090:8916":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:43949:13160":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"16:5418:9681":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"14:221:10057":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:10142:20247":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:9374:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"6:4728:10561":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"16:2879:9636":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:21099:13006":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:45836:2098":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"16:2931:19236":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:43688:11436":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:22502:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"15:0:2152":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:8348:12926":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:11372:8257":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:8953:8215":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"21:1445:8678":{"crate_id":21,"path":["ppv_lite86","x86_64","sse2","avx2","u32x4x2_avx2"],"kind":"struct"},"5:6768:8072":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:3374:13179":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"2:21798:8405":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"16:2642:9626":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:3446:9648":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"16:7635:9911":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:21127:8430":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:9796:8816":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:42466:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"16:7757:9913":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:5202:190":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:585:12724":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"16:6819:9820":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:11939:790":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:386:11870":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:41597:7863":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:2922:2284":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"5:7224:11165":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:2245:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:4704:12879":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"11:1818:7862":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"16:7029:9842":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:7971:12846":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:11083:11762":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:43575:11542":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:7537:8132":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:4783:12876":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:22304:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"18:590:8687":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:11929:746":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"5:2963:33537":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:46172:11623":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:40346:8418":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"21:1525:7837":{"crate_id":21,"path":["ppv_lite86","x86_64","YesA2"],"kind":"struct"},"5:7334:8055":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"2:41799:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:13625:9532":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"16:4757:9667":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:4127:12886":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"18:531:8684":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:43970:11571":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:40467:11468":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"5:7161:12741":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"21:0:1650":{"crate_id":21,"path":["ppv_lite86"],"kind":"module"},"2:2684:220":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:5013:12118":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"5:2240:8402":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:11721:12050":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:3348:11477":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"6:4799:10598":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:13367:9447":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"18:491:8681":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:21890:30924":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"11:2194:10074":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:43357:8233":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"18:755:8714":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:46880:11641":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:13453:9472":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:9265:11886":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"21:1515:7835":{"crate_id":21,"path":["ppv_lite86","x86_64","YesA1"],"kind":"struct"},"1:930:12013":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"18:0:2155":{"crate_id":18,"path":["memchr"],"kind":"module"},"6:4605:10530":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:6218:11964":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"6:474:10151":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:3999:12044":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"9:445:19096":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:9380:20174":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"11:1103:12023":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"20:116:24028":{"crate_id":20,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"9:352:19111":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:43493:11537":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:11497:11785":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"14:165:19178":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"6:5067:10732":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:7608:11145":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:10989:8865":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"5:6450:8016":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"4:0:2145":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"16:5616:9683":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:11917:418":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"6:6066:10911":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"16:2808:9633":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:12506:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:2926:2285":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:47837:7700":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:41614:183":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:9067:219":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"6:547:10196":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"16:4904:9672":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:43329:11526":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:2862:9635":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:6780:13003":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:11174:8143":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"17:13433:9466":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:2701:228":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:22568:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"17:13612:9526":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:5270:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:2219:12802":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"11:805:12742":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:6259:206":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:2603:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"6:4991:10698":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:13812:9586":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:9149:26322":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"16:7335:35073":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"20:134:1764":{"crate_id":20,"path":["rand_core","SeedableRng"],"kind":"trait"},"5:3799:8055":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2:46203:11624":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:9866:11912":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:10743:11948":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:41839:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"11:1068:12022":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:10876:25133":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:45658:11608":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"17:10270:11932":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"18:727:8209":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:21977:11219":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:41529:2670":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"5:7194:11162":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:9366:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:4765:388":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:8777:11750":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:12388:9167":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"16:3030:9645":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"21:220:2067":{"crate_id":21,"path":["ppv_lite86","types","LaneWords4"],"kind":"trait"},"17:10416:11939":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:8813:7862":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"16:7683:8354":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"5:673:231":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:8667:8214":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"16:5920:8282":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:22469:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:40355:11456":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"16:6243:35070":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:1919:20205":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:10516:8860":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:13385:9451":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:43593:11543":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"18:538:8202":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:11504:11541":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:10052:11926":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"16:4845:9670":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:11465:11535":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:13316:9434":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"17:11641:9021":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"16:3585:9649":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:3152:28815":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"5:6298:8016":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"3:0:442":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"11:667:8397":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:46384:11635":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:42906:11518":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"16:4818:9669":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"17:13777:9573":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:39291:203":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:7694:8459":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"17:10026:11922":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"16:7711:9912":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:39187:200":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:40171:12789":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"17:8573:20162":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:20740:13014":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"17:13419:9464":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"}},"external_crates":{"20":{"name":"rand_core","html_root_url":"https://rust-random.github.io/rand/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"ppv_lite86","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}