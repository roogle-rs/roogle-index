{"root":"0:0:2339","crate_version":"0.9.0-alpha.1","includes_private":false,"index":{"b:2:2998-0:273:2333":{"id":"b:2:2998-0:273:2333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3001:137","2:3002:1819"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:287:808":{"id":"0:287:808","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10345:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10326:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13268:33349":{"id":"2:13268:33349","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13266:33348"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2765:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13343:27088":{"id":"2:13343:27088","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:13884","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148":{"id":"0:148","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:149:479"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32444:2988-0:214:2330":{"id":"a:2:32444:2988-0:214:2330","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32444:2988","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:22:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13364:33362":{"id":"2:13364:33362","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3822-0:137:2331":{"id":"b:2:3822-0:137:2331","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3820:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3824:1834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2765:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13266:33348":{"id":"2:13266:33348","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:151:808":{"id":"0:151:808","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10345:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10326:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:792:8449":{"id":"5:792:8449","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:140:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:104:2483","0:106:2484"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3001:137":{"id":"2:3001:137","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32309:10813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:2989:838":{"id":"2:2989:838","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:190:2559":{"id":"0:190:2559","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:182:2515":{"id":"0:182:2515","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3241:8471-0:282:2334":{"id":"a:2:3241:8471-0:282:2334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3241:8471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:168:172":{"id":"0:168:172","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"b:2:2713-0:146:2332":{"id":"b:2:2713-0:146:2332","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2707:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2715:25762"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:790-0:214:2330":{"id":"b:5:790-0:214:2330","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:786:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:792:8449","5:793:8450","5:794:8451"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:112:2484":{"id":"0:112:2484","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2461","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3206:246-0:137:2331":{"id":"a:2:3206:246-0:137:2331","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3206:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:234:808":{"id":"0:234:808","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10345:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10326:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2713-0:205:2329":{"id":"b:2:2713-0:205:2329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2707:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2715:25762"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:119:2525","0:120:2541","0:121:2554","0:122:2559","0:123:2562"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:104:2483":{"id":"0:104:2483","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:174:2484":{"id":"0:174:2484","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2461","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211:703":{"id":"0:211:703","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:95:2338":{"id":"0:95:2338","crate_id":0,"name":"ChaChaCore","span":{"filename":"src/lib.rs","begin":[34,0],"end":[34,35]},"visibility":"public","docs":"ChaCha with 20 rounds, low-level interface","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"a:2:32385:236-0:214:2330":{"id":"a:2:32385:236-0:214:2330","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32385:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:125":{"id":"0:125","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:139:2459","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32387:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2713-0:137:2331":{"id":"b:2:2713-0:137:2331","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2707:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2715:25762"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:140:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:246:2483","0:248:2484"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3241:8471-0:146:2332":{"id":"a:2:3241:8471-0:146:2332","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3241:8471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:279:703":{"id":"0:279:703","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:235":{"id":"0:235","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:2457","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:236:172","0:237:2479","0:238:2480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:106:2484":{"id":"0:106:2484","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2461","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:2457","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:100:172","0:101:2479","0:102:2480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:128":{"id":"0:128","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2760:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:129:703"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2983-0:214:2330":{"id":"b:2:2983-0:214:2330","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2986:2529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2710-0:146:2332":{"id":"b:2:2710-0:146:2332","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2704:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2712:2943"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:178:2483":{"id":"0:178:2483","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:176":{"id":"0:176","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:22:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:214:2330":{"id":"0:214:2330","crate_id":0,"name":"ChaCha12Rng","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:178:2456","`RngCore`":"20:133:2460"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:186","a:2:32385:236-0:214:2330","a:2:32444:2988-0:214:2330","a:2:42247:13452-0:214:2330","a:2:3241:8471-0:214:2330","a:2:42248:13672-0:214:2330","a:2:3206:246-0:214:2330","b:2:2987-0:214:2330","b:2:2983-0:214:2330","b:2:2998-0:214:2330","b:2:2993-0:214:2330","b:2:2713-0:214:2330","b:2:2710-0:214:2330","b:2:3822-0:214:2330","b:5:790-0:214:2330","b:22:270-0:214:2330","0:216","0:198","0:193","0:196","0:194","0:181","0:177","0:218"]}}},"b:2:2993-0:282:2334":{"id":"b:2:2993-0:282:2334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2963:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2996:137","2:2997:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13271:26071":{"id":"2:13271:26071","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12499:13887"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13315:8387":{"id":"2:13315:8387","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42155:190","prim@char":"1:12355:475","self::pattern":"2:12952:13886"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:13884","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13322:27079":{"id":"2:13322:27079","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:13886"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12767:12007","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32385:236-0:205:2329":{"id":"a:2:32385:236-0:205:2329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32385:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2715:25762":{"id":"2:2715:25762","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:236:172":{"id":"0:236:172","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"b:2:2993-0:137:2331":{"id":"b:2:2993-0:137:2331","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2963:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2996:137","2:2997:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32444:2988-0:137:2331":{"id":"a:2:32444:2988-0:137:2331","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32444:2988","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13384:33368":{"id":"2:13384:33368","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:13886"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:13884","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13284:33352":{"id":"2:13284:33352","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12361:1734","crate::ops::IndexMut":"2:3484:13482","str::slice_unchecked":"2:13283:33351"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:2712:2943":{"id":"2:2712:2943","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:285:479":{"id":"0:285:479","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32387:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:100:172":{"id":"0:100:172","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:170:2480":{"id":"0:170:2480","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:2457","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13295:31782":{"id":"2:13295:31782","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13293:31787"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44317:12247","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13390:26929":{"id":"2:13390:26929","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40054:13964","Self::is_ascii":"2:13389:26086"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40054:13964","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:120:2541":{"id":"0:120:2541","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:150":{"id":"0:150","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10377:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:151:808"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10377:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:98:808"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42248:13672-0:273:2333":{"id":"a:2:42248:13672-0:273:2333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42248:13672","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:181":{"id":"0:181","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["read_adapter"],"trait":{"name":"RngCore","id":"20:133:2460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:182:2515","0:183:2516","0:184:2517","0:185:2519"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:257:2554":{"id":"0:257:2554","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:263:838":{"id":"0:263:838","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3822-0:205:2329":{"id":"b:2:3822-0:205:2329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3820:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3824:1834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:123:2562":{"id":"0:123:2562","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:22:270-0:214:2330":{"id":"b:22:270-0:214:2330","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2759","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3023","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25765"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:116:2517":{"id":"0:116:2517","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13378:33366":{"id":"2:13378:33366","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:13886"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:13884","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13387:33369":{"id":"2:13387:33369","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12913:136","`FromStr`":"2:12912:13527"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42286:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12912:13527","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12912:13527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2983-0:146:2332":{"id":"b:2:2983-0:146:2332","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2986:2529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13366:33364":{"id":"2:13366:33364","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:13886"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12978:13883","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13401:33371":{"id":"2:13401:33371","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5012:33371"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44351:12137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3824:1834":{"id":"2:3824:1834","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39868:12127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:122:2559":{"id":"0:122:2559","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:276:479"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13394:26932":{"id":"2:13394:26932","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1063:38453"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13365:33363":{"id":"2:13365:33363","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42247:13452-0:137:2331":{"id":"a:2:42247:13452-0:137:2331","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42247:13452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13292:2518":{"id":"2:13292:2518","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:44020:8661","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:188:2541":{"id":"0:188:2541","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13285:27072":{"id":"2:13285:27072","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13287:27076","str::split_at_mut":"2:13286:27073"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13331:33355":{"id":"2:13331:33355","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12952:13886","str::split":"2:13319:26160","prim@char":"1:12355:475","str::split_terminator":"2:13328:33354"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44102:12234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:13884","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:117:2519":{"id":"0:117:2519","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42286:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:76:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:285:479"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:177":{"id":"0:177","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:140:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:178:2483","0:180:2484"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13290:12249":{"id":"2:13290:12249","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12355:475"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:44004:12227","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3206:246-0:282:2334":{"id":"a:2:3206:246-0:282:2334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3206:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13395:26933":{"id":"2:13395:26933","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1063:38453"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:90-0:137:2331":{"id":"0:90-0:137:2331","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,31],"end":[28,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Core","name":"ChaCha20Core","id":"0:137:2331","glob":false}}},"a:2:42248:13672-0:205:2329":{"id":"a:2:42248:13672-0:205:2329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42248:13672","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:184:2517":{"id":"0:184:2517","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32444:2988-0:273:2333":{"id":"a:2:32444:2988-0:273:2333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32444:2988","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2710-0:137:2331":{"id":"b:2:2710-0:137:2331","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2704:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2712:2943"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32385:236-0:282:2334":{"id":"a:2:32385:236-0:282:2334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32385:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32387:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3206:246-0:273:2333":{"id":"a:2:3206:246-0:273:2333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3206:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13334:27083":{"id":"2:13334:27083","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:13886","str::rsplitn":"2:13337:27085"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44138:12236","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["read_adapter"],"trait":{"name":"RngCore","id":"20:133:2460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:114:2515","0:115:2516","0:116:2517","0:117:2519"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42247:13452-0:273:2333":{"id":"a:2:42247:13452-0:273:2333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42247:13452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42248:13672-0:214:2330":{"id":"a:2:42248:13672-0:214:2330","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42248:13672","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3241:8471-0:273:2333":{"id":"a:2:3241:8471-0:273:2333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3241:8471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:253:2519":{"id":"0:253:2519","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42286:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:76:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13274:27049":{"id":"2:13274:27049","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12374:1864"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:146:2332":{"id":"0:146:2332","crate_id":0,"name":"ChaCha20Rng","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:178:2456","`RngCore`":"20:133:2460"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:118","a:2:32385:236-0:146:2332","a:2:32444:2988-0:146:2332","a:2:42247:13452-0:146:2332","a:2:3241:8471-0:146:2332","a:2:42248:13672-0:146:2332","a:2:3206:246-0:146:2332","b:2:2987-0:146:2332","b:2:2983-0:146:2332","b:2:2998-0:146:2332","b:2:2993-0:146:2332","b:2:2713-0:146:2332","b:2:2710-0:146:2332","b:2:3822-0:146:2332","b:5:790-0:146:2332","b:22:270-0:146:2332","0:126","0:150","0:125","0:128","0:148","0:130","0:109","0:113"]}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:263:838"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3002:1819":{"id":"2:3002:1819","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42286:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:256:2541":{"id":"0:256:2541","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13360:33360":{"id":"2:13360:33360","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3241:8471-0:137:2331":{"id":"a:2:3241:8471-0:137:2331","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3241:8471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13375:27090":{"id":"2:13375:27090","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:13886"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:13884","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:165":{"id":"0:165","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10377:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:166:808"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:187:2525","0:188:2541","0:189:2554","0:190:2559","0:191:2562"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2765:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:240:2483":{"id":"0:240:2483","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"2:13275:27045":{"id":"2:13275:27045","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42155:190"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11041:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11041:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3241:8471-0:205:2329":{"id":"a:2:3241:8471-0:205:2329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3241:8471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13293:31787":{"id":"2:13293:31787","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13295:31782"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44308:12246","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:808":{"id":"0:98:808","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10345:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10326:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:2525":{"id":"0:119:2525","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:790-0:137:2331":{"id":"b:5:790-0:137:2331","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:786:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:792:8449","5:793:8450","5:794:8451"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:22:270-0:205:2329":{"id":"b:22:270-0:205:2329","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2759","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3023","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25765"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:169:2479":{"id":"0:169:2479","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:19:2468","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"0:114:2515":{"id":"0:114:2515","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10377:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:808"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:172:2483":{"id":"0:172:2483","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:252:2517":{"id":"0:252:2517","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13400:13444":{"id":"2:13400:13444","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5015:13444"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44342:12129","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13369:33365":{"id":"2:13369:33365","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:13886"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42248:13672-0:282:2334":{"id":"a:2:42248:13672-0:282:2334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42248:13672","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2765:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:239":{"id":"0:239","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:140:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:240:2483","0:242:2484"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2713-0:273:2333":{"id":"b:2:2713-0:273:2333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2707:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2715:25762"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2987-0:137:2331":{"id":"b:2:2987-0:137:2331","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2989:838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13381:33367":{"id":"2:13381:33367","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:13886"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42247:13452-0:282:2334":{"id":"a:2:42247:13452-0:282:2334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42247:13452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32385:236-0:137:2331":{"id":"a:2:32385:236-0:137:2331","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32385:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32385:236-0:146:2332":{"id":"a:2:32385:236-0:146:2332","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32385:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2993-0:205:2329":{"id":"b:2:2993-0:205:2329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2963:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2996:137","2:2997:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13273:335":{"id":"2:13273:335","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13274:27049","`u8`":"1:12374:1864"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13349:33356":{"id":"2:13349:33356","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12952:13886","`DoubleEndedIterator`":"2:8320:129","prim@char":"1:12355:475","str::matches":"2:13346:2958"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44256:12243","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:13884","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2710-0:282:2334":{"id":"b:2:2710-0:282:2334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2704:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2712:2943"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13389:26086":{"id":"2:13389:26086","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2993-0:273:2333":{"id":"b:2:2993-0:273:2333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2963:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2996:137","2:2997:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2710-0:205:2329":{"id":"b:2:2710-0:205:2329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2704:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2712:2943"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3822-0:273:2333":{"id":"b:2:3822-0:273:2333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3820:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3824:1834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2710-0:214:2330":{"id":"b:2:2710-0:214:2330","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2704:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2712:2943"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2987-0:282:2334":{"id":"b:2:2987-0:282:2334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2989:838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:794:8451":{"id":"5:794:8451","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259:2562":{"id":"0:259:2562","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13279:27047":{"id":"2:13279:27047","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11041:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11041:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:142":{"id":"0:142","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2760:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:143:703"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:195:838"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:137:2331":{"id":"0:137:2331","crate_id":0,"name":"ChaCha20Core","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32385:236-0:137:2331","a:2:32444:2988-0:137:2331","a:2:42247:13452-0:137:2331","a:2:3241:8471-0:137:2331","a:2:42248:13672-0:137:2331","a:2:3206:246-0:137:2331","b:2:2987-0:137:2331","b:2:2983-0:137:2331","b:2:2998-0:137:2331","b:2:2993-0:137:2331","b:2:2713-0:137:2331","b:2:2710-0:137:2331","b:2:3822-0:137:2331","b:5:790-0:137:2331","b:22:270-0:137:2331","0:103","0:144","0:126","0:108","0:142","0:99","0:139","0:97","0:141"]}}},"b:2:2987-0:214:2330":{"id":"b:2:2987-0:214:2330","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2989:838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:273:2333":{"id":"0:273:2333","crate_id":0,"name":"ChaCha8Core","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"ChaCha with 8 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32385:236-0:273:2333","a:2:32444:2988-0:273:2333","a:2:42247:13452-0:273:2333","a:2:3241:8471-0:273:2333","a:2:42248:13672-0:273:2333","a:2:3206:246-0:273:2333","b:2:2987-0:273:2333","b:2:2983-0:273:2333","b:2:2998-0:273:2333","b:2:2993-0:273:2333","b:2:2713-0:273:2333","b:2:2710-0:273:2333","b:2:3822-0:273:2333","b:5:790-0:273:2333","b:22:270-0:273:2333","0:235","0:278","0:244","0:277","0:262","0:280","0:239","0:233","0:275"]}}},"2:13319:26160":{"id":"2:13319:26160","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12952:13886","`DoubleEndedIterator`":"2:8320:129","prim@char":"1:12355:475","str::split_whitespace":"2:13293:31787","str::rsplit":"2:13325:27081"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:44034:12003","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2998-0:137:2331":{"id":"b:2:2998-0:137:2331","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3001:137","2:3002:1819"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:166:808":{"id":"0:166:808","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10345:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10326:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13325:27081":{"id":"2:13325:27081","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12952:13886","`DoubleEndedIterator`":"2:8320:129","prim@char":"1:12355:475","str::split":"2:13319:26160"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44052:12008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:13884","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:193":{"id":"0:193","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:139:2459","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:121:2554":{"id":"0:121:2554","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:19:2468":{"id":"0:19:2468","crate_id":0,"name":"Array64","span":{"filename":"src/chacha.rs","begin":[27,0],"end":[27,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:140:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:110:2483","0:112:2484"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42248:13672-0:146:2332":{"id":"a:2:42248:13672-0:146:2332","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42248:13672","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:196":{"id":"0:196","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2760:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:197:703"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13281:27048":{"id":"2:13281:27048","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11041:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11041:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:249":{"id":"0:249","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["read_adapter"],"trait":{"name":"RngCore","id":"20:133:2460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:250:2515","0:251:2516","0:252:2517","0:253:2519"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13265:33347":{"id":"2:13265:33347","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13288:27077":{"id":"2:13288:27077","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13287:27076"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:189:2554":{"id":"0:189:2554","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43-22:274:2754":{"id":"0:43-22:274:2754","crate_id":0,"name":null,"span":{"filename":"src/guts.rs","begin":[14,0],"end":[14,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"ppv_lite86::Machine","name":"Machine","id":"22:274:2754","glob":false}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:217:479"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:102:2480":{"id":"0:102:2480","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:2457","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:790-0:273:2333":{"id":"b:5:790-0:273:2333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:786:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:792:8449","5:793:8450","5:794:8451"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13263:1005":{"id":"2:13263:1005","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12355:475"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:143:703":{"id":"0:143:703","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:149:479":{"id":"0:149:479","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32444:2988-0:205:2329":{"id":"a:2:32444:2988-0:205:2329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32444:2988","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:191:2562":{"id":"0:191:2562","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:22:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2998-0:282:2334":{"id":"b:2:2998-0:282:2334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3001:137","2:3002:1819"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5692:34065":{"id":"5:5692:34065","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:303:2989","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:303:2989","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32444:2988-0:146:2332":{"id":"a:2:32444:2988-0:146:2332","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32444:2988","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:790-0:205:2329":{"id":"b:5:790-0:205:2329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:786:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:792:8449","5:793:8450","5:794:8451"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2983-0:205:2329":{"id":"b:2:2983-0:205:2329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2986:2529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2998-0:214:2330":{"id":"b:2:2998-0:214:2330","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3001:137","2:3002:1819"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2993-0:214:2330":{"id":"b:2:2993-0:214:2330","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2963:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2996:137","2:2997:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32385:236-0:273:2333":{"id":"a:2:32385:236-0:273:2333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32385:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2987-0:146:2332":{"id":"b:2:2987-0:146:2332","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2989:838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:219:808":{"id":"0:219:808","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10345:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10326:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:237:2479":{"id":"0:237:2479","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:19:2468","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"0:217:479":{"id":"0:217:479","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2987-0:273:2333":{"id":"b:2:2987-0:273:2333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2989:838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:248:2484":{"id":"0:248:2484","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2461","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183:2516":{"id":"0:183:2516","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:2339":{"id":"0:0:2339","crate_id":0,"name":"rand_chacha","span":{"filename":"src/lib.rs","begin":[9,0],"end":[34,35]},"visibility":"public","docs":"The ChaCha random number generator.","links":{},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\", html_favicon_url\n= \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://rust-random.github.io/rand/\")]","#![forbid(unsafe_code)]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:3-20:0:2326","0:88-0:205:2329","0:89-0:214:2330","0:90-0:137:2331","0:91-0:146:2332","0:92-0:273:2333","0:93-0:282:2334","0:94:2336","0:95:2338"],"is_stripped":false}}},"a:2:32444:2988-0:282:2334":{"id":"a:2:32444:2988-0:282:2334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32444:2988","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:127:838":{"id":"0:127:838","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:127:838"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2983-0:137:2331":{"id":"b:2:2983-0:137:2331","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2986:2529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2998-0:205:2329":{"id":"b:2:2998-0:205:2329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3001:137","2:3002:1819"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:233":{"id":"0:233","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10377:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:234:808"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:282:2334":{"id":"0:282:2334","crate_id":0,"name":"ChaCha8Rng","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:178:2456","`RngCore`":"20:133:2460"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:254","a:2:32385:236-0:282:2334","a:2:32444:2988-0:282:2334","a:2:42247:13452-0:282:2334","a:2:3241:8471-0:282:2334","a:2:42248:13672-0:282:2334","a:2:3206:246-0:282:2334","b:2:2987-0:282:2334","b:2:2983-0:282:2334","b:2:2998-0:282:2334","b:2:2993-0:282:2334","b:2:2713-0:282:2334","b:2:2710-0:282:2334","b:2:3822-0:282:2334","b:5:790-0:282:2334","b:22:270-0:282:2334","0:284","0:245","0:264","0:266","0:262","0:249","0:286","0:261"]}}},"2:13352:33357":{"id":"2:13352:33357","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12952:13886","`DoubleEndedIterator`":"2:8320:129","prim@char":"1:12355:475","str::rmatch_indices":"2:13355:33358"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44184:12239","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:130":{"id":"0:130","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2765:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13262":{"id":"2:13262","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13263:1005","2:13264:8388","2:13265:33347","2:13266:33348","2:13268:33349","2:13271:26071","2:13272:33350","2:13273:335","2:13274:27049","2:13275:27045","2:13277:27046","2:13279:27047","2:13281:27048","2:13283:33351","2:13284:33352","2:13285:27072","2:13286:27073","2:13287:27076","2:13288:27077","2:13290:12249","2:13291:12260","2:13292:2518","2:13293:31787","2:13295:31782","2:13298:26161","2:13300:33353","2:13301:31785","2:13302:27089","2:13305:26588","2:13308:26590","2:13311:8429","2:13315:8387","2:13319:26160","2:13322:27079","2:13325:27081","2:13328:33354","2:13331:33355","2:13334:27083","2:13337:27085","2:13340:27087","2:13343:27088","2:13346:2958","2:13349:33356","2:13352:33357","2:13355:33358","2:13358:33359","2:13360:33360","2:13362:33361","2:13364:33362","2:13365:33363","2:13366:33364","2:13369:33365","2:13372:25890","2:13375:27090","2:13378:33366","2:13381:33367","2:13384:33368","2:13387:33369","2:13389:26086","2:13390:26929","2:13391:26090","2:13392:26091","2:13393:26092","2:13394:26932","2:13395:26933","2:13396:26934","2:13397:33370","2:13400:13444","2:13401:33371"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:238:2480":{"id":"0:238:2480","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:2457","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5693:14126":{"id":"5:5693:14126","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7747:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3206:246-0:146:2332":{"id":"a:2:3206:246-0:146:2332","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3206:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2760:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:211:703"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13277:27046":{"id":"2:13277:27046","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42155:190"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11041:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11041:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:94:2336":{"id":"0:94:2336","crate_id":0,"name":"ChaChaRng","span":{"filename":"src/lib.rs","begin":[32,0],"end":[32,33]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"0:246:2483":{"id":"0:246:2483","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"5:5710:26088":{"id":"5:5710:26088","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13392:26091"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:139":{"id":"0:139","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:140:479"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:115:2516":{"id":"0:115:2516","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180:2484":{"id":"0:180:2484","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2461","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13272:33350":{"id":"2:13272:33350","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2987-0:205:2329":{"id":"b:2:2987-0:205:2329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2989:838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13311:8429":{"id":"2:13311:8429","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42155:190","prim@char":"1:12355:475","self::pattern":"2:12952:13886"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:140:479":{"id":"0:140:479","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:89-0:214:2330":{"id":"0:89-0:214:2330","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,18],"end":[28,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Rng","name":"ChaCha12Rng","id":"0:214:2330","glob":false}}},"2:13355:33358":{"id":"2:13355:33358","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12952:13886","`DoubleEndedIterator`":"2:8320:129","prim@char":"1:12355:475","str::match_indices":"2:13352:33357"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44202:12240","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:13884","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5708:34069":{"id":"5:5708:34069","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:303:2989","`String`":"5:7747:242"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:303:2989","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13346:2958":{"id":"2:13346:2958","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12952:13886","`DoubleEndedIterator`":"2:8320:129","prim@char":"1:12355:475","str::rmatches":"2:13349:33356"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44238:12242","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5709:13581":{"id":"5:5709:13581","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7747:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2998-0:146:2332":{"id":"b:2:2998-0:146:2332","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3001:137","2:3002:1819"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:242:2484":{"id":"0:242:2484","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2461","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2760:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:265:703"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:101:2479":{"id":"0:101:2479","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:19:2468","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"b:22:270-0:273:2333":{"id":"b:22:270-0:273:2333","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2759","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3023","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25765"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:167":{"id":"0:167","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:2457","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:168:172","0:169:2479","0:170:2480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"22:273:25765":{"id":"22:273:25765","crate_id":22,"name":"vzip","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[226,4],"end":[226,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"V"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2986:2529":{"id":"2:2986:2529","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2960:144"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:187:2525":{"id":"0:187:2525","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13301:31785":{"id":"2:13301:31785","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44326:12248","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13393:26092":{"id":"2:13393:26092","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13300:33353":{"id":"2:13300:33353","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44298:12245","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13397:33370":{"id":"2:13397:33370","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5014:33370"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44333:12138","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13298:26161":{"id":"2:13298:26161","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44288:12244","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13396:26934":{"id":"2:13396:26934","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1063:38453"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42247:13452-0:214:2330":{"id":"a:2:42247:13452-0:214:2330","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42247:13452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:91-0:146:2332":{"id":"0:91-0:146:2332","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,45],"end":[28,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Rng","name":"ChaCha20Rng","id":"0:146:2332","glob":false}}},"0:254":{"id":"0:254","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:255:2525","0:256:2541","0:257:2554","0:258:2559","0:259:2562"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:278":{"id":"0:278","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2760:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:279:703"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13308:26590":{"id":"2:13308:26590","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:13886"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:13884","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:88-0:205:2329":{"id":"0:88-0:205:2329","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,4],"end":[28,16]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Core","name":"ChaCha12Core","id":"0:205:2329","glob":false}}},"5:793:8450":{"id":"5:793:8450","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2765:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3241:8471-0:214:2330":{"id":"a:2:3241:8471-0:214:2330","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3241:8471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13362:33361":{"id":"2:13362:33361","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:171":{"id":"0:171","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:140:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:172:2483","0:174:2484"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2713-0:282:2334":{"id":"b:2:2713-0:282:2334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2707:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2715:25762"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3-20:0:2326":{"id":"0:3-20:0:2326","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[22,0],"end":[22,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"rand_core","name":"rand_core","id":"20:0:2326","glob":false}}},"b:2:3822-0:146:2332":{"id":"b:2:3822-0:146:2332","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3820:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3824:1834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:790-0:146:2332":{"id":"b:5:790-0:146:2332","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:786:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:792:8449","5:793:8450","5:794:8451"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:197:703":{"id":"0:197:703","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13392:26091":{"id":"2:13392:26091","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5707:34068":{"id":"5:5707:34068","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7747:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2713-0:214:2330":{"id":"b:2:2713-0:214:2330","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2707:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2715:25762"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2710-0:273:2333":{"id":"b:2:2710-0:273:2333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2704:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2712:2943"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:139:2459","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:129:703":{"id":"0:129:703","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5696:34066":{"id":"5:5696:34066","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7747:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13286:27073":{"id":"2:13286:27073","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13285:27072","str::split_at_mut_checked":"2:13288:27077"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:838":{"id":"0:195:838","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:92-0:273:2333":{"id":"0:92-0:273:2333","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,58],"end":[28,69]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Core","name":"ChaCha8Core","id":"0:273:2333","glob":false}}},"2:13287:27076":{"id":"2:13287:27076","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13288:27077"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110:2483":{"id":"0:110:2483","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"b:2:2983-0:282:2334":{"id":"b:2:2983-0:282:2334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2986:2529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:22:270-0:146:2332":{"id":"b:22:270-0:146:2332","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2759","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3023","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25765"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3822-0:282:2334":{"id":"b:2:3822-0:282:2334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3820:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3824:1834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:790-0:282:2334":{"id":"b:5:790-0:282:2334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:786:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:792:8449","5:793:8450","5:794:8451"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:265:703":{"id":"0:265:703","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13305:26588":{"id":"2:13305:26588","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:13886"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3206:246-0:214:2330":{"id":"a:2:3206:246-0:214:2330","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3206:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13372:25890":{"id":"2:13372:25890","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:13886"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:93-0:282:2334":{"id":"0:93-0:282:2334","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,71],"end":[28,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Rng","name":"ChaCha8Rng","id":"0:282:2334","glob":false}}},"2:13264:8388":{"id":"2:13264:8388","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13337:27085":{"id":"2:13337:27085","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12355:475","str::splitn":"2:13334:27083","self::pattern":"2:12952:13886"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44156:12237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:13884","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42248:13672-0:137:2331":{"id":"a:2:42248:13672-0:137:2331","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42248:13672","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13283:33351":{"id":"2:13283:33351","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12361:1734","str::slice_mut_unchecked":"2:13284:33352","crate::ops::Index":"2:39699:13481"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:286":{"id":"0:286","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10377:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:287:808"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:258:2559":{"id":"0:258:2559","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:22:270-0:282:2334":{"id":"b:22:270-0:282:2334","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2759","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3023","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25765"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13340:27087":{"id":"2:13340:27087","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5711:26089":{"id":"5:5711:26089","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13393:26092"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13291:12260":{"id":"2:13291:12260","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12355:475"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:44010:12228","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42247:13452-0:146:2332":{"id":"a:2:42247:13452-0:146:2332","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42247:13452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:205:2329":{"id":"0:205:2329","crate_id":0,"name":"ChaCha12Core","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"ChaCha with 12 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32385:236-0:205:2329","a:2:32444:2988-0:205:2329","a:2:42247:13452-0:205:2329","a:2:3241:8471-0:205:2329","a:2:42248:13672-0:205:2329","a:2:3206:246-0:205:2329","b:2:2987-0:205:2329","b:2:2983-0:205:2329","b:2:2998-0:205:2329","b:2:2993-0:205:2329","b:2:2713-0:205:2329","b:2:2710-0:205:2329","b:2:3822-0:205:2329","b:5:790-0:205:2329","b:22:270-0:205:2329","0:212","0:165","0:171","0:176","0:167","0:194","0:207","0:210","0:209"]}}},"a:2:3206:246-0:205:2329":{"id":"a:2:3206:246-0:205:2329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3206:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13302:27089":{"id":"2:13302:27089","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:13886"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42247:13452-0:205:2329":{"id":"a:2:42247:13452-0:205:2329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42247:13452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13328:33354":{"id":"2:13328:33354","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12952:13886","str::split":"2:13319:26160","prim@char":"1:12355:475","`DoubleEndedIterator`":"2:8320:129","str::rsplit_terminator":"2:13331:33355"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44084:12233","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:12807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:251:2516":{"id":"0:251:2516","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:185:2519":{"id":"0:185:2519","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42286:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:76:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2996:137":{"id":"2:2996:137","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"5:5691":{"id":"5:5691","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5692:34065","5:5693:14126","5:5696:34066","5:5699:34067","5:5707:34068","5:5708:34069","5:5709:13581","5:5710:26088","5:5711:26089"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:276:479":{"id":"0:276:479","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:255:2525":{"id":"0:255:2525","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:22:270-0:137:2331":{"id":"b:22:270-0:137:2331","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2759","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3023","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25765"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:208:479"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2993-0:146:2332":{"id":"b:2:2993-0:146:2332","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2963:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2996:137","2:2997:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:250:2515":{"id":"0:250:2515","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2983-0:273:2333":{"id":"b:2:2983-0:273:2333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2986:2529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3822-0:214:2330":{"id":"b:2:3822-0:214:2330","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3820:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3824:1834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13391:26090":{"id":"2:13391:26090","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13358:33359":{"id":"2:13358:33359","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5699:34067":{"id":"5:5699:34067","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7747:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2997:1821":{"id":"2:2997:1821","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42286:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:479":{"id":"0:208:479","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"9:480:20428":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:10327:8461":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:33679:13733":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:437:9380":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:12683:12677":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"2:40883:12151":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:32386:2987":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:43426:9020":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:3337:10606":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"6:5186:11280":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:43434:9021":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"7:79:20422":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"6:5482:11428":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:11293:21540":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"2:3287:13849":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"17:3597:12600":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:4325:13633":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:6867:12906":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"11:798:9138":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"6:5295:11337":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:15197:10056":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:9170:8392":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"5:4486:264":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"6:6419:11539":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"11:2148:12755":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:2234:12597":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"16:7016:10507":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:12370:899":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"5:3096:33285":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:11680:12516":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"5:303:2989":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"6:4921:11198":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"6:5334:11351":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"6:7454:11825":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:15701:10205":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"21:2342:8616":{"crate_id":21,"path":["zerocopy","byteorder","I32"],"kind":"struct"},"2:46243:12323":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:45984:12303":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:14271:9802":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:14284:9804":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:14414:9824":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"16:6111:10422":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:23157:12041":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"1:12359:334":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:15957:10255":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"6:6716:11689":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"22:892:8596":{"crate_id":22,"path":["ppv_lite86","soft","x2"],"kind":"struct"},"6:5593:11464":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:11634:9446":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:256:12587":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:3903:12880":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"16:7305:10563":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"6:8249:11927":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"5:7537:34892":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:43219:8454":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"6:5319:11347":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"5:3092:11955":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:1831:14073":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"6:578:10960":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"16:8483:10705":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:45884:12294":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"18:659:12582":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:42197:8392":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:10852:31502":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:373:12843":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:46226:12322":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:15023:10024":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"5:7653:13463":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"16:4810:10393":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"18:670:12586":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:12056:9493":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:5972:12492":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:42872:8456":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"5:3313:34895":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:12993:21513":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:12381:1429":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"16:3126:20580":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:11583:12639":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"16:3048:20579":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:47081:8595":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"21:811:8635":{"crate_id":21,"path":["zerocopy","byteorder","LittleEndian"],"kind":"enum"},"1:8645:11798":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:21751:13740":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"5:1583:8832":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:10068:21492":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:40945:12158":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:32476:114":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"5:1895:12773":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"1:10712:12874":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"2:44004:12227":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:11214:12618":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:11256:9436":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"17:14038:9749":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"6:5341:11352":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"2:8784:32467":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"6:6723:11690":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"6:1667:11083":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:11357:12809":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"16:8320:21451":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:8602:13637":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:12361:1734":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"5:3724:8540":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:10031:8868":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"16:6421:8717":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:6374:30512":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:41390:12176":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:43395:9019":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:13015:8670":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"21:3567:35151":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Shared"],"kind":"enum"},"1:3303:30997":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"17:10317:8659":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:12621:9531":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"9:355:20444":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:7397:28334":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:3032:12871":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"6:5288:11335":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:15836:10237":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:500:30513":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"17:12887:8674":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"5:7527:11967":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"6:6473:11565":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:7919:12729":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:10524:12603":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:43173:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:7818:14112":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"6:1696:11094":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:2467:8700":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"5:7747:242":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:3575:210":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:5776:11719":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:44851:226":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:14933:10011":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:3610:12879":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:3427:8544":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:15176:10052":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:11306:12509":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"16:2820:10364":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"6:6708:11685":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"17:13363:9611":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:46123:12319":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:15010:10019":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"16:3014:20578":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:22358:13548":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:15078:10028":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:32351:12825":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"22:299:2760":{"crate_id":22,"path":["ppv_lite86","types","StoreBytes"],"kind":"trait"},"1:8331:12922":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:12175:12657":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:14212:9796":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:46036:12306":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"6:586:10964":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:39699:13481":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"16:5649:10414":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:46575:12351":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:15778:10227":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:12767:12007":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"5:7234:34886":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"16:6970:8768":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:5708:12893":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:42081:12198":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:11674:9449":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:41975:9014":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:15748:10219":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:47159:8356":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:43941:12838":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:14386:9818":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:10638:30520":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"1:1844:700":{"crate_id":1,"path":["std","env"],"kind":"module"},"16:6866:21443":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:12379:974":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:11668:9048":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:15376:10103":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:40054:13964":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:16105:10306":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"6:6526:11591":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:4925:13626":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:12969:9554":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:22670:13548":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"6:1551:11001":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:11621:8649":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"1:11035:9033":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"17:10137:21486":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:12949:9505":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:7548:11884":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:4564:8855":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"22:250:3021":{"crate_id":22,"path":["ppv_lite86","types","u128x2"],"kind":"trait"},"16:6696:12696":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"16:7765:10627":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:9886:21505":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"16:2966:10371":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:3658:30234":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:22850:12017":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"21:3666:25731":{"crate_id":21,"path":["zerocopy","CastType"],"kind":"enum"},"17:13455:9630":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"16:8528:10709":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"5:7587:8392":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:12659:12675":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"20:139:2459":{"crate_id":20,"path":["rand_core","CryptoRng"],"kind":"trait"},"1:6037:9035":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:12690:12235":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"6:5357:11354":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"16:7969:10651":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:44950:12286":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:10887:35029":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:2604:14155":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"17:15418:10112":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"6:7414:11817":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:23006:31539":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:14111:9759":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:41017:12164":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:9120:9032":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"6:8290:11936":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:13855:9721":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:32444:2988":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:8241:12920":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"16:6269:10430":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"6:6381:11512":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"21:3657:9288":{"crate_id":21,"path":["zerocopy","TrailingSliceLayout"],"kind":"struct"},"17:1098:12591":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:9235:13705":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"6:1684:11090":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:34198:14139":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"5:4332:12492":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"22:224:3016":{"crate_id":22,"path":["ppv_lite86","types","Swap64"],"kind":"trait"},"1:11657:2772":{"crate_id":1,"path":["std","sys","thread_local","fast_local","eager","State"],"kind":"enum"},"16:6462:21441":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:44288:12244":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"22:1520:8510":{"crate_id":22,"path":["ppv_lite86","x86_64","NoA1"],"kind":"struct"},"6:465:10893":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:43181:8452":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:10595:12933":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:14147:9765":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:4672:13638":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"6:4842:11149":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:46463:8593":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:14560:9850":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:1563:11009":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:15206:10057":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:6509:219":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"22:260:3022":{"crate_id":22,"path":["ppv_lite86","types","u128x4"],"kind":"trait"},"6:8284:11935":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:818:13594":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"2:2044:11979":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:22534:13824":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"16:7731:8531":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"9:236:2772":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:12373:892":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"22:1525:8511":{"crate_id":22,"path":["ppv_lite86","x86_64","YesA2"],"kind":"struct"},"2:6143:11993":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:12494:9525":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:11998:12813":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"17:15383:10104":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"6:6443:11555":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"6:5249:11313":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"16:8096:12737":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:9460:12494":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"6:1521:10981":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"16:7789:35019":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"6:5117:11273":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"5:0:308":{"crate_id":5,"path":["alloc"],"kind":"module"},"16:5348:10410":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"22:1593:3004":{"crate_id":22,"path":["ppv_lite86","x86_64","vec512_storage"],"kind":"union"},"2:9844:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:40836:8858":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:45852:12291":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:2635:12866":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"16:6781:10480":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"17:12530:12672":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"18:491:9295":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"21:595:25723":{"crate_id":21,"path":["zerocopy","Unaligned"],"kind":"trait"},"16:4766:10392":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"18:643:9296":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:3067:137":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:11874:12882":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:42879:8464":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:42286:225":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:14372:9816":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:10399:8661":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:12824:21512":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"6:4947:11208":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:46051:12307":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"21:3587:35471":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Initialized"],"kind":"enum"},"17:13723:9696":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:45916:12296":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:4595:8856":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"6:1703:11097":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:0:567":{"crate_id":2,"path":["core"],"kind":"module"},"17:14587:9853":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:11524:12631":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"17:11773:9535":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:8022:9464":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:40702:14202":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:10018:21489":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:39771:214":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:5335:203":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:4852:8491":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"6:5387:11369":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"6:5127:11274":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"5:6513:13830":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:2957:162":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:2967:256":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:14260:9801":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:22239:31523":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:3667:13546":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"22:235:2809":{"crate_id":22,"path":["ppv_lite86","types","u64x2"],"kind":"trait"},"2:3087:12797":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"16:6843:8766":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"11:1920:10808":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"11:299:10800":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:42115:12199":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"16:7907:10646":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"6:6748:11695":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"2:42531:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"6:6623:11652":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:15822:10234":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:15931:9582":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"21:32:25748":{"crate_id":21,"path":["zerocopy","byteorder","ByteOrder"],"kind":"trait"},"16:8043:35016":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:15151:10044":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:41166:12169":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"6:6823:11721":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:44452:12258":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:42269:3333":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:6718:9043":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:3035:123":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"5:1561:8392":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"22:216:3015":{"crate_id":22,"path":["ppv_lite86","types","Words4"],"kind":"trait"},"6:545:10942":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:9176:12484":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:13753:9705":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:1642:10808":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:11557:12633":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"16:7949:10378":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:3452:141":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:1098:12755":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"6:7350:11789":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:4807:13613":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:36420:10611":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:22717:13817":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"17:15039:10027":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:12360:1700":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"6:1643:11066":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"6:1500:10973":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:4796:8490":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"1:8050:13449":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"22:1495:8507":{"crate_id":22,"path":["ppv_lite86","x86_64","YesS3"],"kind":"struct"},"22:1530:8512":{"crate_id":22,"path":["ppv_lite86","x86_64","NoA2"],"kind":"struct"},"2:44595:12266":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:3252:13730":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"6:6813:11718":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:40874:12149":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"11:1023:12754":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"16:7462:12708":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:4821:12601":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"6:6521:11590":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:14529:9844":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"13:110:8520":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:4060:8392":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"16:7838:21448":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:12353:419":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"6:517:10926":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:11825:12648":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:13774:9709":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"6:5139:11275":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:10877:12608":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:33612:13731":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"6:1675:11084":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:44156:12237":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:15390:10105":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"5:1392:12755":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"17:11016:12610":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:46613:12353":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:6282:30518":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:40673:12143":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:10439:8637":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:8341:13580":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:10325:12858":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"5:7036:13916":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:13399:9618":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:12362:1824":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:13881:115":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:8480:12457":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"16:3110:10380":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:4929:11200":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:8282:164":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:40958:12159":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"16:6098:12683":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:22712:13819":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"17:11865:12652":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:3906:12881":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"21:1183:8611":{"crate_id":21,"path":["zerocopy","byteorder","U32"],"kind":"struct"},"2:32387:243":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:944:12759":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:44184:12239":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:8519:12167":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"6:6740:11694":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"1:938:12773":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"2:10384:8456":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"16:2796:10363":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:22934:8879":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:8622:12464":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"20:178:2456":{"crate_id":20,"path":["rand_core","block","BlockRng"],"kind":"struct"},"11:1158:12758":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"11:881:12753":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"16:3587:10382":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"2:40585:13957":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"17:13325:8683":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:2415:20550":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:40767:12828":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"18:531:9298":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:23026:31559":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:11730:9454":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"1:2541:2857":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:23223:12047":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"2:13633:8863":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"17:11812:12646":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"11:1085:34984":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"0:94:2336":{"crate_id":0,"path":["rand_chacha","ChaChaRng"],"kind":"type_alias"},"17:13797:9714":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:15102:10033":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:43379:9016":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:4109:13608":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"5:2591:11958":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:986:12753":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"6:8273:11931":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"5:1601:12759":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"21:587:25709":{"crate_id":21,"path":["zerocopy","IntoBytes"],"kind":"trait"},"6:7518:11867":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:11413:10871":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"6:6611:11645":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:12671:12676":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"2:47031:12393":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"3:233:225":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:5670:11503":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:42492:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:12485:21635":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"17:11497:12629":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"5:2272:11953":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:10915:35030":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"18:698:8629":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:15569:10165":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:13024:21514":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:33128:10601":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:2704:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:3414:124":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:4981:12886":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:14449:9836":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:9737:21487":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"1:8539:12244":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:12107:8640":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:10344:12942":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"2:3653:146":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:42206:8531":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"22:1205:8607":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","u64x2_sse2"],"kind":"struct"},"16:6337:10440":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:13187:9582":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:15720:10210":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"6:7448:11823":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"6:5603:11469":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"18:598:35038":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:11973:30524":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"1:8551:12930":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:3677:13568":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"16:4184:10387":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:14855:9968":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:40729:8661":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"17:12150:9498":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:22625:13828":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"20:124:25707":{"crate_id":20,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"6:4792:11112":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:4722:12801":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"6:5375:11364":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"5:1376:10591":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:40624:12140":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:12342:9511":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"5:3870:12774":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"16:8137:8782":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"16:7159:10534":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"11:2495:20504":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"1:8667:12465":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:12508:9528":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"6:6449:11556":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:40578:12138":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:42326:8539":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"15:288:20531":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:2640:10356":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:46501:12349":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"5:7487:8392":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:39040:14145":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"12:0:2845":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:2037:675":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:10918:12416":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"2:42278:8542":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"21:3594:35151":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","at_least","Shared"],"kind":"trait"},"2:3665:13930":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:2724:10360":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"17:11467:9445":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:44630:12271":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:9839:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"5:7712:11972":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"16:6837:8764":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"2:46883:12390":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"13:229:8794":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:3282:13848":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"2:3484:13482":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"16:8165:8785":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:2142:14166":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"20:133:2460":{"crate_id":20,"path":["rand_core","RngCore"],"kind":"trait"},"17:10759:8640":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:12264:12667":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:46634:12354":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"17:13272:9610":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:2719:30505":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:13292:8677":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"5:3334:10807":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:7472:30107":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"5:7770:12792":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:6599:11640":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:11719:12519":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:3248:8473":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"17:11242:12620":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"5:4212:8540":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:4883:13660":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"11:396:34992":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:15624:10184":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:44924:12842":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"2:2140:14165":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:884:8540":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:13674:9671":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"6:5349:11353":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"6:5405:11381":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"5:3347:34894":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"16:4873:10395":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"16:4241:10388":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:42865:8455":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:11354:12625":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:15445:10119":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:3395:12875":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:8700:13668":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:12318:9505":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:9361:9058":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:33746:14136":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:13814:9717":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"11:2420:8392":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"17:15116:10034":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"6:4890:11180":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"18:573:9296":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:15426:10114":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:21687:31518":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"16:7358:8772":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:6159:8733":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:6799:13699":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:9755:21485":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:46290:12326":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:2483:13537":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:5381:11366":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"16:2450:10347":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"6:6882:11733":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"16:6440:21440":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:2705:12868":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"5:1642:12772":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:44934:179":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"5:1407:12754":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:0:2849":{"crate_id":17,"path":["object"],"kind":"module"},"2:41142:12167":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"16:8058:12736":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:22360:13738":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:8223:10656":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:22982:12020":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:9411:12908":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"6:7487:11841":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"14:165:20512":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:43115:8452":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:9109:198":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"16:8298:10668":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"13:0:2839":{"crate_id":13,"path":["std_detect"],"kind":"module"},"5:219:12765":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"5:7161:263":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"6:4875:11173":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:6502:20549":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"22:1510:8506":{"crate_id":22,"path":["ppv_lite86","x86_64","NoS4"],"kind":"struct"},"17:11367:8651":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:16165:10322":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"2:11499:12811":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:11813:12880":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"5:7760:11975":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"5:7209:34869":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"11:2566:11968":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:38296:14141":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"5:6012:9138":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:42247:13452":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:8330:11944":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:22968:31875":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"5:5942:250":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:10326:225":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"17:16249:10339":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"1:5289:12887":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:7999:12913":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:46307:12327":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:4986:12602":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"2:46161:2809":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"10:0:2843":{"crate_id":10,"path":["adler"],"kind":"module"},"1:8803:13682":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:44913:32523":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"1:8489:13547":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:6764:11995":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"5:1622:8836":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:9274:115":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:8196:12417":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:10948:139":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"17:11142:8640":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:5258:12887":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:5844:12409":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:12376:1852":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:23234:12048":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"2:12973:13884":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:6534:11596":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:3241:8471":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:10715:12876":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"2:15:2471":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:41400:12177":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"17:10982:21521":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:23730:235":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"11:2551:34998":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:11661:9448":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:5205:11292":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:3698:181":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"16:4120:10385":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"6:1632:11058":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:13412:9620":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"5:5146:12492":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"16:7030:10509":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"11:854:12750":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"5:7567:8849":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"6:564:10952":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:10170:8636":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"16:7223:10548":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:11392:12008":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"15:327:8790":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:15799:10230":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:44010:12228":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"16:6573:10474":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:11128:9416":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:3438:12877":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:8373:2985":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"17:13738:9700":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:22452:13822":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"17:11688:9450":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"5:6881:34837":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:15596:10177":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"16:7508:10585":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"11:102:10799":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"16:6680:12693":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"17:11567:12634":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"2:40528:12134":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"7:0:1914":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:6796:12903":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:10938:9053":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"17:12289:9500":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:12388:9517":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"22:244:3019":{"crate_id":22,"path":["ppv_lite86","types","u64x2x2"],"kind":"trait"},"2:45952:12301":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:8085:12917":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:9220:13703":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:11189:9434":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:11485:12237":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"6:497:10909":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:8179:12416":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:41381:12175":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"11:2228:8799":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"16:6914:10495":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"6:5366:11358":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:15273:10073":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"11:364:34996":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:11853:12881":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:12141:28336":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:8320:129":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:14235:9797":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:0:1726":{"crate_id":1,"path":["std"],"kind":"module"},"6:570:10955":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"5:3935:12773":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"17:10769:35032":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"11:488:153":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"6:5507:11436":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"6:1507:10976":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:11115:12616":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:14723:9862":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"22:267:3023":{"crate_id":22,"path":["ppv_lite86","types","VZip"],"kind":"trait"},"1:5588:12888":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"16:6205:21439":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:8462:8865":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:15333:10089":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"16:6389:12685":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"16:7168:10535":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:4772:13656":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"6:8255:11928":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"11:830:12759":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"17:9671:21488":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"9:422:20431":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:21720:31513":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"5:5545:13871":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"16:8028:8779":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"6:532:10935":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:1539:10992":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"14:187:20519":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:11269:21539":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"1:8556:13590":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:46374:12330":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:12372:911":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:3046:137":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"18:623:35037":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"16:6984:8769":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"16:7807:35022":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"5:3090:33290":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"11:1105:12756":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"11:2323:12754":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"21:756:35254":{"crate_id":21,"path":["zerocopy","sealed","ByteSliceSealed"],"kind":"trait"},"1:12365:741":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"16:5417:10412":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"6:5230:11303":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:12597:9530":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"6:5051:11259":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"11:2539:10810":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:13064:9562":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:40562:12137":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:11764:9459":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"17:10661:12605":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"21:558:25722":{"crate_id":21,"path":["zerocopy","FromBytes"],"kind":"trait"},"16:8503:10706":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:42728:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"16:2620:10355":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:8267:10664":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:11419:8640":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:2175:21567":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"11:2440:9138":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"17:403:12589":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:12929:9552":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:23245:12049":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"1:8004:12413":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:12967:9318":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:7984:12412":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"6:5420:11387":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:7869:9423":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"21:607:8490":{"crate_id":21,"path":["zerocopy","Ref"],"kind":"struct"},"16:8565:10714":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:5089:13657":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"6:5676:11505":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:13581:9663":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"6:5057:11261":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:6084:10418":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"22:220:2758":{"crate_id":22,"path":["ppv_lite86","types","LaneWords4"],"kind":"trait"},"1:1631:10806":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"6:6480:11569":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"21:544:25710":{"crate_id":21,"path":["zerocopy","NoCell"],"kind":"trait"},"5:2374:8841":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:40993:9311":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"16:5085:10401":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:12189:12661":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:5533:11438":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:11956:12522":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"11:785:8834":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2:40968:8864":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:32362:12826":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"17:11443:9444":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:11430:12810":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:902:8832":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"6:6902:11747":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"16:7716:35018":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"16:4267:10389":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"6:8308:11939":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"5:4137:9138":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:34371:14140":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:10412:13347":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"2:22572:13827":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"2:40665:12142":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"1:10218:12195":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"2:4717:12800":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"6:1589:11025":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"6:7368:11798":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"16:5198:10405":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"5:2301:8838":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:9287:25869":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:10997:9430":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"16:8209:8786":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:13437:9622":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"22:202:3014":{"crate_id":22,"path":["ppv_lite86","types","Vec2"],"kind":"trait"},"18:538:8624":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:10913:12497":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"2:2606:14156":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"1:2232:128":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"2:44020:8661":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"16:7959:10650":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:8526:8661":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:10382:128":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"17:12572:8640":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"1:5965:12898":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:10889:12950":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"9:390:20430":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"6:4869:11172":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"18:589:9301":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"16:7372:8773":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:15301:10081":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:1922:12860":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"1:12368:739":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"17:13922:9734":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:3649:8461":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"11:698:8392":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:915:8834":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"5:7559:209":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"6:6411:11537":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"14:0:2846":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:46065:12308":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"5:4577:34865":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:46094:12310":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:23068:12033":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:4167:13613":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:8853:8539":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:34025:14138":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:14968:10012":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"16:5742:8636":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:1569:11011":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:44326:12248":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:12724:21511":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:12043:12654":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:2315:12865":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:10828:35026":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:11350:12955":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"2:44256:12243":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"16:8179:10655":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"17:12300:21633":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:9162:12934":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"5:7478:8826":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"6:8031:11925":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:14246:9799":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:43144:10683":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:41366:12173":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:8233:9030":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"20:107:25703":{"crate_id":20,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"17:15368:10100":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:40915:12155":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:10638:13552":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:5851:12410":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"6:4937:11202":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"6:5471:11423":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"6:6652:11665":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:43619:12219":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:8641:12932":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:14994:10018":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:23267:12051":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"17:14298:9805":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:4643:8489":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"16:7058:10510":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"16:4902:10396":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"5:1236:33286":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:527:13427":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:13972:9466":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:40739:13514":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"1:12338:25860":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:40977:12160":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:11313:9442":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"2:34544:10610":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"21:2099:8615":{"crate_id":21,"path":["zerocopy","byteorder","I16"],"kind":"struct"},"17:10622:35031":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:13308:8681":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:16269:9620":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"17:10573:35033":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"20:109:25704":{"crate_id":20,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"2:38351:14142":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:22:823":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"6:6917:11758":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"16:6368:8711":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"22:176:3006":{"crate_id":22,"path":["ppv_lite86","types","BSwap"],"kind":"trait"},"2:8291:2986":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"14:7:12742":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:47276:8363":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"6:4990:11227":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"22:296:3024":{"crate_id":22,"path":["ppv_lite86","types","Store"],"kind":"trait"},"1:10486:113":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"11:2366:12764":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"22:210:2762":{"crate_id":22,"path":["ppv_lite86","types","Vec4Ext"],"kind":"trait"},"11:2380:8539":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"18:735:25694":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"11:1907:10806":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:44609:13899":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"16:6144:21438":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:43132:12214":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"16:5379:10411":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:26130:266":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"6:5325:11348":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:21930:8876":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"16:2840:10365":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:8859:12479":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:15814:10231":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"9:53:8801":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:9389:12899":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"2:44052:12008":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:6408:10446":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"16:2880:10367":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"6:6659:11666":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:11493:12628":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:12322:9062":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:13485:9634":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:22918:8850":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:22205:13742":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"11:1140:12757":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:39861:12827":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:15126:10035":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"21:757:25727":{"crate_id":21,"path":["zerocopy","ByteSlice"],"kind":"trait"},"16:7542:10590":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:44837:163":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:44558:12265":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:5757:10416":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"1:9341:25870":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"17:15138:10038":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:12912:13527":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"6:5271:11324":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:6631:11653":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:4805:11121":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"6:6680:11672":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:8174:12918":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"18:754:9328":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:44531:12264":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"16:5709:21437":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"11:708:8835":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:15168:10049":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:16093:10304":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"1:9280:12935":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"1:8843:9148":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"18:726:8631":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"11:1601:12761":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"6:8343:11948":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:15616:10183":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:44034:12003":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:46484:3020":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"21:546:25720":{"crate_id":21,"path":["zerocopy","TryFromBytes"],"kind":"trait"},"1:7924:30526":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:5311:11344":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:1107:12758":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:2802:201":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"5:5805:13916":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:43105:12206":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"16:7337:10567":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:4211:13615":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"6:6544:11603":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"5:1791:34837":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:10388:8464":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:11276:161":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"6:4829:11139":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"6:6777:11705":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"2:46080:12309":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"16:6588:10477":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"18:521:25696":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"22:1445:9283":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","avx2","u32x4x2_avx2"],"kind":"struct"},"2:1961:12492":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"6:5224:11300":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:40717:12145":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:43869:12836":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:44685:130":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"18:581:8375":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"16:7416:12707":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:41352:12171":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:44138:12236":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:3559:12492":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"11:842:13464":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"17:11647:9447":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:14475:9838":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"5:4302:12492":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"5:6097:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:40757:11987":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:10171:8453":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"18:706:9318":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"6:6638:11654":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"16:2590:10354":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:21810:13739":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:11694:12517":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:41947:13591":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:11102:12615":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:11341:12624":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:11204:12483":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"15:0:2847":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:45867:12292":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"10:44:8800":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"16:2570:10353":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"6:1494:10970":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:8261:11929":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"5:4167:34837":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"16:2990:10372":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"9:176:8817":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"21:2991:8619":{"crate_id":21,"path":["zerocopy","byteorder","Isize"],"kind":"struct"},"1:12380:1924":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"21:34:25749":{"crate_id":21,"path":["zerocopy","byteorder","Order"],"kind":"enum"},"16:8626:10715":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:42570:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:39655:13852":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"15:306:20532":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"16:8711:10717":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"1:4161:13612":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"11:1580:12760":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:16032:9600":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"1:1613:8392":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"6:5301:11340":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"6:5622:11483":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:42059:31877":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"6:8353:11950":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:8636:21452":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"16:6658:8744":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:10984:25886":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"11:671:8539":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:12900:8676":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:14131:9760":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"16:5318:10409":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"21:3552:35150":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Invariants"],"kind":"trait"},"16:8669:10644":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"22:178:2756":{"crate_id":22,"path":["ppv_lite86","types","ArithOps"],"kind":"trait"},"2:2216:188":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"5:2821:11961":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:4354:13636":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:22990:12021":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:40472:12130":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"22:241:3018":{"crate_id":22,"path":["ppv_lite86","types","u32x4x2"],"kind":"trait"},"2:40686:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:9133:12483":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:3436:12876":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"11:1893:12773":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"1:11215:25894":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:46389:12331":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:10929:12504":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"2:43906:12012":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:41375:12174":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:23075:12036":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"6:6437:11552":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"5:1220:34414":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"5:1129:34837":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:13606:9667":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:16069:10299":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"6:5477:11426":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"22:206:2761":{"crate_id":22,"path":["ppv_lite86","types","Vec4"],"kind":"trait"},"6:5255:11315":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:9781:21503":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:12433:8670":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:675:12851":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:11042:12611":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:7495:10582":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:2495:13543":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:47253:8362":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:40924:12156":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"9:0:2842":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"18:563:8626":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"16:4956:10398":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:13473:9631":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"17:9938:21507":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:1075:10591":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"16:8151:8784":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"6:5428:11392":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:40513:31560":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:14016:13467":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:13610:12820":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"1:9384:186":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:22584:32225":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"14:202:13900":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:44620:12267":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:44841:218":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:8509:8857":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"21:139:70":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Any"],"kind":"enum"},"17:14489:9839":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:3300:31001":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:23120:13548":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1:4923:13624":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"6:7341:11788":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:32309:10813":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"17:10092:21510":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:13553:9653":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:14986:10017":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:3199:8468":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:12238:12665":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:10755:9464":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"2:43831:12009":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:44342:12129":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:10396:8463":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:42181:8539":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:44892:12840":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"5:3089:8449":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:9269:9037":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"5:4501:34865":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"16:6042:10373":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:8870:12480":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"16:2900:10368":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"22:180:2757":{"crate_id":22,"path":["ppv_lite86","types","BitOps32"],"kind":"trait"},"5:1008:8539":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:11595:8663":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"5:7724:11974":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:23278:12052":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"17:15058:8691":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:38461:14144":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:44661:12277":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:5638:12892":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"0:95:2338":{"crate_id":0,"path":["rand_chacha","ChaChaCore"],"kind":"type_alias"},"5:4531:12492":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:4819:11811":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"2:3201:117":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"11:0:2844":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"14:214:10795":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"17:15092:10032":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:5004:13623":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"6:8199:11926":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:903:12587":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"6:5441:11402":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"5:2154:9054":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"6:7316:11770":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:7539:11881":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"21:762:25729":{"crate_id":21,"path":["zerocopy","IntoByteSlice"],"kind":"trait"},"5:7697:14202":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:10218:8656":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"22:1560:8503":{"crate_id":22,"path":["ppv_lite86","x86_64","Avx2Machine"],"kind":"struct"},"17:15608:10180":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:10955:12505":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"2:42133:12200":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:15734:10212":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:21928:13737":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:3257:13732":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"6:6462:11557":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:30766:11977":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"16:6188:10424":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:39753:211":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:15992:10285":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"17:11227:12619":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:13946:9735":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:6876:10491":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:7990:8865":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:4694:13639":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"5:1256:34404":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"6:5641:11492":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"16:6256:8743":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:46806:12389":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:43961:12839":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:10905:12609":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"6:4914:11194":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"18:608:9291":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:23099:13607":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:6183:12409":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:12328:9507":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"1:2485:13538":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"9:500:10874":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:10967:12457":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"17:12557:8651":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"17:15214:10059":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:46357:12329":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:11898:9460":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"5:40:13483":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:15190:10055":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"5:7668:8845":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"16:8121:209":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"20:22:2458":{"crate_id":20,"path":["rand_core","block","CryptoBlockRng"],"kind":"trait"},"17:12543:12673":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"6:7431:11818":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"5:1633:209":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"16:5255:10407":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:15266:10072":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:2765:134":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"10:36:10819":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:8249:12921":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:13568:9659":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"5:3804:34837":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:44466:12261":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:11063:12613":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:11942:31144":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"2:39619:8543":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:40892:12152":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"21:1826:8614":{"crate_id":21,"path":["zerocopy","byteorder","Usize"],"kind":"struct"},"2:39716:212":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:22496:13823":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"2:2074:1367":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:45931:12297":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:11092:30517":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:10643:8873":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"5:1545:8540":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:10595:152":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"22:1569:2755":{"crate_id":22,"path":["ppv_lite86","x86_64","vec128_storage"],"kind":"union"},"6:5629:11486":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:2930:13548":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:758:153":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:32916:10604":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"16:2550:10352":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:16187:10328":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"1:11223:8875":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"6:538:10938":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:23041:31542":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"11:351:34994":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"6:7391:11816":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:12464:21634":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"17:12584:12607":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"1:6461:12409":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"17:12808:9549":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"16:6794:10481":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"2:3730:13853":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"18:765:25695":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"11:2559:10814":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:3638:14146":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"16:7401:35014":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:2951:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"22:232:2797":{"crate_id":22,"path":["ppv_lite86","types","u32x4"],"kind":"trait"},"2:6067:12492":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:12713:12238":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:14025:9747":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"16:7471:10581":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"5:4564:12492":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"2:8238:14117":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"5:7736:12791":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"5:3308:10806":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"11:2466:12773":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"17:11075:8651":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:5602:12890":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"6:5488:11429":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"2:39881:12128":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:33813:14135":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"20:0:2326":{"crate_id":20,"path":["rand_core"],"kind":"module"},"14:40:9597":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:9205:13704":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:5958:12894":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:44720:14268":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:3340:12872":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:5541:11443":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"21:796:8636":{"crate_id":21,"path":["zerocopy","byteorder","BigEndian"],"kind":"enum"},"17:15463:10122":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:13593:12817":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"2:42172:172":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:1861:12857":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"6:6700:11681":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"2:11471:12236":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:957:12747":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:4477:13846":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:5168:13664":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:13344:8690":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:4103:13609":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:6904:10494":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:46205:12321":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:15678:10204":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:15356:10097":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:42414:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:6964:11999":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:10534:35028":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:7986:11912":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:9807:21493":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:9715:25851":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"18:613:35036":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:42767:9015":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"16:2772:10362":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:44667:8875":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"17:9858:21504":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:5112:13659":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:47148:8355":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:5837:219":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:8208:139":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"16:4844:10394":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:42375:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:11877:8666":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:10612:12604":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:14503:9842":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"6:7463:11828":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:4561:12885":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:11241:12493":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"2:46336:12328":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:3432:13841":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"17:13424:9621":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:2010:791":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:8471:9055":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"16:896:12682":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"6:5412:1252":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"21:0:2983":{"crate_id":21,"path":["zerocopy"],"kind":"module"},"17:12707:12679":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"16:6640:12692":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"16:3141:9331":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"5:288:34837":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"17:14599:9860":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:43198:137":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:6678:12173":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:41915:12183":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:30798:31544":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"2:21918:13548":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"6:5648:11495":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:6959:12001":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"5:7070:13918":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"1:953:8836":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"6:6564:11619":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"5:7642:11968":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:23179:12043":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"16:6625:10478":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:928:9138":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:15646:10189":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:44834:150":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:5682:11508":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:4223:13618":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:8616:12928":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"14:160:12742":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:8186:9053":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"19:0:1300":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:23201:12045":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"5:891:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"18:651:9296":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:5098:13658":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"1:2076:196":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:4927:13627":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:13877:9728":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:41007:12163":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:9732:127":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"1:9308:12939":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"22:1535:8513":{"crate_id":22,"path":["ppv_lite86","x86_64","YesNI"],"kind":"struct"},"2:32376:12119":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"17:12647:12674":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"21:942:8609":{"crate_id":21,"path":["zerocopy","byteorder","U16"],"kind":"struct"},"2:2796:194":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:15249:10065":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"16:6808:8762":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"16:8233:21450":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:11841:12650":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:22586:14155":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"17:15342:10090":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:2149:11980":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:672:12849":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:12201:12662":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:9401:233":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:43932:12013":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"22:263:2759":{"crate_id":22,"path":["ppv_lite86","types","MultiLane"],"kind":"trait"},"1:11725:12520":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:32445:8475":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"5:7845:12794":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"5:5497:34837":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:8597:12463":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:10709:12872":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"1:2741:12867":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:12399:9518":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"5:935:13465":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:4:1265":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"5:4372:8539":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:16151:10319":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"6:7308:11765":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"6:7604:11906":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:39731:209":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:11510:12630":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:47315:8364":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"6:5069:11270":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"16:7212:10547":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:14311:9806":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"22:253:2803":{"crate_id":22,"path":["ppv_lite86","types","u32x4x4"],"kind":"trait"},"16:7424:21446":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"6:6507:11589":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:7767:31975":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:47060:12394":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:10754:14226":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"5:7495:11966":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"17:10284:8658":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:5779:13687":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"22:1500:8505":{"crate_id":22,"path":["ppv_lite86","x86_64","NoS3"],"kind":"struct"},"6:8302:11938":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"1:9545:12859":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"16:3695:10383":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"17:13375:9614":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:43993:12226":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:13999:9744":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"6:6876:11732":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:21804:13736":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:4874:8477":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"5:6665:9138":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:3267:10605":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"17:12030:12653":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:42153:193":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"11:123:8795":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:43627:12220":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:3211:8469":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:11715:9452":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"2:31172:8375":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:1609:8539":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:11080:30528":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"16:6998:10499":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:43416:2772":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:656:12848":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"16:7386:8774":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:8257:9054":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:41931:12185":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"21:2780:8618":{"crate_id":21,"path":["zerocopy","byteorder","I128"],"kind":"struct"},"6:5019:11243":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:21802:13548":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:5654:113":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:10386:8455":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:16235:10338":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"1:8070:13501":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"21:1408:8612":{"crate_id":21,"path":["zerocopy","byteorder","U64"],"kind":"struct"},"16:2704:10359":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:43387:9018":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:2954:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"1:9320:9056":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:31145:195":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"11:1880:8539":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:11319:12808":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"6:5179:11278":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:5007:11237":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:14752:9882":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:4843:13941":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"11:1005:10591":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:9315:9040":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"17:11788:12643":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"17:10419:8662":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:43980:12223":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:949:8835":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:553:10947":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:7152:13734":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"6:485:10904":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:42689:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:8222:127":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"20:186:2998":{"crate_id":20,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"2:47174:8357":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:3279:13847":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"2:3449:140":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:47223:8360":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:14189:9787":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:2707:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:42609:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:1897:12858":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:9256:12488":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:40794:12012":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:5551:11449":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:11212:8540":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"6:7469:11830":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"21:3645:25732":{"crate_id":21,"path":["zerocopy","SizeInfo"],"kind":"enum"},"5:3855:9054":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"18:718:9322":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"5:1421:12758":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:2963:257":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"6:4997:11230":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:44202:12240":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"16:6942:10497":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:11392:12626":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:15289:10075":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:6790:11712":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:44437:12252":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:11405:12627":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:14516:9843":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:16121:10311":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"2:10820:33135":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"5:2168:12774":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"17:14079:9755":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:12327:13451":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:980:12752":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"16:3889:9336":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"11:835:12747":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:8746:14116":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"18:0:2850":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:2435:20577":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"1:680:13446":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"18:680:9314":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:3443:2984":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:7597:8400":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:10026:32463":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:12863:9551":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:12371:905":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"6:473:10898":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:894:8392":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"16:8066:21449":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"17:12443:9521":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:10390:8465":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"8:0:2841":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"5:6150:14464":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:4821:11813":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"9:328:10856":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"6:7577:11900":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:3206:246":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:10185:8655":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"6:5282:11332":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:43780:12834":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"0:0:2339":{"crate_id":0,"path":["rand_chacha"],"kind":"module"},"17:12768:21490":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"6:1690:11093":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:12516:12670":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"6:479:10901":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:11153:12607":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:8788:12477":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:44084:12233":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:4139:13610":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"18:548:152":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"16:6731:8728":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:4333:13634":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"20:195:9293":{"crate_id":20,"path":["rand_core","error","ErrorCode"],"kind":"struct"},"2:44238:12242":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:12031:12814":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"2:4905:8492":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"6:8267:11930":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"17:16259:9615":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"17:15521:10164":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:3592:12460":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:1089:12754":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"11:1900:10805":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"16:7044:8770":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"16:7521:10588":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:11503:30509":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"2:42189:8540":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:12374:1864":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"16:6713:12698":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"5:2354:34945":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"6:523:10929":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:13387:9615":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"6:5088:11271":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"16:7192:21445":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:22558:13548":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"1:8608:12931":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"6:5520:11437":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"5:6532:13831":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"11:740:8836":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"16:7350:8729":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:12454:9522":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"2:9407:8866":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:12251:12666":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"6:5450:11408":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:42648:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"16:5449:10413":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:5085:13951":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:12467:14215":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:8050:9036":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:32355:10644":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"5:1592:8834":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"16:6738:35021":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:46708:12356":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"16:6608:205":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:7717:30462":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:16198:10329":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"17:15400:10108":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:30772:12054":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"6:1584:11023":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:14788:9913":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"16:7282:10562":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:12127:9497":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"16:6028:8732":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:2203:12594":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"5:3301:8539":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:1974:12861":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"6:4984:11224":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:14912:10006":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:5278:31568":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:11031:13548":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:4008:12882":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:3396:13851":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"1:6358:9141":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:12306:12959":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"16:546:8715":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:11755:9458":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"2:10603:156":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:10976:25891":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"6:1711:11101":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:4430:12798":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"16:5060:10400":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:4341:13635":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"5:7595:8392":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:42237:8532":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"16:6123:10374":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:32385:236":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:43849:12835":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:12653:12230":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:12382:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:12375:1846":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"21:535:25719":{"crate_id":21,"path":["zerocopy","KnownLayout"],"kind":"trait"},"2:42093:12462":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:821:189":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"6:0:1010":{"crate_id":6,"path":["libc"],"kind":"module"},"16:8014:8778":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"20:18:2457":{"crate_id":20,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"2:11280:12007":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:12958:12807":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:3473:12599":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:42351:195":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:40502:12131":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"16:5224:10406":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:10954:21520":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"5:2179:12775":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"16:8598:12741":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"20:140:2461":{"crate_id":20,"path":["rand_core","SeedableRng"],"kind":"trait"},"16:2860:10366":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:513:12590":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:13046:9559":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:11324:12621":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"16:8105:10654":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"11:873:12752":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:1637:10807":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:9406:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:4786:11986":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"16:7883:8725":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:6770:11704":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"2:46176:12320":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:10720:35027":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"16:155:8708":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"5:7684:11969":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:2726:112":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:10995:12917":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"2:42342:8392":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"6:6758:11702":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"17:14977:10016":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"20:163:2997":{"crate_id":20,"path":["rand_core","RngReadAdapter"],"kind":"struct"},"2:8271:145":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:10503:25846":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"2:42886:8465":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:14545:9846":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:3820:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"22:1111:8600":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","u32x4_sse2"],"kind":"struct"},"18:635:9313":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:3264:12598":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:47238:8361":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"6:5570:11457":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"6:1514:10978":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:2037:12593":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"6:1625:11054":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:44102:12234":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:16138:10313":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"7:32:20415":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"6:7332:11782":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:2748:10361":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:47185:8358":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:974:12750":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:4354:12492":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"1:8064:13450":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:40658:12141":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:22903:8878":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:9916:21506":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:592:12847":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"6:1597:11030":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:46144:2797":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:43840:12010":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:7702:13960":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"2:46546:12350":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:40864:133":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:32474:8474":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"22:967:8599":{"crate_id":22,"path":["ppv_lite86","soft","x4"],"kind":"struct"},"17:12478:9524":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:40854:12147":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:4303:30106":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"16:8585:12738":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:12356:1886":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"17:13766:9707":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:2780:12870":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:13538:9647":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:4454:109":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"6:4970:11216":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"5:6129:8847":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"21:122:9284":{"crate_id":21,"path":["zerocopy","pointer","ptr","def","Ptr"],"kind":"struct"},"6:5107:11272":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:11915:21609":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:8336:9052":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:10457:138":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:6199:219":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"18:689:9317":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:43880:12221":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:5447:202":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:12378:1840":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:44973:12287":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"5:3100:33297":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"21:764:25730":{"crate_id":21,"path":["zerocopy","IntoByteSliceMut"],"kind":"trait"},"2:3455:142":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:44416:13898":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:14876:9976":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:40845:8861":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"6:7586:11903":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:11605:8664":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"18:481:9294":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:40936:12157":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:40823:8857":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:15281:10074":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:9442:12493":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"17:15410:10111":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"16:8000:8777":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"21:3386:8621":{"crate_id":21,"path":["zerocopy","byteorder","F64"],"kind":"struct"},"16:7259:10561":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:3693:13850":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:11003:12893":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"17:15635:10188":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"16:6749:8759":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:7983:13548":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:9424:161":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:5257:437":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:13026:13892":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:2760:200":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"18:113:25686":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:2313:138":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:21822:8876":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:8428:177":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:10671:35025":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"6:7563:11891":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"11:1888:9138":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"6:5165:11277":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"16:5172:10404":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:30734:8884":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:8545:12928":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:10044:21509":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"11:2137:12754":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:46019:12305":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:10908:12495":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"16:6953:10498":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:15324:10086":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:12362:9516":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"16:6173:8736":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:14341:9811":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"6:5494:11431":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"1:11930:9061":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"11:2400:8540":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2:13188:119":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"17:11743:9455":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"1:7354:31290":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"11:772:8832":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"5:3342:10805":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:44298:12245":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:9146:9033":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:5992:9034":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:39868:12127":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:13509:9636":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"5:7507:9138":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:8228:9031":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"17:15655:10191":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"18:515:9297":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:5515:128":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:41408:12179":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:47128:8353":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:871:8539":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"15:394:20541":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"14:31:12742":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:11237:12003":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"1:12366:744":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"6:4902:11185":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"6:6691:11675":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"17:12792:9394":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"21:512:25718":{"crate_id":21,"path":["zerocopy","DstLayout"],"kind":"struct"},"2:22639:14155":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"1:12369:917":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"5:7829:12773":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"2:13904:9141":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"16:2506:10350":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"16:0:2848":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:12978:13883":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:9984:21508":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:23168:12042":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"17:13899:9729":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:30508:13593":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"11:1884:8392":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"16:6890:8767":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:13986:9743":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:44643:12275":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"16:7938:10647":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"17:10710:12606":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:1625:10805":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"16:5689:10415":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:12213:12663":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"16:8612:8788":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:21718:31515":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:12377:1858":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:13526:9644":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"6:5265:11321":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:2590:676":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"17:13211:9596":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:47200:8359":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:15434:10115":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:6406:9041":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"1:3393:12874":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:40466:12129":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:10392:205":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:11513:12812":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:4406:12883":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"16:2950:10370":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"16:5282:10408":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"6:1657:11077":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"5:3711:8539":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:46596:12352":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:46434:12348":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"16:3441:10381":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"1:9397:12492":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"22:1580:3003":{"crate_id":22,"path":["ppv_lite86","x86_64","vec256_storage"],"kind":"union"},"11:2545:10811":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:46275:12325":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:5586:11462":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:11051:12612":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:3841:13592":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:38406:14143":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:9154:8539":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:15313:10082":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:14402:9822":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"11:1564:20509":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"11:2121:10591":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"5:7060:13917":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:21667:8375":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:7325:30515":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"17:14463:9837":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"22:238:3017":{"crate_id":22,"path":["ppv_lite86","types","u128x1"],"kind":"trait"},"2:13698:32722":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:41359:12172":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"16:3834:10384":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:12072:13879":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:43404:156":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"6:5635:11489":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2:45899:12295":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"17:13594:9664":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:13832:9718":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:13844:9720":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"5:991:13466":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:46729:12357":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:44961:10817":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:12355:475":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:3065:225":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"1:9703:138":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"2:47002:8594":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"16:7075:21444":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:11708:12910":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"6:5462:11417":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"16:908:12588":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"2:12483:12815":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"6:8319:11943":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:44859:206":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:13146:9573":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"5:7517:12790":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:6239:8738":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"21:1617:8613":{"crate_id":21,"path":["zerocopy","byteorder","U128"],"kind":"struct"},"2:44351:12137":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"5:3368:10808":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"6:6493:11578":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"6:4957:11211":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:14091:9756":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:39791:213":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"16:4152:10386":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:8717:9144":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:11799:12644":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:45998:12304":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:963:13464":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"11:1064:20508":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"6:8014:11915":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:14436:9835":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"22:1545:8504":{"crate_id":22,"path":["ppv_lite86","x86_64","SseMachine"],"kind":"struct"},"17:10251:8657":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:4929:10397":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:13750:12821":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"16:3308:10346":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"11:434:34985":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:5727:8635":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:432:184":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:14066:9754":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"20:127:25708":{"crate_id":20,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"2:44308:12246":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:11018:25862":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"21:553:25721":{"crate_id":21,"path":["zerocopy","FromZeros"],"kind":"trait"},"2:44900:12283":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"16:6302:10437":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"5:795:118":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"6:5562:11455":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:6666:11667":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:11026:21522":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"11:1674:34982":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:16176:10327":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"17:15944:9596":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"1:2469:13533":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:1489:10968":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"20:76:137":{"crate_id":20,"path":["rand_core","error","Error"],"kind":"struct"},"17:13173:9581":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"16:7578:12489":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:45837:12288":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:6953:12002":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"6:1530:10986":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:43919:12837":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:22227:8877":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"6:559:10950":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:39811:215":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:44829:12282":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"1:1620:12773":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"6:4896:11182":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:8532:12003":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:47102:12395":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"6:5044:11257":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:9193:12485":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"5:4912:808":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"1:7879:12911":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:3529:12175":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:40787:12829":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"6:5241:11309":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:2467:13532":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:4442:12799":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"22:274:2754":{"crate_id":22,"path":["ppv_lite86","types","Machine"],"kind":"trait"},"17:11853:12651":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:11537:12632":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:4713:220":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:13924:9143":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"6:491:10906":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"22:1505:8508":{"crate_id":22,"path":["ppv_lite86","x86_64","YesS4"],"kind":"struct"},"16:6852:10486":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:11098:30508":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:14325:9809":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:15582:10171":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"18:80:25684":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:42248:13672":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:32369:8490":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"1:6853:9044":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"1:11949:12522":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"22:1515:8509":{"crate_id":22,"path":["ppv_lite86","x86_64","YesA1"],"kind":"struct"},"2:11041:238":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:40691:12144":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:13089:9563":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:11188:8539":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:14847:9965":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:22684:13818":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"17:11089:12614":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:12711:137":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"21:2569:8617":{"crate_id":21,"path":["zerocopy","byteorder","I64"],"kind":"struct"},"17:11166:9432":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"22:1411:9281":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","G0"],"kind":"struct"},"2:6256:8862":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:23212:12046":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"2:12729:12241":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:5395:11374":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:40906:8863":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:8590:12462":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:12278:12668":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:3678:32498":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"16:2920:10369":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"11:1049:12755":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:15456:10120":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"6:1727:11106":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:8737:149":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"16:4983:10399":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"22:0:2340":{"crate_id":22,"path":["ppv_lite86"],"kind":"module"},"2:41152:12168":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"5:895:12767":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:9710:12918":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"2:46973:12392":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:12851:8673":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"22:1416:9282":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","G1"],"kind":"struct"},"1:2073:197":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"6:6672:11670":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"16:7980:10379":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:12408:8669":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"5:6711:34837":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:597:9423":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:23088:12037":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:3297:26544":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:13785:9712":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"6:5658:11496":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"17:13116:9569":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:10837:30505":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:9103:12933":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"6:4976:11219":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"16:6064:10375":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"5:5305:8847":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"5:3272:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:1859:12856":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"14:220:10797":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:12354:1183":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"6:5151:11276":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:7703:13961":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"22:1299:8608":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","u128x1_sse2"],"kind":"struct"},"21:3601:8622":{"crate_id":21,"path":["zerocopy","wrappers","Unalign"],"kind":"struct"},"17:12225:12664":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:21703:31516":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:15769:10225":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:13961:151":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:2318:12498":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"1:12367:760":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:11790:25790":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"16:6822:21442":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"11:2533:10809":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:46679:12355":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"6:5196:11287":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:5217:11299":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"3:0:509":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"16:8723:137":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"16:3987:9344":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"16:2660:10357":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"22:885:2753":{"crate_id":22,"path":["ppv_lite86","dispatch_light128"],"kind":"macro"},"17:16212:10333":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"2:10377:119":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:6682:12902":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"5:3460:12773":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"2:22797:12016":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:3486:13575":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:4215:13616":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"11:328:10803":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"16:5144:10403":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:12076:12656":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:6924:232":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:10394:8462":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:22957:12018":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"11:2349:12755":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"1:12358:1323":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:40814:12830":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:2322:13529":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"5:2262:13427":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:33880:14137":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:40541:12135":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:10350:8660":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:6765:11703":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"6:6731:11691":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"2:40551:12136":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:1920:12859":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"11:1725:155":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"11:809:12773":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"1:568:13432":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"6:8296:11937":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"5:786:249":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:9518:12807":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:14868:9975":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:6572:185":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:16223:10335":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"2:2337:11984":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:42334:8540":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:4817:11809":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"17:14177:9784":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"6:4964:11214":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:11191:9032":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:11258:12508":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"17:12422:9519":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"17:10155:8635":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"1:3342:12873":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:21701:31510":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"17:14575:8670":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:2003:13511":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:10346:12941":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"17:261:12588":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:623:13443":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:47119:8352":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:22200:13548":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:8169:9374":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:16050:9610":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"17:12353:9515":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"18:507:9296":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:15222:10061":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"5:6792:8392":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:43160:31550":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"17:12695:12678":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"6:4881:11175":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"5:6255:12492":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:7554:21447":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"5:7551:8392":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:39703:12122":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"16:8546:10711":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:3927:9138":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"5:5002:216":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:16079:10300":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"2:12499:13887":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"22:183:3010":{"crate_id":22,"path":["ppv_lite86","types","RotateEachWord32"],"kind":"trait"},"2:44709:12279":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:3648:253":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:14356:9815":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:13497:9635":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"4:0:2840":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:43951:12014":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"5:1493:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:5113:10402":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"9:445:20429":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:5622:12891":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:21749:13548":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"17:11702:9451":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"2:13725:204":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:14012:9746":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:33340:14134":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:4201:13614":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"22:884:2752":{"crate_id":22,"path":["ppv_lite86","dispatch"],"kind":"macro"},"2:46258:12324":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"5:5541:13870":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:1481:155":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:2931:13963":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:21732:31521":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"17:1207:12592":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:30787:8452":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:10345:143":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"17:13959:9738":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"11:1914:10807":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"16:7990:10652":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:4487:12884":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"6:8008:11913":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"21:3229:8620":{"crate_id":21,"path":["zerocopy","byteorder","F32"],"kind":"struct"},"2:45969:12302":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"22:213:2763":{"crate_id":22,"path":["ppv_lite86","types","Vector"],"kind":"trait"},"2:5316:12804":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"22:257:2811":{"crate_id":22,"path":["ppv_lite86","types","u64x2x4"],"kind":"trait"},"2:43859:12011":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:11547:9373":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"5:732:12766":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"17:12089:9495":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"11:685:8540":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:46928:12391":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:8740:8541":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:1616:9138":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"22:247:3020":{"crate_id":22,"path":["ppv_lite86","types","u64x4"],"kind":"trait"},"2:23190:12044":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"1:9328:12489":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"6:5025:11246":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:44317:12247":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"21:427:35498":{"crate_id":21,"path":["zerocopy","wrappers","update","WriteBackOnDrop"],"kind":"struct"},"16:2486:10349":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:23256:12050":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"17:13235:9597":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"11:430:34991":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:5358:985":{"crate_id":2,"path":["core","iter"],"kind":"module"},"18:96:25685":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"16:2684:10358":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:39831:13457":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"22:1540:8514":{"crate_id":22,"path":["ppv_lite86","x86_64","NoNI"],"kind":"struct"},"17:13252:9600":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:15473:10127":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"6:7361:11794":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:8234:14118":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:42453:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:14051:9751":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:44483:12262":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"16:4404:10390":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:11674:12956":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:4496:13933":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"2:12952:13886":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"17:11574:8799":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"21:760:25728":{"crate_id":21,"path":["zerocopy","ByteSliceMut"],"kind":"trait"},"16:2530:10351":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:47139:8354":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:21676:31518":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:9416:12909":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"17:10818:12607":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"6:4816:11129":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:2960:144":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:15760:10221":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"6:5036:11252":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"11:2301:10591":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"17:12371:9552":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:4886:13638":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"5:1530:8539":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:40570:12129":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:41893:169":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"5:1611:8835":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"16:4694:10391":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:8765:2772":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:379:12845":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:44333:12138":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:4153:13611":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:3659:13931":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"}},"external_crates":{"20":{"name":"rand_core","html_root_url":"https://rust-random.github.io/rand/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"ppv_lite86","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"zerocopy","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":29}