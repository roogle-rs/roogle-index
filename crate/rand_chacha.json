{"root":"0:0:2453","crate_version":"0.9.0-alpha.2","includes_private":false,"index":{"a:2:42830:13648-0:133:2445":{"id":"a:2:42830:13648-0:133:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42830:13648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:133:2445":{"id":"0:133:2445","crate_id":0,"name":"ChaCha20Core","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32945:249-0:133:2445","a:2:3322:261-0:133:2445","a:2:3357:8647-0:133:2445","a:2:33003:3110-0:133:2445","a:2:42830:13648-0:133:2445","a:2:42831:13866-0:133:2445","b:2:2790-0:133:2445","b:2:2793-0:133:2445","b:2:2822-0:133:2445","b:2:3095-0:133:2445","b:2:3099-0:133:2445","b:2:3105-0:133:2445","b:2:3110-0:133:2445","b:2:3967-0:133:2445","b:5:782-0:133:2445","b:24:274-0:133:2445","0:135","0:137","0:138","0:140","0:94","0:96","0:100","0:105","0:122"]}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:145:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:156:3285":{"id":"0:156:3285","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43002:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:149:3120","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:107:2603":{"id":"0:107:2603","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:123:860":{"id":"0:123:860","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148":{"id":"0:148","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryCryptoRng","id":"20:156:3121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:187:2634":{"id":"0:187:2634","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3110-0:133:2445":{"id":"b:2:3110-0:133:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3113:150","2:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:304":{"id":"0:304","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["unwrap_err","read_adapter"],"trait":{"name":"TryRngCore","id":"20:149:3120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:305:150","0:306:3283","0:307:3284","0:308:3285"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2790-0:285:2447":{"id":"b:2:2790-0:285:2447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:3068"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3105-0:133:2445":{"id":"b:2:3105-0:133:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:150","2:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2790-0:133:2445":{"id":"b:2:2790-0:133:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:3068"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13793:31893":{"id":"2:13793:31893","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13794:31894"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:45008:12445","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2822-0:218:2444":{"id":"b:2:2822-0:218:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2824:26045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13814:26618":{"id":"2:13814:26618","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"Returns an iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nDiffers from the iterator produced by `split` in that `split_inclusive`\nleaves the matched part as the terminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12652:492","self::pattern":"2:13453:14322"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:13240:12202","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13821:34043":{"id":"2:13821:34043","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"Returns an iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:13453:14322","str::split":"2:13812:26616","prim@char":"1:12652:492","str::split_terminator":"2:13819:34042"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44802:12433","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13477:14324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:136:496":{"id":"0:136:496","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2793-0:209:2443":{"id":"b:2:2793-0:209:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2795:26037"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:103:2604":{"id":"0:103:2604","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:164:2581","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:95:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3357:8647-0:218:2444":{"id":"a:2:3357:8647-0:218:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:8647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:42-24:278:2873":{"id":"0:42-24:278:2873","crate_id":0,"name":null,"span":{"filename":"src/guts.rs","begin":[14,0],"end":[14,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"ppv_lite86::Machine","name":"Machine","id":"24:278:2873","glob":false}}},"2:13882:13641":{"id":"2:13882:13641","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Returns an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5069:13641"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:45042:12324","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259:2603":{"id":"0:259:2603","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:270:2677":{"id":"0:270:2677","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:114":{"id":"0:114","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:115:2643","0:116:2659","0:117:2672","0:118:2677","0:119:2680"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3969:1872":{"id":"2:3969:1872","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:40446:12322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:230:3283":{"id":"0:230:3283","crate_id":0,"name":"try_next_u32","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43002:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:149:3120","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13787:26614":{"id":"2:13787:26614","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divides one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13788:26615"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42734:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5712:34770":{"id":"5:5712:34770","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:299:3111","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:299:3111","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2793-0:285:2447":{"id":"b:2:2793-0:285:2447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2795:26037"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13796:34041":{"id":"2:13796:34041","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"Returns an iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44998:12444","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:288:496":{"id":"0:288:496","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211":{"id":"0:211","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:212:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:90-0:294:2448":{"id":"0:90-0:294:2448","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[97,71],"end":[97,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Rng","name":"ChaCha8Rng","id":"0:294:2448","glob":false}}},"a:2:3322:261-0:294:2448":{"id":"a:2:3322:261-0:294:2448","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"24:277:26044":{"id":"24:277:26044","crate_id":24,"name":"vzip","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.20/src/types.rs","begin":[226,4],"end":[226,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"V"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13785:26610":{"id":"2:13785:26610","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divides one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13787:26614","str::split_at_mut":"2:13786:26611"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13816:26620":{"id":"2:13816:26620","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"Returns an iterator over substrings of the given string slice, separated\nby characters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:13453:14322","`DoubleEndedIterator`":"2:8394:134","prim@char":"1:12652:492","str::split":"2:13812:26616"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44752:12203","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13477:14324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176":{"id":"0:176","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64","try_from_rng"],"trait":{"name":"SeedableRng","id":"20:164:2581","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:177:2603","0:179:2604"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:251:2600":{"id":"0:251:2600","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:58:2577","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:249:185":{"id":"0:249:185","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:18:2588":{"id":"0:18:2588","crate_id":0,"name":"Array64","span":{"filename":"src/chacha.rs","begin":[30,0],"end":[30,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"a:2:33003:3110-0:218:2444":{"id":"a:2:33003:3110-0:218:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33003:3110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13805:8606":{"id":"2:13805:8606","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42736:203","prim@char":"1:12652:492","self::pattern":"2:13453:14322"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42734:206","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42831:13866-0:209:2443":{"id":"a:2:42831:13866-0:209:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42831:13866","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3322:261-0:218:2444":{"id":"a:2:3322:261-0:218:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:299:830":{"id":"0:299:830","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:137":{"id":"0:137","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32947:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:194:2677":{"id":"0:194:2677","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2822-0:285:2447":{"id":"b:2:2822-0:285:2447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2824:26045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13800:26629":{"id":"2:13800:26629","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12652:492","self::pattern":"2:13453:14322"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13768:34037":{"id":"2:13768:34037","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13766:34036"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213":{"id":"0:213","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32947:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13829:26626":{"id":"2:13829:26626","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42734:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13855:34053":{"id":"2:13855:34053","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12652:492","self::pattern":"2:13453:14322"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13874:26353":{"id":"2:13874:26353","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13773:352":{"id":"2:13773:352","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13774:26587","`u8`":"1:12671:1903"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13876:26348":{"id":"2:13876:26348","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:138":{"id":"0:138","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:139:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:185:2604":{"id":"0:185:2604","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:164:2581","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5729:26350":{"id":"5:5729:26350","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13876:26348"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:181":{"id":"0:181","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:62:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2792:3068":{"id":"2:2792:3068","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:229:150":{"id":"0:229:150","crate_id":0,"name":"Error","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32869:3282","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:13846:34048":{"id":"2:13846:34048","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:199:860":{"id":"0:199:860","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:291:725":{"id":"0:291:725","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3105-0:218:2444":{"id":"b:2:3105-0:218:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:150","2:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:246":{"id":"0:246","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:247:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:265:2636":{"id":"0:265:2636","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121":{"id":"0:121","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:148:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42830:13648-0:285:2447":{"id":"a:2:42830:13648-0:285:2447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42830:13648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13872:26352":{"id":"2:13872:26352","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112:2635":{"id":"0:112:2635","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3113:150":{"id":"2:3113:150","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32869:3282","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2822-0:209:2443":{"id":"b:2:2822-0:209:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2824:26045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:101:2603":{"id":"0:101:2603","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:285:2447":{"id":"0:285:2447","crate_id":0,"name":"ChaCha8Core","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"public","docs":"ChaCha with 8 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32945:249-0:285:2447","a:2:3322:261-0:285:2447","a:2:3357:8647-0:285:2447","a:2:33003:3110-0:285:2447","a:2:42830:13648-0:285:2447","a:2:42831:13866-0:285:2447","b:2:2790-0:285:2447","b:2:2793-0:285:2447","b:2:2822-0:285:2447","b:2:3095-0:285:2447","b:2:3099-0:285:2447","b:2:3105-0:285:2447","b:2:3110-0:285:2447","b:2:3967-0:285:2447","b:5:782-0:285:2447","b:24:274-0:285:2447","0:287","0:289","0:290","0:292","0:246","0:248","0:252","0:257","0:274"]}}},"0:264:2635":{"id":"0:264:2635","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13777:26584":{"id":"2:13777:26584","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42736:203"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42734:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11577:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11577:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13812:26616":{"id":"2:13812:26616","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"Returns an iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:13453:14322","`DoubleEndedIterator`":"2:8394:134","prim@char":"1:12652:492","str::split_whitespace":"2:13793:31893","str::rsplit":"2:13816:26620"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:44734:12198","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13824:26622":{"id":"2:13824:26622","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"Returns an iterator over substrings of the given string slice, separated\nby a pattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12652:492","self::pattern":"2:13453:14322","str::rsplitn":"2:13826:26624"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44838:12435","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13878:26532":{"id":"2:13878:26532","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1148:39177"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2793-0:142:2446":{"id":"b:2:2793-0:142:2446","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2795:26037"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:142:2446":{"id":"0:142:2446","crate_id":0,"name":"ChaCha20Rng","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:186:2576","`RngCore`":"20:144:2580"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:114","a:2:32945:249-0:142:2446","a:2:3322:261-0:142:2446","a:2:3357:8647-0:142:2446","a:2:33003:3110-0:142:2446","a:2:42830:13648-0:142:2446","a:2:42831:13866-0:142:2446","b:2:2790-0:142:2446","b:2:2793-0:142:2446","b:2:2822-0:142:2446","b:2:3095-0:142:2446","b:2:3099-0:142:2446","b:2:3105-0:142:2446","b:2:3110-0:142:2446","b:2:3967-0:142:2446","b:5:782-0:142:2446","b:24:274-0:142:2446","0:144","0:146","0:106","0:110","0:121","0:152","0:148","0:122","0:124","0:126"]}}},"0:124":{"id":"0:124","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:125:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13851:34051":{"id":"2:13851:34051","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:782-0:218:2444":{"id":"b:5:782-0:218:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:8626","5:785:8627","5:786:8628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13865:34055":{"id":"2:13865:34055","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12652:492","self::pattern":"2:13453:14322"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:172":{"id":"0:172","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:58:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:173:185","0:174:2599","0:175:2600"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:33003:3110-0:209:2443":{"id":"a:2:33003:3110-0:209:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33003:3110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13880:34058":{"id":"2:13880:34058","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Returns an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5068:34058"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:45033:12333","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:221:496":{"id":"0:221:496","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5728:26351":{"id":"5:5728:26351","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13875:26349"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13772:34038":{"id":"2:13772:34038","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:142:2446":{"id":"b:2:3099-0:142:2446","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:195:2680":{"id":"0:195:2680","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:201:725":{"id":"0:201:725","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:267:2643":{"id":"0:267:2643","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13794:31894":{"id":"2:13794:31894","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13793:31893"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:45017:12446","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13839:34045":{"id":"2:13839:34045","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"Returns an iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13453:14322","`DoubleEndedIterator`":"2:8394:134","prim@char":"1:12652:492","str::rmatch_indices":"2:13841:34046"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44884:12438","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257":{"id":"0:257","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:62:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13775:26583":{"id":"2:13775:26583","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42736:203"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42734:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11577:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11577:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3095-0:142:2446":{"id":"b:2:3095-0:142:2446","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3098:2647"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:170":{"id":"0:170","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:171:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13784:34040":{"id":"2:13784:34040","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12658:1772","crate::ops::IndexMut":"2:3628:13680","str::slice_unchecked":"2:13783:34039"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3095-0:285:2447":{"id":"b:2:3095-0:285:2447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3098:2647"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13808:8563":{"id":"2:13808:8563","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42736:203","prim@char":"1:12652:492","self::pattern":"2:13453:14322"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42734:206","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13477:14324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13870:34057":{"id":"2:13870:34057","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13412:149","`FromStr`":"2:13411:13723"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43002:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:13411:13723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13411:13723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2793-0:294:2448":{"id":"b:2:2793-0:294:2448","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2795:26037"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:174:2599":{"id":"0:174:2599","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:18:2588","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"0:109:2604":{"id":"0:109:2604","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:164:2581","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:193:2672":{"id":"0:193:2672","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:92:2452":{"id":"0:92:2452","crate_id":0,"name":"ChaChaCore","span":{"filename":"src/lib.rs","begin":[103,0],"end":[103,35]},"visibility":"public","docs":"ChaCha with 20 rounds, low-level interface","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"b:2:3110-0:294:2448":{"id":"b:2:3110-0:294:2448","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3113:150","2:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32945:249-0:133:2445":{"id":"a:2:32945:249-0:133:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"20:144:2580","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:263:2634","0:264:2635","0:265:2636"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:290":{"id":"0:290","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:291:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3110-0:142:2446":{"id":"b:2:3110-0:142:2446","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3113:150","2:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:24:274-0:133:2445":{"id":"b:24:274-0:133:2445","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.20/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"24:267:2878","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"24:271:3150","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["24:277:26044"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:209:2443":{"id":"0:209:2443","crate_id":0,"name":"ChaCha12Core","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"public","docs":"ChaCha with 12 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32945:249-0:209:2443","a:2:3322:261-0:209:2443","a:2:3357:8647-0:209:2443","a:2:33003:3110-0:209:2443","a:2:42830:13648-0:209:2443","a:2:42831:13866-0:209:2443","b:2:2790-0:209:2443","b:2:2793-0:209:2443","b:2:2822-0:209:2443","b:2:3095-0:209:2443","b:2:3099-0:209:2443","b:2:3105-0:209:2443","b:2:3110-0:209:2443","b:2:3967-0:209:2443","b:5:782-0:209:2443","b:24:274-0:209:2443","0:211","0:213","0:214","0:216","0:170","0:172","0:176","0:181","0:198"]}}},"a:2:33003:3110-0:285:2447":{"id":"a:2:33003:3110-0:285:2447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33003:3110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13763:1027":{"id":"2:13763:1027","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12652:492"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13786:26611":{"id":"2:13786:26611","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divides one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13785:26610","str::split_at_mut_checked":"2:13788:26615"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"20:144:2580","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:187:2634","0:188:2635","0:189:2636"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:263:2634":{"id":"0:263:2634","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:199:860"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13788:26615":{"id":"2:13788:26615","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divides one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13787:26614"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42734:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:139:725":{"id":"0:139:725","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64","try_from_rng"],"trait":{"name":"SeedableRng","id":"20:164:2581","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:107:2603","0:109:2604"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2790-0:218:2444":{"id":"b:2:2790-0:218:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:3068"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13797:31895":{"id":"2:13797:31895","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:45026:12447","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42830:13648-0:209:2443":{"id":"a:2:42830:13648-0:209:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42830:13648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3967-0:142:2446":{"id":"b:2:3967-0:142:2446","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:215:725":{"id":"0:215:725","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183:2603":{"id":"0:183:2603","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"a:2:3357:8647-0:133:2445":{"id":"a:2:3357:8647-0:133:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:8647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3357:8647-0:142:2446":{"id":"a:2:3357:8647-0:142:2446","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:8647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3095-0:209:2443":{"id":"b:2:3095-0:209:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3098:2647"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:111:2634":{"id":"0:111:2634","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:782-0:209:2443":{"id":"b:5:782-0:209:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:8626","5:785:8627","5:786:8628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:175:2600":{"id":"0:175:2600","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:58:2577","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:271:2680":{"id":"0:271:2680","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:148:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:232:3285":{"id":"0:232:3285","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43002:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:149:3120","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3109:1859":{"id":"2:3109:1859","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:43002:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2790-0:142:2446":{"id":"b:2:2790-0:142:2446","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:3068"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42831:13866-0:285:2447":{"id":"a:2:42831:13866-0:285:2447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42831:13866","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:785:8627":{"id":"5:785:8627","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:292":{"id":"0:292","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:289":{"id":"0:289","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32947:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:87-0:133:2445":{"id":"0:87-0:133:2445","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[97,31],"end":[97,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Core","name":"ChaCha20Core","id":"0:133:2445","glob":false}}},"2:13831:26627":{"id":"2:13831:26627","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42734:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13477:14324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13762":{"id":"2:13762","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13763:1027","2:13764:8564","2:13765:34035","2:13766:34036","2:13768:34037","2:13771:26524","2:13772:34038","2:13773:352","2:13774:26587","2:13775:26583","2:13777:26584","2:13779:26585","2:13781:26586","2:13783:34039","2:13784:34040","2:13785:26610","2:13786:26611","2:13787:26614","2:13788:26615","2:13790:12448","2:13791:12459","2:13792:2637","2:13793:31893","2:13794:31894","2:13795:30861","2:13796:34041","2:13797:31895","2:13798:26628","2:13800:26629","2:13802:26630","2:13805:8606","2:13808:8563","2:13812:26616","2:13814:26618","2:13816:26620","2:13819:34042","2:13821:34043","2:13824:26622","2:13826:26624","2:13829:26626","2:13831:26627","2:13834:3080","2:13836:34044","2:13839:34045","2:13841:34046","2:13844:34047","2:13846:34048","2:13848:34049","2:13850:34050","2:13851:34051","2:13852:34052","2:13855:34053","2:13857:26101","2:13859:26631","2:13862:34054","2:13865:34055","2:13867:34056","2:13870:34057","2:13872:26352","2:13873:26528","2:13874:26353","2:13875:26349","2:13876:26348","2:13877:26531","2:13878:26532","2:13879:26533","2:13880:34058","2:13882:13641","2:13883:34059","2:13884:27812"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5713:14247":{"id":"5:5713:14247","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:2680":{"id":"0:119:2680","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13852:34052":{"id":"2:13852:34052","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12652:492","self::pattern":"2:13453:14322"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13482:14323","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryCryptoRng","id":"20:156:3121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3110-0:285:2447":{"id":"b:2:3110-0:285:2447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3113:150","2:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13774:26587":{"id":"2:13774:26587","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12671:1903"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3108:150":{"id":"2:3108:150","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"2:13883:34059":{"id":"2:13883:34059","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Returns an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5066:34059"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:45051:12332","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:288:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["unwrap_err","read_adapter"],"trait":{"name":"TryRngCore","id":"20:149:3120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:150","0:230:3283","0:231:3284","0:232:3285"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13877:26531":{"id":"2:13877:26531","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1148:39177"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:224":{"id":"0:224","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryCryptoRng","id":"20:156:3121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3105-0:209:2443":{"id":"b:2:3105-0:209:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:150","2:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:95:830":{"id":"0:95:830","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2793-0:133:2445":{"id":"b:2:2793-0:133:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2795:26037"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:231:3284":{"id":"0:231:3284","crate_id":0,"name":"try_next_u64","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43002:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:149:3120","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:223:830":{"id":"0:223:830","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261:2604":{"id":"0:261:2604","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:164:2581","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13867:34056":{"id":"2:13867:34056","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12652:492","self::pattern":"2:13453:14322"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13477:14324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:117:2672":{"id":"0:117:2672","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13781:26586":{"id":"2:13781:26586","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11577:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11577:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2793-0:218:2444":{"id":"b:2:2793-0:218:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2795:26037"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3114:1857":{"id":"2:3114:1857","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:43002:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3967-0:285:2447":{"id":"b:2:3967-0:285:2447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:214":{"id":"0:214","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:215:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:305:150":{"id":"0:305:150","crate_id":0,"name":"Error","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32869:3282","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:88-0:142:2446":{"id":"0:88-0:142:2446","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[97,45],"end":[97,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Rng","name":"ChaCha20Rng","id":"0:142:2446","glob":false}}},"5:5711":{"id":"5:5711","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5712:34770","5:5713:14247","5:5715:34771","5:5717:34772","5:5725:34773","5:5726:34774","5:5727:13778","5:5728:26351","5:5729:26350"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:135":{"id":"0:135","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:136:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:113:2636":{"id":"0:113:2636","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:173:185":{"id":"0:173:185","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:308:3285":{"id":"0:308:3285","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43002:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:149:3120","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13859:26631":{"id":"2:13859:26631","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12652:492","self::pattern":"2:13453:14322"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42734:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13477:14324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32945:249-0:285:2447":{"id":"a:2:32945:249-0:285:2447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:99:2600":{"id":"0:99:2600","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:58:2577","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32945:249-0:294:2448":{"id":"a:2:32945:249-0:294:2448","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:145:496":{"id":"0:145:496","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13884:27812":{"id":"2:13884:27812","crate_id":2,"name":"substr_range","span":null,"visibility":"public","docs":"Returns the range that a substring points to.\n\nReturns `None` if `substr` does not point within `self`.\n\nUnlike [`str::find`], **this does not search through the string**.\nInstead, it uses pointer arithmetic to find where in the string\n`substr` is derived from.\n\nThis is useful for extending [`str::split`] and similar methods.\n\nNote that this method may return false positives (typically either\n`Some(0..0)` or `Some(self.len()..self.len())`) if `substr` is a\nzero-length `str` that points at the beginning or end of another,\nindependent, `str`.\n\n# Examples\n```\n#![feature(substr_range)]\n\nlet data = \"a, b, b, a\";\nlet mut iter = data.split(\", \").map(|s| data.substr_range(s).unwrap());\n\nassert_eq!(iter.next(), Some(0..1));\nassert_eq!(iter.next(), Some(3..4));\nassert_eq!(iter.next(), Some(6..7));\nassert_eq!(iter.next(), Some(9..10));\n```","links":{"`str::split`":"2:13812:26616","`str::find`":"2:13805:8606"},"attrs":["#[must_use]","#[unstable(feature = \"substr_range\", issue = \"126769\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["substr",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42734:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Range","id":"2:40309:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13841:34046":{"id":"2:13841:34046","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"Returns an iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:13453:14322","`DoubleEndedIterator`":"2:8394:134","prim@char":"1:12652:492","str::match_indices":"2:13839:34045"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44902:12439","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13477:14324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:152":{"id":"0:152","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["unwrap_err","read_adapter"],"trait":{"name":"TryRngCore","id":"20:149:3120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:153:150","0:154:3283","0:155:3284","0:156:3285"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:33003:3110-0:133:2445":{"id":"a:2:33003:3110-0:133:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33003:3110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:140":{"id":"0:140","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:179:2604":{"id":"0:179:2604","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:164:2581","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:96":{"id":"0:96","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:58:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:97:185","0:98:2599","0:99:2600"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3-20:0:2440":{"id":"0:3-20:0:2440","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[91,0],"end":[91,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"rand_core","name":"rand_core","id":"20:0:2440","glob":false}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13819:34042":{"id":"2:13819:34042","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"Returns an iterator over substrings of the given string slice, separated\nby characters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:13453:14322","str::split":"2:13812:26616","prim@char":"1:12652:492","`DoubleEndedIterator`":"2:8394:134","str::rsplit_terminator":"2:13821:34043"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44784:12432","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13862:34054":{"id":"2:13862:34054","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12652:492","self::pattern":"2:13453:14322"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13477:14324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:155:3284":{"id":"0:155:3284","crate_id":0,"name":"try_next_u64","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43002:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:149:3120","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3357:8647-0:294:2448":{"id":"a:2:3357:8647-0:294:2448","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:8647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:188:2635":{"id":"0:188:2635","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:85-0:209:2443":{"id":"0:85-0:209:2443","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[97,4],"end":[97,16]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Core","name":"ChaCha12Core","id":"0:209:2443","glob":false}}},"2:13779:26585":{"id":"2:13779:26585","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11577:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11577:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:298":{"id":"0:298","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:299:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5727:13778":{"id":"5:5727:13778","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32945:249-0:142:2446":{"id":"a:2:32945:249-0:142:2446","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:189:2636":{"id":"0:189:2636","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:273":{"id":"0:273","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:148:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:98:2599":{"id":"0:98:2599","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:18:2588","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"0:146":{"id":"0:146","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:147:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:294:2448":{"id":"0:294:2448","crate_id":0,"name":"ChaCha8Rng","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:186:2576","`RngCore`":"20:144:2580"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:266","a:2:32945:249-0:294:2448","a:2:3322:261-0:294:2448","a:2:3357:8647-0:294:2448","a:2:33003:3110-0:294:2448","a:2:42830:13648-0:294:2448","a:2:42831:13866-0:294:2448","b:2:2790-0:294:2448","b:2:2793-0:294:2448","b:2:2822-0:294:2448","b:2:3095-0:294:2448","b:2:3099-0:294:2448","b:2:3105-0:294:2448","b:2:3110-0:294:2448","b:2:3967-0:294:2448","b:5:782-0:294:2448","b:24:274-0:294:2448","0:296","0:298","0:258","0:262","0:273","0:304","0:300","0:274","0:276","0:278"]}}},"5:784:8626":{"id":"5:784:8626","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"5:5726:34774":{"id":"5:5726:34774","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:299:3111","`String`":"5:7774:257"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:299:3111","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42831:13866-0:142:2446":{"id":"a:2:42831:13866-0:142:2446","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42831:13866","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:89-0:285:2447":{"id":"0:89-0:285:2447","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[97,58],"end":[97,69]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Core","name":"ChaCha8Core","id":"0:285:2447","glob":false}}},"0:154:3283":{"id":"0:154:3283","crate_id":0,"name":"try_next_u32","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43002:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:149:3120","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:171:830":{"id":"0:171:830","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42830:13648-0:218:2444":{"id":"a:2:42830:13648-0:218:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42830:13648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3110-0:218:2444":{"id":"b:2:3110-0:218:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3113:150","2:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:306:3283":{"id":"0:306:3283","crate_id":0,"name":"try_next_u32","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43002:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:149:3120","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3967-0:218:2444":{"id":"b:2:3967-0:218:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42830:13648-0:294:2448":{"id":"a:2:42830:13648-0:294:2448","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42830:13648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:192:2659":{"id":"0:192:2659","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2790-0:209:2443":{"id":"b:2:2790-0:209:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:3068"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:86-0:218:2444":{"id":"0:86-0:218:2444","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[97,18],"end":[97,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Rng","name":"ChaCha12Rng","id":"0:218:2444","glob":false}}},"2:13857:26101":{"id":"2:13857:26101","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12652:492","self::pattern":"2:13453:14322"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42734:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3105-0:294:2448":{"id":"b:2:3105-0:294:2448","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:150","2:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3967-0:209:2443":{"id":"b:2:3967-0:209:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42830:13648-0:142:2446":{"id":"a:2:42830:13648-0:142:2446","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42830:13648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3099-0:285:2447":{"id":"b:2:3099-0:285:2447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3099-0:209:2443":{"id":"b:2:3099-0:209:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:248":{"id":"0:248","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:58:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:249:185","0:250:2599","0:251:2600"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:268:2659":{"id":"0:268:2659","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:252":{"id":"0:252","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64","try_from_rng"],"trait":{"name":"SeedableRng","id":"20:164:2581","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:253:2603","0:255:2604"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:116:2659":{"id":"0:116:2659","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:276":{"id":"0:276","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:277:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2795:26037":{"id":"2:2795:26037","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:191:2643":{"id":"0:191:2643","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3322:261-0:285:2447":{"id":"a:2:3322:261-0:285:2447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13783:34039":{"id":"2:13783:34039","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12658:1772","str::slice_mut_unchecked":"2:13784:34040","crate::ops::Index":"2:40277:13679"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"5:5717:34772":{"id":"5:5717:34772","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:133:2445":{"id":"b:2:3099-0:133:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32945:249-0:209:2443":{"id":"a:2:32945:249-0:209:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32945:249-0:218:2444":{"id":"a:2:32945:249-0:218:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13844:34047":{"id":"2:13844:34047","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:294:2448":{"id":"b:2:3099-0:294:2448","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13834:3080":{"id":"2:13834:3080","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"Returns an iterator over the disjoint matches of a pattern within the\ngiven string slice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:13453:14322","`DoubleEndedIterator`":"2:8394:134","prim@char":"1:12652:492","str::rmatches":"2:13836:34044"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44938:12441","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:122":{"id":"0:122","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:123:860"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13879:26533":{"id":"2:13879:26533","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1148:39177"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:212:496":{"id":"0:212:496","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:91:2450":{"id":"0:91:2450","crate_id":0,"name":"ChaChaRng","span":{"filename":"src/lib.rs","begin":[101,0],"end":[101,33]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"0:253:2603":{"id":"0:253:2603","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:115:2643":{"id":"0:115:2643","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:274-0:142:2446":{"id":"b:24:274-0:142:2446","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.20/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"24:267:2878","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"24:271:3150","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["24:277:26044"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3322:261-0:133:2445":{"id":"a:2:3322:261-0:133:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:782-0:285:2447":{"id":"b:5:782-0:285:2447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:8626","5:785:8627","5:786:8628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3110-0:209:2443":{"id":"b:2:3110-0:209:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3113:150","2:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:275:860":{"id":"0:275:860","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274":{"id":"0:274","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:275:860"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:247:830":{"id":"0:247:830","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:2643","0:268:2659","0:269:2672","0:270:2677","0:271:2680"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3357:8647-0:285:2447":{"id":"a:2:3357:8647-0:285:2447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:8647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3095-0:294:2448":{"id":"b:2:3095-0:294:2448","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3098:2647"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:258":{"id":"0:258","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64","try_from_rng"],"trait":{"name":"SeedableRng","id":"20:164:2581","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:259:2603","0:261:2604"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:278":{"id":"0:278","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:786:8628":{"id":"5:786:8628","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2824:26045":{"id":"2:2824:26045","crate_id":2,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13766:34036":{"id":"2:13766:34036","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110":{"id":"0:110","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"20:144:2580","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:111:2634","0:112:2635","0:113:2636"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:125:725":{"id":"0:125:725","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:182":{"id":"0:182","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64","try_from_rng"],"trait":{"name":"SeedableRng","id":"20:164:2581","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:183:2603","0:185:2604"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13795:30861":{"id":"2:13795:30861","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"Returns an iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44988:12443","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13848:34049":{"id":"2:13848:34049","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13873:26528":{"id":"2:13873:26528","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40630:14085","Self::is_ascii":"2:13872:26352"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42734:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40630:14085","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:250:2599":{"id":"0:250:2599","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:18:2588","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"a:2:33003:3110-0:294:2448":{"id":"a:2:33003:3110-0:294:2448","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33003:3110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13875:26349":{"id":"2:13875:26349","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2822-0:133:2445":{"id":"b:2:2822-0:133:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2824:26045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5715:34771":{"id":"5:5715:34771","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2822-0:294:2448":{"id":"b:2:2822-0:294:2448","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2824:26045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:782-0:142:2446":{"id":"b:5:782-0:142:2446","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:8626","5:785:8627","5:786:8628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3105-0:142:2446":{"id":"b:2:3105-0:142:2446","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:150","2:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:782-0:133:2445":{"id":"b:5:782-0:133:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:8626","5:785:8627","5:786:8628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2822-0:142:2446":{"id":"b:2:2822-0:142:2446","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2824:26045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2790-0:294:2448":{"id":"b:2:2790-0:294:2448","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:3068"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13765:34035":{"id":"2:13765:34035","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42831:13866-0:294:2448":{"id":"a:2:42831:13866-0:294:2448","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42831:13866","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3357:8647-0:209:2443":{"id":"a:2:3357:8647-0:209:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:8647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13826:26624":{"id":"2:13826:26624","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"Returns an iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning at\nmost `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12652:492","str::splitn":"2:13824:26622","self::pattern":"2:13453:14322"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44856:12436","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13477:14324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:153:150":{"id":"0:153:150","crate_id":0,"name":"Error","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32869:3282","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:13791:12459":{"id":"2:13791:12459","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12652:492"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:44710:12427","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:274-0:209:2443":{"id":"b:24:274-0:209:2443","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.20/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"24:267:2878","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"24:271:3150","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["24:277:26044"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:255:2604":{"id":"0:255:2604","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:164:2581","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3967-0:133:2445":{"id":"b:2:3967-0:133:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42831:13866-0:218:2444":{"id":"a:2:42831:13866-0:218:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42831:13866","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:100":{"id":"0:100","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64","try_from_rng"],"trait":{"name":"SeedableRng","id":"20:164:2581","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:101:2603","0:103:2604"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:24:274-0:294:2448":{"id":"b:24:274-0:294:2448","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.20/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"24:267:2878","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"24:271:3150","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["24:277:26044"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:24:274-0:285:2447":{"id":"b:24:274-0:285:2447","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.20/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"24:267:2878","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"24:271:3150","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["24:277:26044"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:147:830":{"id":"0:147:830","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13771:26524":{"id":"2:13771:26524","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12976:14325"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5725:34773":{"id":"5:5725:34773","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:307:3284":{"id":"0:307:3284","crate_id":0,"name":"try_next_u64","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43002:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:149:3120","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3101:860":{"id":"2:3101:860","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3098:2647":{"id":"2:3098:2647","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3072:157"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13798:26628":{"id":"2:13798:26628","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12652:492","self::pattern":"2:13453:14322"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:274-0:218:2444":{"id":"b:24:274-0:218:2444","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.20/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"24:267:2878","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"24:271:3150","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["24:277:26044"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3967-0:294:2448":{"id":"b:2:3967-0:294:2448","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3322:261-0:142:2446":{"id":"a:2:3322:261-0:142:2446","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13802:26630":{"id":"2:13802:26630","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12652:492","self::pattern":"2:13453:14322"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13477:14324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3322:261-0:209:2443":{"id":"a:2:3322:261-0:209:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:191:2643","0:192:2659","0:193:2672","0:194:2677","0:195:2680"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:269:2672":{"id":"0:269:2672","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:218:2444":{"id":"b:2:3099-0:218:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:177:2603":{"id":"0:177:2603","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:277:725":{"id":"0:277:725","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:2453":{"id":"0:0:2453","crate_id":0,"name":"rand_chacha","span":{"filename":"src/lib.rs","begin":[9,0],"end":[103,35]},"visibility":"public","docs":"The ChaCha random number generators.\n\nThese are native Rust implementations of RNGs derived from the\n[ChaCha stream ciphers] by D J Bernstein.\n\n## Generators\n\nThis crate provides 8-, 12- and 20-round variants of generators via a \"core\"\nimplementation (of [`BlockRngCore`]), each with an associated \"RNG\" type\n(implementing [`RngCore`]).\n\nThese generators are all deterministic and portable (see [Reproducibility]\nin the book), with testing against reference vectors.\n\n## Cryptographic (secure) usage\n\nWhere secure unpredictable generators are required, it is suggested to use\n[`ChaCha12Rng`] or [`ChaCha20Rng`] and to seed via\n[`SeedableRng::from_os_rng`].\n\nSee also the [Security] chapter in the rand book. The crate is provided\n\"as is\", without any form of guarantee, and without a security audit.\n\n## Seeding (construction)\n\nGenerators implement the [`SeedableRng`] trait. Any method may be used,\nbut note that `seed_from_u64` is not suitable for usage where security is\nimportant. Some suggestions:\n\n1.  With a fresh seed, **direct from the OS** (implies a syscall):\n    ```\n    # use {rand_core::SeedableRng, rand_chacha::ChaCha12Rng};\n    let rng = ChaCha12Rng::from_os_rng();\n    # let _: ChaCha12Rng = rng;\n    ```\n2.  **From a master generator.** This could be [`rand::thread_rng`]\n    (effectively a fresh seed without the need for a syscall on each usage)\n    or a deterministic generator such as [`ChaCha20Rng`].\n    Beware that should a weak master generator be used, correlations may be\n    detectable between the outputs of its child generators.\n\nSee also [Seeding RNGs] in the book.\n\n## Generation\n\nGenerators implement [`RngCore`], whose methods may be used directly to\ngenerate unbounded integer or byte values.\n```\nuse rand_core::{SeedableRng, RngCore};\nuse rand_chacha::ChaCha12Rng;\n\nlet mut rng = ChaCha12Rng::from_seed(Default::default());\nlet x = rng.next_u64();\nassert_eq!(x, 0x53f955076a9af49b);\n```\n\nIt is often more convenient to use the [`rand::Rng`] trait, which provides\nfurther functionality. See also the [Random Values] chapter in the book.\n\n[ChaCha stream ciphers]: https://cr.yp.to/chacha.html\n[Reproducibility]: https://rust-random.github.io/book/crate-reprod.html\n[Seeding RNGs]: https://rust-random.github.io/book/guide-seeding.html\n[Security]: https://rust-random.github.io/book/guide-rngs.html#security\n[Random Values]: https://rust-random.github.io/book/guide-values.html\n[`BlockRngCore`]: rand_core::block::BlockRngCore\n[`RngCore`]: rand_core::RngCore\n[`SeedableRng`]: rand_core::SeedableRng\n[`SeedableRng::from_os_rng`]: rand_core::SeedableRng::from_os_rng\n[`rand::thread_rng`]: https://docs.rs/rand/latest/rand/fn.thread_rng.html\n[`rand::Rng`]: https://docs.rs/rand/latest/rand/trait.Rng.html","links":{"`ChaCha12Rng`":"0:218:2444","rand_core::RngCore":"20:144:2580","rand_core::block::BlockRngCore":"20:58:2577","rand_core::SeedableRng":"20:164:2581","`ChaCha20Rng`":"0:142:2446"},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\", html_favicon_url\n= \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://rust-random.github.io/rand/\")]","#![forbid(unsafe_code)]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:3-20:0:2440","0:85-0:209:2443","0:86-0:218:2444","0:87-0:133:2445","0:88-0:142:2446","0:89-0:285:2447","0:90-0:294:2448","0:91:2450","0:92:2452"],"is_stripped":false}}},"b:2:3095-0:218:2444":{"id":"b:2:3095-0:218:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3098:2647"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:202":{"id":"0:202","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42831:13866-0:133:2445":{"id":"a:2:42831:13866-0:133:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42831:13866","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:118:2677":{"id":"0:118:2677","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218:2444":{"id":"0:218:2444","crate_id":0,"name":"ChaCha12Rng","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:186:2576","`RngCore`":"20:144:2580"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:190","a:2:32945:249-0:218:2444","a:2:3322:261-0:218:2444","a:2:3357:8647-0:218:2444","a:2:33003:3110-0:218:2444","a:2:42830:13648-0:218:2444","a:2:42831:13866-0:218:2444","b:2:2790-0:218:2444","b:2:2793-0:218:2444","b:2:2822-0:218:2444","b:2:3095-0:218:2444","b:2:3099-0:218:2444","b:2:3105-0:218:2444","b:2:3110-0:218:2444","b:2:3967-0:218:2444","b:5:782-0:218:2444","b:24:274-0:218:2444","0:220","0:222","0:182","0:186","0:197","0:228","0:224","0:198","0:200","0:202"]}}},"b:5:782-0:294:2448":{"id":"b:5:782-0:294:2448","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:8626","5:785:8627","5:786:8628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:297:496":{"id":"0:297:496","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13792:2637":{"id":"2:13792:2637","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"Returns an iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:44720:8841","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13850:34050":{"id":"2:13850:34050","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:223:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:97:185":{"id":"0:97:185","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"b:2:3105-0:285:2447":{"id":"b:2:3105-0:285:2447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:150","2:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:33003:3110-0:142:2446":{"id":"a:2:33003:3110-0:142:2446","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33003:3110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3095-0:133:2445":{"id":"b:2:3095-0:133:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3098:2647"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:105":{"id":"0:105","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:62:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13764:8564":{"id":"2:13764:8564","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13790:12448":{"id":"2:13790:12448","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12652:492"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:44704:12426","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2448","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:297:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13836:34044":{"id":"2:13836:34044","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"Returns an iterator over the disjoint matches of a pattern within this\nstring slice, yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:13453:14322","`DoubleEndedIterator`":"2:8394:134","prim@char":"1:12652:492","str::matches":"2:13834:3080"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44956:12442","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13460:13020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13477:14324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:201:725"],"negative":false,"synthetic":false,"blanket_impl":null}}}},"paths":{"17:15896:10279":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:22790:13936":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"6:7284:11959":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:12547:13026":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"17:16211:10381":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:41078:12326":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"5:6547:14027":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:3965:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"1:8124:9659":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"6:6398:11733":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"18:635:9490":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:23684:12245":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"2:2229:13728":{"crate_id":2,"path":["core","ptr","metadata","metadata"],"kind":"function"},"16:5647:10610":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"6:6852:11926":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:3396:13928":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:3874:132":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:4513:111":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:3809:14051":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:22277:9058":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:3373:13085":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:48015:8777":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:8225:12121":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:11272:26293":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:41265:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:15389:10111":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:465:11087":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:11757:9627":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"16:4808:10589":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:44551:12205":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"16:8230:21717":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:13000:21913":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"1:9538:13120":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"1:12087:26304":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:2521:13739":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:8315:158":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"6:6360:11706":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:41962:12370":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"17:15469:10173":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:5057:11455":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:5505:215":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"21:2863:8802":{"crate_id":21,"path":["zerocopy","wrappers","Unalign"],"kind":"struct"},"17:12935:9712":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"1:4852:12007":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"17:13436:8858":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:7806:32703":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"5:7738:12166":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:44081:9198":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"6:5381:11560":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:41933:12366":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:3596:154":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"11:292:10995":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"6:6744:11897":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"17:16766:10526":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"2:41323:12182":{"crate_id":2,"path":["core","ffi","va_list","VaListImpl"],"kind":"struct"},"1:10657:116":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"6:4805:11315":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"6:7494:12061":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:11458:12825":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"16:7518:10783":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"11:1878:11000":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:4965:13822":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:13529:9750":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:8499:190":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:1114:12966":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:12150:13093":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:4071:9320":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"5:4473:281":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:10880:8817":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:4959:8667":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:45026:12447":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:6778:13114":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"6:545:11136":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"6:5366:11552":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:4848:12003":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"6:5471:11617":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"1:4703:13834":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"18:689:9494":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"21:363:8695":{"crate_id":21,"path":["zerocopy","FromBytes"],"kind":"trait"},"2:2877:147":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"24:1641:8689":{"crate_id":24,"path":["ppv_lite86","x86_64","NoA1"],"kind":"struct"},"16:6835:8947":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"2:44106:169":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:47817:12598":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:8428:13134":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:44338:12419":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:4816:11323":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:4255:13814":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"21:1685:8796":{"crate_id":21,"path":["zerocopy","byteorder","I16"],"kind":"struct"},"17:11485:12826":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"0:92:2452":{"crate_id":0,"path":["rand_chacha","ChaChaCore"],"kind":"type_alias"},"17:13014:9718":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:12976:14325":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:47192:12532":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"16:6026:8915":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:11629:9596":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:45493:12482":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:12898:9710":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"9:168:9000":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:39039:14268":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:4193:13808":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:12670:914":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:8343:13132":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:9385:9219":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"16:4954:10594":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"11:1083:12968":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:11888:12841":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:43002:238":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"5:884:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:14710:9960":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"14:213:10990":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:7553:12094":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"6:5477:11620":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:33706:10796":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:11269:21796":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:3426:14260":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"2:45139:12451":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:11576:8824":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:11053:12819":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:9396:13151":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"6:6513:11790":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:45497:12483":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"11:2507:11004":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:45740:13052":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"5:2251:13623":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:4897:14063":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:11404:26170":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:13608:21753":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:22178:33339":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:8742:11992":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:16219:10382":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"9:435:20697":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:11502:9619":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"2:41496:12350":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:13575:8852":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:15035:10036":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:32945:249":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"18:706:9495":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:12677:1967":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"13:0:2958":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:6366:8894":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"9:345:20712":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"16:3585:10578":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"1:1942:13071":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:11921:13022":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"17:12447:21888":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:10283:21772":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"16:8102:10849":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:14350:9906":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"5:5414:14310":{"crate_id":5,"path":["alloc","rc","UniqueRcUninit"],"kind":"struct"},"16:7334:10762":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:46818:12502":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:32911:13038":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:4803:13852":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"22:183:8815":{"crate_id":22,"path":["byteorder","LittleEndian"],"kind":"enum"},"5:2142:9236":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:31062:13791":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"6:6578:11834":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:13700:9768":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:48062:8503":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:523:11123":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:5946:12618":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:988:13662":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:42674:12670":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"5:4362:8721":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"6:5450:11602":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"5:7710:12163":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:12214:9643":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"17:16658:10498":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"17:3743:12811":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:22881:14020":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"2:42927:12403":{"crate_id":2,"path":["core","range","iter","IterRangeFrom"],"kind":"struct"},"2:34458:14258":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"5:7098:14356":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"6:5521:11632":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:23640:12241":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"1:8653:13786":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"1:3707:13764":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"5:1397:12966":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:14955:10016":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:45372:12474":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"6:1563:11203":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:13093:8824":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"2:4906:8666":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:16068:10325":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"11:851:12964":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:15174:8852":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:11074:12705":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"16:7220:10743":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:702:13063":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"1:7819:28553":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:8705:13143":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"16:7279:10757":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"16:7804:35405":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"5:5134:12700":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:11915:8820":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"20:203:3123":{"crate_id":20,"path":["rand_core","UnwrapErr"],"kind":"struct"},"16:7505:10780":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:43580:8641":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:4838:13809":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"6:5271:11518":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:2787:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:5224:11494":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:4840:12181":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"11:686:9017":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"6:7407:12012":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"5:3298:11001":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"16:7492:10777":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:3797:159":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"5:5289:9029":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"1:4922:13856":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:10886:13084":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"16:2988:10568":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:12344:9652":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"6:6659:11866":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:13471:9495":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:44643:13050":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"16:8093:12949":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"24:1734:3131":{"crate_id":24,"path":["ppv_lite86","x86_64","vec512_storage"],"kind":"union"},"18:718:9499":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:43861:31885":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"17:12133:9637":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:11084:32542":{"crate_id":2,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"1:1636:8569":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:15937:10288":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:40389:228":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:42861:8726":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"6:5311:11538":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:41445:146":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:9225:211":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:47397:8775":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"11:2519:11006":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:44136:9203":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:12385:12865":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:15733:10236":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:2784:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:16250:10389":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:12331:12860":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:23548:13744":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"17:14598:9945":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:15456:10166":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:44491:13046":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:44097:9201":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:41371:13042":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"16:6335:10636":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"6:8272:12131":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"5:5821:14355":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:4981:10595":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:16650:10497":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"18:481:9471":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:44570:12206":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:16672:10502":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"2:3431:14261":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"2:909:13790":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"2:4621:9037":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:8433:9234":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:48119:8508":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:11174:13105":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"2:4501:13011":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:16838:9814":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"1:3937:13093":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:11987:13173":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:16350:10423":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:8335:9212":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"18:515:9474":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:8629:12198":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"1:12007:12726":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:11981:9230":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:8559:9047":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:11883:13021":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:562:13544":{"crate_id":1,"path":["std","thread","thread_name_string","ThreadNameString"],"kind":"struct"},"2:14483:13665":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"13:229:8977":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:14307:9895":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"6:553:11141":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"6:5301:11534":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:16700:10509":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"6:491:11100":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:22152:33331":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"16:4182:10583":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:12621:9690":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"18:491:9472":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:44998:12444":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:16315:10410":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"16:6387:12897":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:13052:12884":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"16:5707:21704":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:22686:33342":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:4134:13805":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:15817:10259":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:13947:9810":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"5:3303:33819":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"6:6452:11759":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:1690:11287":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:12958:9713":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:8764:12673":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:5022:13098":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"16:7786:35404":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:3371:13084":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:44321:12417":{"crate_id":2,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"2:22383:13935":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:10898:151":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"16:2746:10557":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:6820:21709":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"17:12045:9554":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"6:8175:12120":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:47160:12530":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:43921:8631":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"6:5255:11509":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:564:11146":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:45509:12486":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:9209:13147":{"crate_id":1,"path":["std","pipe","PipeReader"],"kind":"struct"},"1:7982:13123":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:9846:26289":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"1:12171:13094":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"24:1651:8691":{"crate_id":24,"path":["ppv_lite86","x86_64","NoA2"],"kind":"struct"},"1:5682:13100":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:14008:9820":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:32929:8665":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"5:214:12977":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:10496:13070":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"1:5696:13102":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:33036:278":{"crate_id":2,"path":["core","marker","UnsizedConstParamTy"],"kind":"trait"},"17:13157:9725":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"6:6631:11859":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:12671:1903":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"17:11161:35416":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"5:0:325":{"crate_id":5,"path":["alloc"],"kind":"module"},"17:11667:9623":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:15534:10209":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"16:6267:10626":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:45821:12495":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"6:5428:11586":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"24:182:2875":{"crate_id":24,"path":["ppv_lite86","types","ArithOps"],"kind":"trait"},"1:1643:12985":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"2:3322:261":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:42696:12394":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:47368:12556":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"16:5755:10612":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:12035:12435":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"11:2440:12985":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"2:41313:8841":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"1:6087:9216":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"6:532:11129":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:22373:13744":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:9309:12693":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:8152:13645":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:1584:11217":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"5:4901:830":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"6:5611:11680":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:22259:13934":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:6816:9225":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"17:13231:12892":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"2:3481:10801":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:45481:12479":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:16525:9795":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"1:9528:246":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"24:1616:8686":{"crate_id":24,"path":["ppv_lite86","x86_64","YesS3"],"kind":"struct"},"2:7740:14082":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:7972:9603":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:46903:12510":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"16:8480:10900":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:13044:9722":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:3697:13742":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"16:6939:10693":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"5:4157:33623":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"24:220:3142":{"crate_id":24,"path":["ppv_lite86","types","Words4"],"kind":"trait"},"5:7074:14355":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:42734:206":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:14476:9929":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"5:7856:12985":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"17:13771:9781":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"5:1781:33623":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"11:1892:11002":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:8276:13130":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"17:11814:9633":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"1:595:13629":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:3069:175":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"6:6505:11785":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:14521:9935":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:46833:12503":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"6:6792:11912":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:32915:10839":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"17:13959:9813":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"16:4842:10590":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:15721:10233":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"20:0:2440":{"crate_id":20,"path":["rand_core"],"kind":"module"},"5:4552:12700":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"1:11412:9057":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"11:776:9320":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"6:6651:11864":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:45168:12460":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:13260:21782":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:47965:12601":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"11:813:12959":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:13836:9799":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:2671:697":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"16:5346:10606":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:570:11149":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:16777:10527":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"1:8806:13865":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:12711:12871":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:14212:13034":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:22265:13937":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:14093:9835":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"16:2702:10555":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"16:6901:10690":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"3:1785:238":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:11552:12827":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"6:559:11144":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"11:2340:12976":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"16:6254:8926":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:2736:13080":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"20:186:2576":{"crate_id":20,"path":["rand_core","block","BlockRng"],"kind":"struct"},"2:3803:14052":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:12008:12844":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:11842:12839":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"16:5687:10611":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:16013:10310":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:14940:10012":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:11794:21816":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"2:42714:12395":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"6:6638:11860":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"11:1885:11001":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"17:12160:9639":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"20:118:25991":{"crate_id":20,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"2:48053:8502":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"20:156:3121":{"crate_id":20,"path":["rand_core","TryCryptoRng"],"kind":"trait"},"17:3877:12812":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:5575:133":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"17:15908:10280":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"11:1871:12985":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"16:7413:12919":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"16:6586:10673":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"1:508:26256":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:1100:10786":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"24:1000:8781":{"crate_id":24,"path":["ppv_lite86","soft","x4"],"kind":"struct"},"21:229:35742":{"crate_id":21,"path":["zerocopy","wrappers","update","WriteBackOnDrop"],"kind":"struct"},"1:9292:12692":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:1625:11248":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:3063:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"17:15771:10250":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"6:4947:11402":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:15:2591":{"crate_id":2,"path":["core","write"],"kind":"macro"},"5:6148:9029":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:48134:8509":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"21:1220:8794":{"crate_id":21,"path":["zerocopy","byteorder","U64"],"kind":"struct"},"11:2469:20772":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:47270:12536":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"20:194:3125":{"crate_id":20,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"1:3640:13091":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:650:13640":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"11:321:10998":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:14165:9862":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"16:6500:20816":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:15792:10254":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:32936:12314":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:41558:12355":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:3199:13009":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"18:651:9473":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:14346:119":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"24:1265:8789":{"crate_id":24,"path":["ppv_lite86","x86_64","sse2","u64x2_sse2"],"kind":"struct"},"16:8562:10909":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:12662:763":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"1:11128:12665":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"5:3337:33820":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"16:6747:8942":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"15:0:2966":{"crate_id":15,"path":["addr2line"],"kind":"module"},"11:2533:11008":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:4039:13094":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:6053:13106":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:41473:12347":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"5:7539:9320":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:8040:35408":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:8317:21718":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:10114:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:43431:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:44680:12422":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:33494:10799":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:15611:10217":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:2099:209":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:45566:14449":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"16:6792:10677":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"1:11189:26134":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:14021:9821":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"0:91:2450":{"crate_id":0,"path":["rand_chacha","ChaChaRng"],"kind":"type_alias"},"2:45699:239":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"6:6428:11750":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:12608:12870":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:6557:12617":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"17:15062:10038":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:23673:12244":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"1:5139:13854":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"6:4921:11392":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:11359:32545":{"crate_id":2,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"2:32922:13039":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"1:4171:13806":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"6:6416:11746":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:13928:8873":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:7292:11964":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"23:0:3104":{"crate_id":23,"path":["zerocopy_derive"],"kind":"module"},"24:261:2930":{"crate_id":24,"path":["ppv_lite86","types","u64x2x4"],"kind":"trait"},"16:8025:8962":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:12229:9645":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"2:13477:14324":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:13163:12434":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"21:120:9466":{"crate_id":21,"path":["zerocopy","util","ptr","Ptr"],"kind":"struct"},"17:13795:9795":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:41487:9045":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"24:267:2878":{"crate_id":24,"path":["ppv_lite86","types","MultiLane"],"kind":"trait"},"6:6543:11813":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"16:6736:35401":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:16730:10517":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"6:5375:11558":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"24:278:2873":{"crate_id":24,"path":["ppv_lite86","types","Machine"],"kind":"trait"},"17:16116:10362":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:36998:10806":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"6:1703:11291":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"5:7619:8569":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:44752:12203":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:3411:10800":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"17:11564:12828":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:47078:2916":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"6:1521:11175":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"5:3686:194":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:10661:133":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"10:0:2962":{"crate_id":10,"path":["adler"],"kind":"module"},"6:5658:11699":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"15:288:20798":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"5:7750:12168":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:6502:9223":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"18:680:9491":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"16:7916:12941":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"11:1652:35383":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"6:6749:11898":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"16:7713:35403":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:5932:232":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:5748:116":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"5:1551:8569":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"6:7962:12106":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"14:201:14339":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"21:2724:8801":{"crate_id":21,"path":["zerocopy","byteorder","F64"],"kind":"struct"},"6:7463:12035":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"16:3693:10579":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:1665:11003":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:8277:14240":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"16:7880:8908":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:16380:10428":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:42753:185":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"5:1001:8721":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:12854:9699":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:8813:14238":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"14:186:20786":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:12063:13024":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:46771:12496":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"6:7580:12100":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"6:1514:11172":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"5:7679:13655":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"24:1545:9465":{"crate_id":24,"path":["ppv_lite86","x86_64","sse2","avx2","u32x4x2_avx2"],"kind":"struct"},"2:45501:12484":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"5:5564:14313":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:7250:13932":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:16021:10312":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:4185:13807":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:13195:12889":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"6:5007:11431":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"16:6950:10694":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:40439:13040":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:11099:9235":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"1:1132:12970":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:9551:174":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:13387:8855":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:10876:165":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"17:10601:8835":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:2914:214":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"6:5241:11503":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:22165:33336":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"16:894:12894":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"6:586:11158":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"6:5462:11611":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"6:7337:11988":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:4764:10588":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"16:8011:8961":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"16:7935:10842":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"6:6679:11875":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"1:7408:26185":{"crate_id":1,"path":["std","sys","backtrace","print","DisplayBacktrace"],"kind":"struct"},"11:763:9016":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"16:7347:8912":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:6378:26284":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:10623:156":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"16:6300:10633":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:13066:12886":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"17:11995:12843":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:45809:11011":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"5:7273:33687":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:4355:13829":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:2394:21843":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"16:7041:8953":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:42474:182":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"6:1632:11252":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:3524:12810":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:316:12800":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"24:1626:8687":{"crate_id":24,"path":["ppv_lite86","x86_64","YesS4"],"kind":"struct"},"5:1582:9016":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:44838:12435":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:11356:35419":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:43883:8629":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"21:2147:8798":{"crate_id":21,"path":["zerocopy","byteorder","I64"],"kind":"struct"},"17:14137:9852":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"9:318:11050":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"5:4127:9320":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"16:7165:10730":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:35122:10805":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"17:10333:21774":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:6186:10620":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"17:11855:12840":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:44663:13051":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"5:1247:35223":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"16:8220:10851":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:41598:12359":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:982:12959":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:22:845":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"5:2810:12155":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:13460:13020":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:12676:996":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"16:6040:10569":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:47224:12534":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:9477:9240":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:32947:258":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:8027:26309":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:8278:12132":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"5:7510:9009":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:43833:12412":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"24:1681:8682":{"crate_id":24,"path":["ppv_lite86","x86_64","Avx2Machine"],"kind":"struct"},"16:2528:10547":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"16:6062:10571":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"16:2618:10551":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:8687:12670":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:31358:31802":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"2:45505:12485":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"16:5316:10605":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:23618:12239":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"17:12201:9642":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"11:1118:12969":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"5:5515:33623":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:12979:9715":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"18:531:9475":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:10441:8630":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"11:1542:20777":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:46801:12500":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"16:7904:10841":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:3097:150":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:7877:26186":{"crate_id":1,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"2:12946:14409":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:7635:8577":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:45390:12476":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:11939:9635":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:13108:8820":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"17:11743:12835":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"5:1382:12967":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"16:5222:10602":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:7256:10756":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:12665:761":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"17:14384:9913":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:11210:35417":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"5:1211:35222":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"5:7248:33683":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:9236:9214":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"24:224:2877":{"crate_id":24,"path":["ppv_lite86","types","LaneWords4"],"kind":"trait"},"16:6406:10642":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"14:0:2965":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:2663:13078":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"6:6769:11906":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"22:0:3103":{"crate_id":22,"path":["byteorder"],"kind":"module"},"6:5217:11493":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:22675:9059":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:4771:13012":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"6:5205:11486":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:11423:21794":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"11:1042:20776":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:8577:12665":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:43468:9197":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:32869:3282":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:48172:8511":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"16:8055:12948":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"7:0:1957":{"crate_id":7,"path":["unwind"],"kind":"module"},"6:4997:11424":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:14365:9908":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:9533:247":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:8288:9235":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"17:15640:10225":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:14190:9866":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:2511:13734":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:41574:9488":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:42852:3483":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:7501:26302":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"11:2374:8722":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"1:8101:13125":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:45772:13054":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"2:44710:12427":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:14637:9950":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:12603:13176":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:8447:3108":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:44856:12436":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:40331:224":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:44560:13047":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"24:1501:9463":{"crate_id":24,"path":["ppv_lite86","x86_64","sse2","G0"],"kind":"struct"},"5:299:3111":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"6:6858:11927":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:10109:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:8090:9218":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:12663:9691":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:44704:12426":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:12110:13092":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:11063:35414":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:13079:12887":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"16:7055:10705":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:9841:13130":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"17:13219:12891":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"7:78:20691":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:16717:10511":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"13:110:8702":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"5:7787:12169":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"16:6841:8949":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"6:4896:11376":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"19:0:1327":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"5:1366:10786":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:4384:13832":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:12944:8851":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:8959:8721":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"18:598:35422":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:3837:115":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:1632:8721":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"6:4842:11343":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:9431:9222":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"6:7308:11976":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:13892:8864":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"6:5019:11437":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:10673:8639":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:0:1764":{"crate_id":1,"path":["std"],"kind":"module"},"1:12246:12731":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:22987:13744":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"6:5585:11663":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:41981:12372":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"17:14650:9952":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:6295:232":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"16:6729:8911":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:34324:14257":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:46918:12511":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:8394:134":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"5:7599:9031":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:14369:9323":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:47509:12559":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"16:7189:21712":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:5802:13105":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:14057:9830":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:3719:223":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:16631:9809":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"2:41089:31815":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"5:3090:33824":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:22188:33340":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"1:8086:13744":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:3424:13086":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"16:6887:8950":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:1551:11195":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:11564:13744":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"6:4990:11421":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:940:9016":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:10455:21778":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:13207:12890":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"1:4436:13095":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:5196:11481":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"16:2413:20817":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:48249:8514":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:10815:12815":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"2:45689:231":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:13186:12437":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"16:5377:10607":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:13344:9743":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"24:1636:8688":{"crate_id":24,"path":["ppv_lite86","x86_64","YesA1"],"kind":"struct"},"16:2964:10567":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:10975:35412":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:7445:12024":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:9543:13121":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"2:43096:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:7741:14083":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:22925:14021":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"2:44734:12198":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:43058:8569":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:10860:8842":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:43244:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:47110:12528":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:34257:13931":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:5375:13016":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"18:113:25975":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:2687:14282":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"16:5142:10599":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:12093:8845":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"18:726:8811":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:11116:12713":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"1:11393:12691":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:40309:222":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:12864:9701":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"6:5482:11622":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"11:344:35371":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"17:13243:12893":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:8326:177":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:42762:8721":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:26660:283":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"11:102:10994":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:41252:12338":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:13465:9746":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"11:832:12962":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"6:5282:11526":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:40281:12317":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:3822:32775":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:1885:13069":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"1:12659:1862":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:3072:157":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:8606:9039":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:47209:12533":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:11318:12823":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:9424:13155":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"6:5604:11677":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:43042:8721":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"5:3082:12149":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:3593:153":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:16512:9781":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"17:12254:9648":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"6:5088:11465":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:1597:11224":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:11956:12203":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"5:1601:9017":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"6:5664:11702":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:11161:13129":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"1:436:197":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"5:3858:12986":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"6:7515:12075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:43050:8722":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:14859:10002":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:3043:8676":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:12655:1352":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:47057:12527":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"16:8609:8971":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:12679:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:46865:12505":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:12672:1885":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"20:62:2578":{"crate_id":20,"path":["rand_core","block","CryptoBlockRng"],"kind":"trait"},"2:43318:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"16:8118:222":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:9321:13902":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:919:8569":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:10405:21776":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:11993:12725":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:13971:9814":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:14095:9045":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"17:15102:10043":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:11109:152":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"2:5136:14074":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:11328:35418":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"5:4202:8722":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"5:1632:12984":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:12761:12878":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"5:4990:229":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"6:5165:11471":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"17:14883:10005":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:321:12801":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:16288:10403":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:45489:12481":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:40369:226":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"16:3139:9509":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:6998:12197":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"17:12969:8852":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"21:409:8665":{"crate_id":21,"path":["zerocopy","Ref"],"kind":"struct"},"1:8438:13777":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:23013:33565":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"1:12667:921":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:13585:8859":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"2:45051:12332":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:10656:123":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"9:380:20698":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"11:2513:11005":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"16:5280:10604":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:11493:12717":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"1:2258:133":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"16:4239:10584":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:45798:12494":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"5:284:33623":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"5:2156:12986":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:48210:8513":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"11:676:8569":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"18:670:12799":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:12814:12882":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:14055:13030":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"16:6419:8900":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:11494:9618":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"21:51:36168":{"crate_id":21,"path":["zerocopy","macro_util","ShouldBe"],"kind":"trait"},"1:12032:12728":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"16:5253:10603":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"11:2414:9320":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"2:11215:32543":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"17:14081:9834":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"16:6203:21706":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:13030:9719":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:43072:208":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:12580:13027":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"17:16791:10531":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"2:23596:12237":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"17:12373:12864":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:6060:13110":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:10515:13158":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"17:13120:12822":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"2:9447:13019":{"crate_id":2,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"11:750:9014":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"5:7591:222":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:15088:10040":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"6:6893:11952":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:47862:12599":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:44634:12208":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:12774:12879":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"24:242:3144":{"crate_id":24,"path":["ppv_lite86","types","u128x1"],"kind":"trait"},"2:6121:12700":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:40409:13661":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:45531:135":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"16:6142:21705":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:12287:12857":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:6310:9044":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:683:13060":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"6:1643:11260":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"16:2433:20844":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"2:3571:8725":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:40630:14085":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:14665:9955":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"9:0:2961":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:12103:8846":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"6:8007:12119":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:13328:9575":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:11153:13144":{"crate_id":1,"path":["std","sys","pal","unix","linux","pidfd","PidFd"],"kind":"struct"},"2:42830:13648":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:23585:12236":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"2:2129:12174":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"16:8500:10901":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:44542:12204":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:12065:12848":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"18:589:9478":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:9270:8721":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:8266:12130":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:5328:12814":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"2:47613:12563":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"1:9436:9238":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"1:12656:351":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:11603:12830":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"5:1612:9018":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:42982:224":{"crate_id":2,"path":["core","range","RangeFrom"],"kind":"struct"},"2:2043:12700":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"6:578:11154":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:3364:8649":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"17:15587:10215":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"6:4984:11418":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:16230:10386":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:10674:28504":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"24:1661:8693":{"crate_id":24,"path":["ppv_lite86","x86_64","NoNI"],"kind":"struct"},"2:46932:12512":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:4591:13097":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:896:8721":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:5716:13103":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"6:473:11092":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:14746:9966":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"6:1539:11186":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"24:245:3145":{"crate_id":24,"path":["ppv_lite86","types","u32x4x2"],"kind":"trait"},"6:4929:11394":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:15995:10306":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"11:859:12965":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:45682:163":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:1919:14194":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"1:619:13059":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"5:7797:13004":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:41117:12330":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"11:2323:12967":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"18:698:8809":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"5:3448:12985":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"1:12673:1891":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"5:4565:33633":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"16:5058:10596":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:10671:218":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:10517:13157":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"17:12187:9641":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"1:12653:1925":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"17:14110:9843":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"24:1156:8782":{"crate_id":24,"path":["ppv_lite86","x86_64","sse2","u32x4_sse2"],"kind":"struct"},"17:10586:8816":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"5:7549:13002":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"6:0:1032":{"crate_id":6,"path":["libc"],"kind":"module"},"2:41237:12336":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:16814:10536":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"16:7946:10574":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:5356:454":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:13909:8866":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"7:31:20684":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:43281:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"16:6237:8921":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:41539:12354":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"6:5494:11625":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"17:10821:12816":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"17:10150:21768":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:10553:21781":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:23454:31793":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"11:1862:8569":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"6:7990:12109":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"21:53:35741":{"crate_id":21,"path":["zerocopy","macro_util","HasPadding"],"kind":"struct"},"16:8720:150":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:8636:12443":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"24:1666:8683":{"crate_id":24,"path":["ppv_lite86","x86_64","SseMachine"],"kind":"struct"},"6:5617:11683":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:2811:13082":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:45782:192":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:11540:9622":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"17:14178:9863":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:15861:10270":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"16:7013:10702":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:41417:9040":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:14611:9947":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:13553:21785":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:5222:13861":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:10667:8641":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:41157:12333":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:6390:11731":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:8281:14239":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:8719:12672":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"2:42869:12401":{"crate_id":2,"path":["core","range","iter","IterRange"],"kind":"struct"},"2:47014:12517":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"24:228:3143":{"crate_id":24,"path":["ppv_lite86","types","Swap64"],"kind":"trait"},"6:497:11103":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"15:327:8973":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"11:357:35374":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"24:210:2880":{"crate_id":24,"path":["ppv_lite86","types","Vec4"],"kind":"trait"},"1:11585:12721":{"crate_id":1,"path":["std","sys","exit_guard","PThread"],"kind":"struct"},"5:3324:11002":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:7575:12697":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:3792:268":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:42640:31820":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:7471:26300":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"5:4292:12700":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:45761:31943":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"11:808:12971":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"5:7872:13006":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"6:4957:11405":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:4247:13812":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"5:6116:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:12077:13025":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:11643:8820":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:43816:8629":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"16:2448:10543":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:42778:8569":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:47480:12558":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"16:2818:10560":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:11014:35413":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:15578:10214":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:47530:12560":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:1696:11288":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:12409:8848":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:10369:21775":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:8351:13133":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"11:1858:8721":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"5:7200:280":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:43566:8632":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"6:4829:11333":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"10:36:11013":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"11:2354:8721":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"20:148:2579":{"crate_id":20,"path":["rand_core","CryptoRng"],"kind":"trait"},"2:41989:12374":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:3590:12700":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"0:0:2453":{"crate_id":0,"path":["rand_chacha"],"kind":"module"},"17:15951:10295":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:12049:12436":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:43806:12404":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:8797:13145":{"crate_id":1,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"2:38984:14267":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:3688:30160":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:4725:13835":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:8271:9555":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"5:1623:222":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:23629:12240":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"6:5265:11515":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:14870:10003":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:11206:9215":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"16:2484:10545":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:8804:162":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:14985:10019":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:47663:12565":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"24:0:2454":{"crate_id":24,"path":["ppv_lite86"],"kind":"module"},"2:44693:12425":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:9286:8569":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:4701:8664":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:13530:14331":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:13453:14322":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"17:14337:9904":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"16:8264:10859":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:6967:13118":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"1:11079:12624":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"1:1654:11001":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:12787:12880":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"6:5151:11470":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:41378:12207":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"16:6711:12910":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:47139:12529":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:16341:10419":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:15353:10080":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:11776:8722":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:15809:10257":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"20:116:25990":{"crate_id":20,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"16:6571:10670":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:12666:939":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:8281:12624":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:2948:10566":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"11:2525:35370":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:10667:8837":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:15624:10222":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"18:573:9473":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:15928:10287":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:5512:11631":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"6:7390:12011":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"24:300:3151":{"crate_id":24,"path":["ppv_lite86","types","Store"],"kind":"trait"},"1:5732:13104":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:12270:26306":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"16:3012:20845":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"17:15713:10232":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"6:7539:12085":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:5870:11913":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:7004:12196":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"17:15919:10284":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:5154:13855":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:11728:12834":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:38929:14266":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:963:12985":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"1:8568:9237":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:4536:14054":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"6:4902:11379":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:14558:9939":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:7857:14234":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:3628:13680":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:16241:10387":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:5130:13853":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:13688:123":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:39618:14269":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:16164:10363":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:11963:9636":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"16:2548:10548":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"11:2275:10786":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"1:8172:13697":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:23651:12242":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"2:46886:12509":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:8738:13144":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:3469:13089":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"17:15785:10253":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:45033:12333":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:7889:26188":{"crate_id":1,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"11:481:166":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:12055:12847":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"17:14498:9930":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:12635:26166":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:11604:13172":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"2:44802:12433":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"21:605:26013":{"crate_id":21,"path":["zerocopy","ByteSliceMut"],"kind":"trait"},"16:2658:10553":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:15677:10226":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:15569:10210":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"16:7421:21713":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"24:187:3137":{"crate_id":24,"path":["ppv_lite86","types","RotateEachWord32"],"kind":"trait"},"16:7209:10742":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"24:257:2922":{"crate_id":24,"path":["ppv_lite86","types","u32x4x4"],"kind":"trait"},"17:13423:8856":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"5:984:13664":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:2908:207":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"6:6459:11763":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:46999:12516":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:10132:21767":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"17:15699:10231":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:7915:26190":{"crate_id":1,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"9:490:11068":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"6:6645:11861":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"18:754:9505":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:16269:10402":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:11447:12716":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"6:6802:11915":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:47435:12557":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:969:12971":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:42528:13787":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"11:1136:12970":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:9863:131":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"1:9351:13903":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:44938:12441":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:3599:155":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"3:0:527":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"16:155:8891":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"16:6606:218":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"16:7966:10846":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:14545:9936":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:0:585":{"crate_id":2,"path":["core"],"kind":"module"},"11:663:8722":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"6:5179:11472":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:1684:11284":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:12686:9692":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:4653:9038":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:45485:12480":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:43207:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"16:4265:10585":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"17:10965:12818":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:45748:12491":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:4199:13809":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"16:5196:10601":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:2348:13725":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:3576:14065":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"2:47241:12535":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"5:724:12978":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:34190:13929":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:1506:168":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:45042:12324":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:41464:12346":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:41404:9039":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:3075:272":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"16:7977:10575":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:6898:13897":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:4517:13096":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:22788:13744":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"18:765:25983":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"22:165:8816":{"crate_id":22,"path":["byteorder","BigEndian"],"kind":"enum"},"2:47028:12518":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:40446:12322":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:13247:150":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"21:1924:8797":{"crate_id":21,"path":["zerocopy","byteorder","I32"],"kind":"struct"},"5:7519:8569":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:44623:13049":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"11:1063:35385":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:10669:8642":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:41947:12368":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"16:3306:10542":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"16:6678:12905":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"1:8648:13142":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"21:2568:8800":{"crate_id":21,"path":["zerocopy","byteorder","F32"],"kind":"struct"},"6:5025:11440":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"16:3046:20846":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:12146:9638":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:41164:14080":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"2:48073:8504":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"9:49:8984":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"17:12643:8820":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"24:214:2881":{"crate_id":24,"path":["ppv_lite86","types","Vec4Ext"],"kind":"trait"},"1:953:9320":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:14454:9922":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:6911:10691":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:1919:13070":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:10665:8632":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:6737:11896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"2:34776:14263":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:14322:9899":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:2341:13077":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"16:7302:10758":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:16359:10425":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:45017:12446":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"6:6878:11941":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"24:206:3141":{"crate_id":24,"path":["ppv_lite86","types","Vec2"],"kind":"trait"},"2:23496:12228":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:9587:12702":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"6:5395:11568":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"6:7326:11983":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:15763:10247":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:1494:11164":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"16:8525:10904":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:41104:12329":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:42790:8713":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:41588:12358":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"6:5630:11689":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"21:394:8694":{"crate_id":21,"path":["zerocopy","AsBytes"],"kind":"trait"},"1:3334:30625":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:48187:8512":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:4767:233":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:3331:30624":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:14069:9833":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:13757:9780":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"17:10840:8841":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"16:4927:10593":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"11:123:8978":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:33033:8650":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:47907:12600":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:9444:12697":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:4413:12700":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:10663:8633":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:3401:13930":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"16:4118:10581":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"16:7762:10822":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:4967:13823":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:8616:12362":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:11654:12822":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"6:5568:11656":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:8699:13833":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:11090:12712":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"2:42909:12402":{"crate_id":2,"path":["core","range","iter","IterRangeInclusive"],"kind":"struct"},"1:8091:12620":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:9513:12700":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"16:2568:10549":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:12253:12731":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"6:7984:12107":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"18:0:2969":{"crate_id":18,"path":["memchr"],"kind":"module"},"6:6590:11839":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:9674:13071":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"1:8909:13879":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:6756:11899":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"2:3540:14270":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"5:7774:257":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"24:271:3150":{"crate_id":24,"path":["ppv_lite86","types","VZip"],"kind":"trait"},"5:7108:14357":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"6:6422:11749":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"5:928:13663":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"11:389:35376":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:15448:10163":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"6:5550:11649":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:43875:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"17:1352:12805":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:23695:12246":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"1:4363:13830":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:16755:10525":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"1:11165:13167":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"2:23434:31792":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:42496:12378":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:699:13061":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:23662:12243":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"9:226:2891":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"17:15001:10023":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"3:2077:12172":{"crate_id":3,"path":["compiler_builtins","int","big","i256"],"kind":"struct"},"17:16613:9799":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"20:58:2577":{"crate_id":20,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"5:6566:14028":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"6:1657:11271":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"6:7367:12010":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"16:3439:10577":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:41127:12331":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:519:9561":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:14389:9325":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"17:10431:21777":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:13360:21784":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:2810:114":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"11:649:8721":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"24:1690:2874":{"crate_id":24,"path":["ppv_lite86","x86_64","vec128_storage"],"kind":"union"},"17:14571:9661":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:22385:9058":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"16:7997:8960":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:12674:1897":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:24260:248":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"6:7317:11982":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"5:6513:14742":{"crate_id":5,"path":["alloc","sync","UniqueArcUninit"],"kind":"struct"},"24:303:2879":{"crate_id":24,"path":["ppv_lite86","types","StoreBytes"],"kind":"trait"},"16:3887:9514":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"16:8148:8967":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"5:2291:9020":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:2493:13728":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:47994:12602":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:5417:1007":{"crate_id":2,"path":["core","iter"],"kind":"module"},"6:5319:11541":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"15:306:20799":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:8949:9330":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:12619:9244":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:43900:150":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"6:7344:11992":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:13126:12429":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:31705:208":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:2424:12179":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"16:7539:10785":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:3315:277":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:16848:9819":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"2:47291:12537":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:3782:14272":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:45154:12457":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:537:13623":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:14910:10007":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"16:5170:10600":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:2495:13729":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:14776:9985":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"11:2115:12966":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"6:8294:12137":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:9500:199":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"20:164:2581":{"crate_id":20,"path":["rand_core","SeedableRng"],"kind":"trait"},"17:12575:12868":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:46953:12513":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:14624:9948":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"16:4692:10587":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:23396:31790":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"16:3108:10576":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"17:15971:10301":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"5:5960:265":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"16:6967:8951":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:3587:3107":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:11917:2891":{"crate_id":1,"path":["std","sys","thread_local","native","eager","State"],"kind":"enum"},"1:6895:13115":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:22204:13744":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:1639:9320":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:4171:8569":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"6:5117:11467":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:23516:12232":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:11759:26296":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"17:13983:9817":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:2226:14293":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:22163:33334":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"17:11590:12829":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:16802:10533":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"2:22653:13940":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"20:175:3122":{"crate_id":20,"path":["rand_core","RngReadAdapter"],"kind":"struct"},"1:8642:13140":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"16:7369:8956":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:11801:12198":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"16:6109:10618":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:33918:14255":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:10889:13086":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"6:6441:11751":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"11:0:2963":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"11:1558:12972":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"8:0:2960":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"16:2838:10561":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:912:202":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"6:1667:11277":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:15985:10303":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:12624:13647":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"5:4488:33633":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"17:12990:9716":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"6:5069:11464":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:41940:12367":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"6:6670:11869":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"6:5044:11451":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"11:1027:12967":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"16:7551:21714":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:11438:9615":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:3517:13772":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"6:4976:11413":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"24:1646:8690":{"crate_id":24,"path":["ppv_lite86","x86_64","YesA2"],"kind":"struct"},"2:40197:8724":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"24:239:2928":{"crate_id":24,"path":["ppv_lite86","types","u64x2"],"kind":"trait"},"16:7027:10704":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"17:13133:9724":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"17:16058:10320":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"21:600:35765":{"crate_id":21,"path":["zerocopy","sealed","ByteSliceSealed"],"kind":"trait"},"6:4881:11369":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:23277:12212":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:15013:10025":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:41395:13043":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"6:4937:11396":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"6:5529:11637":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:10924:9055":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:45359:12470":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:43845:10878":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:23332:9060":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:2568:2976":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:14160:33149":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:1233:12804":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:47095:2928":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:16301:10408":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"16:8543:10906":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:47177:12531":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"6:6695:11883":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"1:11430:12701":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"6:1711:11295":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:41048:12325":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"6:5036:11446":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"5:3712:8722":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:4964:11408":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:14690:9957":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:383:13057":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"5:3925:12985":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:7901:26189":{"crate_id":1,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"17:12430:9655":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:48036:12603":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:8871:2891":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"17:12878:9705":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:9249:12691":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"18:563:8806":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:12651:1208":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:41435:12342":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"16:2638:10552":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"18:80:25973":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:43133:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:4489:13010":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:6953:9226":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"11:423:35378":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"6:5186:11474":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"16:6460:21708":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:42512:12380":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:31732:8528":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:41244:12337":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"2:45008:12445":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"6:4792:11306":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:23362:9061":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:23385:12213":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:12924:9711":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"6:6719:11888":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"1:9219:13149":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:2509:13733":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:12397:12866":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:16684:10504":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"5:1885:12985":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"1:9262:9215":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"17:15884:10273":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:3079:271":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:23222:12211":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:16191:10375":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:11102:12820":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:10202:21770":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"6:5334:11545":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"17:15324:10060":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"5:3080:33825":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:8330:9213":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"16:8708:10912":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:11715:12833":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:11577:252":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:3558:128":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:23503:12231":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"6:5387:11563":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:11200:8820":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:7009:12194":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"2:44580:13048":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:13021:21914":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2:40277:13679":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:999:12962":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:12318:12858":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"16:8582:12950":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"16:5415:10608":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:41275:12339":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:14427:164":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"5:2167:12987":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"2:10296:33100":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:6197:12188":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:0:2968":{"crate_id":17,"path":["object"],"kind":"module"},"1:6668:198":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:14845:10000":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:12562:12867":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"6:538:11132":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:4:1292":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:6605:232":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"6:7424:12017":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:11222:32544":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"2:43587:8642":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:11752:8721":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"20:149:3120":{"crate_id":20,"path":["rand_core","TryRngCore"],"kind":"trait"},"2:48157:8510":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"5:6030:9320":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"6:7430:12019":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:45118:14337":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:9403:26123":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:41747:12364":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:13630:9758":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:5341:11546":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"16:7459:12920":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:47323:12539":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:10571:8815":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:12120:8831":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"14:159:12954":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:41141:12332":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"6:6710:11885":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"20:133:25994":{"crate_id":20,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"2:31332:12249":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:10733:8839":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"5:7762:13003":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"5:5560:14312":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:41333:13041":{"crate_id":2,"path":["core","ffi","va_list","VaList"],"kind":"struct"},"17:14373:9910":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:2303:201":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:16828:10537":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"16:6638:12904":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"16:6981:8952":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"6:4875:11367":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:5045:13819":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:16744:10520":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"1:8894:12685":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"17:15868:10271":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:8852:33099":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:10605:8638":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"16:2770:10558":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"14:40:9796":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"6:5288:11529":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"5:4322:12700":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:45555:12487":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"16:8623:10910":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"16:2465:8883":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:4925:13834":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:13592:9753":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"2:40294:225":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:16573:10483":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"5:3262:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"6:5051:11453":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:3124:20847":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"5:3086:33823":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"17:15595:10216":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:12907:9748":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"11:1866:9320":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:41505:12351":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:8713:13140":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"18:521:25984":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:41455:12344":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"5:7668:12162":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:12173:9640":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:14431:9919":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:14396:9915":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:5312:13099":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:9457:26124":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"5:3332:11000":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"24:902:2871":{"crate_id":24,"path":["ppv_lite86","dispatch"],"kind":"macro"},"17:10634:8836":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"16:7956:10845":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"24:180:3133":{"crate_id":24,"path":["ppv_lite86","types","BSwap"],"kind":"trait"},"2:45477:12478":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:5323:32532":{"crate_id":2,"path":["core","ffi","va_list","sealed_trait","VaArgSafe"],"kind":"trait"},"6:479:11095":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"6:8260:12129":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:12357:12862":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:13411:13723":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:978:9018":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:6810:12190":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:23109:14016":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"16:8295:10863":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"16:6438:21707":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"18:735:25982":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:12072:8982":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:8823:9326":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:11266:26292":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:10892:13088":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"2:42821:8714":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:23607:12238":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"18:659:12795":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:3679:8638":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"16:2898:10564":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"21:2907:26014":{"crate_id":21,"path":["zerocopy","_CastType"],"kind":"enum"},"17:15128:10045":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"16:2504:10546":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"11:2126:12967":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:44118:2891":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:13730:9772":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"5:7627:8569":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"16:7398:35402":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:6454:9323":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:9834:151":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"2:12619:14291":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"5:6700:9320":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:10700:8838":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:3622:12668":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:789:166":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:15876:10272":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"5:40:13681":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"22:21:26024":{"crate_id":22,"path":["byteorder","ByteOrder"],"kind":"trait"},"2:23052:14026":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:13482:14323":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"6:5412:1279":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:11868:8824":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"6:6486:11783":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:11151:12821":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:45181:12461":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:4140:13804":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"16:8063:21716":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"11:718:9018":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"6:6727:11889":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"2:45338:14338":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"11:427:35379":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:6157:8916":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"16:7355:8955":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"5:6826:8569":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"16:6694:12908":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"17:12263:9649":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"1:8586:13743":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"6:8304:12138":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"17:15477:10174":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"11:1579:12973":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:11395:21793":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"6:5357:11548":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"2:44988:12443":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:13876:8860":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:14072:13033":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"6:8316:12142":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:12664:782":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:2159:1397":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:47740:12597":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:23137:14017":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"17:15159:10051":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"16:6656:8927":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"11:2297:12966":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"21:401:26001":{"crate_id":21,"path":["zerocopy","Unaligned"],"kind":"trait"},"1:3560:12370":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:12800:12881":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"6:1507:11170":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:2685:14281":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"17:16203:10378":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"24:910:8778":{"crate_id":24,"path":["ppv_lite86","soft","x2"],"kind":"struct"},"5:4519:12700":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"6:5295:11531":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:906:12801":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"1:3095:238":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"2:33003:3110":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:13996:9819":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"3:2062:12171":{"crate_id":3,"path":["compiler_builtins","int","big","u256"],"kind":"struct"},"1:9505:13111":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"24:1656:8692":{"crate_id":24,"path":["ppv_lite86","x86_64","YesNI"],"kind":"struct"},"2:42556:9196":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:16329:10417":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:1660:11002":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:14187:217":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"6:1675:11278":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:10830:9506":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"6:1530:11180":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:11380:9214":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:974:9017":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"11:820:13662":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"16:6171:8919":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"16:6850:10682":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:44591:12420":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:2344:12706":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"14:7:12954":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"20:136:25995":{"crate_id":20,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"21:762:8791":{"crate_id":21,"path":["zerocopy","byteorder","U16"],"kind":"struct"},"16:6623:10674":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:1883:13068":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:43573:8633":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"21:1425:8795":{"crate_id":21,"path":["zerocopy","byteorder","U128"],"kind":"struct"},"6:5325:11542":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"21:0:3102":{"crate_id":21,"path":["zerocopy"],"kind":"module"},"2:45349:12466":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:6279:12617":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:22648:13744":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"2:23095:13744":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"11:1703:168":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"6:5107:11466":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:4850:12005":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"6:5249:11507":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:3066:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:10301:9050":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:8965:12687":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:15691:10230":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:11901:12842":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"24:1506:9464":{"crate_id":24,"path":["ppv_lite86","x86_64","sse2","G1"],"kind":"struct"},"1:10388:12390":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"1:6774:12368":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"5:1411:12970":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:12272:9729":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:16005:10309":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:1123:12967":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:1648:11000":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:22142:33331":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"2:48082:8505":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:6470:26288":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"6:6472:11772":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:5343:13099":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:544:8898":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"24:254:3148":{"crate_id":24,"path":["ppv_lite86","types","u128x2"],"kind":"trait"},"1:1005:12964":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:15144:10047":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:11994:13023":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:47547:12561":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"5:778:264":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:42961:226":{"crate_id":2,"path":["core","range","RangeInclusive"],"kind":"struct"},"24:1631:8685":{"crate_id":24,"path":["ppv_lite86","x86_64","NoS4"],"kind":"struct"},"17:485:12802":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:48093:8506":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"16:6864:21710":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:4243:13811":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"6:5539:11643":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"16:6096:12895":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"5:3843:9236":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:8324:131":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:45685:176":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"16:3985:9522":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"1:1944:13072":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:41956:12369":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"5:3792:33623":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:12227:9243":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:11690:9625":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"5:6169:14734":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:4963:13820":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:45677:12490":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"6:7562:12097":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:34603:14262":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:41733:12363":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:47418:3147":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:3061:13083":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:44784:12432":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"24:1721:3130":{"crate_id":24,"path":["ppv_lite86","x86_64","vec256_storage"],"kind":"union"},"1:377:13055":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"5:787:122":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:10479:21779":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:12035:12846":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"6:5127:11468":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:14897:10006":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:2235:12175":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:14152:9858":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"16:8666:10839":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"16:2858:10562":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:5725:8815":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"5:3358:11003":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:9390:119":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:5389:216":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"17:596:12803":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:7022:245":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:15801:10255":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:10255:21771":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"6:1569:11205":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:10810:26294":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"1:12668:927":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:43355:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"15:394:20808":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"5:1520:8721":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:15963:10298":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:12242:9646":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"1:9372:12696":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:3423:14259":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"1:8298:12625":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:14834:9998":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"5:2344:33715":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"14:164:20779":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:45239:12463":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:5441:11596":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:12960:13028":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:23015:14281":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"1:8623:8841":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:41723:12362":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:42662:12393":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"2:45324:12465":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"5:6274:12700":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"11:2540:12162":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:15074:10039":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"6:1727:11300":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:9569:12701":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"5:7527:12160":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"11:2394:8569":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"16:7835:21715":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:5139:11469":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:12081:12853":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:10675:8640":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:41549:9046":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:15198:10058":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:16538:10453":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"24:236:2916":{"crate_id":24,"path":["ppv_lite86","types","u32x4"],"kind":"trait"},"14:31:12954":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:8030:9047":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"10:44:8983":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"16:5740:8816":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"5:7569:33712":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:12652:492":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"17:14971:10017":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:12298:21887":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"2:40349:227":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:2032:813":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"2:46786:12499":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"16:7987:10847":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:16051:10318":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:42770:8722":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:12021:13122":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:23527:13789":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"6:7439:12022":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:16403:10432":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:12725:12875":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:10176:21769":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"11:1898:11003":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"18:613:35423":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:3357:8647":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:14413:9918":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"11:983:10786":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:12657:1738":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:909:8722":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:2834:8516":{"crate_id":2,"path":["core","clone","InitializingSlice"],"kind":"struct"},"16:3832:10580":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:8335:3109":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"16:2588:10550":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"5:6915:33623":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:6702:11884":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"12:0:2964":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:15115:10044":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:46970:12514":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"17:14122:9846":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:14443:9921":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"5:1535:8722":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"16:8206:8969":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:23142:14015":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"6:4890:11374":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:13489:9748":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:12825:9694":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"5:7583:8569":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:48108:8507":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"16:2682:10554":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:31326:8517":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"4:0:2959":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"21:999:8793":{"crate_id":21,"path":["zerocopy","byteorder","U32"],"kind":"struct"},"17:10766:8840":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:16395:10429":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:41286:14394":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:11616:12831":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:13673:9762":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:45707:219":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"16:8134:8965":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:23418:12216":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:2422:12807":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:12650:436":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"18:538:8804":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:23347:9032":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:3147:127":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:3426:13087":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:44884:12438":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"21:601:26012":{"crate_id":21,"path":["zerocopy","ByteSlice"],"kind":"trait"},"16:2878:10563":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:41353:13710":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"16:8162:8968":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"11:2099:10786":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"5:1122:33623":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:2025:13707":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:44612:12207":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:13819:9796":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:43170:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:680:9603":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"6:485:11098":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:13648:9761":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:10604:238":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"9:470:20696":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"18:581:8528":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"18:643:9473":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"24:1621:8684":{"crate_id":24,"path":["ppv_lite86","x86_64","NoS3"],"kind":"struct"},"17:16417:10435":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:13304:21783":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"1:2096:210":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:33035:118":{"crate_id":2,"path":["core","marker","ConstParamTy_"],"kind":"trait"},"1:11137:26167":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"5:1573:9014":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:44653:12209":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"6:8243:12124":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"17:12737:12876":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:13202:12440":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:12022:12845":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"6:6687:11879":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"6:4970:11410":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"5:7694:9027":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"16:8633:21719":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:41203:12335":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"6:4914:11388":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:23706:12247":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"17:11770:21815":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"2:23469:31794":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:44956:12442":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"24:217:2882":{"crate_id":24,"path":["ppv_lite86","types","Vector"],"kind":"trait"},"2:4928:8653":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:14811:9997":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:42831:13866":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:13240:12202":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:12675:1879":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:16029:10313":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:5623:11686":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:2122:696":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:14585:9944":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:4776:13013":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"16:901:12800":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"17:15659:8874":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:5154:12813":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"16:4150:10582":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"5:888:12979":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:11844:12202":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"16:2794:10559":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:14678:9956":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"16:7728:8713":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:6132:9217":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:10311:21773":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:44902:12439":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:31294:9066":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:44128:9202":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:16040:10317":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"17:13856:9809":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:8694:12671":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:9336:13901":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"6:6523:11797":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"18:623:35424":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"20:144:2580":{"crate_id":20,"path":["rand_core","RngCore"],"kind":"trait"},"2:47568:12562":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"16:4402:10586":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:9484:9048":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"6:6610:11847":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"16:6779:10676":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:41971:12371":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"6:8237:12123":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:41149:12324":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:44089:9200":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:15186:10054":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"22:18:13744":{"crate_id":22,"path":["byteorder","private","Sealed"],"kind":"trait"},"2:22134:8528":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"6:517:11120":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"5:1591:12971":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:12038:12729":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:12678:1460":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:10062:21766":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:14924:10010":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:11145:26169":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:47642:12564":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"1:12438:26308":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:23001:14025":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"17:11989:8843":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:12749:12877":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:46850:12504":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"6:5349:11547":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"16:7383:8957":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"18:608:12794":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:10766:13149":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"6:5405:11575":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"16:6873:10687":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:11069:12703":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"6:5575:11658":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"16:7072:21711":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:2722:10556":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:10919:13748":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"17:14039:9829":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:11465:174":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"2:2228:14294":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"2:3317:121":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:2772:13079":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"24:903:2872":{"crate_id":24,"path":["ppv_lite86","dispatch_light128"],"kind":"macro"},"1:8166:13646":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:41301:12340":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"5:7559:12161":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"24:251:3147":{"crate_id":24,"path":["ppv_lite86","types","u64x4"],"kind":"trait"},"2:41426:9043":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"5:7723:14394":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:13183:12888":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"16:6995:10695":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"5:2579:12152":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"24:184:2876":{"crate_id":24,"path":["ppv_lite86","types","BitOps32"],"kind":"trait"},"2:41517:12352":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:12889:9709":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:2820:8515":{"crate_id":2,"path":["core","clone","CloneToUninit"],"kind":"trait"},"17:2243:12806":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:1867:722":{"crate_id":1,"path":["std","env"],"kind":"module"},"17:15513:10204":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:7569:29928":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:10884:169":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:16177:10369":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"6:6617:11848":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:41526:12353":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:15746:10242":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"11:787:12985":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"2:4555:14055":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"1:4233:13810":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"6:5488:11623":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"5:6746:33623":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"6:1500:11167":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:3872:13788":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"6:5420:11581":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"5:3699:8721":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"16:7156:10729":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"11:1001:12966":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:4371:13831":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:4333:29927":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:41042:12324":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:47308:12538":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:5652:11697":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:15978:10302":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:42937:222":{"crate_id":2,"path":["core","range","Range"],"kind":"struct"},"16:5111:10598":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:11259:12822":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:23066:14281":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"1:11050:13166":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"1:707:13643":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:13509:9699":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"18:507:9473":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"6:7524:12078":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"16:8595:12953":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:45273:12464":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"24:1374:8790":{"crate_id":24,"path":["ppv_lite86","x86_64","sse2","u128x1_sse2"],"kind":"struct"},"6:5503:11630":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"2:44334:12418":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"16:0:2967":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:10935:9659":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"17:14258:9870":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:1996:13073":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:14788:9988":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"14:219:10992":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"21:2354:8799":{"crate_id":21,"path":["zerocopy","byteorder","I128"],"kind":"struct"},"1:8187:13129":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:9214:13148":{"crate_id":1,"path":["std","pipe","PipeWriter"],"kind":"struct"},"1:8310:152":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:40457:12323":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"5:3079:8626":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:11825:12836":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:32946:251":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:4850:8665":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"1:927:9014":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:1011:12965":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:34949:14264":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:11670:11065":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"16:6121:10570":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:8807:8723":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"6:8284:12133":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:6806:8945":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"5:1227:33822":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"16:4900:10592":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"5:3291:8721":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:3327:8645":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:13399:9745":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:11112:35415":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"6:1589:11219":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:15844:10263":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"9:412:20699":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"16:2918:10565":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"16:4871:10591":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:9278:13150":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"16:7468:10776":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:45513:9057":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:22257:13744":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"11:2206:8982":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"17:12588:9688":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:46985:12515":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"6:8249:12125":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"5:1483:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:3042:13744":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:22963:14022":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"2:40233:14271":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"5:2261:12147":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:10524:21780":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"24:264:3149":{"crate_id":24,"path":["ppv_lite86","types","u128x4"],"kind":"trait"},"17:12836:21912":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:2534:13741":{"crate_id":1,"path":["std","fs","exists"],"kind":"function"},"6:6602:11846":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:6500:11784":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"18:96:25974":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"16:6082:10614":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:3467:13088":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:11512:21796":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"1:3328:30479":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"6:4869:11366":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:34391:14256":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:22176:33337":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:12658:1772":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:5939:12617":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:14730:9961":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"16:5447:10609":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"21:358:8696":{"crate_id":21,"path":["zerocopy","FromZeroes"],"kind":"trait"},"18:548:165":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:2872:213":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:23410:12215":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"6:5640:11690":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"1:12239:26138":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"2:44720:8841":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"6:1489:11162":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:11251:26290":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:33004:8651":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:8976:12688":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:12669:933":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:8106:12621":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"16:8176:10850":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:9597:13020":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:8359:9236":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:31347:8629":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"17:11469:21795":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"1:3934:13092":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:5873:13885":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"17:11346:12824":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"24:248:3146":{"crate_id":24,"path":["ppv_lite86","types","u64x2x2"],"kind":"trait"},"1:2750:14424":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"6:5230:11497":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:38874:14265":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:3158:150":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:43394:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:2339:151":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"16:5083:10597":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"6:5557:11651":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:12663:766":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"6:8231:12122":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:15048:10037":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:22206:13938":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"17:2453:12809":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"5:2364:9023":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"6:8326:12144":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:47936:8776":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"}},"external_crates":{"23":{"name":"zerocopy_derive","html_root_url":null},"20":{"name":"rand_core","html_root_url":"https://rust-random.github.io/rand/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"byteorder","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"24":{"name":"ppv_lite86","html_root_url":null},"21":{"name":"zerocopy","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":33}