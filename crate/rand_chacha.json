{"root":"0:0:2355","crate_version":"0.9.0-alpha.1","includes_private":false,"index":{"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2803:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:148":{"id":"0:148","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:149:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32654:237-0:146:2348":{"id":"a:2:32654:237-0:146:2348","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32654:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:22:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3031-0:205:2345":{"id":"b:2:3031-0:205:2345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3001:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3034:138","2:3035:1828"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:90-0:137:2347":{"id":"0:90-0:137:2347","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,31],"end":[28,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Core","name":"ChaCha20Core","id":"0:137:2347","glob":false}}},"0:92-0:273:2349":{"id":"0:92-0:273:2349","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,58],"end":[28,69]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Core","name":"ChaCha8Core","id":"0:273:2349","glob":false}}},"2:13621:33658":{"id":"2:13621:33658","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2803:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13596:26753":{"id":"2:13596:26753","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42422:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3036-0:282:2350":{"id":"b:2:3036-0:282:2350","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2995:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3039:138","2:3040:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13548:26742":{"id":"2:13548:26742","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13547:26741"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42422:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3279:8492-0:205:2345":{"id":"a:2:3279:8492-0:205:2345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3279:8492","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3279:8492-0:214:2346":{"id":"a:2:3279:8492-0:214:2346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3279:8492","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:114:2531":{"id":"0:114:2531","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:140:2477","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:104:2499","0:106:2500"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13546:26738":{"id":"2:13546:26738","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13545:26737","str::split_at_mut_checked":"2:13548:26742"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32713:3006-0:214:2346":{"id":"a:2:32713:3006-0:214:2346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32713:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13557:32152":{"id":"2:13557:32152","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44583:12287","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13578:26745":{"id":"2:13578:26745","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12434:476","self::pattern":"2:13212:13935"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:13027:12045","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5738:13630":{"id":"5:5738:13630","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7798:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7798:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13544:33647":{"id":"2:13544:33647","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12440:1741","crate::ops::IndexMut":"2:3522:13531","str::slice_unchecked":"2:13543:33646"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:841":{"id":"0:195:841","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13553:32135":{"id":"2:13553:32135","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13554:32112"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44565:12285","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:786:8470":{"id":"5:786:8470","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:2:3025-0:214:2346":{"id":"b:2:3025-0:214:2346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2998:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3027:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13535:26710":{"id":"2:13535:26710","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42424:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42422:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11345:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11345:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13651:26599":{"id":"2:13651:26599","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1066:38562"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13599:26754":{"id":"2:13599:26754","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42422:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13233:13933","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3860-0:214:2346":{"id":"b:2:3860-0:214:2346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32655:3005","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3858:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3862:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:119:2541","0:120:2557","0:121:2570","0:122:2575","0:123:2578"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2719-0:205:2345":{"id":"b:2:2719-0:205:2345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32655:3005","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:25811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:170:2496":{"id":"0:170:2496","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:2473","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:120:2557":{"id":"0:120:2557","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:127:841":{"id":"0:127:841","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3279:8492-0:146:2348":{"id":"a:2:3279:8492-0:146:2348","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3279:8492","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32654:237-0:205:2345":{"id":"a:2:32654:237-0:205:2345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32654:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:125":{"id":"0:125","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:139:2475","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:137:2347":{"id":"0:137:2347","crate_id":0,"name":"ChaCha20Core","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32713:3006-0:137:2347","a:2:3244:247-0:137:2347","a:2:3279:8492-0:137:2347","a:2:42515:13499-0:137:2347","a:2:42516:13722-0:137:2347","a:2:32654:237-0:137:2347","b:2:3021-0:137:2347","b:2:3860-0:137:2347","b:2:3036-0:137:2347","b:2:3025-0:137:2347","b:2:3031-0:137:2347","b:2:2748-0:137:2347","b:2:2719-0:137:2347","b:2:2716-0:137:2347","b:5:784-0:137:2347","b:22:270-0:137:2347","0:97","0:142","0:99","0:126","0:141","0:103","0:144","0:139","0:108"]}}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32656:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:178:2499":{"id":"0:178:2499","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"a:2:32713:3006-0:282:2350":{"id":"a:2:32713:3006-0:282:2350","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32713:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:89-0:214:2346":{"id":"0:89-0:214:2346","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,18],"end":[28,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Rng","name":"ChaCha12Rng","id":"0:214:2346","glob":false}}},"2:13528:33644":{"id":"2:13528:33644","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13526:33643"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:140:2477","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:246:2499","0:248:2500"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13605:33651":{"id":"2:13605:33651","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:13212:13935","`DoubleEndedIterator`":"2:8374:130","prim@char":"1:12434:476","str::matches":"2:13602:2974"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44513:12282","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13233:13933","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13556:33648":{"id":"2:13556:33648","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44555:12284","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13545:26737":{"id":"2:13545:26737","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13547:26741","str::split_at_mut":"2:13546:26738"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:235":{"id":"0:235","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:236:173","0:237:2495","0:238:2496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:100:173","0:101:2495","0:102:2496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13631:26756":{"id":"2:13631:26756","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12434:476","self::pattern":"2:13212:13935"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42422:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13233:13933","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:128":{"id":"0:128","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2798:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:129:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5737:34364":{"id":"5:5737:34364","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:297:3007","`String`":"5:7798:243"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:297:3007","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7798:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2716-0:205:2345":{"id":"b:2:2716-0:205:2345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32655:3005","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2959"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:258:2575":{"id":"0:258:2575","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176":{"id":"0:176","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:22:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:94:2352":{"id":"0:94:2352","crate_id":0,"name":"ChaChaRng","span":{"filename":"src/lib.rs","begin":[32,0],"end":[32,33]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"b:5:784-0:205:2345":{"id":"b:5:784-0:205:2345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:780:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:786:8470","5:787:8471","5:788:8472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:784-0:214:2346":{"id":"b:5:784-0:214:2346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:780:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:786:8470","5:787:8471","5:788:8472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:242:2500":{"id":"0:242:2500","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2477","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:123:2578":{"id":"0:123:2578","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32656:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13648:25955":{"id":"2:13648:25955","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:2570":{"id":"0:121:2570","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:480":{"id":"0:208:480","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219:811":{"id":"0:219:811","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10409:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10390:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2748-0:137:2347":{"id":"b:2:2748-0:137:2347","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2746:8383","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:25815"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:150":{"id":"0:150","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10443:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:151:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10443:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:98:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:181":{"id":"0:181","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["read_adapter"],"trait":{"name":"RngCore","id":"20:133:2476","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:182:2531","0:183:2532","0:184:2533","0:185:2535"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13602:2974":{"id":"2:13602:2974","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:13212:13935","`DoubleEndedIterator`":"2:8374:130","prim@char":"1:12434:476","str::rmatches":"2:13605:33651"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44495:12281","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5728:34362":{"id":"5:5728:34362","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7798:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7798:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:22:270-0:205:2345":{"id":"b:22:270-0:205:2345","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2775","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3041","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25814"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13524:8409":{"id":"2:13524:8409","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3244:247-0:137:2347":{"id":"a:2:3244:247-0:137:2347","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3244:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2716-0:273:2349":{"id":"b:2:2716-0:273:2349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32655:3005","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2959"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:102:2496":{"id":"0:102:2496","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:2473","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:237:2495":{"id":"0:237:2495","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:19:2484","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"b:2:3031-0:137:2347":{"id":"b:2:3031-0:137:2347","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3001:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3034:138","2:3035:1828"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:143:706":{"id":"0:143:706","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:101:2495":{"id":"0:101:2495","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:19:2484","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"0:191:2578":{"id":"0:191:2578","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:190:2575":{"id":"0:190:2575","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:784-0:273:2349":{"id":"b:5:784-0:273:2349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:780:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:786:8470","5:787:8471","5:788:8472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3021-0:214:2346":{"id":"b:2:3021-0:214:2346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2998:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2995:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3024:2545"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:276:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13575:26743":{"id":"2:13575:26743","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:13212:13935","`DoubleEndedIterator`":"2:8374:130","prim@char":"1:12434:476","str::split_whitespace":"2:13553:32135","str::rsplit":"2:13581:26747"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:44291:12041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:95:2354":{"id":"0:95:2354","crate_id":0,"name":"ChaChaCore","span":{"filename":"src/lib.rs","begin":[34,0],"end":[34,35]},"visibility":"public","docs":"ChaCha with 20 rounds, low-level interface","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"2:13655:13492":{"id":"2:13655:13492","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5056:13492"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44599:12167","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3860-0:273:2349":{"id":"b:2:3860-0:273:2349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32655:3005","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3858:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3862:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2748-0:146:2348":{"id":"b:2:2748-0:146:2348","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2746:8383","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:25815"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42515:13499-0:282:2350":{"id":"a:2:42515:13499-0:282:2350","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42515:13499","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2716-0:137:2347":{"id":"b:2:2716-0:137:2347","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32655:3005","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2959"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:285:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:172:2499":{"id":"0:172:2499","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"2:13534:26714":{"id":"2:13534:26714","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12453:1871"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:177":{"id":"0:177","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:140:2477","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:178:2499","0:180:2500"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3036-0:273:2349":{"id":"b:2:3036-0:273:2349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2995:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3039:138","2:3040:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:185:2535":{"id":"0:185:2535","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42554:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:76:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13533:336":{"id":"2:13533:336","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13534:26714","`u8`":"1:12453:1871"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13590:26749":{"id":"2:13590:26749","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12434:476","self::pattern":"2:13212:13935","str::rsplitn":"2:13593:26751"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44395:12275","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:240:2499":{"id":"0:240:2499","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"b:2:3025-0:146:2348":{"id":"b:2:3025-0:146:2348","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2998:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3027:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:250:2531":{"id":"0:250:2531","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13628:25909":{"id":"2:13628:25909","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12434:476","self::pattern":"2:13212:13935"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42422:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115:2532":{"id":"0:115:2532","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32656:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:166:811":{"id":"0:166:811","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10409:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10390:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:2541":{"id":"0:119:2541","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["read_adapter"],"trait":{"name":"RngCore","id":"20:133:2476","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:114:2531","0:115:2532","0:116:2533","0:117:2535"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:784-0:146:2348":{"id":"b:5:784-0:146:2348","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:780:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:786:8470","5:787:8471","5:788:8472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13532:33645":{"id":"2:13532:33645","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"5:5722:14174":{"id":"5:5722:14174","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7798:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7798:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:788:8472":{"id":"5:788:8472","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:100:173":{"id":"0:100:173","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"b:2:2716-0:146:2348":{"id":"b:2:2716-0:146:2348","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32655:3005","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2959"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3027:841":{"id":"2:3027:841","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2998:145","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:263:841"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:165":{"id":"0:165","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10443:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:166:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13643:33664":{"id":"2:13643:33664","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13173:137","`FromStr`":"2:13172:13576"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42554:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:13172:13576","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13172:13576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:187:2541","0:188:2557","0:189:2570","0:190:2575","0:191:2578"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:146:2348":{"id":"0:146:2348","crate_id":0,"name":"ChaCha20Rng","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:178:2472","`RngCore`":"20:133:2476"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:118","a:2:32713:3006-0:146:2348","a:2:3244:247-0:146:2348","a:2:3279:8492-0:146:2348","a:2:42515:13499-0:146:2348","a:2:42516:13722-0:146:2348","a:2:32654:237-0:146:2348","b:2:3021-0:146:2348","b:2:3860-0:146:2348","b:2:3036-0:146:2348","b:2:3025-0:146:2348","b:2:3031-0:146:2348","b:2:2748-0:146:2348","b:2:2719-0:146:2348","b:2:2716-0:146:2348","b:5:784-0:146:2348","b:22:270-0:146:2348","0:130","0:148","0:113","0:125","0:109","0:126","0:150","0:128"]}}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2803:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42515:13499-0:214:2346":{"id":"a:2:42515:13499-0:214:2346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42515:13499","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42515:13499-0:205:2345":{"id":"a:2:42515:13499-0:205:2345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42515:13499","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3036-0:137:2347":{"id":"b:2:3036-0:137:2347","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2995:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3039:138","2:3040:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2719-0:273:2349":{"id":"b:2:2719-0:273:2349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32655:3005","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:25811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13652:26600":{"id":"2:13652:26600","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1066:38562"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13653:33665":{"id":"2:13653:33665","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5055:33665"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44590:12176","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10443:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3244:247-0:214:2346":{"id":"a:2:3244:247-0:214:2346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3244:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:217:480":{"id":"0:217:480","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32654:237-0:273:2349":{"id":"a:2:32654:237-0:273:2349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32654:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:273:2349":{"id":"0:273:2349","crate_id":0,"name":"ChaCha8Core","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"ChaCha with 8 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32713:3006-0:273:2349","a:2:3244:247-0:273:2349","a:2:3279:8492-0:273:2349","a:2:42515:13499-0:273:2349","a:2:42516:13722-0:273:2349","a:2:32654:237-0:273:2349","b:2:3021-0:273:2349","b:2:3860-0:273:2349","b:2:3036-0:273:2349","b:2:3025-0:273:2349","b:2:3031-0:273:2349","b:2:2748-0:273:2349","b:2:2719-0:273:2349","b:2:2716-0:273:2349","b:5:784-0:273:2349","b:22:270-0:273:2349","0:277","0:235","0:244","0:233","0:239","0:262","0:275","0:280","0:278"]}}},"0:287:811":{"id":"0:287:811","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10409:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10390:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42516:13722-0:137:2347":{"id":"a:2:42516:13722-0:137:2347","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42516:13722","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3036-0:146:2348":{"id":"b:2:3036-0:146:2348","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2995:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3039:138","2:3040:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3021-0:273:2349":{"id":"b:2:3021-0:273:2349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2998:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2995:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3024:2545"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2803:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:239":{"id":"0:239","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:140:2477","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:240:2499","0:242:2500"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3034:138":{"id":"2:3034:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:129:706":{"id":"0:129:706","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110:2499":{"id":"0:110:2499","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"b:2:2748-0:282:2350":{"id":"b:2:2748-0:282:2350","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2746:8383","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:25815"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:259:2578":{"id":"0:259:2578","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42515:13499-0:137:2347":{"id":"a:2:42515:13499-0:137:2347","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42515:13499","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13547:26741":{"id":"2:13547:26741","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13548:26742"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42422:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5739:25952":{"id":"5:5739:25952","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13648:25955"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7798:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3244:247-0:282:2350":{"id":"a:2:3244:247-0:282:2350","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3244:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:180:2500":{"id":"0:180:2500","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2477","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:22:270-0:146:2348":{"id":"b:22:270-0:146:2348","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2775","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3041","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25814"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2748-0:273:2349":{"id":"b:2:2748-0:273:2349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2746:8383","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:25815"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:784-0:137:2347":{"id":"b:5:784-0:137:2347","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:780:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:786:8470","5:787:8471","5:788:8472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3860-0:146:2348":{"id":"b:2:3860-0:146:2348","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32655:3005","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3858:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3862:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13571:8408":{"id":"2:13571:8408","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42424:191","prim@char":"1:12434:476","self::pattern":"2:13212:13935"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42422:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13233:13933","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:142":{"id":"0:142","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2798:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:143:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2998:145","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:195:841"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3025-0:273:2349":{"id":"b:2:3025-0:273:2349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2998:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3027:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:112:2500":{"id":"0:112:2500","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2477","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13634:33661":{"id":"2:13634:33661","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12434:476","self::pattern":"2:13212:13935"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13233:13933","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:189:2570":{"id":"0:189:2570","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3279:8492-0:282:2350":{"id":"a:2:3279:8492-0:282:2350","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3279:8492","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32713:3006-0:273:2349":{"id":"a:2:32713:3006-0:273:2349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32713:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3860-0:282:2350":{"id":"b:2:3860-0:282:2350","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32655:3005","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3858:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3862:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:193":{"id":"0:193","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:139:2475","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:174:2500":{"id":"0:174:2500","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2477","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:22:270-0:137:2347":{"id":"b:22:270-0:137:2347","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2775","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3041","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25814"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3025-0:282:2350":{"id":"b:2:3025-0:282:2350","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2998:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3027:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:140:2477","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:110:2499","0:112:2500"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3279:8492-0:273:2349":{"id":"a:2:3279:8492-0:273:2349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3279:8492","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:238:2496":{"id":"0:238:2496","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:2473","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265:706":{"id":"0:265:706","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13561:26090":{"id":"2:13561:26090","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12434:476","self::pattern":"2:13212:13935"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3862:1841":{"id":"2:3862:1841","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:40137:12165","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:91-0:146:2348":{"id":"0:91-0:146:2348","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,45],"end":[28,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Rng","name":"ChaCha20Rng","id":"0:146:2348","glob":false}}},"2:13555:30093":{"id":"2:13555:30093","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44545:12283","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:2535":{"id":"0:253:2535","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42554:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:76:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:196":{"id":"0:196","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2798:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:197:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:249":{"id":"0:249","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["read_adapter"],"trait":{"name":"RngCore","id":"20:133:2476","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:250:2531","0:251:2532","0:252:2533","0:253:2535"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2716-0:214:2346":{"id":"b:2:2716-0:214:2346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32655:3005","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2959"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:182:2531":{"id":"0:182:2531","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42516:13722-0:273:2349":{"id":"a:2:42516:13722-0:273:2349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42516:13722","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13656:33666":{"id":"2:13656:33666","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5053:33666"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44608:12175","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42515:13499-0:273:2349":{"id":"a:2:42515:13499-0:273:2349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42515:13499","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:106:2500":{"id":"0:106:2500","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2477","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:217:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42516:13722-0:282:2350":{"id":"a:2:42516:13722-0:282:2350","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42516:13722","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13581:26747":{"id":"2:13581:26747","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:13212:13935","`DoubleEndedIterator`":"2:8374:130","prim@char":"1:12434:476","str::split":"2:13575:26743"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44309:12046","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13233:13933","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5720":{"id":"5:5720","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5721:34360","5:5722:14174","5:5725:34361","5:5728:34362","5:5736:34363","5:5737:34364","5:5738:13630","5:5739:25952","5:5740:25953"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3244:247-0:146:2348":{"id":"a:2:3244:247-0:146:2348","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3244:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:22:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:282:2350":{"id":"0:282:2350","crate_id":0,"name":"ChaCha8Rng","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:178:2472","`RngCore`":"20:133:2476"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:254","a:2:32713:3006-0:282:2350","a:2:3244:247-0:282:2350","a:2:3279:8492-0:282:2350","a:2:42515:13499-0:282:2350","a:2:42516:13722-0:282:2350","a:2:32654:237-0:282:2350","b:2:3021-0:282:2350","b:2:3860-0:282:2350","b:2:3036-0:282:2350","b:2:3025-0:282:2350","b:2:3031-0:282:2350","b:2:2748-0:282:2350","b:2:2719-0:282:2350","b:2:2716-0:282:2350","b:5:784-0:282:2350","b:22:270-0:282:2350","0:286","0:249","0:264","0:284","0:262","0:266","0:245","0:261"]}}},"a:2:3244:247-0:205:2345":{"id":"a:2:3244:247-0:205:2345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3244:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3025-0:137:2347":{"id":"b:2:3025-0:137:2347","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2998:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3027:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2750:25815":{"id":"2:2750:25815","crate_id":2,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2748-0:205:2345":{"id":"b:2:2748-0:205:2345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2746:8383","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:25815"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:205:2345":{"id":"0:205:2345","crate_id":0,"name":"ChaCha12Core","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"ChaCha with 12 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32713:3006-0:205:2345","a:2:3244:247-0:205:2345","a:2:3279:8492-0:205:2345","a:2:42515:13499-0:205:2345","a:2:42516:13722-0:205:2345","a:2:32654:237-0:205:2345","b:2:3021-0:205:2345","b:2:3860-0:205:2345","b:2:3036-0:205:2345","b:2:3025-0:205:2345","b:2:3031-0:205:2345","b:2:2748-0:205:2345","b:2:2719-0:205:2345","b:2:2716-0:205:2345","b:5:784-0:205:2345","b:22:270-0:205:2345","0:209","0:212","0:207","0:210","0:171","0:194","0:167","0:176","0:165"]}}},"0:214:2346":{"id":"0:214:2346","crate_id":0,"name":"ChaCha12Rng","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:178:2472","`RngCore`":"20:133:2476"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:186","a:2:32713:3006-0:214:2346","a:2:3244:247-0:214:2346","a:2:3279:8492-0:214:2346","a:2:42515:13499-0:214:2346","a:2:42516:13722-0:214:2346","a:2:32654:237-0:214:2346","b:2:3021-0:214:2346","b:2:3860-0:214:2346","b:2:3036-0:214:2346","b:2:3025-0:214:2346","b:2:3031-0:214:2346","b:2:2748-0:214:2346","b:2:2719-0:214:2346","b:2:2716-0:214:2346","b:5:784-0:214:2346","b:22:270-0:214:2346","0:218","0:177","0:196","0:181","0:193","0:216","0:194","0:198"]}}},"0:251:2532":{"id":"0:251:2532","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:246:2499":{"id":"0:246:2499","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"2:13622:33659":{"id":"2:13622:33659","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12434:476","self::pattern":"2:13212:13935"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13238:13932","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:252:2533":{"id":"0:252:2533","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:255:2541":{"id":"0:255:2541","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3031-0:146:2348":{"id":"b:2:3031-0:146:2348","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3001:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3034:138","2:3035:1828"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:236:173":{"id":"0:236:173","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2998:145","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:127:841"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:233":{"id":"0:233","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10443:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:234:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3036-0:214:2346":{"id":"b:2:3036-0:214:2346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2995:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3039:138","2:3040:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:0:2355":{"id":"0:0:2355","crate_id":0,"name":"rand_chacha","span":{"filename":"src/lib.rs","begin":[9,0],"end":[34,35]},"visibility":"public","docs":"The ChaCha random number generator.","links":{},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\", html_favicon_url\n= \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://rust-random.github.io/rand/\")]","#![forbid(unsafe_code)]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:3-20:0:2342","0:88-0:205:2345","0:89-0:214:2346","0:90-0:137:2347","0:91-0:146:2348","0:92-0:273:2349","0:93-0:282:2350","0:94:2352","0:95:2354"],"is_stripped":false}}},"0:130":{"id":"0:130","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2803:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:784-0:282:2350":{"id":"b:5:784-0:282:2350","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:780:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:786:8470","5:787:8471","5:788:8472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:787:8471":{"id":"5:787:8471","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2798:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:211:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3039:138":{"id":"2:3039:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32578:10852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:93-0:282:2350":{"id":"0:93-0:282:2350","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,71],"end":[28,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Rng","name":"ChaCha8Rng","id":"0:282:2350","glob":false}}},"0:139":{"id":"0:139","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:140:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3025-0:205:2345":{"id":"b:2:3025-0:205:2345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2998:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3027:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13539:26712":{"id":"2:13539:26712","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11345:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11345:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:811":{"id":"0:98:811","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10409:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10390:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:263:841":{"id":"0:263:841","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3021-0:282:2350":{"id":"b:2:3021-0:282:2350","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2998:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2995:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3024:2545"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13593:26751":{"id":"2:13593:26751","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12434:476","str::splitn":"2:13590:26749","self::pattern":"2:13212:13935"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44413:12276","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13233:13933","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2718:2959":{"id":"2:2718:2959","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42516:13722-0:146:2348":{"id":"a:2:42516:13722-0:146:2348","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42516:13722","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13558:26755":{"id":"2:13558:26755","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12434:476","self::pattern":"2:13212:13935"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3031-0:214:2346":{"id":"b:2:3031-0:214:2346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3001:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3034:138","2:3035:1828"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3031-0:273:2349":{"id":"b:2:3031-0:273:2349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3001:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3034:138","2:3035:1828"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3031-0:282:2350":{"id":"b:2:3031-0:282:2350","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3001:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3034:138","2:3035:1828"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2716-0:282:2350":{"id":"b:2:2716-0:282:2350","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32655:3005","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2959"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13567:8450":{"id":"2:13567:8450","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42424:191","prim@char":"1:12434:476","self::pattern":"2:13212:13935"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42422:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3024:2545":{"id":"2:3024:2545","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2998:145"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13554:32112":{"id":"2:13554:32112","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13553:32135"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44574:12286","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5721:34360":{"id":"5:5721:34360","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:297:3007","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:297:3007","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:22:270-0:273:2349":{"id":"b:22:270-0:273:2349","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2775","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3041","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25814"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2798:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:265:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3860-0:205:2345":{"id":"b:2:3860-0:205:2345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32655:3005","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3858:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3862:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13523:1008":{"id":"2:13523:1008","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12434:476"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13620:33657":{"id":"2:13620:33657","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257:2570":{"id":"0:257:2570","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:167":{"id":"0:167","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:168:173","0:169:2495","0:170:2496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:140:480":{"id":"0:140:480","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:151:811":{"id":"0:151:811","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10409:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10390:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:104:2499":{"id":"0:104:2499","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:169:2495":{"id":"0:169:2495","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:19:2484","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"2:13625:33660":{"id":"2:13625:33660","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12434:476","self::pattern":"2:13212:13935"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211:706":{"id":"0:211:706","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5725:34361":{"id":"5:5725:34361","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7798:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7798:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3021-0:205:2345":{"id":"b:2:3021-0:205:2345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2998:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2995:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3024:2545"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13551:12299":{"id":"2:13551:12299","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12434:476"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:44267:12267","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13522":{"id":"2:13522","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13523:1008","2:13524:8409","2:13525:33642","2:13526:33643","2:13528:33644","2:13531:26635","2:13532:33645","2:13533:336","2:13534:26714","2:13535:26710","2:13537:26711","2:13539:26712","2:13541:26713","2:13543:33646","2:13544:33647","2:13545:26737","2:13546:26738","2:13547:26741","2:13548:26742","2:13550:12288","2:13551:12299","2:13552:2534","2:13553:32135","2:13554:32112","2:13555:30093","2:13556:33648","2:13557:32152","2:13558:26755","2:13561:26090","2:13564:26092","2:13567:8450","2:13571:8408","2:13575:26743","2:13578:26745","2:13581:26747","2:13584:33649","2:13587:33650","2:13590:26749","2:13593:26751","2:13596:26753","2:13599:26754","2:13602:2974","2:13605:33651","2:13608:33652","2:13611:33653","2:13614:33654","2:13616:33655","2:13618:33656","2:13620:33657","2:13621:33658","2:13622:33659","2:13625:33660","2:13628:25909","2:13631:26756","2:13634:33661","2:13637:33662","2:13640:33663","2:13643:33664","2:13645:25950","2:13646:26595","2:13647:25954","2:13648:25955","2:13649:25956","2:13650:26598","2:13651:26599","2:13652:26600","2:13653:33665","2:13655:13492","2:13656:33666"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13537:26711":{"id":"2:13537:26711","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42424:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42422:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11345:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11345:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13564:26092":{"id":"2:13564:26092","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12434:476","self::pattern":"2:13212:13935"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13233:13933","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13541:26713":{"id":"2:13541:26713","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11345:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11345:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:149:480":{"id":"0:149:480","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13531:26635":{"id":"2:13531:26635","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12759:13936"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13614:33654":{"id":"2:13614:33654","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:88-0:205:2345":{"id":"0:88-0:205:2345","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,4],"end":[28,16]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Core","name":"ChaCha12Core","id":"0:205:2345","glob":false}}},"0:279:706":{"id":"0:279:706","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:278":{"id":"0:278","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2798:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:279:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:254":{"id":"0:254","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:255:2541","0:256:2557","0:257:2570","0:258:2575","0:259:2578"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2803:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2719-0:282:2350":{"id":"b:2:2719-0:282:2350","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32655:3005","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:25811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42516:13722-0:214:2346":{"id":"a:2:42516:13722-0:214:2346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42516:13722","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:22:270-0:214:2346":{"id":"b:22:270-0:214:2346","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2775","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3041","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25814"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2719-0:137:2347":{"id":"b:2:2719-0:137:2347","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32655:3005","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:25811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:171":{"id":"0:171","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:140:2477","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:172:2499","0:174:2500"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3-20:0:2342":{"id":"0:3-20:0:2342","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[22,0],"end":[22,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"rand_core","name":"rand_core","id":"20:0:2342","glob":false}}},"2:13543:33646":{"id":"2:13543:33646","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12440:1741","str::slice_mut_unchecked":"2:13544:33647","crate::ops::Index":"2:39968:13530"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13618:33656":{"id":"2:13618:33656","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:117:2535":{"id":"0:117:2535","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42554:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:76:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43-22:274:2770":{"id":"0:43-22:274:2770","crate_id":0,"name":null,"span":{"filename":"src/guts.rs","begin":[14,0],"end":[14,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"ppv_lite86::Machine","name":"Machine","id":"22:274:2770","glob":false}}},"a:2:32713:3006-0:137:2347":{"id":"a:2:32713:3006-0:137:2347","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32713:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:139:2475","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13650:26598":{"id":"2:13650:26598","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1066:38562"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32654:237-0:282:2350":{"id":"a:2:32654:237-0:282:2350","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32654:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:183:2532":{"id":"0:183:2532","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42515:13499-0:146:2348":{"id":"a:2:42515:13499-0:146:2348","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42515:13499","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13637:33662":{"id":"2:13637:33662","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12434:476","self::pattern":"2:13212:13935"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3036-0:205:2345":{"id":"b:2:3036-0:205:2345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2995:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3039:138","2:3040:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13647:25954":{"id":"2:13647:25954","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32713:3006-0:146:2348":{"id":"a:2:32713:3006-0:146:2348","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32713:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13587:33650":{"id":"2:13587:33650","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:13212:13935","str::split":"2:13575:26743","prim@char":"1:12434:476","str::split_terminator":"2:13584:33649"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44359:12273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13233:13933","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3040:1826":{"id":"2:3040:1826","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42554:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:188:2557":{"id":"0:188:2557","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:116:2533":{"id":"0:116:2533","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3860-0:137:2347":{"id":"b:2:3860-0:137:2347","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32655:3005","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3858:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3862:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2719-0:214:2346":{"id":"b:2:2719-0:214:2346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32655:3005","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:25811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:285:480":{"id":"0:285:480","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13649:25956":{"id":"2:13649:25956","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13646:26595":{"id":"2:13646:26595","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40323:14013","Self::is_ascii":"2:13645:25950"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42422:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40323:14013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:19:2484":{"id":"0:19:2484","crate_id":0,"name":"Array64","span":{"filename":"src/chacha.rs","begin":[27,0],"end":[27,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"22:273:25814":{"id":"22:273:25814","crate_id":22,"name":"vzip","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[226,4],"end":[226,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"V"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2719-0:146:2348":{"id":"b:2:2719-0:146:2348","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32655:3005","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:25811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:168:173":{"id":"0:168:173","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"2:13645:25950":{"id":"2:13645:25950","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:197:706":{"id":"0:197:706","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:122:2575":{"id":"0:122:2575","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32713:3006-0:205:2345":{"id":"a:2:32713:3006-0:205:2345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32713:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13608:33652":{"id":"2:13608:33652","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13212:13935","`DoubleEndedIterator`":"2:8374:130","prim@char":"1:12434:476","str::rmatch_indices":"2:13611:33653"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44441:12278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:286":{"id":"0:286","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10443:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:287:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:248:2500":{"id":"0:248:2500","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2477","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13616:33655":{"id":"2:13616:33655","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3021-0:137:2347":{"id":"b:2:3021-0:137:2347","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2998:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2995:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3024:2545"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:276:480":{"id":"0:276:480","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:256:2557":{"id":"0:256:2557","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32654:237-0:137:2347":{"id":"a:2:32654:237-0:137:2347","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32654:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42516:13722-0:205:2345":{"id":"a:2:42516:13722-0:205:2345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42516:13722","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2721:25811":{"id":"2:2721:25811","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32654:237-0:214:2346":{"id":"a:2:32654:237-0:214:2346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32654:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2748-0:214:2346":{"id":"b:2:2748-0:214:2346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2746:8383","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:25815"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13526:33643":{"id":"2:13526:33643","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13552:2534":{"id":"2:13552:2534","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:44277:8682","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13640:33663":{"id":"2:13640:33663","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12434:476","self::pattern":"2:13212:13935"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13233:13933","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5736:34363":{"id":"5:5736:34363","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7798:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7798:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:187:2541":{"id":"0:187:2541","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5740:25953":{"id":"5:5740:25953","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13649:25956"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7798:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:234:811":{"id":"0:234:811","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10409:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10390:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:208:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13584:33649":{"id":"2:13584:33649","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:13212:13935","str::split":"2:13575:26743","prim@char":"1:12434:476","`DoubleEndedIterator`":"2:8374:130","str::rsplit_terminator":"2:13587:33650"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44341:12272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3279:8492-0:137:2347":{"id":"a:2:3279:8492-0:137:2347","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3279:8492","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13525:33642":{"id":"2:13525:33642","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13611:33653":{"id":"2:13611:33653","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:13212:13935","`DoubleEndedIterator`":"2:8374:130","prim@char":"1:12434:476","str::match_indices":"2:13608:33652"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44459:12279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13218:12855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13233:13933","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3021-0:146:2348":{"id":"b:2:3021-0:146:2348","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2998:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2995:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3024:2545"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:184:2533":{"id":"0:184:2533","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3244:247-0:273:2349":{"id":"a:2:3244:247-0:273:2349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3244:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13550:12288":{"id":"2:13550:12288","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12434:476"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:44261:12266","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3035:1828":{"id":"2:3035:1828","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42554:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:22:270-0:282:2350":{"id":"b:22:270-0:282:2350","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2775","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3041","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25814"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}}},"paths":{"1:12052:30054":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"18:608:9315":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:15852:10117":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:8882:9172":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:10973:12543":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"16:2820:10404":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"11:123:8819":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"16:6984:8793":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"6:4881:11214":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:4116:13657":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"6:5088:11310":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:1969:12540":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"2:42828:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:8031:11964":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:4636:8880":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:41677:12217":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"22:244:3037":{"crate_id":22,"path":["ppv_lite86","types","u64x2x2"],"kind":"trait"},"17:12605:8661":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"21:757:25776":{"crate_id":21,"path":["zerocopy","ByteSlice"],"kind":"trait"},"2:2840:202":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:42216:13640":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"11:671:8560":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:10998:31774":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"6:5471:11462":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:23410:12079":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"6:7463:11867":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:384:12892":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"18:0:2866":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:3048:20615":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"16:6205:21475":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:7014:12037":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:13798:9643":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"5:1595:12806":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:1639:10845":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:40831:12175":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:46393:12353":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:16264:10247":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"21:3645:25781":{"crate_id":21,"path":["zerocopy","SizeInfo"],"kind":"enum"},"1:8014:12460":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:3503:12645":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"6:4964:11253":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:16786:10377":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"5:7811:12014":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:8292:14166":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"17:11386:21562":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:12524:12702":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"22:253:2819":{"crate_id":22,"path":["ppv_lite86","types","u32x4x4"],"kind":"trait"},"1:11932:12928":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"18:706:9342":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:15714:10086":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:2328:12546":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"1:8209:12464":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:2378:21611":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:8271:12967":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:677:12896":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:8798:14165":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"6:5301:11379":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"6:5357:11393":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"2:47689:8382":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:16728:10364":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"2:43353:12244":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:8646:12975":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:7647:8421":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:41286:12202":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:12673:12706":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:6114:12540":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"21:139:71":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Any"],"kind":"enum"},"5:6283:12540":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:11804:12568":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"18:538:8645":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:7016:10546":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:41650:12213":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:41621:12209":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"1:2332:13578":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"16:7030:10548":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"6:5488:11468":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"11:1920:10847":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:6704:12211":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:11582:30010":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"2:10235:8474":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"1:4308:29875":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"16:0:2864":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:3304:30497":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:44261:12266":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:12973:12277":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:8374:130":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:7869:14161":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"17:15315:9924":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:8909:12528":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"17:11465:9463":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"1:11736:2788":{"crate_id":1,"path":["std","sys","thread_local","fast_local","eager","State"],"kind":"enum"},"2:43408:32202":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"17:14114:9702":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:6748:11734":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"6:8330:11983":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"16:7350:8753":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"16:7578:12537":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:13014:12719":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"2:33185:10643":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:47053:12403":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"6:4816:11168":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"20:76:138":{"crate_id":20,"path":["rand_core","error","Error"],"kind":"struct"},"1:1867:12903":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:33948:13783":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:517:10965":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"21:32:25797":{"crate_id":21,"path":["zerocopy","byteorder","ByteOrder"],"kind":"trait"},"18:651:9320":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:13290:9419":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:12454:1853":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:42643:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"14:165:20548":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"22:220:2774":{"crate_id":22,"path":["ppv_lite86","types","LaneWords4"],"kind":"trait"},"16:8066:21485":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:4485:12846":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:4946:8513":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"11:2121:10630":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"6:553:10986":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:44900:12314":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"11:2420:8413":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:42450:8560":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:22617:13788":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:16323:10263":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"16:6738:35108":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"6:5196:11326":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:1650:10847":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"5:7762:12011":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:40942:12181":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:14627:9799":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"11:328:10842":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"11:1900:10844":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"18:726:8652":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:7899:9447":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"16:8151:8808":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:4015:12929":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:15997:10157":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:957:8859":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"5:7821:12839":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:4777:13705":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:15036:9883":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"6:7454:11864":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"6:5405:11420":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:9185:9057":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"17:12035:8823":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"11:2495:20540":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"1:6209:12457":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"5:4298:12540":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"16:7969:10690":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:12451:914":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:23520:12089":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"17:12204:9490":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"16:7192:21481":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:8827:12525":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"7:79:20459":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:13398:8699":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"6:6902:11786":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:44309:12046":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"6:4869:11211":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:42610:8413":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"6:8290:11975":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:23259:32105":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:9455:12956":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"22:247:3038":{"crate_id":22,"path":["ppv_lite86","types","u64x4"],"kind":"trait"},"11:430:35087":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:15760:10098":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:3308:10386":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"17:15905:10132":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:12798:21680":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"2:3716:33328":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"21:3594:35334":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","at_least","Shared"],"kind":"trait"},"5:5424:13915":{"crate_id":5,"path":["alloc","rc","UniqueRcUninit"],"kind":"struct"},"1:8492:8889":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:43867:12257":{"crate_id":2,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"1:1097:12801":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"16:8320:21487":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:8238:140":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:16613:9653":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"6:1684:11129":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:15106:9891":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:14220:9714":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:15090:9889":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:12433:1188":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:41161:12190":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:23487:12086":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"2:44137:12260":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:11661:12857":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"16:7337:10606":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:22970:13867":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"6:586:11003":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:16084:10206":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:3443:12923":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:47434:12442":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:10477:13394":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"2:43643:9043":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"16:5224:10446":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:1633:10844":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:9148:199":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:16775:10375":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"14:202:13949":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:9215:12532":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:23187:8903":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:13547:8700":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"16:8105:10693":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:14031:9677":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:46808:12396":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"22:885:2769":{"crate_id":22,"path":["ppv_lite86","dispatch_light128"],"kind":"macro"},"1:4411:12930":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:45009:12319":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"6:465:10932":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:14438:9773":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:11013:140":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"17:16362:10272":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:46617:12371":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:9193:8560":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:523:10968":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:5165:11316":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:3490:142":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"6:5622:11522":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"6:5255:11354":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:41152:12189":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:14327:9752":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"16:6876:10531":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:44877:12306":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:13945:9661":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:3320:13897":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:7954:30041":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:12249:12692":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:9584:12906":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"21:762:25778":{"crate_id":21,"path":["zerocopy","IntoByteSlice"],"kind":"trait"},"17:12736:12714":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:13006:9566":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:11747:9072":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:10454:8485":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:10551:114":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"17:12931:8693":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:7816:25905":{"crate_id":1,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"11:1085:35082":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:32638:8511":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"17:16701:10355":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"17:1339:12640":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:41227:12197":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:38675:14191":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:14640:9800":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:3522:13531":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"11:2349:12802":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"21:122:9308":{"crate_id":21,"path":["zerocopy","pointer","ptr","def","Ptr"],"kind":"struct"},"1:8842:13732":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:6917:11797":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"6:5387:11408":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:13970:9664":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:46748:12378":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:5533:11477":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"9:236:2788":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:45094:14304":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"6:4990:11266":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:6652:11704":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:15496:10053":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:13635:9606":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"18:80:25733":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"11:2380:8560":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"17:14375:9762":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:5648:12938":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:11161:30058":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"22:274:2770":{"crate_id":22,"path":["ppv_lite86","types","Machine"],"kind":"trait"},"6:5205:11331":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:14692:9805":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:4100:8413":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"6:7368:11837":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:12787:9538":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:42475:8552":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"21:1183:8632":{"crate_id":21,"path":["zerocopy","byteorder","U32"],"kind":"struct"},"17:15739:10094":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:14821:9846":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:11869:29882":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:1852:703":{"crate_id":1,"path":["std","env"],"kind":"module"},"17:13933:9658":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:5399:988":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:42515:13499":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:44574:12286":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"10:44:8824":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"1:12028:12570":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"5:1627:210":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:2081:198":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"11:842:13513":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"16:5172:10444":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"11:1888:9162":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:21929:32745":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"17:11553:12664":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:661:12895":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"6:1657:11116":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:46987:12401":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:2968:13597":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:13181:12726":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"6:6526:11630":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:4984:11263":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:2751:12914":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:14520:9783":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:8598:12788":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"16:2570:10393":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:16595:9643":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"6:5551:11488":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:5357:12851":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"2:8792:8562":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"6:4929:11239":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"6:4970:11255":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"22:224:3034":{"crate_id":22,"path":["ppv_lite86","types","Swap64"],"kind":"trait"},"2:38730:14192":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:6631:11692":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:40771:12169":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:44673:13947":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:15586:10066":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"22:0:2356":{"crate_id":22,"path":["ppv_lite86"],"kind":"module"},"17:13028:12721":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"20:163:3015":{"crate_id":20,"path":["rand_core","RngReadAdapter"],"kind":"struct"},"1:2018:794":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"2:44291:12041":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:13719:9624":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:43652:157":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:42441:173":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"6:6659:11705":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:2082:1373":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:16026:10164":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:14807:9844":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:14299:9748":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"21:0:2999":{"crate_id":21,"path":["zerocopy"],"kind":"module"},"2:2998:145":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"6:5635:11528":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2:3239:118":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:8789:150":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:13095:9568":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"2:23498:12087":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"2:43363:8473":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:40022:212":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:8569:12283":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:10418:21546":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"11:698:8413":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:8671:12979":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:3731:13899":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:23156:8902":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:23352:13656":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"22:299:2776":{"crate_id":22,"path":["ppv_lite86","types","StoreBytes"],"kind":"trait"},"17:16179:10225":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:11952:8684":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:12135:9484":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"16:8223:10695":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"16:6890:8791":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:11475:21564":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"6:5428:11431":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"16:7471:10620":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"5:6559:13880":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:44709:12297":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"5:3343:35060":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"5:3085:8470":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:12886:9555":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:12446:763":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"14:187:20555":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:11335:12556":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"17:12570:12705":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:42184:12221":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:2011:13560":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"16:4267:10429":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"5:1577:8856":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:14845:9849":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:8336:165":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"18:643:9320":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"18:507:9320":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:11864:12677":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"6:6638:11693":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:13537:8693":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"1:12444:744":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"2:41008:13563":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"2:3286:8494":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"22:235:2825":{"crate_id":22,"path":["ppv_lite86","types","u64x2"],"kind":"trait"},"1:10411:12990":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"1:12445:747":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"17:14612:9796":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:6269:10470":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"22:1580:3021":{"crate_id":22,"path":["ppv_lite86","x86_64","vec256_storage"],"kind":"union"},"2:42537:3351":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"16:6953:10538":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:45215:219":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"6:7548:11923":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:15655:10074":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"13:0:2855":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:15621:8715":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:3834:10424":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:12280:12693":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:9201:12983":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:2760:8384":{"crate_id":2,"path":["core","clone","InitializingSlice"],"kind":"struct"},"2:11817:12860":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"16:7938:10686":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"17:10696:8680":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:15769:10099":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:4812:13662":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:902:8413":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:8562:12041":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"18:515:9321":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:3001:258":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"22:260:3040":{"crate_id":22,"path":["ppv_lite86","types","u128x4"],"kind":"trait"},"16:6188:10464":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"5:5574:13920":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:8549:12205":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:15077:9888":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:14947:9863":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"16:2724:10400":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"17:10843:8658":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:14586:9792":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"16:5417:10452":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:9313:116":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"21:1826:8635":{"crate_id":21,"path":["zerocopy","byteorder","Usize"],"kind":"struct"},"2:23328:12074":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"16:2530:10391":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"11:2551:35088":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"16:2550:10392":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:42200:12223":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:22880:13878":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"22:178:2772":{"crate_id":22,"path":["ppv_lite86","types","ArithOps"],"kind":"trait"},"2:40323:14013":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"2:10669:157":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:15919:10139":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"5:6125:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"6:6437:11591":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"16:4929:10437":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:13757:9639":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:44277:8682":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:22815:13597":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"16:8669:10683":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"9:445:20465":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:6950:233":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"5:282:34582":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"21:607:8511":{"crate_id":21,"path":["zerocopy","Ref"],"kind":"struct"},"16:2684:10398":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"16:6658:8768":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:6018:12540":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"16:5085:10441":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:2437:12644":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:14672:9804":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:10456:8486":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"6:5541:11482":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:13570:21554":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"6:6623:11691":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:11653:9469":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"6:564:10991":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:44513:12282":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:3317:13896":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"17:12044:12688":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:11020:12553":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"16:6781:10520":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:23454:12083":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"1:5111:13707":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"5:4328:12540":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:21958:32749":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:8345:3004":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"18:481:9318":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:1106:12802":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"14:220:10836":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"9:500:10913":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"18:623:35127":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:47597:8378":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:12095:9481":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"5:6525:14508":{"crate_id":5,"path":["alloc","sync","UniqueArcUninit"],"kind":"struct"},"17:10793:9353":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"1:1489:156":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:23432:12081":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"17:12869:9592":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"6:5217:11338":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"21:760:25777":{"crate_id":21,"path":["zerocopy","ByteSliceMut"],"kind":"trait"},"4:0:2856":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:11902:9479":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:14573:9791":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:16507:9639":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"2:46241:12340":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:7350:11828":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:22753:13873":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"2:3279:8492":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:3768:13902":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:12950:12274":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:31056:8473":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"17:11173:35119":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:5870:12457":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"16:5649:10454":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:11088:28075":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"20:22:2474":{"crate_id":20,"path":["rand_core","block","CryptoBlockRng"],"kind":"trait"},"2:11775:12275":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"16:4983:10439":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"16:4184:10427":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:4902:10436":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:12452:895":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"21:756:35343":{"crate_id":21,"path":["zerocopy","sealed","ByteSliceSealed"],"kind":"trait"},"20:107:25752":{"crate_id":20,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"6:5186:11319":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:22060:13786":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:15689:10077":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"16:7980:10419":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:13942:32714":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"3:0:510":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:11777:9477":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"17:10487:21548":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"2:2798:201":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:12727:14264":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:44413:12276":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:5198:10445":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:7392:30013":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"6:5648:11534":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:6462:11596":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:2242:129":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"1:8575:12975":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:13969:205":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"6:570:10994":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:472:12637":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"16:7495:10621":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:2052:12017":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:14652:9801":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:42458:8561":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"16:5727:8656":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"5:7609:210":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"18:598:35125":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"22:1510:8527":{"crate_id":22,"path":["ppv_lite86","x86_64","NoS4"],"kind":"struct"},"17:12108:9482":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:12455:1859":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"6:7539:11920":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:9771:128":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"22:1535:8534":{"crate_id":22,"path":["ppv_lite86","x86_64","YesNI"],"kind":"struct"},"16:5379:10451":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:11579:12666":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:2790:12917":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"5:3268:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"16:7789:35110":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"21:2991:8640":{"crate_id":21,"path":["zerocopy","byteorder","Isize"],"kind":"struct"},"2:45025:12323":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"20:124:25756":{"crate_id":20,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"17:16555:10327":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"17:13890:8714":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"5:2148:9078":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"16:6852:10526":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:34467:14187":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"20:18:2473":{"crate_id":20,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"1:3617:12926":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"6:6411:11576":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:2713:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:5117:11312":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:11678:12668":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"6:7341:11827":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:8100:13550":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"5:6757:34582":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:2715:12915":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:10283:12233":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"1:8094:13497":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:44250:12265":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:5680:114":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:40797:12172":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:2149:13581":{"crate_id":2,"path":["core","ptr","metadata","metadata"],"kind":"function"},"2:45287:32125":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"17:15475:10048":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:8620:12510":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:44106:12882":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:13266:21551":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:12759:13936":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"6:1494:11009":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:43635:9042":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:5482:11467":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:23531:12090":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"5:7880:12820":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"6:1625:11093":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:46837:8614":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"16:5144:10443":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:11319:35121":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:12625:9535":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:23421:12080":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"11:1064:20544":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"20:0:2342":{"crate_id":20,"path":["rand_core"],"kind":"module"},"2:45013:12320":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:1838:14122":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"1:6535:220":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"1:12448:920":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:14533:9505":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:9445:235":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"16:2796:10403":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"12:0:2861":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:3913:12928":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:14140:9707":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:16832:9663":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"16:3587:10422":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"21:3587:35564":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Initialized"],"kind":"enum"},"6:5019:11282":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:6225:220":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"17:11527:12663":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:7178:13784":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"16:3141:9356":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"16:6144:21474":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:13119:9569":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"6:6599:11679":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"21:558:25771":{"crate_id":21,"path":["zerocopy","FromBytes"],"kind":"trait"},"2:23373:13597":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"17:10368:21544":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"6:5007:11276":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"5:3330:10846":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"6:1500:11012":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:12234:9573":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:43380:12252":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"6:5412:1258":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:23341:12075":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"21:553:25770":{"crate_id":21,"path":["zerocopy","FromZeros"],"kind":"trait"},"1:3656:8482":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:22066:13789":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:13169:12725":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"16:6368:8735":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"21:2780:8639":{"crate_id":21,"path":["zerocopy","byteorder","I128"],"kind":"struct"},"17:12723:12713":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:31041:12092":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:15557:10060":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"16:6794:10521":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"11:1725:156":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"21:1408:8633":{"crate_id":21,"path":["zerocopy","byteorder","U64"],"kind":"struct"},"6:5507:11475":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"5:1487:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:23509:12088":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"5:7284:34603":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:44583:12287":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:3674:13595":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"6:5036:11291":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"5:6927:34582":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:13070:8661":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"1:2477:13581":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"1:573:13480":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:47008:12402":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"1:936:9162":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:15887:10128":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"16:6866:21479":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:4404:10430":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:6879:9068":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"2:42865:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:12583:9534":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"21:3552:35333":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Invariants"],"kind":"trait"},"2:40847:12176":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"16:8121:210":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:8258:9055":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"17:14001:9673":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"16:4810:10433":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"16:4766:10432":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:15844:10116":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"2:46439:12356":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:2736:113":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"5:929:13514":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"16:5318:10449":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:47455:8616":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:15679:10076":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"17:12008:9398":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:47559:8376":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:22894:14203":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"2:23983:236":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:8216:9077":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"17:317:12635":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:14168:9167":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"11:1580:12807":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:3325:13898":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"6:6680:11711":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:14886:9854":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:41659:12214":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"16:5709:21473":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"17:16399:10279":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:13212:13935":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:32714:8496":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:11268:9056":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:5420:11426":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:47257:12438":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:13361:9589":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:2084:197":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:3703:13979":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"11:2539:10849":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"16:4152:10426":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"5:7587:34527":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:13041:12722":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"16:6159:8757":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:12762:12716":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"17:14933:9861":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"22:1560:8524":{"crate_id":22,"path":["ppv_lite86","x86_64","Avx2Machine"],"kind":"struct"},"16:7807:35112":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"6:5520:11476":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"1:11032:12505":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"2:3691:147":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"6:5325:11387":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:12459:1933":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"17:2227:12641":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:6814:12033":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:8287:9078":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:8080:13496":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:8263:9054":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"16:2486:10389":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:4763:12848":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:32620:12873":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"16:8233:21486":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:44565:12285":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"5:5834:13965":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:22841:32170":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"2:3858:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"18:754:9352":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:44599:12167":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"21:2099:8636":{"crate_id":21,"path":["zerocopy","byteorder","I16"],"kind":"struct"},"2:7003:12040":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"17:15785:10103":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"5:2295:8862":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:10977:35120":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"6:5044:11296":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:5241:11348":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"18:589:9325":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"16:6123:10414":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"22:1411:9305":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","G0"],"kind":"struct"},"5:5570:13919":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"6:6534:11635":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:11114:12656":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"6:1584:11062":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"5:7211:264":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"5:1401:12801":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:45037:12326":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:40820:12174":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:46632:12372":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:15931:10142":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:10568:31394":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"16:7907:10685":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"16:2506:10390":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"16:8503:10745":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"6:5341:11391":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"2:4827:12024":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"18:680:9338":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:21975:32739":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"5:2266:11992":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"6:5271:11363":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"15:0:2863":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:2505:13592":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"16:7168:10574":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"5:6178:14500":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"5:7718:8869":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"5:985:13515":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"16:7305:10602":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:13471:9543":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:4208:13663":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"11:1023:12801":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:2610:14203":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"16:6111:10462":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"18:113:25735":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"16:2840:10405":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"5:1415:12805":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:1982:12908":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:13238:13932":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:11541:12041":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"1:11492:10910":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"5:7798:243":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:46410:12354":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"17:16159:10219":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:6876:11771":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:11281:12531":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"11:809:12820":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"1:6063:9059":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:12897:9556":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"1:9380:26074":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:11696:12046":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:5991:12945":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:44788:12303":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"16:6421:8741":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:6018:9058":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:22058:13597":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"16:6731:8752":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:910:8856":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:2920:10409":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:2729:14279":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"11:2559:10853":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"16:2748:10401":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:46305:12345":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:42384:12237":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:11026:35118":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:597:12894":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:6696:12743":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:4824:11850":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"2:22496:32740":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:10549:8657":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:41056:12877":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:9326:25911":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:22186:8900":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"5:7110:13966":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:12749:12715":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:22007:13790":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:9470:8890":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"5:4482:265":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:11998:12681":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:14127:9706":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"11:1880:8560":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"6:5570:11496":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:38565:14189":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"9:480:20464":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"11:1893:12820":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"1:4994:12933":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:45208:151":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:10928:12653":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:41184:12193":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:11851:12676":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:22484:8901":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"17:10031:21534":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:16761:10371":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"16:7386:8798":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"11:2301:10630":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"16:6302:10477":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:4160:13660":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:5282:12934":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:8565:10753":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:11803:12859":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"0:94:2352":{"crate_id":0,"path":["rand_chacha","ChaChaRng"],"kind":"type_alias"},"17:16187:10226":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:47650:8381":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"11:798:9162":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:16132:10207":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"16:6970:8792":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:2710:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:13286:13941":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:10709:8897":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:11057:12979":{"crate_id":1,"path":["std","sys","pal","unix","linux","pidfd","PidFd"],"kind":"struct"},"1:12417:28066":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"22:257:2827":{"crate_id":22,"path":["ppv_lite86","types","u64x2x4"],"kind":"trait"},"2:23050:12054":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:14125:116":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:11789:12276":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:10448:129":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"5:2162:12821":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:43127:8485":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"5:5300:8871":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:23103:12055":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:13306:9587":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:10774:12919":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"2:12989:12280":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"16:8014:8802":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"9:0:2858":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"22:202:3032":{"crate_id":22,"path":["ppv_lite86","types","Vec2"],"kind":"trait"},"1:3400:12921":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:44441:12278":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:11401:9459":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:22829:13877":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"17:13733:9625":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:12648:9536":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"18:635:9337":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:988:12799":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:3465:8565":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:3074:138":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"21:3386:8642":{"crate_id":21,"path":["zerocopy","byteorder","F64"],"kind":"struct"},"17:16377:10273":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"1:9463:162":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:8638:12978":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:15963:10150":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:16332:10267":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:32645:12157":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"1:2323:139":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"16:5742:8657":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:12826:9545":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:47103:12405":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:16684:10353":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"2:42791:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:4:1271":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"5:780:250":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"6:5366:11397":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"16:7765:10666":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:11335:13597":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"22:176:3024":{"crate_id":22,"path":["ppv_lite86","types","BSwap"],"kind":"trait"},"17:14072:9687":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"5:7557:9162":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"5:6838:8413":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:10630:8678":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:45347:12335":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:11135:31779":{"crate_id":2,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"6:5494:11470":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"2:40971:14251":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:4822:11848":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"6:6666:11706":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:1905:12905":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:22078:8900":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:10443:120":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:11503:9466":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"2:3481:3002":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:2645:12913":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:12438:335":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:10246:21540":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:13233:13933":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:5313:12934":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:40839:12167":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:2834:195":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"18:491:9319":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:11733:21583":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"16:7259:10600":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:15148:9898":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:12906:8692":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"2:2045:678":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:12432:420":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:9367:12537":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"1:9142:12982":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"6:6473:11604":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:14750:9832":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:12392:9499":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:15989:10156":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"11:2466:12820":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"21:427:35414":{"crate_id":21,"path":["zerocopy","wrappers","update","WriteBackOnDrop"],"kind":"struct"},"17:14460:9774":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"6:1514:11017":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"6:4947:11247":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"11:873:12799":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:11105:9057":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"2:42554:226":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:3487:141":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"6:5265:11360":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:42506:8553":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"16:7058:10549":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"16:2415:20586":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:10978:12545":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"1:9259:13753":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"16:8528:10748":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:23171:8874":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"6:6449:11595":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:32743:8495":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"6:8343:11987":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:23294:32113":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"1:8539:8881":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:3848:13641":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"22:1593:3022":{"crate_id":22,"path":["ppv_lite86","x86_64","vec512_storage"],"kind":"union"},"17:13554:9597":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"1:10780:12923":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"2:42680:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:43446:138":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:6191:12031":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:5614:12935":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"6:5295:11376":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:11222:12657":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"16:2435:20613":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"1:9754:30049":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"2:46600:12370":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"16:8000:8801":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"5:1230:35062":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"18:659:12630":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:43682:9045":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:10778:12650":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"16:6822:21478":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"1:12460:1435":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:6708:12949":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:42754:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:5139:11314":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:3249:8490":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"6:1530:11025":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"16:8626:10754":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"5:3800:34582":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:6770:11743":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"17:16798:10380":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"2:0:568":{"crate_id":2,"path":["core"],"kind":"module"},"17:15829:10114":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"5:6711:9162":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:11606:8661":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:5298:438":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:12220:28013":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:14019:9674":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:41214:12196":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:11878:8661":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:45233:207":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:9436:12540":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"22:296:3042":{"crate_id":22,"path":["ppv_lite86","types","Store"],"kind":"trait"},"1:8052:9503":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"16:6837:8788":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"6:5462:11456":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:41063:12050":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:6758:11741":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"2:31003:8908":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"18:573:9320":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:6680:12740":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"17:14358:9759":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:5359:204":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"6:6700:11720":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"1:11353:162":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"6:8319:11982":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"18:96:25734":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:23235:12058":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"16:8546:10750":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:4110:13658":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:21941:32745":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:6400:30050":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:45298:12889":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"2:45017:12321":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:11065:12964":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"2:10462:8484":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:14055:9679":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:12537:12703":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:6914:10535":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:46343:12350":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"5:40:13532":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:46858:3038":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:1869:12904":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:39888:8564":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"6:7332:11821":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:46579:12369":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:44545:12283":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:11345:239":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:8226:12465":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"16:7883:8749":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"18:718:9346":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"5:1386:12802":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:9347:12988":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:46211:12336":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"6:4805:11160":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:44495:12281":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"16:2900:10408":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:0:2865":{"crate_id":17,"path":["object"],"kind":"module"},"17:12851:9553":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:47502:8371":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:8014:11954":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"6:8199:11965":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:45203:12330":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"18:689:9341":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:44887:12310":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"16:7731:8552":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:40000:210":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:45324:12334":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"6:6544:11642":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"16:7990:10691":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"9:355:20480":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:4346:13684":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:15731:10091":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:6777:11744":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"16:7919:12776":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"6:5562:11494":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:4829:11178":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:13448:120":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:3402:12922":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:5984:12941":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"5:7786:12838":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"17:11065:12655":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:46710:12376":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"5:7528:8850":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"5:1785:34582":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:42902:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"22:1545:8525":{"crate_id":22,"path":["ppv_lite86","x86_64","SseMachine"],"kind":"struct"},"1:5734:12940":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:13055:8665":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"2:2746:8383":{"crate_id":2,"path":["core","clone","CloneToUninit"],"kind":"trait"},"17:11291:35115":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:14312:9750":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"5:1123:34582":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:10452:8476":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:12711:12712":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:46763:12379":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:7746:25999":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:41246:12198":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"5:1214:34552":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:3307:31164":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:3452:125":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:10863:31777":{"crate_id":2,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"17:12293:12695":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:32578:10852":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"18:521:25745":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"9:328:10895":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:11318:12541":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"1:8730:12980":{"crate_id":1,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"17:15549:10059":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:10784:12651":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"17:10167:21538":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"16:6808:8786":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:12699:12711":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:40854:14006":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"22:1416:9306":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","G1"],"kind":"struct"},"17:12992:9563":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"6:1675:11123":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"18:613:35128":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"5:5525:34582":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:9423:187":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:8586:13639":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"1:3665:25853":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:34149:14185":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:11788:12671":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:5628:12937":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:8371:13629":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:3073:124":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:11805:12674":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:45029:12324":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"18:735:25743":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:6064:10415":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:11539:8665":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"6:5641:11531":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:45266:12887":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"6:5395:11413":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"16:8267:10703":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:14859:9850":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:8756:9168":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:5877:12458":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"6:1727:11145":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:42717:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"11:2545:10850":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:13349:8696":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"11:364:35076":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:15777:10101":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:11292:28218":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"5:297:3007":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"6:7563:11930":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"16:2950:10410":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:46226:12339":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:43134:8486":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:41175:8887":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:12347:12700":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"0:95:2354":{"crate_id":0,"path":["rand_chacha","ChaChaCore"],"kind":"type_alias"},"2:2222:189":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"16:3441:10421":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"17:16632:10341":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"2:42466:8413":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"11:299:10839":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:994:12800":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:12449:902":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:13610:9605":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"20:140:2477":{"crate_id":20,"path":["rand_core","SeedableRng"],"kind":"trait"},"6:6521:11629":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:0:1733":{"crate_id":1,"path":["std"],"kind":"module"},"17:10296:21542":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"22:892:8617":{"crate_id":22,"path":["ppv_lite86","soft","x2"],"kind":"struct"},"6:559:10989":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:15286:9904":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"15:306:20568":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"17:11421:12660":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:5629:11525":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"17:2406:12642":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:42941:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"22:884:2768":{"crate_id":22,"path":["ppv_lite86","dispatch"],"kind":"macro"},"14:31:12789":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:4677:13687":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"6:6691:11714":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"21:512:25767":{"crate_id":21,"path":["zerocopy","DstLayout"],"kind":"struct"},"2:47376:8615":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:14738:9829":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:11041:28220":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"22:1299:8629":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","u128x1_sse2"],"kind":"struct"},"17:15641:10070":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"11:1158:12805":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:14975:9869":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"11:351:35079":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"1:10409:12991":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"2:22174:13597":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:13692:9616":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"6:4890:11219":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:7075:21480":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:2704:10399":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:40893:12178":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:14043:9678":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"16:2620:10395":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"6:8296:11976":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"21:942:8630":{"crate_id":21,"path":["zerocopy","byteorder","U16"],"kind":"struct"},"17:16656:10346":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"1:9159:9056":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:15573:10061":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:532:13475":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"5:3866:12821":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:4520:13895":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:667:9447":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"16:6573:10514":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"7:0:1923":{"crate_id":7,"path":["unwind"],"kind":"module"},"21:3666:25780":{"crate_id":21,"path":["zerocopy","CastType"],"kind":"enum"},"17:11281:12658":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"15:394:20577":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"16:8058:12783":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:6790:11751":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:43113:8476":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:11124:35122":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:12335:12699":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:7804:25910":{"crate_id":1,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"17:583:12638":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:15753:10097":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:11926:9480":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"5:1555:8413":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:15876:10124":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:473:10937":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:42978:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"6:7361:11833":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:14483:9779":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:13209:138":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"5:889:12814":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:2148:14214":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"22:1111:8621":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","u32x4_sse2"],"kind":"struct"},"2:2995:163":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:44866:13948":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:46535:2825":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:10218:21539":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:11953:12929":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"6:5249:11352":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"11:488:154":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:23321:12071":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:16218:10233":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:9232:12533":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:2479:13582":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:45005:12318":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"6:4957:11250":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"6:485:10943":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"16:4873:10435":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:42244:9038":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"2:3686:254":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:3305:10644":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:5805:13737":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:13227:9342":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:13662:9612":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"11:2366:12811":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:5319:32156":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:12021:31413":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"17:16668:10348":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"6:4896:11221":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:43429:8473":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:32745:115":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"17:322:12636":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:9295:12536":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:47574:8377":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"16:7416:12754":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"16:7959:10689":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:40782:32132":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"5:1636:12819":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:8361:12969":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"16:903:12635":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"5:2816:12000":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:41105:8882":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:32655:3005":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"6:8008:11952":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:2860:10406":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:16311:10261":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:10803:8682":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"5:3092:34675":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"17:15160:9902":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:3470:13891":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"17:11309:12659":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:13958:9663":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:22615:13597":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:12441:1831":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"6:4792:11151":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:8581:12977":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:4397:12540":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"5:1370:10630":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"5:7259:34595":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"6:1521:11020":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:44088:12047":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:9209:8413":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:40741:12168":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:3310:31303":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:23476:12085":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"22:267:3041":{"crate_id":22,"path":["ppv_lite86","types","VZip"],"kind":"trait"},"17:14084:9690":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:15439:10018":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:14796:9842":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"16:5449:10453":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:14872:9851":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:2518:13594":{"crate_id":1,"path":["std","fs","exists"],"kind":"function"},"1:9319:12984":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"16:7044:8794":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:26383:267":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:4826:11852":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"2:14148:9165":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:12225:9493":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"17:16739:10369":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"2:46664:12374":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:2596:679":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"5:0:309":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:4338:13683":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:42362:12510":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"17:10394:21545":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:10390:226":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"5:7692:12007":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:13818:9653":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"9:422:20467":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"16:7372:8797":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:22462:13792":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"5:1539:8561":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:42402:12238":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:41026:12025":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"16:3987:9369":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"17:13222:21550":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:15410:10007":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"6:5179:11317":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:43392:10722":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:5305:12649":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"2:21987:32742":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"1:3072:226":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"2:21956:32747":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:41411:12205":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"5:3304:10845":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:14405:9765":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:4896:13709":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:7828:25882":{"crate_id":1,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"16:5060:10440":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"22:1540:8535":{"crate_id":22,"path":["ppv_lite86","x86_64","NoNI"],"kind":"struct"},"2:32656:244":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"11:881:12800":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"6:479:10940":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"11:835:12794":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"22:1500:8526":{"crate_id":22,"path":["ppv_lite86","x86_64","NoS3"],"kind":"struct"},"2:10095:8892":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:2343:12022":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"16:8585:12785":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"16:2450:10387":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:44267:12267":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:15064:9887":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"16:4120:10425":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:4492:12931":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"16:6028:8756":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:8204:12965":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:33397:10640":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:879:8560":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:12447:742":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"8:0:2857":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:11427:13004":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"2:44815:12304":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:5541:129":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"17:12816:9543":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"17:16036:10169":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"5:2173:12822":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"2:43880:12258":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:8501:9079":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"22:1569:2771":{"crate_id":22,"path":["ppv_lite86","x86_64","vec128_storage"],"kind":"union"},"2:46358:12351":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:44359:12273":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:15896:10131":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:47476:12443":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:43421:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:12458:977":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"9:176:8841":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"6:5334:11390":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"17:14599:9794":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:22791:13874":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"18:670:12634":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:4976:11258":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"5:1250:34558":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"1:7909:12958":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"17:10516:21549":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:16297:10254":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:8632:13686":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:3889:9361":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"11:2228:8823":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"21:587:25758":{"crate_id":21,"path":["zerocopy","IntoBytes"],"kind":"trait"},"2:44218:12886":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:11432:21563":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:40927:12179":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:32713:3006":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:44723:12300":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:22457:13597":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"2:10090:32999":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:44555:12284":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"6:5319:11386":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"5:7537:8413":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"17:14547:9788":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"5:7120:13967":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"17:10141:21537":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"16:8137:8806":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"6:4997:11269":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:46425:12355":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:8556:8682":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"5:3088:11994":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:16145:10213":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"16:7462:12755":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:3720:12646":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:3493:13624":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:32631:12874":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"22:967:8620":{"crate_id":22,"path":["ppv_lite86","soft","x4"],"kind":"struct"},"21:2342:8637":{"crate_id":21,"path":["zerocopy","byteorder","I32"],"kind":"struct"},"16:7282:10601":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"16:8711:10756":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:14099:9696":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:12373:13928":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"17:13781:9640":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"21:796:8657":{"crate_id":21,"path":["zerocopy","byteorder","BigEndian"],"kind":"enum"},"16:8165:8809":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:8519:13596":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:15010:9881":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"6:6765:11742":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"5:3851:9078":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"6:538:10977":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:11516:8561":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"16:4694:10431":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:6305:8886":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:15812:10107":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"18:698:8650":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"11:2137:12801":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"6:5224:11339":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:45033:12325":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:22965:13869":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"15:288:20567":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:3375:10645":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"6:4921:11237":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"6:491:10945":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"11:830:12806":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:4539:13982":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"2:44097:12048":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:45211:164":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:8267:11969":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"17:12776:12717":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"6:8273:11970":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:13871:8707":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:155:8732":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"16:6440:21476":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:4875:11212":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:46681:12375":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"6:8302:11977":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:14205:152":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:43467:8475":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"16:3014:20614":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"16:6904:10534":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"16:7554:21483":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"6:5288:11374":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:43664:2788":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"6:5670:11542":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:14416:9766":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:11492:8560":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"16:8636:21488":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:47627:8380":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:45335:10856":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"6:6731:11730":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"2:46290:12344":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:3536:12213":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:44459:12279":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:11630:9467":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:12306:9496":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"2:41421:12206":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:7586:11942":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:1667:11122":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:46550:12368":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:2992:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"6:5282:11371":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:32624:10683":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"17:14708:9810":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:34294:14186":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:3613:211":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"6:1489:11007":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:16008:10161":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"11:2440:9162":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"17:10534:8656":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:6640:12739":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"2:31035:8385":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:4222:13665":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:12122:9483":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:13427:9590":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"2:44694:12291":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:11457:9462":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"2:5126:14000":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:824:190":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"11:2148:12802":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:22709:13872":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"2:31414:196":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:39924:13901":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"22:216:3033":{"crate_id":22,"path":["ppv_lite86","types","Words4"],"kind":"trait"},"6:5375:11403":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:4936:13673":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:11515:12662":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:12066:8687":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:2969:14012":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:15836:10115":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:23279:32103":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:12860:9554":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:9904:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"5:7747:14251":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"5:726:12813":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:2325:12912":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"1:1624:9162":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"5:3720:8561":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:6507:11628":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"6:1711:11140":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:42350:12236":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:12018:12682":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"1:12453:1871":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:11049:28215":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:43120:8477":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"6:8255:11967":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:3967:9162":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"11:1105:12803":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:15953:10147":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:47513:8372":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:946:12820":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"5:6578:13881":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"5:3297:8560":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:14507:9780":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:2966:10411":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:22:826":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"6:578:10999":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:8034:12461":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"6:5603:11508":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:15136:8693":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:16520:10297":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"16:2880:10407":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"6:7308:11804":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:14832:9847":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"6:5311:11383":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"5:7545:12005":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"6:1551:11040":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:13145:12723":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"5:4527:12540":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:47347:12440":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:8199:9399":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"1:4359:13685":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:12056:8686":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:14152:9710":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"6:5069:11309":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:12435:1893":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:4566:12932":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:8101:9060":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"1:3910:12927":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:16283:10252":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"5:7645:8413":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:965:12794":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:952:12806":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"20:178:2472":{"crate_id":20,"path":["rand_core","block","BlockRng"],"kind":"struct"},"1:12457:1847":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"16:8209:8810":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"20:186:3016":{"crate_id":20,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"16:6084:10458":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:13837:12865":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"1:9742:139":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"5:3086:35063":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:4218:13664":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:44176:12884":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"16:8298:10707":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"5:212:12812":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"6:497:10948":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"21:595:25772":{"crate_id":21,"path":["zerocopy","Unaligned"],"kind":"trait"},"1:3599:12508":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:7818:32831":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:11773:12565":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:12439:1707":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:10097:21535":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"5:3338:10844":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"14:40:9640":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"6:7469:11869":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:40100:13506":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:45308:180":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:14269:9739":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:7423:28014":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"16:546:8739":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:11592:9440":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:13322:21552":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:46258:12342":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:10442:21547":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:44198:12885":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:46949:12399":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:821:13643":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"16:6337:10480":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"6:1597:11069":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:1563:11048":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:44237:12262":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"16:7521:10627":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:23243:12059":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:12319:12697":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"6:1696:11133":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"5:789:119":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:2612:14204":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"6:8284:11974":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:12385:13008":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"17:15973:10153":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"5:7617:8873":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:42546:8563":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:12550:9532":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"6:7577:11939":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:13027:12045":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:15121:9895":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"16:2772:10402":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:5102:13706":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:10115:21536":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:10460:8483":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:45041:8899":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:41114:8885":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:4230:13667":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:3347:12919":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:40955:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"16:4241:10428":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:47302:12439":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"16:2990:10412":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"5:7774:12013":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:13385:8697":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:12450:908":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:40150:12166":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"6:6480:11608":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"5:3707:8560":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:42422:194":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:44395:12275":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:41205:12195":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:11706:12670":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:5863:220":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"6:4937:11241":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"11:1005:10630":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:10704:13601":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"16:908:12636":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"1:4168:13661":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:11691:12669":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:16241:10246":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:6723:11729":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"22:1525:8532":{"crate_id":22,"path":["ppv_lite86","x86_64","YesA2"],"kind":"struct"},"17:13082:12657":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"16:4844:10434":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:9749:12965":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"1:6598:186":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"11:434:35083":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:8739:13718":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:13854:12868":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"2:46372:12352":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:12260:21655":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"2:4473:12845":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:15351:9955":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:12359:12701":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:12983:21682":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2:47180:12437":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:8652:12512":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"5:3096:34674":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:2146:14213":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:47612:8379":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:12401:9086":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:34015:14184":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:12302:12861":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"11:708:8859":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:40934:12180":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"5:1524:8560":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:10861:139":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"16:7949:10418":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:12335:12862":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"17:16812:10381":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"11:2566:12007":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"5:1002:8560":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:22937:13868":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"5:2348:34541":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"16:7542:10629":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:13451:9592":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:9583:12855":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"6:8353:11989":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:10660:12982":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"11:740:8860":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:13172:13576":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:2660:10397":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:3445:12924":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"17:16750:10370":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"1:11383:12557":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"22:213:2779":{"crate_id":22,"path":["ppv_lite86","types","Vector"],"kind":"trait"},"16:6256:8767":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"17:15665:10075":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:44163:12050":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"16:7159:10573":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:8898:12527":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:3349:12920":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:6308:30047":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:5107:11311":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"21:34:25798":{"crate_id":21,"path":["zerocopy","byteorder","Order"],"kind":"enum"},"5:4368:8560":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:4174:13662":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:15864:10123":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:16494:9625":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"16:8723:138":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"6:1703:11136":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:971:13513":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:437:185":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"5:7896:12841":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:44126:12883":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"20:139:2475":{"crate_id":20,"path":["rand_core","CryptoRng"],"kind":"trait"},"2:41635:12211":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:42619:196":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"11:1140:12804":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:9433:12854":{"crate_id":2,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"17:14917:9860":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:8510:12505":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"21:811:8656":{"crate_id":21,"path":["zerocopy","byteorder","LittleEndian"],"kind":"enum"},"2:7752:14009":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:982:12797":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:43015:9039":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:3084:138":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:12743:12863":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:8279:12968":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"16:2467:8724":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:13838:8701":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"11:2400:8561":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"16:3110:10420":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"11:1884:8413":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:4699:13688":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:8427:3003":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"17:11617:12657":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"16:7508:10624":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"16:6749:8783":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"18:548:153":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:4605:8879":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"6:6672:11709":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:11720:9471":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"17:16198:10230":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:13157:12724":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"6:6708:11724":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"2:15:2487":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:12176:9487":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"5:6157:8871":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"22:206:2777":{"crate_id":22,"path":["ppv_lite86","types","Vec4"],"kind":"trait"},"6:1643:11105":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"6:5477:11465":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"21:544:25759":{"crate_id":21,"path":["zerocopy","NoCell"],"kind":"trait"},"2:23443:12082":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"2:22184:13787":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:12976:9562":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:1628:12820":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"17:14284:9743":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"5:4573:34566":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"11:685:8561":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"22:1495:8528":{"crate_id":22,"path":["ppv_lite86","x86_64","YesS3"],"kind":"struct"},"22:1530:8533":{"crate_id":22,"path":["ppv_lite86","x86_64","NoA2"],"kind":"struct"},"16:6173:8760":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:1507:11015":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:8029:12960":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"6:1539:11031":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:12437:1329":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:11958:12678":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:9172:12531":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:46273:12343":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"5:5141:12540":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:3244:247":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:10597:8677":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:46649:12373":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"5:1889:12820":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:23221:32110":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"14:214:10834":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:39309:14193":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:6432:9065":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"16:4956:10438":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:1220:12639":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:11971:12679":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:34640:14188":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:378:12890":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:5802:11758":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"14:7:12789":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"16:6843:8790":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:12687:12710":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"16:6389:12732":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"6:8308:11978":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:10661:153":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:4915:8498":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:4758:12847":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:10991:31778":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"2:3295:13782":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"6:5450:11447":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"1:12456:1865":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"1:8252:128":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:15939:10145":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:6998:10539":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"16:5282:10448":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"16:7223:10587":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:12941:9559":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:3434:13900":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:10391:8482":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:13193:12727":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"2:9909:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"6:6564:11658":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"5:2256:13475":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:41083:12878":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:14997:9880":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:14335:9754":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:680:12898":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"16:8043:35106":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:6384:9165":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"2:41262:9335":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"5:4908:811":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:41435:12207":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:8482:178":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"21:535:25768":{"crate_id":21,"path":["zerocopy","KnownLayout"],"kind":"trait"},"17:12216:9492":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"5:4560:12540":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"2:33609:14182":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"16:8096:12784":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:13592:9602":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:5586:11501":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:5441:11441":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"5:1586:8858":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"5:5971:251":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:10938:35116":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:11167:30009":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"11:396:35074":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:14346:9757":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"16:6462:21477":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:11798:12567":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:10820:9503":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"0:0:2355":{"crate_id":0,"path":["rand_chacha"],"kind":"module"},"2:41669:12215":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"21:3657:9312":{"crate_id":21,"path":["zerocopy","TrailingSliceLayout"],"kind":"struct"},"11:1674:35072":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:12028:12683":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"2:40137:12165":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"16:8612:8812":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:4884:13990":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"16:5113:10442":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"22:241:3036":{"crate_id":22,"path":["ppv_lite86","types","u32x4x2"],"kind":"trait"},"2:43884:12259":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"11:2533:10848":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"5:885:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:11818:12675":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"5:4497:34566":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:11584:12045":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:40810:12173":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:45225:227":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:12371:8689":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:41276:12201":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"16:7212:10586":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:1617:8560":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:4893:8512":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:23465:12084":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"1:628:13491":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"11:2323:12801":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"2:41644:12212":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"16:6942:10537":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"20:127:25757":{"crate_id":20,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"16:7838:21484":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"16:6588:10517":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"22:263:2775":{"crate_id":22,"path":["ppv_lite86","types","MultiLane"],"kind":"trait"},"1:5664:12939":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:13921:9657":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:3237:8489":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:5017:13672":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"16:6239:8762":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"21:1617:8634":{"crate_id":21,"path":["zerocopy","byteorder","U128"],"kind":"struct"},"17:11566:12665":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:10954:12999":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"2:44918:12316":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:42328:32138":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:12920:9557":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"16:5689:10455":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:46970:12400":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:8041:8889":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:8325:146":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"10:36:10858":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:46326:12349":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:40080:216":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:13994:12869":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"22:232:2813":{"crate_id":22,"path":["ppv_lite86","types","u32x4"],"kind":"trait"},"2:4684:8510":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:4754:221":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:3039:12918":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:41092:8881":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:10450:8477":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:16642:10342":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"22:1205:8628":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","u64x2_sse2"],"kind":"struct"},"17:13205:12728":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:7842:25912":{"crate_id":1,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"2:45083:12327":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:2551:2873":{"crate_id":1,"path":["std","io"],"kind":"module"},"1:12440:1741":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"5:2368:8865":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:11075:35117":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:47548:8375":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:3697:13980":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"6:6823:11760":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:46920:12398":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"22:1505:8529":{"crate_id":22,"path":["ppv_lite86","x86_64","YesS4"],"kind":"struct"},"1:11753:13005":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"11:1564:20545":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"6:545:10981":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:11232:21564":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"22:180:2773":{"crate_id":22,"path":["ppv_lite86","types","BitOps32"],"kind":"trait"},"20:133:2476":{"crate_id":20,"path":["rand_core","RngCore"],"kind":"trait"},"20:109:25753":{"crate_id":20,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"2:10458:206":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"16:3126:20616":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:16714:10361":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"6:5682:11547":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:13218:12855":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:8366:9076":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:14560:9789":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"5:1616:8860":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"11:1914:10846":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:4902:11224":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:923:8858":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"21:546:25769":{"crate_id":21,"path":["zerocopy","TryFromBytes"],"kind":"trait"},"6:5349:11392":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"6:0:1013":{"crate_id":6,"path":["libc"],"kind":"module"},"5:4163:34582":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:23210:12056":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:10823:8683":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:961:8860":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"6:6813:11757":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"5:7577:12006":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"17:13909:9654":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:16209:10231":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:12409:21656":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"5:4208:8561":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:6487:12457":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:44189:12051":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:3493:143":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:32654:237":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"22:1445:9307":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","avx2","u32x4x2_avx2"],"kind":"struct"},"1:8804:2788":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:7009:12039":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"1:505:30056":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:9274:13755":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:45274:12331":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:9400:9082":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"21:3567:35334":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Shared"],"kind":"enum"},"17:11985:12680":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"17:16822:9658":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"2:42162:170":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"3:234:226":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:6419:11578":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:11623:12856":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:16341:10269":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:15418:10010":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:47082:12404":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"2:39985:213":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:9244:13754":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:11759:12564":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:15602:10069":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:13983:9665":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:4899:13687":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"16:8483:10744":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"5:2585:11997":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"7:32:20452":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:9499:12542":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:46731:12377":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"21:2569:8638":{"crate_id":21,"path":["zerocopy","byteorder","I64"],"kind":"struct"},"2:36689:10650":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"21:764:25779":{"crate_id":21,"path":["zerocopy","IntoByteSliceMut"],"kind":"trait"},"21:3601:8643":{"crate_id":21,"path":["zerocopy","wrappers","Unalign"],"kind":"struct"},"5:1605:8859":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:9359:9080":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:41237:8888":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:12840:9549":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"22:238:3035":{"crate_id":22,"path":["ppv_lite86","types","u128x1"],"kind":"trait"},"17:15431:10017":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:5125:13708":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:11831:8665":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:45059:131":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:4330:13682":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:13877:8887":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"2:42602:8561":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"16:6713:12745":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:31067:32203":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"16:8179:10694":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:4146:13659":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"16:2640:10396":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"11:854:12797":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"6:5658:11535":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"11:1601:12808":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:6744:9067":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"17:506:9405":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:10332:21543":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"6:532:10974":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:43627:9040":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"14:0:2862":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:9450:12955":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"16:7716:35109":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"6:7316:11809":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:11149:30052":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:2155:12018":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:21919:8396":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"6:5151:11315":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"18:581:8396":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:16385:10276":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:11163:8661":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:12149:9485":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"5:3694:182":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:41143:12187":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"6:8261:11968":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"5:7567:12837":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:6608:206":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:41628:12210":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"6:6716:11728":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"2:39968:13530":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:8697:12513":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:892:8561":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:3676:14194":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:46518:2813":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"5:6041:9162":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"5:7637:8413":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:44740:12301":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:40735:12167":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:6493:11617":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"6:6740:11733":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"17:14393:9763":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:40998:8682":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"17:12082:8672":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"13:229:8818":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:6822:12950":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"22:1520:8531":{"crate_id":22,"path":["ppv_lite86","x86_64","NoA1"],"kind":"struct"},"11:0:2860":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"17:11358:21561":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"16:5255:10447":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"11:1049:12802":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"6:5127:11313":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:40960:12182":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:46875:12397":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"6:7391:11855":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:46454:12357":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"18:531:9322":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:1083:10630":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:9428:12946":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"1:6893:12953":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"5:4997:217":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:44341:12272":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"5:7601:8413":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"6:6611:11684":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:3854:12647":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:15540:10058":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:47522:8373":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"19:0:1306":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"5:7703:13512":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:7498:29871":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"1:12035:12570":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"11:102:10838":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"16:3695:10423":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"6:5381:11405":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:45021:12322":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:14260:13516":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:40040:215":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:766:154":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:47533:8374":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"22:1515:8530":{"crate_id":22,"path":["ppv_lite86","x86_64","YesA1"],"kind":"struct"},"17:12952:9560":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:685:13494":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"22:183:3028":{"crate_id":22,"path":["ppv_lite86","types","RotateEachWord32"],"kind":"trait"},"9:53:8825":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:42594:8560":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:11757:21584":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"1:1115:12805":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:38620:14190":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:3684:13617":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:41133:134":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:34813:10649":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:10777:12921":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"17:15050:9884":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:6825:13749":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"6:7448:11862":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:1645:10846":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:11073:12940":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"17:5131:12648":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"17:10274:21541":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"6:7518:11906":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:3005:257":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"21:3229:8641":{"crate_id":21,"path":["zerocopy","byteorder","F32"],"kind":"struct"},"17:16019:10162":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:12913:12269":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"6:4914:11233":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:11448:12661":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:896:12729":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"1:2493:13586":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:44116:12049":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:12434:476":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:44852:12305":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:11003:9077":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"1:5473:203":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:10703:30039":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"6:5025:11285":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:7431:11857":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:7986:11951":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:47405:12441":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:39972:12160":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:12962:21681":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"5:3364:10847":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"11:772:8856":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"16:6502:20585":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:11787:12957":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"14:160:12789":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:8836:32998":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:10983:12464":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"1:2495:13587":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"18:563:8647":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:4940:13676":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:43674:9044":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:40130:12875":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"16:5757:10456":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:34082:14183":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:4938:13675":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:46468:12358":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"6:5593:11503":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:9440:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:44608:12175":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"16:7401:35104":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"22:250:3039":{"crate_id":22,"path":["ppv_lite86","types","u128x2"],"kind":"trait"},"2:41193:12194":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"6:5230:11342":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"6:5051:11298":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:47493:8370":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:2803:135":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"1:5192:13714":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:15946:10146":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"5:3456:12820":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"2:21973:32736":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"5:7086:13965":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:8013:13597":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"6:1632:11097":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:14773:9841":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:12406:13498":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"16:6042:10413":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:11734:12858":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"16:6625:10518":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:33881:13781":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:10390:12905":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"2:2989:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"16:5348:10450":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:8115:12964":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:1928:12906":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"1:12461:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:3566:12540":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:11300:8899":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"2:10409:144":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"17:15024:9882":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:8627:12511":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:40986:12183":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"6:5676:11544":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:1930:12907":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"1:12009:9085":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:7753:14010":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:10729:8681":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"5:4133:9162":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"20:195:9317":{"crate_id":20,"path":["rand_core","error","ErrorCode"],"kind":"struct"},"16:6408:10486":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"11:1907:10845":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:4837:8511":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"11:785:8858":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:15701:10080":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"5:3309:35059":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"6:7414:11856":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"13:110:8541":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"16:6098:12730":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"22:210:2778":{"crate_id":22,"path":["ppv_lite86","types","Vec4Ext"],"kind":"trait"},"2:8288:14167":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:40060:214":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:9308:9061":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"6:8249:11966":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:8675:11837":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:15531:10054":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:15981:10154":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:9354:9064":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"6:6882:11772":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"15:327:8814":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:1589:11064":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:46497:12367":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:10994:12552":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"6:6381:11551":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:4497:110":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:44208:12052":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"6:7487:11880":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"10:0:2859":{"crate_id":10,"path":["adler"],"kind":"module"},"5:7734:12008":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:1621:8413":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:22005:13597":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"5:3931:12820":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:9481:12541":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"6:5057:11300":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:7333:25889":{"crate_id":1,"path":["std","sys","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"18:765:25744":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"16:2590:10394":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:42516:13722":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"17:10663:8679":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"6:4842:11188":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:14963:9867":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:41123:12185":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"9:390:20466":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"6:7604:11945":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:13854:8705":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:3290:13780":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:44037:12881":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"16:7358:8796":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:10564:8676":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:22843:14203":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"2:44590:12176":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:3125:12844":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"1:8892:8560":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"17:11016:12654":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:6443:11594":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"6:1690:11132":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:7424:21482":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:16171:10222":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:12191:9489":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"17:14902:9856":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:11892:12927":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:30773:13642":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:31441:8396":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:13491:9594":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"6:1569:11050":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:41036:12876":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:13515:21553":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"16:8028:8803":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:22923:13597":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"17:12163:9486":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"}},"external_crates":{"20":{"name":"rand_core","html_root_url":"https://rust-random.github.io/rand/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"ppv_lite86","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"zerocopy","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":30}