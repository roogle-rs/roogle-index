{"root":"0:0:2450","crate_version":"0.9.0-alpha.2","includes_private":false,"index":{"0:209:2440":{"id":"0:209:2440","crate_id":0,"name":"ChaCha12Core","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"public","docs":"ChaCha with 12 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32944:249-0:209:2440","a:2:3322:261-0:209:2440","a:2:3357:8644-0:209:2440","a:2:33002:3107-0:209:2440","a:2:42829:13645-0:209:2440","a:2:42830:13863-0:209:2440","b:2:2790-0:209:2440","b:2:2793-0:209:2440","b:2:2822-0:209:2440","b:2:3095-0:209:2440","b:2:3099-0:209:2440","b:2:3105-0:209:2440","b:2:3110-0:209:2440","b:2:3967-0:209:2440","b:5:782-0:209:2440","b:24:274-0:209:2440","0:211","0:213","0:214","0:216","0:170","0:172","0:176","0:181","0:198"]}}},"b:2:2790-0:133:2442":{"id":"b:2:2790-0:133:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:3065"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3105-0:133:2442":{"id":"b:2:3105-0:133:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:145:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:123:860":{"id":"0:123:860","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148":{"id":"0:148","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryCryptoRng","id":"20:156:3118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42829:13645-0:294:2445":{"id":"a:2:42829:13645-0:294:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:13645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:304":{"id":"0:304","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["unwrap_err","read_adapter"],"trait":{"name":"TryRngCore","id":"20:149:3117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:305:150","0:306:3280","0:307:3281","0:308:3282"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:782-0:294:2445":{"id":"b:5:782-0:294:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:8623","5:785:8624","5:786:8625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5725:34769":{"id":"5:5725:34769","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13874:26346":{"id":"2:13874:26346","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:782-0:218:2441":{"id":"b:5:782-0:218:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:8623","5:785:8624","5:786:8625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:782-0:209:2440":{"id":"b:5:782-0:209:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:8623","5:785:8624","5:786:8625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2790-0:218:2441":{"id":"b:2:2790-0:218:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:3065"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:251:2597":{"id":"0:251:2597","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:58:2574","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183:2600":{"id":"0:183:2600","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:136:496":{"id":"0:136:496","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:89-0:285:2444":{"id":"0:89-0:285:2444","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[97,58],"end":[97,69]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Core","name":"ChaCha8Core","id":"0:285:2444","glob":false}}},"5:785:8624":{"id":"5:785:8624","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10655:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:95:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2792:3065":{"id":"2:2792:3065","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:232:3282":{"id":"0:232:3282","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43001:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:149:3117","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2790-0:142:2443":{"id":"b:2:2790-0:142:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:3065"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42830:13863-0:218:2441":{"id":"a:2:42830:13863-0:218:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:13863","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:114":{"id":"0:114","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:115:2640","0:116:2656","0:117:2669","0:118:2674","0:119:2677"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2822-0:209:2440":{"id":"b:2:2822-0:209:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2824:26042"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2790-0:209:2440":{"id":"b:2:2790-0:209:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:3065"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13811:26613":{"id":"2:13811:26613","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"Returns an iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:13452:14319","`DoubleEndedIterator`":"2:8393:134","prim@char":"1:12642:492","str::split_whitespace":"2:13792:31889","str::rsplit":"2:13815:26617"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:44733:12195","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42830:13863-0:294:2445":{"id":"a:2:42830:13863-0:294:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:13863","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13873:26350":{"id":"2:13873:26350","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3357:8644-0:142:2443":{"id":"a:2:3357:8644-0:142:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:8644","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13813:26615":{"id":"2:13813:26615","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"Returns an iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nDiffers from the iterator produced by `split` in that `split_inclusive`\nleaves the matched part as the terminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:14319"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:13239:12199","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:274-0:294:2445":{"id":"b:24:274-0:294:2445","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.20/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"24:267:2875","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"24:271:3147","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["24:277:26041"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:288:496":{"id":"0:288:496","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:2600":{"id":"0:253:2600","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"b:24:274-0:142:2443":{"id":"b:24:274-0:142:2443","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.20/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"24:267:2875","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"24:271:3147","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["24:277:26041"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:211":{"id":"0:211","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:212:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:88-0:142:2443":{"id":"0:88-0:142:2443","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[97,45],"end":[97,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Rng","name":"ChaCha20Rng","id":"0:142:2443","glob":false}}},"2:13882:34055":{"id":"2:13882:34055","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Returns an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5066:34055"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:45050:12329","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2793-0:133:2442":{"id":"b:2:2793-0:133:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2795:26034"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:271:2677":{"id":"0:271:2677","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176":{"id":"0:176","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["try_from_rng","from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:164:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:177:2600","0:179:2601"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2822-0:218:2441":{"id":"b:2:2822-0:218:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2824:26042"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3967-0:294:2445":{"id":"b:2:3967-0:294:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:85-0:209:2440":{"id":"0:85-0:209:2440","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[97,4],"end":[97,16]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Core","name":"ChaCha12Core","id":"0:209:2440","glob":false}}},"0:249:185":{"id":"0:249:185","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"2:13877:26529":{"id":"2:13877:26529","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1148:39173"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:294:2445":{"id":"b:2:3099-0:294:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:265:2633":{"id":"0:265:2633","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5712:34766":{"id":"5:5712:34766","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:299:3108","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:299:3108","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:299:830":{"id":"0:299:830","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:137":{"id":"0:137","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32946:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:119:2677":{"id":"0:119:2677","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:308:3282":{"id":"0:308:3282","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43001:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:149:3117","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5715:34767":{"id":"5:5715:34767","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42829:13645-0:209:2440":{"id":"a:2:42829:13645-0:209:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:13645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:213":{"id":"0:213","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32946:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3969:1871":{"id":"2:3969:1871","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:40445:12319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3110-0:209:2440":{"id":"b:2:3110-0:209:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2795:26034":{"id":"2:2795:26034","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3357:8644-0:209:2440":{"id":"a:2:3357:8644-0:209:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:8644","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:138":{"id":"0:138","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:139:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5726:34770":{"id":"5:5726:34770","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:299:3108","`String`":"5:7774:257"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:299:3108","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:181":{"id":"0:181","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:62:2575","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:229:150":{"id":"0:229:150","crate_id":0,"name":"Error","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32868:3279","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:199:860":{"id":"0:199:860","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:291:725":{"id":"0:291:725","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:246":{"id":"0:246","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10655:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:247:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2822-0:294:2445":{"id":"b:2:2822-0:294:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2824:26042"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5728:26348":{"id":"5:5728:26348","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13874:26346"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3105-0:142:2443":{"id":"b:2:3105-0:142:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:121":{"id":"0:121","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:148:2576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:188:2632":{"id":"0:188:2632","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3113:150":{"id":"2:3113:150","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32868:3279","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:33002:3107-0:133:2442":{"id":"a:2:33002:3107-0:133:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:187:2631":{"id":"0:187:2631","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3095-0:294:2445":{"id":"b:2:3095-0:294:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3098:2644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13789:12445":{"id":"2:13789:12445","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12642:492"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:44703:12423","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:124":{"id":"0:124","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:125:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:172":{"id":"0:172","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:58:2574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:173:185","0:174:2596","0:175:2597"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:221:496":{"id":"0:221:496","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13792:31889":{"id":"2:13792:31889","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13793:31890"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:45007:12442","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32944:249-0:133:2442":{"id":"a:2:32944:249-0:133:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3967-0:218:2441":{"id":"b:2:3967-0:218:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:103:2601":{"id":"0:103:2601","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:164:2578","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:201:725":{"id":"0:201:725","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3357:8644-0:133:2442":{"id":"a:2:3357:8644-0:133:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:8644","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:306:3280":{"id":"0:306:3280","crate_id":0,"name":"try_next_u32","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43001:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:149:3117","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257":{"id":"0:257","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:62:2575","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13761":{"id":"2:13761","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13762:1027","2:13763:8561","2:13764:34031","2:13765:34032","2:13767:34033","2:13770:26521","2:13771:34034","2:13772:352","2:13773:26584","2:13774:26580","2:13776:26581","2:13778:26582","2:13780:26583","2:13782:34035","2:13783:34036","2:13784:26607","2:13785:26608","2:13786:26611","2:13787:26612","2:13789:12445","2:13790:12456","2:13791:2634","2:13792:31889","2:13793:31890","2:13794:30858","2:13795:34037","2:13796:31891","2:13797:26625","2:13799:26626","2:13801:26627","2:13804:8603","2:13807:8560","2:13811:26613","2:13813:26615","2:13815:26617","2:13818:34038","2:13820:34039","2:13823:26619","2:13825:26621","2:13828:26623","2:13830:26624","2:13833:3077","2:13835:34040","2:13838:34041","2:13840:34042","2:13843:34043","2:13845:34044","2:13847:34045","2:13849:34046","2:13850:34047","2:13851:34048","2:13854:34049","2:13856:26098","2:13858:26628","2:13861:34050","2:13864:34051","2:13866:34052","2:13869:34053","2:13871:26349","2:13872:26525","2:13873:26350","2:13874:26346","2:13875:26345","2:13876:26528","2:13877:26529","2:13878:26530","2:13879:34054","2:13881:13638","2:13882:34055","2:13883:27809"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3322:261-0:142:2443":{"id":"a:2:3322:261-0:142:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:154:3280":{"id":"0:154:3280","crate_id":0,"name":"try_next_u32","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43001:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:149:3117","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:209:2440":{"id":"b:2:3099-0:209:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13765:34032":{"id":"2:13765:34032","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13838:34041":{"id":"2:13838:34041","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"Returns an iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13452:14319","`DoubleEndedIterator`":"2:8393:134","prim@char":"1:12642:492","str::rmatch_indices":"2:13840:34042"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44883:12435","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:192:2656":{"id":"0:192:2656","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111:2631":{"id":"0:111:2631","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:274-0:133:2442":{"id":"b:24:274-0:133:2442","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.20/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"24:267:2875","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"24:271:3147","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["24:277:26041"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:170":{"id":"0:170","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10655:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:171:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42829:13645-0:218:2441":{"id":"a:2:42829:13645-0:218:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:13645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:133:2442":{"id":"0:133:2442","crate_id":0,"name":"ChaCha20Core","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32944:249-0:133:2442","a:2:3322:261-0:133:2442","a:2:3357:8644-0:133:2442","a:2:33002:3107-0:133:2442","a:2:42829:13645-0:133:2442","a:2:42830:13863-0:133:2442","b:2:2790-0:133:2442","b:2:2793-0:133:2442","b:2:2822-0:133:2442","b:2:3095-0:133:2442","b:2:3099-0:133:2442","b:2:3105-0:133:2442","b:2:3110-0:133:2442","b:2:3967-0:133:2442","b:5:782-0:133:2442","b:24:274-0:133:2442","0:135","0:137","0:138","0:140","0:94","0:96","0:100","0:105","0:122"]}}},"0:156:3282":{"id":"0:156:3282","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43001:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:149:3117","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13881:13638":{"id":"2:13881:13638","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Returns an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5069:13638"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:45041:12321","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"24:277:26041":{"id":"24:277:26041","crate_id":24,"name":"vzip","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.20/src/types.rs","begin":[226,4],"end":[226,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"V"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3095-0:142:2443":{"id":"b:2:3095-0:142:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3098:2644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"20:144:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:263:2631","0:264:2632","0:265:2633"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:24:274-0:285:2444":{"id":"b:24:274-0:285:2444","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.20/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"24:267:2875","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"24:271:3147","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["24:277:26041"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:290":{"id":"0:290","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:291:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13786:26611":{"id":"2:13786:26611","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divides one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13787:26612"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13830:26624":{"id":"2:13830:26624","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:14321","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2790-0:294:2445":{"id":"b:2:2790-0:294:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:3065"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:116:2656":{"id":"0:116:2656","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42829:13645-0:142:2443":{"id":"a:2:42829:13645-0:142:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:13645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2793-0:142:2443":{"id":"b:2:2793-0:142:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2795:26034"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:199:860"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"20:144:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:187:2631","0:188:2632","0:189:2633"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:139:725":{"id":"0:139:725","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["try_from_rng","from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:164:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:107:2600","0:109:2601"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32944:249-0:285:2444":{"id":"a:2:32944:249-0:285:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:268:2656":{"id":"0:268:2656","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:87-0:133:2442":{"id":"0:87-0:133:2442","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[97,31],"end":[97,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Core","name":"ChaCha20Core","id":"0:133:2442","glob":false}}},"b:2:3110-0:142:2443":{"id":"b:2:3110-0:142:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:24:274-0:209:2440":{"id":"b:24:274-0:209:2440","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.20/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"24:267:2875","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"24:271:3147","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["24:277:26041"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:215:725":{"id":"0:215:725","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13771:34034":{"id":"2:13771:34034","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:191:2640":{"id":"0:191:2640","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:33002:3107-0:142:2443":{"id":"a:2:33002:3107-0:142:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3322:261-0:209:2440":{"id":"a:2:3322:261-0:209:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:148:2576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:289":{"id":"0:289","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32946:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13869:34053":{"id":"2:13869:34053","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13411:149","`FromStr`":"2:13410:13720"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43001:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:13410:13720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13410:13720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13879:34054":{"id":"2:13879:34054","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Returns an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5068:34054"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:45032:12330","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:784:8623":{"id":"5:784:8623","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:292":{"id":"0:292","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:259:2600":{"id":"0:259:2600","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"b:2:2790-0:285:2444":{"id":"b:2:2790-0:285:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:3065"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13795:34037":{"id":"2:13795:34037","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"Returns an iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44997:12441","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261:2601":{"id":"0:261:2601","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:164:2578","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:86-0:218:2441":{"id":"0:86-0:218:2441","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[97,18],"end":[97,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Rng","name":"ChaCha12Rng","id":"0:218:2441","glob":false}}},"2:3098:2644":{"id":"2:3098:2644","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3072:157"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13793:31890":{"id":"2:13793:31890","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13792:31889"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:45016:12443","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115:2640":{"id":"0:115:2640","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13833:3077":{"id":"2:13833:3077","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"Returns an iterator over the disjoint matches of a pattern within the\ngiven string slice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:13452:14319","`DoubleEndedIterator`":"2:8393:134","prim@char":"1:12642:492","str::rmatches":"2:13835:34040"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44937:12438","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:185:2601":{"id":"0:185:2601","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:164:2578","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3105-0:285:2444":{"id":"b:2:3105-0:285:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryCryptoRng","id":"20:156:3118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3108:150":{"id":"2:3108:150","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"2:13843:34043":{"id":"2:13843:34043","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:288:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13849:34046":{"id":"2:13849:34046","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["unwrap_err","read_adapter"],"trait":{"name":"TryRngCore","id":"20:149:3117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:150","0:230:3280","0:231:3281","0:232:3282"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:224":{"id":"0:224","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryCryptoRng","id":"20:156:3118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13866:34052":{"id":"2:13866:34052","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:14319"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:14321","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13883:27809":{"id":"2:13883:27809","crate_id":2,"name":"substr_range","span":null,"visibility":"public","docs":"Returns the range that a substring points to.\n\nReturns `None` if `substr` does not point within `self`.\n\nUnlike [`str::find`], **this does not search through the string**.\nInstead, it uses pointer arithmetic to find where in the string\n`substr` is derived from.\n\nThis is useful for extending [`str::split`] and similar methods.\n\nNote that this method may return false positives (typically either\n`Some(0..0)` or `Some(self.len()..self.len())`) if `substr` is a\nzero-length `str` that points at the beginning or end of another,\nindependent, `str`.\n\n# Examples\n```\n#![feature(substr_range)]\n\nlet data = \"a, b, b, a\";\nlet mut iter = data.split(\", \").map(|s| data.substr_range(s).unwrap());\n\nassert_eq!(iter.next(), Some(0..1));\nassert_eq!(iter.next(), Some(3..4));\nassert_eq!(iter.next(), Some(6..7));\nassert_eq!(iter.next(), Some(9..10));\n```","links":{"`str::split`":"2:13811:26613","`str::find`":"2:13804:8603"},"attrs":["#[must_use]","#[unstable(feature = \"substr_range\", issue = \"126769\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["substr",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Range","id":"2:40308:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:113:2633":{"id":"0:113:2633","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13856:26098":{"id":"2:13856:26098","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:14319"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:95:830":{"id":"0:95:830","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13770:26521":{"id":"2:13770:26521","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12975:14322"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:250:2596":{"id":"0:250:2596","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:18:2585","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"2:13796:31891":{"id":"2:13796:31891","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:45025:12444","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:223:830":{"id":"0:223:830","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13801:26627":{"id":"2:13801:26627","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:14319"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:14321","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13847:34045":{"id":"2:13847:34045","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3110-0:133:2442":{"id":"b:2:3110-0:133:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13815:26617":{"id":"2:13815:26617","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"Returns an iterator over substrings of the given string slice, separated\nby characters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:13452:14319","`DoubleEndedIterator`":"2:8393:134","prim@char":"1:12642:492","str::split":"2:13811:26613"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44751:12200","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:14321","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3967-0:142:2443":{"id":"b:2:3967-0:142:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:142:2443":{"id":"0:142:2443","crate_id":0,"name":"ChaCha20Rng","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:186:2573","`RngCore`":"20:144:2577"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:114","a:2:32944:249-0:142:2443","a:2:3322:261-0:142:2443","a:2:3357:8644-0:142:2443","a:2:33002:3107-0:142:2443","a:2:42829:13645-0:142:2443","a:2:42830:13863-0:142:2443","b:2:2790-0:142:2443","b:2:2793-0:142:2443","b:2:2822-0:142:2443","b:2:3095-0:142:2443","b:2:3099-0:142:2443","b:2:3105-0:142:2443","b:2:3110-0:142:2443","b:2:3967-0:142:2443","b:5:782-0:142:2443","b:24:274-0:142:2443","0:144","0:146","0:106","0:110","0:121","0:152","0:148","0:122","0:124","0:126"]}}},"b:2:3095-0:133:2442":{"id":"b:2:3095-0:133:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3098:2644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:179:2601":{"id":"0:179:2601","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:164:2578","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2793-0:285:2444":{"id":"b:2:2793-0:285:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2795:26034"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:24:274-0:218:2441":{"id":"b:24:274-0:218:2441","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.20/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"24:267:2875","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"24:271:3147","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["24:277:26041"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:305:150":{"id":"0:305:150","crate_id":0,"name":"Error","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32868:3279","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:214":{"id":"0:214","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:215:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:269:2669":{"id":"0:269:2669","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42830:13863-0:209:2440":{"id":"a:2:42830:13863-0:209:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:13863","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13858:26628":{"id":"2:13858:26628","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:14319"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:14321","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:2677":{"id":"0:195:2677","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5711":{"id":"5:5711","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5712:34766","5:5713:14244","5:5715:34767","5:5717:34768","5:5725:34769","5:5726:34770","5:5727:13775","5:5728:26348","5:5729:26347"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:135":{"id":"0:135","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:136:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:173:185":{"id":"0:173:185","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"b:2:3967-0:209:2440":{"id":"b:2:3967-0:209:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3099-0:285:2444":{"id":"b:2:3099-0:285:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13864:34051":{"id":"2:13864:34051","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:14319"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:189:2633":{"id":"0:189:2633","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:145:496":{"id":"0:145:496","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:33002:3107-0:294:2445":{"id":"a:2:33002:3107-0:294:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32944:249-0:142:2443":{"id":"a:2:32944:249-0:142:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:152":{"id":"0:152","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["unwrap_err","read_adapter"],"trait":{"name":"TryRngCore","id":"20:149:3117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:153:150","0:154:3280","0:155:3281","0:156:3282"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13823:26619":{"id":"2:13823:26619","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"Returns an iterator over substrings of the given string slice, separated\nby a pattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:14319","str::rsplitn":"2:13825:26621"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44837:12432","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:118:2674":{"id":"0:118:2674","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3967-0:133:2442":{"id":"b:2:3967-0:133:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:140":{"id":"0:140","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:109:2601":{"id":"0:109:2601","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:164:2578","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:96":{"id":"0:96","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:58:2574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:97:185","0:98:2596","0:99:2597"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2824:26042":{"id":"2:2824:26042","crate_id":2,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:33002:3107-0:218:2441":{"id":"a:2:33002:3107-0:218:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:782-0:142:2443":{"id":"b:5:782-0:142:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:8623","5:785:8624","5:786:8625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:285:2444":{"id":"0:285:2444","crate_id":0,"name":"ChaCha8Core","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"public","docs":"ChaCha with 8 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32944:249-0:285:2444","a:2:3322:261-0:285:2444","a:2:3357:8644-0:285:2444","a:2:33002:3107-0:285:2444","a:2:42829:13645-0:285:2444","a:2:42830:13863-0:285:2444","b:2:2790-0:285:2444","b:2:2793-0:285:2444","b:2:2822-0:285:2444","b:2:3095-0:285:2444","b:2:3099-0:285:2444","b:2:3105-0:285:2444","b:2:3110-0:285:2444","b:2:3967-0:285:2444","b:5:782-0:285:2444","b:24:274-0:285:2444","0:287","0:289","0:290","0:292","0:246","0:248","0:252","0:257","0:274"]}}},"b:2:3105-0:294:2445":{"id":"b:2:3105-0:294:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:782-0:133:2442":{"id":"b:5:782-0:133:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:8623","5:785:8624","5:786:8625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:264:2632":{"id":"0:264:2632","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13776:26581":{"id":"2:13776:26581","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42735:203"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11576:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11576:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13780:26583":{"id":"2:13780:26583","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11576:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11576:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:263:2631":{"id":"0:263:2631","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:92:2449":{"id":"0:92:2449","crate_id":0,"name":"ChaChaCore","span":{"filename":"src/lib.rs","begin":[103,0],"end":[103,35]},"visibility":"public","docs":"ChaCha with 20 rounds, low-level interface","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"2:13787:26612":{"id":"2:13787:26612","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divides one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13786:26611"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13799:26626":{"id":"2:13799:26626","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:14319"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13825:26621":{"id":"2:13825:26621","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"Returns an iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning at\nmost `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12642:492","str::splitn":"2:13823:26619","self::pattern":"2:13452:14319"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44855:12433","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:14321","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:298":{"id":"0:298","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10655:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:299:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13835:34040":{"id":"2:13835:34040","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"Returns an iterator over the disjoint matches of a pattern within this\nstring slice, yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:13452:14319","`DoubleEndedIterator`":"2:8393:134","prim@char":"1:12642:492","str::matches":"2:13833:3077"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44955:12439","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:14321","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13845:34044":{"id":"2:13845:34044","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13767:34033":{"id":"2:13767:34033","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13765:34032"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:273":{"id":"0:273","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:148:2576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32944:249-0:294:2445":{"id":"a:2:32944:249-0:294:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:146":{"id":"0:146","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10655:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:147:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:107:2600":{"id":"0:107:2600","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"2:13778:26582":{"id":"2:13778:26582","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11576:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11576:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13818:34038":{"id":"2:13818:34038","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"Returns an iterator over substrings of the given string slice, separated\nby characters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:13452:14319","str::split":"2:13811:26613","prim@char":"1:12642:492","`DoubleEndedIterator`":"2:8393:134","str::rsplit_terminator":"2:13820:34039"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44783:12429","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:133:2442":{"id":"b:2:3099-0:133:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13797:26625":{"id":"2:13797:26625","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:14319"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3322:261-0:294:2445":{"id":"a:2:3322:261-0:294:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13861:34050":{"id":"2:13861:34050","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:14319"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:14321","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:90-0:294:2445":{"id":"0:90-0:294:2445","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[97,71],"end":[97,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Rng","name":"ChaCha8Rng","id":"0:294:2445","glob":false}}},"0:98:2596":{"id":"0:98:2596","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:18:2585","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"0:171:830":{"id":"0:171:830","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3095-0:218:2441":{"id":"b:2:3095-0:218:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3098:2644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3114:1856":{"id":"2:3114:1856","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:43001:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13794:30858":{"id":"2:13794:30858","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"Returns an iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44987:12440","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:174:2596":{"id":"0:174:2596","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:18:2585","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"b:2:3099-0:142:2443":{"id":"b:2:3099-0:142:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:99:2597":{"id":"0:99:2597","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:58:2574","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:175:2597":{"id":"0:175:2597","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:58:2574","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3110-0:218:2441":{"id":"b:2:3110-0:218:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:231:3281":{"id":"0:231:3281","crate_id":0,"name":"try_next_u64","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43001:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:149:3117","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13772:352":{"id":"2:13772:352","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13773:26584","`u8`":"1:12661:1902"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32944:249-0:209:2440":{"id":"a:2:32944:249-0:209:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42829:13645-0:285:2444":{"id":"a:2:42829:13645-0:285:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:13645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:230:3280":{"id":"0:230:3280","crate_id":0,"name":"try_next_u32","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43001:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:149:3117","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:248":{"id":"0:248","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:58:2574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:249:185","0:250:2596","0:251:2597"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:782-0:285:2444":{"id":"b:5:782-0:285:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:8623","5:785:8624","5:786:8625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:252":{"id":"0:252","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["try_from_rng","from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:164:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:253:2600","0:255:2601"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:270:2674":{"id":"0:270:2674","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:276":{"id":"0:276","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:277:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3357:8644-0:294:2445":{"id":"a:2:3357:8644-0:294:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:8644","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2793-0:294:2445":{"id":"b:2:2793-0:294:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2795:26034"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13807:8560":{"id":"2:13807:8560","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42735:203","prim@char":"1:12642:492","self::pattern":"2:13452:14319"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:14321","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13773:26584":{"id":"2:13773:26584","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12661:1902"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13784:26607":{"id":"2:13784:26607","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divides one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13786:26611","str::split_at_mut":"2:13785:26608"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13851:34048":{"id":"2:13851:34048","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:14319"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13481:14320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3-20:0:2437":{"id":"0:3-20:0:2437","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[91,0],"end":[91,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"rand_core","name":"rand_core","id":"20:0:2437","glob":false}}},"a:2:3322:261-0:133:2442":{"id":"a:2:3322:261-0:133:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:18:2585":{"id":"0:18:2585","crate_id":0,"name":"Array64","span":{"filename":"src/chacha.rs","begin":[30,0],"end":[30,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"0:122":{"id":"0:122","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:123:860"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13828:26623":{"id":"2:13828:26623","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:212:496":{"id":"0:212:496","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13850:34047":{"id":"2:13850:34047","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:275:860":{"id":"0:275:860","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2822-0:285:2444":{"id":"b:2:2822-0:285:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2824:26042"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5727:13775":{"id":"5:5727:13775","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:278":{"id":"0:278","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:258":{"id":"0:258","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["try_from_rng","from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:164:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:259:2600","0:261:2601"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:255:2601":{"id":"0:255:2601","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:164:2578","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274":{"id":"0:274","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:275:860"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:247:830":{"id":"0:247:830","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:2640","0:268:2656","0:269:2669","0:270:2674","0:271:2677"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5713:14244":{"id":"5:5713:14244","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13763:8561":{"id":"2:13763:8561","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2822-0:133:2442":{"id":"b:2:2822-0:133:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2824:26042"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42830:13863-0:285:2444":{"id":"a:2:42830:13863-0:285:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:13863","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:194:2674":{"id":"0:194:2674","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110":{"id":"0:110","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"20:144:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:111:2631","0:112:2632","0:113:2633"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2822-0:142:2443":{"id":"b:2:2822-0:142:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2824:26042"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:125:725":{"id":"0:125:725","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2793-0:218:2441":{"id":"b:2:2793-0:218:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2795:26034"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:182":{"id":"0:182","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["try_from_rng","from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:164:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:183:2600","0:185:2601"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42829:13645-0:133:2442":{"id":"a:2:42829:13645-0:133:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:13645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:117:2669":{"id":"0:117:2669","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:307:3281":{"id":"0:307:3281","crate_id":0,"name":"try_next_u64","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43001:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:149:3117","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3322:261-0:218:2441":{"id":"a:2:3322:261-0:218:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:42-24:278:2870":{"id":"0:42-24:278:2870","crate_id":0,"name":null,"span":{"filename":"src/guts.rs","begin":[14,0],"end":[14,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"ppv_lite86::Machine","name":"Machine","id":"24:278:2870","glob":false}}},"b:2:3105-0:218:2441":{"id":"b:2:3105-0:218:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13764:34031":{"id":"2:13764:34031","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:155:3281":{"id":"0:155:3281","crate_id":0,"name":"try_next_u64","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43001:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:149:3117","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13783:34036":{"id":"2:13783:34036","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12648:1771","crate::ops::IndexMut":"2:3628:13677","str::slice_unchecked":"2:13782:34035"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:91:2447":{"id":"0:91:2447","crate_id":0,"name":"ChaChaRng","span":{"filename":"src/lib.rs","begin":[101,0],"end":[101,33]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"a:2:3322:261-0:285:2444":{"id":"a:2:3322:261-0:285:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13871:26349":{"id":"2:13871:26349","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:153:150":{"id":"0:153:150","crate_id":0,"name":"Error","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32868:3279","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:13876:26528":{"id":"2:13876:26528","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1148:39173"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42830:13863-0:133:2442":{"id":"a:2:42830:13863-0:133:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:13863","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:218:2441":{"id":"0:218:2441","crate_id":0,"name":"ChaCha12Rng","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:186:2573","`RngCore`":"20:144:2577"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:190","a:2:32944:249-0:218:2441","a:2:3322:261-0:218:2441","a:2:3357:8644-0:218:2441","a:2:33002:3107-0:218:2441","a:2:42829:13645-0:218:2441","a:2:42830:13863-0:218:2441","b:2:2790-0:218:2441","b:2:2793-0:218:2441","b:2:2822-0:218:2441","b:2:3095-0:218:2441","b:2:3099-0:218:2441","b:2:3105-0:218:2441","b:2:3110-0:218:2441","b:2:3967-0:218:2441","b:5:782-0:218:2441","b:24:274-0:218:2441","0:220","0:222","0:182","0:186","0:197","0:228","0:224","0:198","0:200","0:202"]}}},"2:13872:26525":{"id":"2:13872:26525","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40629:14082","Self::is_ascii":"2:13871:26349"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40629:14082","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5717:34768":{"id":"5:5717:34768","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:100":{"id":"0:100","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["try_from_rng","from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:164:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:101:2600","0:103:2601"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42830:13863-0:142:2443":{"id":"a:2:42830:13863-0:142:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:13863","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:177:2600":{"id":"0:177:2600","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:294:2445":{"id":"0:294:2445","crate_id":0,"name":"ChaCha8Rng","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:186:2573","`RngCore`":"20:144:2577"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:266","a:2:32944:249-0:294:2445","a:2:3322:261-0:294:2445","a:2:3357:8644-0:294:2445","a:2:33002:3107-0:294:2445","a:2:42829:13645-0:294:2445","a:2:42830:13863-0:294:2445","b:2:2790-0:294:2445","b:2:2793-0:294:2445","b:2:2822-0:294:2445","b:2:3095-0:294:2445","b:2:3099-0:294:2445","b:2:3105-0:294:2445","b:2:3110-0:294:2445","b:2:3967-0:294:2445","b:5:782-0:294:2445","b:24:274-0:294:2445","0:296","0:298","0:258","0:262","0:273","0:304","0:300","0:274","0:276","0:278"]}}},"2:13878:26530":{"id":"2:13878:26530","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1148:39173"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13782:34035":{"id":"2:13782:34035","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12648:1771","str::slice_mut_unchecked":"2:13783:34036","crate::ops::Index":"2:40276:13676"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:147:830":{"id":"0:147:830","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3110-0:294:2445":{"id":"b:2:3110-0:294:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3101:860":{"id":"2:3101:860","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:101:2600":{"id":"0:101:2600","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:112:2632":{"id":"0:112:2632","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:218:2441":{"id":"b:2:3099-0:218:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:0:2450":{"id":"0:0:2450","crate_id":0,"name":"rand_chacha","span":{"filename":"src/lib.rs","begin":[9,0],"end":[103,35]},"visibility":"public","docs":"The ChaCha random number generators.\n\nThese are native Rust implementations of RNGs derived from the\n[ChaCha stream ciphers] by D J Bernstein.\n\n## Generators\n\nThis crate provides 8-, 12- and 20-round variants of generators via a \"core\"\nimplementation (of [`BlockRngCore`]), each with an associated \"RNG\" type\n(implementing [`RngCore`]).\n\nThese generators are all deterministic and portable (see [Reproducibility]\nin the book), with testing against reference vectors.\n\n## Cryptographic (secure) usage\n\nWhere secure unpredictable generators are required, it is suggested to use\n[`ChaCha12Rng`] or [`ChaCha20Rng`] and to seed via\n[`SeedableRng::from_os_rng`].\n\nSee also the [Security] chapter in the rand book. The crate is provided\n\"as is\", without any form of guarantee, and without a security audit.\n\n## Seeding (construction)\n\nGenerators implement the [`SeedableRng`] trait. Any method may be used,\nbut note that `seed_from_u64` is not suitable for usage where security is\nimportant. Some suggestions:\n\n1.  With a fresh seed, **direct from the OS** (implies a syscall):\n    ```\n    # use {rand_core::SeedableRng, rand_chacha::ChaCha12Rng};\n    let rng = ChaCha12Rng::from_os_rng();\n    # let _: ChaCha12Rng = rng;\n    ```\n2.  **From a master generator.** This could be [`rand::thread_rng`]\n    (effectively a fresh seed without the need for a syscall on each usage)\n    or a deterministic generator such as [`ChaCha20Rng`].\n    Beware that should a weak master generator be used, correlations may be\n    detectable between the outputs of its child generators.\n\nSee also [Seeding RNGs] in the book.\n\n## Generation\n\nGenerators implement [`RngCore`], whose methods may be used directly to\ngenerate unbounded integer or byte values.\n```\nuse rand_core::{SeedableRng, RngCore};\nuse rand_chacha::ChaCha12Rng;\n\nlet mut rng = ChaCha12Rng::from_seed(Default::default());\nlet x = rng.next_u64();\nassert_eq!(x, 0x53f955076a9af49b);\n```\n\nIt is often more convenient to use the [`rand::Rng`] trait, which provides\nfurther functionality. See also the [Random Values] chapter in the book.\n\n[ChaCha stream ciphers]: https://cr.yp.to/chacha.html\n[Reproducibility]: https://rust-random.github.io/book/crate-reprod.html\n[Seeding RNGs]: https://rust-random.github.io/book/guide-seeding.html\n[Security]: https://rust-random.github.io/book/guide-rngs.html#security\n[Random Values]: https://rust-random.github.io/book/guide-values.html\n[`BlockRngCore`]: rand_core::block::BlockRngCore\n[`RngCore`]: rand_core::RngCore\n[`SeedableRng`]: rand_core::SeedableRng\n[`SeedableRng::from_os_rng`]: rand_core::SeedableRng::from_os_rng\n[`rand::thread_rng`]: https://docs.rs/rand/latest/rand/fn.thread_rng.html\n[`rand::Rng`]: https://docs.rs/rand/latest/rand/trait.Rng.html","links":{"`ChaCha12Rng`":"0:218:2441","rand_core::RngCore":"20:144:2577","rand_core::block::BlockRngCore":"20:58:2574","rand_core::SeedableRng":"20:164:2578","`ChaCha20Rng`":"0:142:2443"},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\", html_favicon_url\n= \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://rust-random.github.io/rand/\")]","#![forbid(unsafe_code)]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:3-20:0:2437","0:85-0:209:2440","0:86-0:218:2441","0:87-0:133:2442","0:88-0:142:2443","0:89-0:285:2444","0:90-0:294:2445","0:91:2447","0:92:2449"],"is_stripped":false}}},"5:786:8625":{"id":"5:786:8625","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3967-0:285:2444":{"id":"b:2:3967-0:285:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:33002:3107-0:285:2444":{"id":"a:2:33002:3107-0:285:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:191:2640","0:192:2656","0:193:2669","0:194:2674","0:195:2677"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3095-0:209:2440":{"id":"b:2:3095-0:209:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3098:2644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:267:2640":{"id":"0:267:2640","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277:725":{"id":"0:277:725","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13791:2634":{"id":"2:13791:2634","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"Returns an iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:44719:8838","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3095-0:285:2444":{"id":"b:2:3095-0:285:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3098:2644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3105-0:209:2440":{"id":"b:2:3105-0:209:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:202":{"id":"0:202","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3109:1858":{"id":"2:3109:1858","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:43001:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:193:2669":{"id":"0:193:2669","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3357:8644-0:285:2444":{"id":"a:2:3357:8644-0:285:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:8644","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2793-0:209:2440":{"id":"b:2:2793-0:209:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2795:26034"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:297:496":{"id":"0:297:496","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13785:26608":{"id":"2:13785:26608","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divides one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13784:26607","str::split_at_mut_checked":"2:13787:26612"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13854:34049":{"id":"2:13854:34049","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:14319"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13762:1027":{"id":"2:13762:1027","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12642:492"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:33002:3107-0:209:2440":{"id":"a:2:33002:3107-0:209:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:209:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10655:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:223:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13875:26345":{"id":"2:13875:26345","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5729:26347":{"id":"5:5729:26347","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13875:26345"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:97:185":{"id":"0:97:185","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"b:2:3110-0:285:2444":{"id":"b:2:3110-0:285:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:285:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13774:26580":{"id":"2:13774:26580","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42735:203"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11576:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11576:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13790:12456":{"id":"2:13790:12456","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12642:492"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:44709:12424","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32944:249-0:218:2441":{"id":"a:2:32944:249-0:218:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13820:34039":{"id":"2:13820:34039","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"Returns an iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:13452:14319","str::split":"2:13811:26613","prim@char":"1:12642:492","str::split_terminator":"2:13818:34038"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44801:12430","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:14321","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:105":{"id":"0:105","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:62:2575","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13804:8603":{"id":"2:13804:8603","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42735:203","prim@char":"1:12642:492","self::pattern":"2:13452:14319"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[353,0],"end":[359,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:294:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:297:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3357:8644-0:218:2441":{"id":"a:2:3357:8644-0:218:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:8644","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[346,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:218:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:201:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13840:34042":{"id":"2:13840:34042","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"Returns an iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:13452:14319","`DoubleEndedIterator`":"2:8393:134","prim@char":"1:12642:492","str::match_indices":"2:13838:34041"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44901:12436","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:13017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:14321","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"6:7284:11956":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"24:1690:2871":{"crate_id":24,"path":["ppv_lite86","x86_64","vec128_storage"],"kind":"union"},"2:44837:12432":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:16672:10499":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"2:3965:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"6:8278:12129":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"6:4890:11371":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:8284:12130":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:15937:10285":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:32935:12311":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"16:2618:10548":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:11901:12839":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:10062:21763":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:3874:132":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"6:1507:11167":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:44642:13047":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:4513:111":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"11:832:12959":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:46849:12501":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:10883:169":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:3822:32771":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:15733:10233":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"6:1489:11159":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:963:12982":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"17:2453:12806":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:22141:33327":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:6954:9223":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"16:3985:9519":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"1:7472:26297":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:23495:12225":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:11089:9232":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"1:9552:174":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:11775:8719":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:11576:252":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"16:7189:21709":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"6:5057:11452":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:0:2965":{"crate_id":17,"path":["object"],"kind":"module"},"1:3934:13089":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:1584:11214":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:8393:134":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:8334:3106":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:47662:12562":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"16:2465:8880":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:12661:1902":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"5:40:13678":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"20:194:3122":{"crate_id":20,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"2:45492:12479":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:16755:10522":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"2:42473:182":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:40456:12320":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:40629:14082":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"2:3596:154":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"6:5179:11469":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:41961:12367":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:2129:12171":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:3697:13739":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"17:596:12800":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:44751:12200":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:11749:26293":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"5:7710:12160":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:485:12799":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"6:7407:12009":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:4805:11312":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:12173:9637":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:15513:10201":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:41041:12321":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:43899:150":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"5:4127:9317":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:974:9014":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"5:1520:8718":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"5:4473:281":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:9483:9045":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"20:149:3117":{"crate_id":20,"path":["rand_core","TryRngCore"],"kind":"trait"},"17:13436:8855":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:12609:9241":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:22205:13935":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"5:5414:14307":{"crate_id":5,"path":["alloc","rc","UniqueRcUninit"],"kind":"struct"},"2:42661:12390":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"16:6792:10674":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"2:23331:9057":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"6:5529:11634":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:2877:147":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"5:7679:13652":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"6:5230:11494":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"18:491:9469":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:13183:12885":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"1:7973:9600":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"17:12686:9689":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:12160:9636":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"5:4488:33629":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:44692:12422":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:6729:8908":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:45781:192":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"5:3303:33815":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:10925:9656":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"1:11394:26167":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"5:7797:13001":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:8225:12118":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:12344:9649":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"6:6893:11949":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"11:1898:11000":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"5:3448:12982":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"1:8299:12622":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:9539:13117":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"2:45681:163":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"1:4384:13829":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:9544:13118":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"1:12243:12728":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:34256:13928":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:11328:35414":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:13947:9807":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:16005:10306":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"5:3324:10999":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:7977:10572":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"5:884:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:15691:10227":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"22:165:8813":{"crate_id":22,"path":["byteorder","BigEndian"],"kind":"enum"},"17:16700:10506":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"1:9352:13900":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:46800:12497":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:40308:222":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"16:3585:10575":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"16:6887:8947":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"5:724:12975":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"17:11603:12827":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:11502:9616":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"1:6669:198":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:6296:232":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"6:517:11117":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:5295:11528":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:11423:21791":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:15985:10300":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:14071:13030":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"14:159:12951":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:11882:13018":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:3590:12697":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:22177:33335":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"6:6486:11780":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"6:1711:11292":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"5:1551:8566":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"5:3792:33619":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:12836:21909":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:12100:13089":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:3782:14269":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"16:7355:8952":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:6157:8913":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"5:1411:12967":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"16:2898:10561":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:11102:12817":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:15324:10057":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:11540:9619":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"1:988:13659":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"20:203:3120":{"crate_id":20,"path":["rand_core","UnwrapErr"],"kind":"struct"},"1:4852:12004":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"16:4764:10585":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:13585:8856":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"6:4990:11418":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:13876:8857":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:47964:12598":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:4906:8663":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"5:7559:12158":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"16:6656:8924":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:13928:8870":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:14008:9817":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:41463:12343":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"16:4239:10581":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"5:2579:12149":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:10700:8835":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:12666:996":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:7890:26185":{"crate_id":1,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"21:394:8691":{"crate_id":21,"path":["zerocopy","AsBytes"],"kind":"trait"},"1:8960:8718":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:45698:239":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:16191:10372":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"11:686:9014":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:12654:782":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"16:2568:10546":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"11:820:13659":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"16:6171:8916":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:8175:12117":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:16211:10378":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:8093:12946":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:12263:9646":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"5:7619:8566":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:23141:14012":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"1:2344:12703":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:6998:12194":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"1:4848:12000":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"6:5471:11614":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:47479:12555":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"18:698:8806":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:10369:21772":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"16:6142:21702":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:10670:218":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"18:0:2966":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:13239:12199":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:47027:12515":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"16:8102:10846":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"16:2433:20841":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"17:14971:10014":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:15951:10292":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:47434:12554":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:2787:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"11:1878:10997":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:12048:12433":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:41495:12347":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:3679:8635":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:22789:13933":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:3797:159":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"16:8295:10860":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:42527:13784":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:45484:12477":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"11:2525:35366":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"24:1156:8779":{"crate_id":24,"path":["ppv_lite86","x86_64","sse2","u32x4_sse2"],"kind":"struct"},"17:321:12798":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"6:6390:11728":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:12618:14288":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:41047:12322":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:47529:12557":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"5:299:3108":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:9596:13017":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:8446:3105":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"17:16717:10508":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"17:16241:10384":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:12579:13024":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"2:6810:12187":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:940:9013":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"11:1542:20774":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:23409:12212":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:38928:14263":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"5:2251:13620":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:45512:9054":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"17:10830:9503":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"2:4897:14060":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:10666:8638":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:14611:9944":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:16838:9811":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"17:16766:10523":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"6:586:11155":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:42830:13863":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:2784:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:42960:226":{"crate_id":2,"path":["core","range","RangeInclusive"],"kind":"struct"},"1:12011:13119":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:11552:12824":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:14384:9910":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:14746:9963":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"16:6419:8897":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:12608:12867":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:15896:10276":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:14985:10016":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"16:6694:12905":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:47508:12556":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:45554:12484":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"17:12008:12841":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:13673:9759":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"6:4842:11340":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"6:5357:11545":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"21:401:25998":{"crate_id":21,"path":["zerocopy","Unaligned"],"kind":"trait"},"17:12924:9708":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"11:1652:35379":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"5:6030:9317":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:10923:9052":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"13:110:8699":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"17:14776:9982":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:41285:14391":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:5725:8812":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"21:1425:8792":{"crate_id":21,"path":["zerocopy","byteorder","U128"],"kind":"struct"},"16:4182:10580":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"6:497:11100":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"5:3358:11000":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"6:8237:12120":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:22162:33330":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:43206:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:14598:9942":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"5:7074:14352":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:14211:13031":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"5:7856:12982":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"18:726:8808":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"6:5557:11648":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:31061:13788":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"1:4850:12002":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"16:5058:10593":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"16:6040:10566":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:14110:9840":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:7935:10839":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:45480:12476":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:999:12959":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:7946:10571":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"6:5349:11544":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"2:45476:12475":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"1:8360:9233":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:707:13640":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:46770:12493":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"11:813:12956":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:8325:177":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:10879:13083":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"1:4134:13802":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:7347:8909":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:31704:208":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"24:182:2872":{"crate_id":24,"path":["ppv_lite86","types","ArithOps"],"kind":"trait"},"2:42769:8719":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:10875:165":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:45530:135":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"16:906:12798":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"17:13608:21750":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"6:5107:11463":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:3334:30622":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"5:7599:9028":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:45797:12491":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"6:8272:12128":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:10898:151":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"2:23136:14014":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"2:48156:8507":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:13044:9719":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"6:5255:11506":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"16:8264:10856":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:10440:8627":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"2:11993:13020":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"16:6387:12894":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"16:7987:10844":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"6:8316:12139":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:12242:9643":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"1:1005:12961":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:4333:29924":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:10667:8834":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"24:254:3145":{"crate_id":24,"path":["ppv_lite86","types","u128x2"],"kind":"trait"},"1:9835:151":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"17:12588:9685":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:12958:9710":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"16:7575:12694":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:7740:14079":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"5:0:325":{"crate_id":5,"path":["alloc"],"kind":"module"},"17:11259:12819":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"3:2062:12168":{"crate_id":3,"path":["compiler_builtins","int","big","u256"],"kind":"struct"},"1:1643:12982":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"2:3322:261":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:48107:8504":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"17:16029:10310":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:2568:2973":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:47993:12599":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:11080:12709":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"5:5821:14352":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:12669:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:43920:8628":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:12761:12875":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:8289:9232":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"5:4901:830":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:3199:13006":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"17:13344:9740":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:8630:12195":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:16359:10422":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:8429:13131":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:6702:11881":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"5:7569:33708":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:12878:9702":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"5:6700:9317":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"16:8666:10836":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"5:1781:33619":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"16:2658:10550":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"16:5346:10603":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"11:357:35370":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"24:187:3134":{"crate_id":24,"path":["ppv_lite86","types","RotateEachWord32"],"kind":"trait"},"5:7668:12159":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"16:6406:10639":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"6:5249:11504":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:12774:12876":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:9337:13898":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:8102:13122":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:11437:12713":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"2:3069:175":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"6:1675:11275":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:36997:10803":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"5:1397:12963":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"16:8134:8962":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:23094:13741":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"17:14337:9901":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"17:14955:10013":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:44541:12201":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:5749:116":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"6:6459:11760":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:15746:10239":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"5:2344:33711":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:9570:12698":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"16:8040:35404":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:6711:12907":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:2671:697":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:23584:12233":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"17:16380:10425":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"6:6802:11912":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:15995:10303":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:13481:14320":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:23051:14023":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:41597:12356":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"16:8162:8965":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:23650:12239":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"1:8277:13127":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:2025:13704":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:4838:13806":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:43586:8639":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:16658:10495":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"17:14122:9843":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:15456:10163":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:47290:12534":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"16:2548:10545":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:12825:9691":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:12668:1460":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"3:1785:238":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"16:2682:10551":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"17:14521:9932":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:10150:21765":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:11214:32539":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"16:2588:10547":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"21:999:8790":{"crate_id":21,"path":["zerocopy","byteorder","U32"],"kind":"struct"},"1:11983:12722":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:8966:12684":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"5:2291:9017":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:11915:8817":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:11256:26289":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:15587:10212":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:11757:9624":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"6:7984:12104":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"18:651:9470":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"6:6878:11938":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:44117:2888":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"5:7108:14354":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"2:32868:3279":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"18:521:25981":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"5:4519:12697":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:9226:211":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:45688:231":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:3063:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"11:1083:12965":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:12065:12845":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"17:14811:9994":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:23617:12236":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"9:490:11065":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:4247:13809":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"6:8266:12127":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"16:8230:21714":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"16:6638:12901":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"17:14571:9658":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"17:10733:8836":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"16:7728:8710":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:8153:13642":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:16814:10533":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"16:8708:10909":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:11825:12833":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"16:7459:12917":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"5:1535:8719":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"6:6523:11794":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"9:380:20695":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:16058:10317":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:12062:13021":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:46832:12500":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:8807:13862":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:41939:12364":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"16:5222:10599":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:34189:13926":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"11:1063:35381":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:41988:12371":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:10505:13155":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"2:44855:12433":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"6:7580:12097":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:42820:8711":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:42789:8710":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"16:6873:10684":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:2099:209":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"16:4265:10582":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"24:278:2870":{"crate_id":24,"path":["ppv_lite86","types","Machine"],"kind":"trait"},"2:40232:14268":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"2:48209:8510":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:14585:9941":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:45272:12461":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:15578:10211":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"16:7383:8954":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"11:2533:11005":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"11:1892:10999":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:5420:11578":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"16:2794:10556":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:46902:12507":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:8311:152":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:41732:12360":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"16:7804:35401":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"9:49:8981":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"0:91:2447":{"crate_id":0,"path":["rand_chacha","ChaChaRng"],"kind":"type_alias"},"6:6422:11746":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:44096:9198":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:2772:13076":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"6:1727:11297":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:23515:12229":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"17:15801:10252":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:42695:12391":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:45684:176":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:45323:12462":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:12034:12432":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:41088:31811":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"11:292:10992":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:2504:10543":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:22986:13741":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"5:3686:194":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:41955:12366":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:6617:11845":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:41116:12327":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:12028:12726":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:13509:9696":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:14322:9896":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:3576:14062":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"16:7279:10754":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:8280:14236":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"5:6566:14025":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"2:33032:8647":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:2235:12172":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"21:120:9463":{"crate_id":21,"path":["zerocopy","util","ptr","Ptr"],"kind":"struct"},"6:8243:12121":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"6:7463:12032":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:43057:8566":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:45050:12329":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:10524:21777":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"16:3887:9511":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:11346:12821":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:2493:13725":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:2820:8512":{"crate_id":2,"path":["core","clone","CloneToUninit"],"kind":"trait"},"6:7524:12075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"24:1641:8686":{"crate_id":24,"path":["ppv_lite86","x86_64","NoA1"],"kind":"struct"},"2:44801:12430":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:10815:12812":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"17:15353:10077":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:619:13056":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"24:251:3144":{"crate_id":24,"path":["ppv_lite86","types","u64x4"],"kind":"trait"},"16:8609:8968":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:12081:12850":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:8649:13139":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:11135:26166":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"5:7694:9024":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"17:5154:12810":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"6:4921:11389":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:14039:9826":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:4536:14051":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:45180:12458":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"6:4902:11376":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"6:6472:11769":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:7857:14231":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"17:2243:12803":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:2914:214":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"24:1265:8786":{"crate_id":24,"path":["ppv_lite86","x86_64","sse2","u64x2_sse2"],"kind":"struct"},"16:8063:21713":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:42673:12667":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:8824:9323":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:2495:13726":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"16:6747:8939":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:13856:9806":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:47077:2913":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:3571:8722":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:2534:13738":{"crate_id":1,"path":["std","fs","exists"],"kind":"function"},"1:10507:13154":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"6:5395:11565":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:41486:9042":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"24:902:2868":{"crate_id":24,"path":["ppv_lite86","dispatch"],"kind":"macro"},"11:423:35374":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:9864:131":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"24:1681:8679":{"crate_id":24,"path":["ppv_lite86","x86_64","Avx2Machine"],"kind":"struct"},"6:6441:11748":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"16:6806:8942":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:12975:14322":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"11:102:10991":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:7806:32699":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:12214:9640":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"11:2297:12963":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"2:43860:31881":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"17:14859:9999":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"11:1866:9317":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"16:5316:10602":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"21:2568:8797":{"crate_id":21,"path":["zerocopy","byteorder","F32"],"kind":"struct"},"17:12725:12872":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"11:1118:12966":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"16:901:12797":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"17:13983:9814":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:11939:9632":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"5:7787:12166":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:47191:12529":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:12201:9639":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"16:3439:10574":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"17:11794:21813":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"11:0:2960":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:6968:13115":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"1:6558:12614":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"1:7902:26186":{"crate_id":1,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"17:13120:12819":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"16:8025:8959":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:22:845":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"6:5575:11655":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"6:6602:11843":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:6500:11781":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"16:4150:10579":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"11:2354:8718":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"2:44679:12419":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:3364:8646":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"6:4914:11385":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:22685:33338":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:45676:12487":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"2:44559:13044":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"5:7738:12163":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:41946:12365":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"16:6623:10671":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:11112:35411":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"1:8743:11989":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"24:245:3142":{"crate_id":24,"path":["ppv_lite86","types","u32x4x2"],"kind":"trait"},"2:3809:14048":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:11455:174":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"2:43354:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:15677:10223":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:6280:12614":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:14307:9892":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:3097:150":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"24:1621:8681":{"crate_id":24,"path":["ppv_lite86","x86_64","NoS3"],"kind":"struct"},"2:3401:13927":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:10622:156":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:31331:12246":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:11040:13163":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"17:10405:21773":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:9445:12694":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"11:2540:12159":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:10672:8636":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:10132:21764":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"17:13231:12889":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"1:953:9317":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:22787:13741":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:15908:10277":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:12667:1966":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:1665:11000":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:12546:13023":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"2:42981:224":{"crate_id":2,"path":["core","range","RangeFrom"],"kind":"struct"},"17:14057:9827":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"16:4981:10592":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:23672:12241":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"17:11770:21812":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"5:5564:14310":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:11053:12816":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:2750:14421":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:43467:9194":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"24:1545:9462":{"crate_id":24,"path":["ppv_lite86","x86_64","sse2","avx2","u32x4x2_avx2"],"kind":"struct"},"5:2364:9020":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:41140:12329":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"16:5447:10606":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:11564:12825":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:12649:1861":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:919:8566":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:12077:26301":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"24:217:2879":{"crate_id":24,"path":["ppv_lite86","types","Vector"],"kind":"trait"},"1:5697:13099":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:15792:10251":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:13304:21780":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:15035:10033":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"16:8595:12950":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:12217:9240":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"6:5241:11500":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:11099:152":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"2:41454:12341":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:45041:12321":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"16:8011:8958":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:13162:12431":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"18:598:35418":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:43430:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:43243:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:16288:10400":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:12447:21885":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"5:6513:14739":{"crate_id":5,"path":["alloc","sync","UniqueArcUninit"],"kind":"struct"},"1:10647:116":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"6:6398:11730":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:377:13052":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:16730:10514":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"2:10604:8635":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:6088:9213":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"6:6852:11923":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:13892:8861":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:10655:123":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:40196:8721":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"6:6719:11885":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"1:2509:13730":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:11014:35409":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"6:538:11129":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:11594:13169":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"17:15062:10035":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:46969:12511":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:40438:13037":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:9210:13144":{"crate_id":1,"path":["std","pipe","PipeReader"],"kind":"struct"},"17:16177:10366":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"6:5488:11620":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"3:2077:12169":{"crate_id":3,"path":["compiler_builtins","int","big","i256"],"kind":"struct"},"16:7027:10701":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"17:16013:10307":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"19:0:1327":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"5:3080:33821":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:2521:13736":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:41148:12321":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"6:6360:11703":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:14710:9957":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:16525:9792":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"16:7713:35399":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:12652:763":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"6:5652:11694":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:3837:115":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:33917:14252":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:16219:10379":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"0:92:2449":{"crate_id":0,"path":["rand_chacha","ChaChaCore"],"kind":"type_alias"},"1:9250:12688":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:42761:8718":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:12373:12861":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:46931:12509":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:9310:12690":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:10664:28501":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"2:44901:12436":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"6:1667:11274":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:8167:13643":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:10553:21778":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"6:6744:11894":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"2:47612:12560":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"2:23014:14278":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"16:6460:21705":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:11855:12837":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:15876:10269":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"15:288:20795":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:3719:223":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"16:5687:10608":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"5:214:12974":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"16:7835:21712":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"5:7098:14353":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:42495:12375":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:11151:13126":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"1:10378:12387":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"1:8700:13830":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:15448:10160":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"18:765:25980":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:9534:247":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"6:5664:11699":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:9437:9235":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"6:5482:11619":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:12653:766":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:4436:13092":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:5217:11490":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"16:6835:8944":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"2:23361:9058":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:23661:12240":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"2:22133:8525":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:45706:219":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"6:6710:11882":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"6:6428:11747":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:10860:8839":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"6:5036:11443":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:45337:14335":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:16631:9806":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"11:2340:12973":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:15:2588":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:48014:8774":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:10333:21771":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"11:427:35375":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:1942:13068":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"24:1501:9460":{"crate_id":24,"path":["ppv_lite86","x86_64","sse2","G0"],"kind":"struct"},"20:0:2437":{"crate_id":20,"path":["rand_core"],"kind":"module"},"6:7553:12091":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"6:7430:12016":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"6:5186:11471":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:13592:9750":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"2:2228:14291":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"2:2229:13725":{"crate_id":2,"path":["core","ptr","metadata","metadata"],"kind":"function"},"16:155:8888":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"5:7723:14391":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:45508:12483":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:14558:9936":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:4771:13009":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:4355:13826":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:12656:939":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:12614:13644":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:14388:9322":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"0:0:2450":{"crate_id":0,"path":["rand_chacha"],"kind":"module"},"2:47861:12596":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"16:8562:10906":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:13757:9777":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:11370:9211":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:1885:13066":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:3072:157":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:41538:12351":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:12260:26303":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"1:8087:13741":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:22880:14017":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"16:6366:8891":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:3593:153":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:15963:10295":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:8107:12618":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"6:5088:11462":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:8304:12135":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"17:13630:9755":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:7317:11979":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:8607:9036":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:42777:8566":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:436:197":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"16:7302:10755":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:12800:12878":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:42868:12398":{"crate_id":2,"path":["core","range","iter","IterRange"],"kind":"struct"},"20:136:25992":{"crate_id":20,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"2:46952:12510":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"16:2838:10558":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"6:7515:12072":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"5:5134:12697":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"6:6578:11831":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"7:31:20681":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"6:5585:11660":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"1:8765:12670":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"6:5007:11428":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"16:5170:10597":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:43049:8719":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:22264:13934":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"6:8231:12119":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"18:706:9492":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:15159:10048":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:15640:10222":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"16:8118:222":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"11:2099:10783":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:47159:12527":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"6:1569:11202":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:11843:12199":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"17:11590:12826":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:5803:13102":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:6197:12185":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:12907:9745":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:8977:12685":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:1114:12963":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:48072:8501":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:14069:9830":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"18:581:8525":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"5:4990:229":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:45504:12482":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"16:5253:10600":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:8851:33095":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:41264:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:9847:26286":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"2:43874:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:41352:13707":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"6:1696:11285":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:41243:12334":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"2:23395:31786":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:5874:13882":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:8739:13141":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:44127:9199":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:3743:12808":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"18:659:12792":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:1636:8566":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"11:750:9011":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:2258:133":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"2:47367:12553":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"17:13014:9715":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:8643:13137":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:3688:30157":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:14678:9953":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:11221:32540":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"1:11660:11062":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"18:608:12791":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"18:670:12796":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:14350:9903":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"21:51:36164":{"crate_id":21,"path":["zerocopy","macro_util","ShouldBe"],"kind":"trait"},"17:1352:12802":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:1660:10999":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:43805:12401":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"16:7209:10739":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"5:888:12976":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:44550:12202":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:41425:9040":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:41274:12336":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:16269:10399":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:15699:10228":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"21:2907:26011":{"crate_id":21,"path":["zerocopy","_CastType"],"kind":"enum"},"1:9373:12693":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:9529:246":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:4925:13831":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:13093:8821":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"2:40293:225":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:1654:10998":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:44997:12441":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:7916:26187":{"crate_id":1,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"2:45025:12444":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:9271:8718":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"16:5280:10601":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:16684:10501":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"5:7591:222":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:43844:10875":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"16:6779:10673":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:3373:13082":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:8714:13137":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:13452:14319":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"5:4292:12697":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"1:4965:13819":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:11494:9615":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"2:41403:9036":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:15919:10281":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"20:144:2577":{"crate_id":20,"path":["rand_core","RngCore"],"kind":"trait"},"6:5604:11674":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"18:635:9487":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:3306:10539":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:47208:12530":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"20:175:3119":{"crate_id":20,"path":["rand_core","RngReadAdapter"],"kind":"struct"},"2:23417:12213":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:5325:11539":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"20:116:25987":{"crate_id":20,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"17:12298:21884":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"1:3469:13086":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"6:553:11138":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:42908:12399":{"crate_id":2,"path":["core","range","iter","IterRangeInclusive"],"kind":"struct"},"1:537:13620":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:7023:245":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"6:578:11151":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:22164:33332":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"6:1703:11288":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:22372:13741":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"16:7156:10726":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"24:184:2873":{"crate_id":24,"path":["ppv_lite86","types","BitOps32"],"kind":"trait"},"17:11715:12830":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:11196:9212":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"17:10965:12815":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:47641:12561":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"16:5111:10595":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"9:345:20709":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:32921:13036":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"6:5568:11653":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"5:7510:9006":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:32944:249":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:10586:8813":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:6779:13111":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:11083:32538":{"crate_id":2,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"17:12854:9696":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"17:13243:12890":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:6899:13894":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"6:5151:11467":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:42555:9193":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:10601:8832":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:44733:12195":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"11:1858:8718":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"6:4829:11330":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:45760:31939":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"2:43095:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:23108:14013":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"2:44883:12435":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:12642:492":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:47417:3144":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:42851:3480":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"16:6335:10633":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:44105:169":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:12814:12879":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"6:5271:11515":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:6452:11756":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:6911:10688":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:22382:13932":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:14788:9985":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:12055:12844":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"1:9397:13148":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:14159:33145":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:4140:13801":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"5:7527:12157":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:6121:12697":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:9514:12697":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"1:1944:13069":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:13328:9572":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:38983:14264":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:8910:13876":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:1684:11281":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:5375:13013":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"2:3411:10797":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"17:12562:12864":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:43132:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:22652:13937":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"17:2394:21840":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"13:229:8974":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:8872:2888":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"6:0:1032":{"crate_id":6,"path":["libc"],"kind":"module"},"1:6054:13103":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:41332:13038":{"crate_id":2,"path":["core","ffi","va_list","VaList"],"kind":"struct"},"2:3481:10798":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"6:4869:11363":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:5356:454":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:8803:162":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:45117:14334":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:9446:13016":{"crate_id":2,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"17:12272:9726":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"16:6300:10630":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:10455:21775":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:3396:13925":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:22674:9056":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:43393:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:5494:11622":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"17:11438:9612":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:12161:13091":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"6:7990:12106":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:13399:9742":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:11143:13141":{"crate_id":1,"path":["std","sys","pal","unix","linux","pidfd","PidFd"],"kind":"struct"},"16:8720:150":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:4185:13804":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"16:7916:12938":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:8806:8720":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:16744:10517":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"17:15102:10040":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:11318:12820":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:519:9558":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"6:6792:11909":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"9:412:20696":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"18:96:25971":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:41103:12326":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:8092:12617":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"16:2918:10562":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:12664:1896":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:48092:8503":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:42713:12392":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"24:271:3147":{"crate_id":24,"path":["ppv_lite86","types","VZip"],"kind":"trait"},"20:164:2578":{"crate_id":20,"path":["rand_core","SeedableRng"],"kind":"trait"},"1:10800:26291":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"1:11971:9227":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:14650:9949":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:6379:26281":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"1:1883:13065":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:44080:9195":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:22187:33336":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"20:62:2575":{"crate_id":20,"path":["rand_core","block","CryptoBlockRng"],"kind":"trait"},"16:6820:21706":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"2:10300:9047":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:3792:268":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:13201:12437":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:40408:13658":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"6:564:11143":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:14152:9855":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:8030:9044":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"5:6116:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"6:4957:11402":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:7635:8574":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:896:8718":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"24:1626:8684":{"crate_id":24,"path":["ppv_lite86","x86_64","YesS4"],"kind":"struct"},"16:6850:10679":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"14:213:10987":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:6651:11861":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:47935:8773":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:978:9015":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"16:2858:10559":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:5740:8813":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"24:1661:8690":{"crate_id":24,"path":["ppv_lite86","x86_64","NoNI"],"kind":"struct"},"17:13529:9747":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:46864:12502":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:4591:13094":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:13648:9758":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:3622:12665":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"16:5196:10598":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:7570:29925":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:2685:14278":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"5:284:33619":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:4501:13008":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"5:7200:280":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:683:13057":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:5717:13100":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"11:859:12962":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:41980:12369":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"6:1690:11284":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:6967:8948":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:969:12968":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:8706:13140":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"6:7445:12021":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:8344:13129":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"16:2948:10563":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:22924:14018":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"5:1623:222":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:34602:14259":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"6:5265:11512":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"16:6586:10670":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"2:22962:14019":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"16:6254:8923":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:2736:13077":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:3357:8644":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"6:1643:11257":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"5:7583:8566":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:3061:13080":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"6:5127:11465":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"16:6237:8918":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"16:8206:8966":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:12409:8845":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"18:80:25970":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:11995:12840":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:11751:8718":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"10:36:11010":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:7983:13120":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"16:7421:21710":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:11127:26164":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"17:15971:10298":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:40330:224":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:7502:26299":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"16:5647:10607":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"24:1666:8680":{"crate_id":24,"path":["ppv_lite86","x86_64","SseMachine"],"kind":"struct"},"16:2484:10542":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:10283:21769":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"5:4362:8718":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"6:5617:11680":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"6:7539:12082":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:5222:13858":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:44333:12415":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"24:236:2913":{"crate_id":24,"path":["ppv_lite86","types","u32x4"],"kind":"trait"},"14:31:12951":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:44569:12203":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:2043:12697":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"2:13529:14328":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:11920:13019":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"5:3337:33816":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"5:2261:12144":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:43882:8626":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:41434:12339":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:5441:11593":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"17:10975:35408":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:8352:13130":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"16:2770:10555":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:45488:12478":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"16:7013:10699":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"6:7326:11980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:2638:10549":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:13066:12883":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"2:11358:32541":{"crate_id":2,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"11:481:166":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:4363:13827":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:10882:13085":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"24:210:2877":{"crate_id":24,"path":["ppv_lite86","types","Vec4"],"kind":"trait"},"24:1506:9461":{"crate_id":24,"path":["ppv_lite86","x86_64","sse2","G1"],"kind":"struct"},"2:41548:9043":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:14413:9915":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:2834:8513":{"crate_id":2,"path":["core","clone","InitializingSlice"],"kind":"struct"},"17:16650:10494":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"2:22151:33327":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:508:26253":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:4653:9035":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:4233:13807":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:2908:207":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"6:7292:11961":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:23683:12242":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"17:14910:10004":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:595:13626":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:14396:9912":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"16:5377:10604":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"6:545:11133":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:12385:12862":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:16350:10420":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"6:6687:11876":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"6:6543:11810":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"6:5019:11434":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:10821:12813":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"1:3328:30476":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:11800:12195":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:3599:155":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"6:4947:11399":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"3:0:527":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"21:363:8692":{"crate_id":21,"path":["zerocopy","FromBytes"],"kind":"trait"},"1:11997:12723":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:6500:20813":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"16:6606:218":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:5733:13101":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:5871:11910":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:0:585":{"crate_id":2,"path":["core"],"kind":"module"},"17:13489:9745":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:12593:13173":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"6:7344:11989":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"15:0:2963":{"crate_id":15,"path":["addr2line"],"kind":"module"},"5:6169:14731":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:12864:9698":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:13553:21782":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:31293:9063":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"16:3046:20843":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:11629:9593":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"6:6749:11895":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"1:9322:13899":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:22384:9055":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"6:7962:12103":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:11576:8821":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:1506:168":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:8173:13694":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:5462:11608":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:3075:272":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:9588:12699":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"6:4881:11366":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:9404:26120":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:15013:10022":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:13247:150":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"16:7880:8905":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:6610:11844":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:680:9600":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"16:7966:10843":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:14545:9933":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:12646:351":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"18:754:9502":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:13795:9792":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:5341:11543":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"16:8525:10901":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:11575:12718":{"crate_id":1,"path":["std","sys","exit_guard","PThread"],"kind":"struct"},"24:214:2878":{"crate_id":24,"path":["ppv_lite86","types","Vec4Ext"],"kind":"trait"},"9:470:20693":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"11:2507:11001":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:12787:12877":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"11:2126:12964":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:45348:12463":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"5:7627:8566":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:8812:14235":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"15:306:20796":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:47396:8772":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:13470:9492":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"13:0:2955":{"crate_id":13,"path":["std_detect"],"kind":"module"},"21:1220:8791":{"crate_id":21,"path":["zerocopy","byteorder","U64"],"kind":"struct"},"17:10255:21768":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:7741:14080":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:45138:12448":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:12711:12868":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"16:894:12891":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"1:3426:13084":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"6:7337:11985":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:7956:10842":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:15659:8871":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"6:6679:11872":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"17:12889:9706":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"24:1616:8683":{"crate_id":24,"path":["ppv_lite86","x86_64","YesS3"],"kind":"struct"},"6:5630:11686":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:11200:8817":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"16:3693:10576":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:39617:14266":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:4767:233":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:12663:9688":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:15074:10036":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:46984:12512":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"24:910:8775":{"crate_id":24,"path":["ppv_lite86","soft","x2"],"kind":"struct"},"21:605:26010":{"crate_id":21,"path":["zerocopy","ByteSliceMut"],"kind":"trait"},"2:40276:13676":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"4:0:2956":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"5:2142:9233":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"16:7041:8950":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:12397:12863":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:31731:8525":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:41156:12330":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:6471:26285":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:45389:12473":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:3640:13088":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:14870:10000":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:5506:215":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:8895:12682":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:42511:12377":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"17:14258:9867":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"6:5658:11696":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:48061:8500":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"16:6950:10691":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:10756:13146":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:41077:12323":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"11:2513:11002":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"6:7367:12007":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:23012:33561":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"2:44135:9200":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:9391:119":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"14:201:14336":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:6981:8949":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"5:7774:257":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"6:4929:11391":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:44652:12206":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:12236:12728":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:7009:12191":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"1:6133:9214":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:11241:26287":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:5550:11646":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:15534:10206":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"11:1862:8566":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"6:5375:11555":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:47906:12597":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:48133:8506":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"11:763:9013":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:11356:35415":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"14:219:10989":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:40368:226":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"11:663:8719":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:47094:2925":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"11:983:10783":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:13219:12888":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"6:5044:11448":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"16:6995:10692":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"6:4976:11410":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"9:168:8997":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:4928:8650":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:23606:12235":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"10:44:8980":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"17:16164:10360":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"21:601:26009":{"crate_id":21,"path":["zerocopy","ByteSlice"],"kind":"trait"},"2:23468:31790":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:41377:12204":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"18:623:35420":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:2810:114":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"17:16777:10524":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"17:15389:10108":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:34775:14260":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"11:1001:12963":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:47546:12558":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"16:7072:21708":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:3108:10573":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:42829:13645":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:5417:1007":{"crate_id":2,"path":["core","iter"],"kind":"module"},"11:808:12968":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"16:7165:10727":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:44579:13045":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:12662:1884":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:32914:10836":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"16:7334:10759":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:2511:13731":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"11:2206:8979":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"2:3315:277":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:3423:14256":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"24:1646:8687":{"crate_id":24,"path":["ppv_lite86","x86_64","YesA2"],"kind":"struct"},"2:46785:12496":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"24:264:3146":{"crate_id":24,"path":["ppv_lite86","types","u128x4"],"kind":"trait"},"1:9842:13127":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"2:23595:12234":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"6:6858:11924":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:11210:35413":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:46998:12513":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"5:5960:265":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:6455:9320":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"2:22258:13931":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"6:5381:11557":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"16:7492:10774":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"24:224:2874":{"crate_id":24,"path":["ppv_lite86","types","LaneWords4"],"kind":"trait"},"5:1885:12982":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"14:0:2962":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:11402:9054":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"2:11955:12200":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"11:1042:20773":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:6841:8946":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"5:3298:10998":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:14730:9958":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"6:4896:11373":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"16:8055:12945":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:16417:10432":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:4967:13820":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"6:1500:11164":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:44490:13043":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"5:3699:8718":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:4489:13007":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:12022:12842":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:45808:11008":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:14924:10007":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:11888:12838":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"14:40:9793":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"17:11643:8817":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:14940:10009":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"16:2448:10540":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:33493:10796":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"11:2323:12964":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"6:5196:11478":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"16:5707:21701":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"5:3858:12983":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:4171:8566":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:912:202":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"17:15611:10214":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"5:5515:33619":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:14834:9995":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:473:11089":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:7468:10773":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"6:1632:11249":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"6:1521:11172":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:3587:3104":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:4840:12178":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:12430:9652":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:1233:12801":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:47240:12532":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:45739:13049":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"16:8543:10903":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:45496:12480":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:9458:26121":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:5136:14071":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:41251:12335":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:16040:10314":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"5:1632:12981":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:10113:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:32945:251":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"6:7424:12014":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:12045:9551":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"5:3090:33820":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:13476:14321":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"16:6267:10623":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"16:7997:8957":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"5:4322:12697":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:42733:206":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:12898:9707":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:41202:12332":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:46917:12508":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:46817:12499":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:11106:12710":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"11:2440:12982":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"6:5205:11483":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:23502:12228":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:12645:1352":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:43169:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"11:776:9317":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:41472:12344":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"6:7494:12058":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:16250:10386":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"16:7786:35400":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:15978:10299":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"16:6736:35397":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"5:7762:13000":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"11:1136:12967":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:10311:21770":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:23705:12244":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"2:3042:13741":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:16791:10528":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"1:11064:12702":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"1:9215:13145":{"crate_id":1,"path":["std","pipe","PipeWriter"],"kind":"struct"},"6:4875:11364":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:8294:12134":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:12331:12857":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"5:2810:12152":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:5683:13097":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:15477:10171":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:45153:12454":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"6:6645:11858":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:8090:9215":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"24:1000:8778":{"crate_id":24,"path":["ppv_lite86","soft","x4"],"kind":"struct"},"2:44783:12429":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:11179:26131":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:12643:8817":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:14476:9926":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"16:5083:10594":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"16:6121:10567":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:8688:12667":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:23346:9029":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"16:2413:20814":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"11:649:8718":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:15001:10020":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"5:7750:12165":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:3079:271":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"16:4900:10589":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:16329:10414":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:2964:10564":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"6:5334:11542":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"5:1601:9014":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:43832:12409":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:12663:1890":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:3517:13769":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:14186:217":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:2818:10557":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:43317:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"16:2878:10560":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:12120:8828":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"17:13360:21781":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"6:570:11146":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:3558:128":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"6:5165:11468":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:44088:9197":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"16:8582:12947":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"5:1001:8718":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:11395:21790":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"6:5366:11549":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:41722:12359":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:48118:8505":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"6:6513:11787":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:11151:12818":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:12648:1771":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:9287:8566":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:41163:14077":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"6:8007:12116":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:6864:21707":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:48248:8511":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:14165:9859":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:48052:8499":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:23000:14022":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1:5022:13095":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"16:6026:8912":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"16:5755:10609":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"1:11907:2888":{"crate_id":1,"path":["std","sys","thread_local","native","eager","State"],"kind":"enum"},"6:8326:12141":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:9220:13146":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:2422:12804":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:12643:1924":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:12229:26135":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"17:15861:10267":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"18:481:9468":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"11:1871:12982":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"2:4:1292":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:11483:12714":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"1:8125:9656":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"20:186:2573":{"crate_id":20,"path":["rand_core","block","BlockRng"],"kind":"struct"},"6:485:11095":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"5:6547:14024":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:9293:12689":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"16:3139:9506":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"11:344:35367":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"14:7:12951":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:16230:10383":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:22256:13741":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:14498:9927":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:12428:26305":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"6:1589:11216":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:9263:9212":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:31346:8626":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:8637:12440":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:23065:14278":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"5:6148:9026":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:2303:201":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:16802:10530":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"1:8798:13142":{"crate_id":1,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"6:523:11120":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:47013:12514":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"24:1734:3128":{"crate_id":24,"path":["ppv_lite86","x86_64","vec512_storage"],"kind":"union"},"2:34323:14254":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:9279:13147":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:12657:921":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:927:9011":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:13971:9811":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"6:491:11097":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"18:689:9491":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:3467:13085":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"20:156:3118":{"crate_id":20,"path":["rand_core","TryCryptoRng"],"kind":"trait"},"2:43041:8718":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"6:5288:11526":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:9501:199":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:11512:21793":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"1:1648:10997":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:40348:227":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:10571:8812":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:41573:9485":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"16:7398:35398":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"5:1591:12968":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"5:3262:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:13700:9765":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"17:15144:10044":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"16:5142:10596":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:12945:14406":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"6:5282:11523":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:5450:11599":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:48186:8509":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:10876:13081":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"1:11069:12621":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"2:23276:12209":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:44320:12414":{"crate_id":2,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"16:4954:10591":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:44703:12423":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:8560:9044":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:41516:12349":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:12187:9638":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"5:3082:12146":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"6:6590:11836":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:5387:11560":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"21:762:8788":{"crate_id":21,"path":["zerocopy","byteorder","U16"],"kind":"struct"},"1:12640:436":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:12035:12843":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:12647:1737":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:4703:13831":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"23:0:3101":{"crate_id":23,"path":["zerocopy_derive"],"kind":"module"},"16:6571:10667":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:6203:21703":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"5:1573:9011":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:13185:12434":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:14426:164":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:12229:9642":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"17:15817:10256":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:33035:278":{"crate_id":2,"path":["core","marker","UnsizedConstParamTy"],"kind":"trait"},"2:4959:8664":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:13079:12884":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"17:13108:8817":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"22:21:26021":{"crate_id":22,"path":["byteorder","ByteOrder"],"kind":"trait"},"17:14431:9916":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:8623:10907":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:4255:13811":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"5:4157:33619":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"16:3832:10577":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"21:1685:8793":{"crate_id":21,"path":["zerocopy","byteorder","I16"],"kind":"struct"},"2:47739:12594":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:11563:13741":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:10603:238":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"24:267:2875":{"crate_id":24,"path":["ppv_lite86","types","MultiLane"],"kind":"trait"},"2:47567:12559":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"17:10634:8833":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"24:1656:8689":{"crate_id":24,"path":["ppv_lite86","x86_64","YesNI"],"kind":"struct"},"2:45032:12330":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"6:6659:11863":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"11:1579:12970":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:45358:12467":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"5:3712:8719":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"24:220:3139":{"crate_id":24,"path":["ppv_lite86","types","Words4"],"kind":"trait"},"2:2687:14279":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"2:5323:32528":{"crate_id":2,"path":["core","ffi","va_list","sealed_trait","VaArgSafe"],"kind":"trait"},"17:11616:12828":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:23221:12208":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"5:6826:8566":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:12625:26163":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:13410:13720":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:47816:12595":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:9386:9216":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"6:1551:11192":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:9478:9237":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:43280:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:6896:13112":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:789:166":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:40445:12319":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:14845:9997":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:15809:10254":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"24:261:2927":{"crate_id":24,"path":["ppv_lite86","types","u64x2x4"],"kind":"trait"},"6:5412:1279":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:12665:1878":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:1919:14191":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"17:16315:10407":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:1632:8718":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:23526:13786":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:11164:13102":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"17:12103:8843":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:16051:10315":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"16:8176:10847":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:41932:12363":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:41394:13040":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:40388:228":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:15048:10034":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:15928:10284":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:5623:11683":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"11:676:8566":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:1639:9317":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"18:589:9475":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:40280:12314":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"24:303:2876":{"crate_id":24,"path":["ppv_lite86","types","StoreBytes"],"kind":"trait"},"17:14665:9952":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:15198:10055":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:11728:12831":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:13207:12887":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"16:4927:10590":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"6:7562:12094":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:48081:8502":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:47056:12524":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:16538:10450":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"9:435:20694":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"6:5611:11677":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"17:10479:21776":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:8276:14237":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:12621:9687":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:3426:14257":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"2:2159:1397":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"16:7505:10777":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"9:0:2958":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:14637:9947":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:13260:21779":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:12659:933":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"24:1651:8688":{"crate_id":24,"path":["ppv_lite86","x86_64","NoA2"],"kind":"struct"},"17:5328:12811":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"17:3524:12807":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"21:1924:8794":{"crate_id":21,"path":["zerocopy","byteorder","I32"],"kind":"struct"},"1:12658:927":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:10486:13067":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"1:3095:238":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"5:5289:9026":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:42936:222":{"crate_id":2,"path":["core","range","Range"],"kind":"struct"},"17:11458:12822":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:10108:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"6:1625:11245":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"5:928:13660":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:33034:118":{"crate_id":2,"path":["core","marker","ConstParamTy_"],"kind":"trait"},"17:14624:9945":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:13687:123":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"11:2519:11003":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:2811:13079":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:15469:10170":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"17:15569:10207":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:41126:12328":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"24:228:3140":{"crate_id":24,"path":["ppv_lite86","types","Swap64"],"kind":"trait"},"2:48171:8508":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"6:1597:11221":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:1563:11200":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"5:4552:12697":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"24:1721:3127":{"crate_id":24,"path":["ppv_lite86","x86_64","vec256_storage"],"kind":"union"},"17:16403:10429":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:48035:12600":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:41746:12361":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"16:7762:10819":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:44709:12424":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:15115:10041":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:33705:10793":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:42752:185":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"18:531:9472":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:12979:9712":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:44622:13046":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"21:53:35737":{"crate_id":21,"path":["zerocopy","macro_util","HasPadding"],"kind":"struct"},"17:13771:9778":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"11:1703:168":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"6:5224:11491":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:39038:14265":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:1514:11169":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:3066:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"1:4922:13853":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:22175:33333":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"11:2394:8566":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"11:1885:10998":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:44719:8838":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"6:7439:12019":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:16828:10534":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"5:3843:9233":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:8624:8838":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:16512:9778":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"2:31357:31798":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"1:8587:13740":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:41312:8838":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"16:7256:10753":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"5:7539:9317":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"11:2414:9317":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"17:14178:9860":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"6:1657:11268":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"16:7904:10838":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:14443:9918":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:11269:21793":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"6:5311:11535":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"6:4937:11393":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:22276:9055":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:12737:12873":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:11977:13170":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"16:7539:10782":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"18:515:9471":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"5:778:264":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"6:6695:11880":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"1:8439:13774":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"11:1027:12964":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"6:6631:11856":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:11485:12823":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"5:4202:8719":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:3327:8642":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"5:3291:8718":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:562:13541":{"crate_id":1,"path":["std","thread","thread_name_string","ThreadNameString"],"kind":"struct"},"5:2156:12983":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:32946:258":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:7251:13929":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"6:5512:11628":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"6:7390:12008":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:16395:10426":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:23639:12238":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"1:9506:13108":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"17:16848:9816":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"17:15771:10247":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:14190:9863":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:5940:12614":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:3803:14049":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:11059:12700":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"2:43001:238":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:4199:13806":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:10660:133":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"5:787:122":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:8617:12359":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"16:8220:10848":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:8498:190":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"21:2724:8798":{"crate_id":21,"path":["zerocopy","byteorder","F64"],"kind":"struct"},"1:3937:13090":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"5:3086:33819":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:43071:208":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"16:7055:10702":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:15763:10244":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"16:6096:12892":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:13959:9810":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:44633:12205":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"5:6274:12697":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:6062:10568":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:9675:13068":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"2:14345:119":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:8188:13126":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:15088:10037":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:12357:12859":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:13836:9796":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:650:13637":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:6505:11782":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:32910:13035":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:41970:12368":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:15128:10042":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:10674:8637":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:3707:13761":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:13157:9722":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"6:465:11084":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"1:5154:13852":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"16:4808:10586":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:8272:9552":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:12935:9709":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:14883:10002":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:5301:11531":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:44590:12417":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:5130:13850":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"6:6638:11857":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:11262:26290":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:16068:10322":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"11:851:12961":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"24:0:2451":{"crate_id":24,"path":["ppv_lite86"],"kind":"module"},"6:4984:11415":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"14:164:20776":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"20:118:25988":{"crate_id":20,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"2:10662:8630":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:45771:13051":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"18:735:25979":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"18:680:9488":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:8578:12662":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"24:239:2925":{"crate_id":24,"path":["ppv_lite86","types","u64x2"],"kind":"trait"},"2:23453:31789":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:45565:14446":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:11161:35412":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:4243:13808":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:5313:13096":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:34457:14255":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:4701:8661":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:7409:26182":{"crate_id":1,"path":["std","sys","backtrace","print","DisplayBacktrace"],"kind":"struct"},"1:4725:13832":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"16:7413:12916":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"6:5139:11466":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:4193:13805":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:1123:12964":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:316:12797":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:5117:11464":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"15:327:8970":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:12969:8849":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"18:613:35419":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:12287:12854":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:47109:12525":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:12749:12874":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:10918:13745":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:47307:12535":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:47223:12531":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:3872:13785":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"20:58:2574":{"crate_id":20,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"1:5933:232":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"18:573:9470":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:6817:9222":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"9:226:2888":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:41236:12333":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:16116:10359":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:41444:146":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:35121:10802":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"17:10880:8814":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:5947:12615":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:42926:12400":{"crate_id":2,"path":["core","range","iter","IterRangeFrom"],"kind":"struct"},"1:3560:12367":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"16:4871:10588":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:42639:31816":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"6:1539:11183":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:41416:9037":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"24:1631:8682":{"crate_id":24,"path":["ppv_lite86","x86_64","NoS4"],"kind":"struct"},"17:11963:9633":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"12:0:2961":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:3012:20842":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"11:2275:10783":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"1:2032:813":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"6:5539:11640":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:5428:11583":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:34948:14261":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:8695:12668":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"5:4565:33629":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:13195:12886":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"1:383:13054":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:23694:12243":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"6:1530:11177":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"18:113:25972":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:1132:12967":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"11:321:10995":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:11118:12662":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"2:47176:12528":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:23547:13741":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1:2348:13722":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:15174:8849":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:5390:216":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"24:300:3148":{"crate_id":24,"path":["ppv_lite86","types","Store"],"kind":"trait"},"5:6915:33619":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:11743:12832":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:10431:21774":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:12093:8842":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:14093:9832":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"16:2702:10552":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:16203:10375":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"16:8317:21715":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:13575:8849":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:45500:12481":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:8028:26306":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:13730:9769":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"6:559:11141":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:13423:8853":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:12076:13022":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"5:984:13661":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:44937:12438":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:13819:9793":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:13465:9743":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"2:45016:12443":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:34390:14253":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"7:0:1956":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:5139:13851":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"2:44662:13048":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:10668:8639":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:4413:12697":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"16:6939:10690":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"6:4964:11405":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"16:5415:10605":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:3147:127":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"6:6416:11743":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"16:4842:10587":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"6:6737:11893":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"16:7518:10780":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:11814:9630":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"2:45747:12488":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:22203:13741":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:2341:13074":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:44955:12439":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:44987:12440":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:12575:12865":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:12254:9645":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"2:10664:8629":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:4970:11407":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:45007:12442":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"24:257:2919":{"crate_id":24,"path":["ppv_lite86","types","u32x4x4"],"kind":"trait"},"21:229:35738":{"crate_id":21,"path":["zerocopy","wrappers","update","WriteBackOnDrop"],"kind":"struct"},"16:8480:10897":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"5:1122:33619":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"16:8633:21716":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"5:7519:8566":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:3043:8673":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:8950:9327":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:7878:26183":{"crate_id":1,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"1:3371:13081":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"1:12140:13090":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"6:5503:11627":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"17:15844:10260":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"16:6678:12902":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"17:14373:9907":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"18:538:8801":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:12022:12725":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:12660:914":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"16:4118:10578":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"17:12146:9635":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"22:183:8812":{"crate_id":22,"path":["byteorder","LittleEndian"],"kind":"enum"},"1:2096:210":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:8331:9210":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"2:33003:8648":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:13052:12881":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"6:6756:11896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"1:699:13058":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"10:0:2959":{"crate_id":10,"path":["adler"],"kind":"module"},"2:909:13787":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"1:1100:10783":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:43815:8626":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:38873:14262":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"21:409:8662":{"crate_id":21,"path":["zerocopy","Ref"],"kind":"struct"},"1:0:1763":{"crate_id":1,"path":["std"],"kind":"module"},"2:41525:12350":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:15713:10229":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:43579:8638":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:41504:12348":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"6:5319:11538":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:10295:33096":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"22:18:13741":{"crate_id":22,"path":["byteorder","private","Sealed"],"kind":"trait"},"2:22647:13741":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"18:643:9470":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"6:6727:11886":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"17:16301:10405":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:2122:696":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"6:5521:11629":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:11155:13164":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"1:8325:131":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:4963:13817":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"5:2167:12984":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"2:24259:248":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:45167:12457":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:10202:21767":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"16:7220:10740":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:702:13060":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:3628:13677":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:13030:9716":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:3431:14258":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"7:78:20688":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:14137:9849":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:14897:10003":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:1382:12964":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:4039:13091":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:11469:21792":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"16:3124:20844":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:4517:13093":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:14081:9831":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:11868:8821":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"24:180:3130":{"crate_id":24,"path":["ppv_lite86","types","BSwap"],"kind":"trait"},"1:3424:13083":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"6:479:11092":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"16:8148:8964":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:43572:8630":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:12133:9634":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:12318:12855":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:8282:12621":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"5:7273:33683":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"5:7872:13003":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:47322:12536":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"24:1636:8685":{"crate_id":24,"path":["ppv_lite86","x86_64","YesA1"],"kind":"struct"},"6:5640:11687":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"2:13125:12426":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"24:1374:8787":{"crate_id":24,"path":["ppv_lite86","x86_64","sse2","u128x1_sse2"],"kind":"struct"},"16:6438:21704":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:7004:12193":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"15:394:20805":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"16:4692:10584":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:15884:10270":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:4171:13803":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"24:242:3141":{"crate_id":24,"path":["ppv_lite86","types","u128x1"],"kind":"trait"},"5:1366:10783":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:23384:12210":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"6:5405:11572":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"5:3925:12982":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"16:4402:10583":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:982:12956":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:6606:232":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"1:5576:133":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"21:0:3099":{"crate_id":21,"path":["zerocopy"],"kind":"module"},"2:13459:13017":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:5045:13816":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:15868:10268":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:33002:3107":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:6310:9041":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:14482:13662":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:4621:9034":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:3317:121":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:14368:9320":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"16:0:2964":{"crate_id":16,"path":["gimli"],"kind":"module"},"6:5051:11450":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:9425:13152":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"17:11989:8840":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:13387:8852":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"11:123:8975":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:15624:10219":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:10176:21766":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:1867:722":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:47138:12526":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"5:5560:14309":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:2226:14290":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:11842:12836":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"5:6746:33619":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:15721:10230":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:6775:12365":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:41557:12352":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:13000:21910":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"5:7549:12999":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:2722:10553":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"16:7369:8953":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"5:1247:35219":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"1:6503:9220":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"1:5344:13096":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"5:1582:9013":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"1:8336:9209":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"5:3079:8623":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:46885:12506":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"11:718:9015":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"16:2988:10565":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"5:1612:9015":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:9432:9219":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"1:12641:1208":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"11:389:35372":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"21:2863:8799":{"crate_id":21,"path":["zerocopy","wrappers","Unalign"],"kind":"struct"},"2:4850:8662":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:15785:10250":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"18:718:9496":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"14:186:20783":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:9237:9211":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:2663:13075":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:13021:21911":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"6:6769:11903":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:12959:13025":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:8654:13783":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:4776:13010":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"6:4997:11421":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"11:2115:12963":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:47269:12533":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:45820:12492":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"6:6670:11866":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"1:12655:761":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"11:2374:8719":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2:8314:158":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:10766:8837":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"21:2354:8796":{"crate_id":21,"path":["zerocopy","byteorder","I128"],"kind":"struct"},"1:11420:12698":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"17:13996:9816":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"11:1558:12969":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:8434:9231":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:1011:12962":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"21:600:35761":{"crate_id":21,"path":["zerocopy","sealed","ByteSliceSealed"],"kind":"trait"},"2:3540:14267":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:41300:12337":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"16:2528:10544":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:16341:10416":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"16:6901:10687":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"5:1211:35218":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:909:8719":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"24:206:3138":{"crate_id":24,"path":["ppv_lite86","types","Vec2"],"kind":"trait"},"17:16613:9796":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"16:6082:10611":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"5:1227:33818":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:16573:10480":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"16:2746:10554":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:4803:13849":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:13909:8863":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:14094:9042":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"5:7248:33679":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:12944:8848":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:15595:10213":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:4071:9317":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:43565:8629":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:42860:8723":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"20:133:25991":{"crate_id":20,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"2:41370:13039":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"18:507:9470":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:8569:9234":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"17:12990:9713":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"5:3332:10997":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:2424:12176":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:4371:13828":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"21:2147:8795":{"crate_id":21,"path":["zerocopy","byteorder","I64"],"kind":"struct"},"24:903:2869":{"crate_id":24,"path":["ppv_lite86","dispatch_light128"],"kind":"macro"},"6:532:11126":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:8249:12122":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"5:1483:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:8500:10898":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:26659:283":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:11654:12819":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"16:7551:21711":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"16:6186:10617":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"17:11667:9620":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:45238:12460":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:16021:10309":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:1494:11161":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:7308:11973":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:41322:12179":{"crate_id":2,"path":["core","ffi","va_list","VaListImpl"],"kind":"struct"},"2:44611:12204":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"8:0:2957":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:3331:30621":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"9:318:11047":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"6:4792:11303":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:11063:35410":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"18:548:165":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:2872:213":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:14365:9905":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"17:12072:8979":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:11383:12688":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:13133:9721":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"1:8720:12669":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"11:787:12982":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"2:4555:14052":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"17:14454:9919":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:23433:31788":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:14021:9818":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"24:248:3143":{"crate_id":24,"path":["ppv_lite86","types","u64x2x2"],"kind":"trait"},"17:14690:9954":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"16:544:8895":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"11:2469:20769":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:23628:12237":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"6:8260:12126":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:5477:11617":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"16:6109:10615":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:11690:9622":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:45371:12471":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:15186:10051":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"21:358:8693":{"crate_id":21,"path":["zerocopy","FromZeroes"],"kind":"trait"},"17:10840:8838":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:2339:151":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:3158:150":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"1:7820:28550":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:44337:12416":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:5069:11461":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:6061:13107":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"20:148:2576":{"crate_id":20,"path":["rand_core","CryptoRng"],"kind":"trait"},"6:4816:11320":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"6:5025:11437":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:31325:8514":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"18:563:8803":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:14054:13027":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"1:1996:13070":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:3877:12809":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:41587:12355":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"22:0:3100":{"crate_id":22,"path":["byteorder"],"kind":"module"},"1:1919:13067":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:32928:8662":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"}},"external_crates":{"23":{"name":"zerocopy_derive","html_root_url":null},"20":{"name":"rand_core","html_root_url":"https://rust-random.github.io/rand/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"byteorder","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"24":{"name":"ppv_lite86","html_root_url":null},"21":{"name":"zerocopy","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":33}