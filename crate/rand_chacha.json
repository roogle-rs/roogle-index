{"root":"0:0:1806","crate_version":"0.3.1","includes_private":false,"index":{"0:163":{"id":"0:163","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:164:171","0:165:1944","0:166:1945"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:145:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:205:461":{"id":"0:205:461","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2748-0:133:1798":{"id":"b:2:2748-0:133:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:182:1987":{"id":"0:182:1987","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:72:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:271:1800":{"id":"0:271:1800","crate_id":0,"name":"ChaCha8Core","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"ChaCha with 8 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42477:13237-0:271:1800","a:2:2966:253-0:271:1800","a:2:32825:244-0:271:1800","a:2:32882:2442-0:271:1800","a:2:42476:13031-0:271:1800","b:2:2754-0:271:1800","b:2:2744-0:271:1800","b:2:2748-0:271:1800","b:2:2441-0:271:1800","b:2:2444-0:271:1800","b:2:3558-0:271:1800","b:2:2759-0:271:1800","b:5:687-0:271:1800","b:21:270-0:271:1800","0:232","0:273","0:278","0:230","0:276","0:242","0:237","0:275","0:260"]}}},"b:2:2444-0:133:1798":{"id":"b:2:2444-0:133:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:24780"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:97:1945":{"id":"0:97:1945","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:1921","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195":{"id":"0:195","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2759-0:280:1801":{"id":"b:2:2759-0:280:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12867:32869":{"id":"2:12867:32869","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:21:270-0:142:1799":{"id":"b:21:270-0:142:1799","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"21:263:2225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"21:267:2484","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["21:273:24783"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2759-0:202:1796":{"id":"b:2:2759-0:202:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12903:28372":{"id":"2:12903:28372","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:13448"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:177:1952":{"id":"0:177:1952","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:134:1924","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:237":{"id":"0:237","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:134:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:238:1951","0:240:1952"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:95:171","0:96:1944","0:97:1945"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:282":{"id":"0:282","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:283:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"20:123:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:248:1983","0:249:1984","0:250:1985","0:251:1987"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:133:1798":{"id":"0:133:1798","crate_id":0,"name":"ChaCha20Core","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42477:13237-0:133:1798","a:2:2966:253-0:133:1798","a:2:32825:244-0:133:1798","a:2:32882:2442-0:133:1798","a:2:42476:13031-0:133:1798","b:2:2754-0:133:1798","b:2:2744-0:133:1798","b:2:2748-0:133:1798","b:2:2441-0:133:1798","b:2:2444-0:133:1798","b:2:3558-0:133:1798","b:2:2759-0:133:1798","b:5:687-0:133:1798","b:21:270-0:133:1798","0:94","0:138","0:140","0:104","0:99","0:137","0:135","0:92","0:122"]}}},"a:2:42476:13031-0:202:1796":{"id":"a:2:42476:13031-0:202:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:13031","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:114":{"id":"0:114","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:115:1993","0:116:2009","0:117:2022","0:118:2027","0:119:2030"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:188:2030":{"id":"0:188:2030","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:668":{"id":"0:208:668","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:96:1944":{"id":"0:96:1944","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:18:1933","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:128:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:21:270-0:133:1798":{"id":"b:21:270-0:133:1798","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"21:263:2225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"21:267:2484","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["21:273:24783"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:251:1987":{"id":"0:251:1987","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:72:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:171:1952":{"id":"0:171:1952","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:134:1924","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32825:244-0:211:1797":{"id":"a:2:32825:244-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:235:1945":{"id":"0:235:1945","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:1921","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:134:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:100:1951","0:102:1952"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2744-0:133:1798":{"id":"b:2:2744-0:133:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:1997"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:92":{"id":"0:92","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:93:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2762:135":{"id":"2:2762:135","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32755:10399","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:123:752":{"id":"0:123:752","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111:1984":{"id":"0:111:1984","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:175:1951":{"id":"0:175:1951","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"a:2:2966:253-0:211:1797":{"id":"a:2:2966:253-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2744-0:211:1797":{"id":"b:2:2744-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:1997"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2744-0:280:1801":{"id":"b:2:2744-0:280:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:1997"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:244:1951":{"id":"0:244:1951","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:88-0:280:1801":{"id":"0:88-0:280:1801","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[27,71],"end":[27,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Rng","name":"ChaCha8Rng","id":"0:280:1801","glob":false}}},"2:12895:30329":{"id":"2:12895:30329","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12896:30327"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44513:11879","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12879:28330":{"id":"2:12879:28330","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42354:198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10651:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10651:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42476:13031-0:142:1799":{"id":"a:2:42476:13031-0:142:1799","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:13031","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:117:2022":{"id":"0:117:2022","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2966:253-0:142:1799":{"id":"a:2:2966:253-0:142:1799","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:232":{"id":"0:232","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:233:171","0:234:1944","0:235:1945"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12898:32875":{"id":"2:12898:32875","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44503:11878","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32882:2442-0:142:1799":{"id":"a:2:32882:2442-0:142:1799","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12963:32885":{"id":"2:12963:32885","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:137":{"id":"0:137","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:116:2009":{"id":"0:116:2009","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12989:25982":{"id":"2:12989:25982","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:280:1801":{"id":"b:2:2754-0:280:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12958:32882":{"id":"2:12958:32882","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"20:133:24784":{"id":"20:133:24784","crate_id":20,"name":"as_rngcore","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand_core-0.6.4/src/lib.rs","begin":[235,4],"end":[235,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"RngCore","id":"20:123:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213":{"id":"0:213","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:214:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:234:1944":{"id":"0:234:1944","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:18:1933","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"0:138":{"id":"0:138","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:139:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:174":{"id":"0:174","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:134:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:175:1951","0:177:1952"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:240:1952":{"id":"0:240:1952","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:134:1924","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3-20:0:1793":{"id":"0:3-20:0:1793","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[21,0],"end":[21,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"rand_core","name":"rand_core","id":"20:0:1793","glob":false}}},"b:21:270-0:202:1796":{"id":"b:21:270-0:202:1796","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"21:263:2225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"21:267:2484","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["21:273:24783"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12994:28251":{"id":"2:12994:28251","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:910:34710"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211:1797":{"id":"0:211:1797","crate_id":0,"name":"ChaCha12Rng","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:154:1920","`RngCore`":"20:123:1923"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:183","a:2:42477:13237-0:211:1797","a:2:2966:253-0:211:1797","a:2:32825:244-0:211:1797","a:2:32882:2442-0:211:1797","a:2:42476:13031-0:211:1797","b:2:2754-0:211:1797","b:2:2744-0:211:1797","b:2:2748-0:211:1797","b:2:2441-0:211:1797","b:2:2444-0:211:1797","b:2:3558-0:211:1797","b:2:2759-0:211:1797","b:5:687-0:211:1797","b:20:131-0:211:1797","b:21:270-0:211:1797","0:193","0:178","0:195","0:191","0:190","0:215","0:174","0:213"]}}},"a:2:42477:13237-0:271:1800":{"id":"a:2:42477:13237-0:271:1800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:13237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:95:171":{"id":"0:95:171","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"5:5559:33581":{"id":"5:5559:33581","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7571:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:125:668":{"id":"0:125:668","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2759-0:271:1800":{"id":"b:2:2759-0:271:1800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:84-0:211:1797":{"id":"0:84-0:211:1797","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[27,18],"end":[27,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Rng","name":"ChaCha12Rng","id":"0:211:1797","glob":false}}},"0:161":{"id":"0:161","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:162:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12991:25984":{"id":"2:12991:25984","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121":{"id":"0:121","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:128:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:687-0:142:1799":{"id":"b:5:687-0:142:1799","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:7942","5:690:7943","5:691:7944"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:238:1951":{"id":"0:238:1951","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"2:12870:32871":{"id":"2:12870:32871","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12868:32870"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12979:32889":{"id":"2:12979:32889","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:13448"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:128:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2748-0:202:1796":{"id":"b:2:2748-0:202:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:124":{"id":"0:124","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:125:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:183":{"id":"0:183","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:184:1993","0:185:2009","0:186:2022","0:187:2027","0:188:2030"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2744-0:271:1800":{"id":"b:2:2744-0:271:1800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:1997"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:106:1951":{"id":"0:106:1951","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"a:2:42476:13031-0:133:1798":{"id":"a:2:42476:13031-0:133:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:13031","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:169:1951":{"id":"0:169:1951","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:285:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12929:32877":{"id":"2:12929:32877","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12558:13448","str::split":"2:12917:25176","prim@char":"1:12055:457","str::split_terminator":"2:12926:32876"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44307:11867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:13446","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:261:752"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32825:244-0:142:1799":{"id":"a:2:32825:244-0:142:1799","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12926:32876":{"id":"2:12926:32876","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12558:13448","str::split":"2:12917:25176","prim@char":"1:12055:457","`DoubleEndedIterator`":"2:7942:128","str::rsplit_terminator":"2:12929:32877"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44289:11866","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12900:28371":{"id":"2:12900:28371","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:13448"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:271:1800":{"id":"b:2:2754-0:271:1800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:89:1803":{"id":"0:89:1803","crate_id":0,"name":"ChaChaRng","span":{"filename":"src/lib.rs","begin":[31,0],"end":[31,33]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"2:12888:28355":{"id":"2:12888:28355","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12887:28354","str::split_at_mut_checked":"2:12890:28359"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12892:11882":{"id":"2:12892:11882","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12055:457"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:44209:11860","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12976:32888":{"id":"2:12976:32888","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:13448"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:13446","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12906:28373":{"id":"2:12906:28373","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:13448"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:13446","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:185:2009":{"id":"0:185:2009","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:263:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:687-0:271:1800":{"id":"b:5:687-0:271:1800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:7942","5:690:7943","5:691:7944"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32882:2442-0:202:1796":{"id":"a:2:32882:2442-0:202:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2444-0:202:1796":{"id":"b:2:2444-0:202:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:24780"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:21:270-0:211:1797":{"id":"b:21:270-0:211:1797","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"21:263:2225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"21:267:2484","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["21:273:24783"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:118:2027":{"id":"0:118:2027","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:165:1944":{"id":"0:165:1944","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:18:1933","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"a:2:42477:13237-0:142:1799":{"id":"a:2:42477:13237-0:142:1799","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:13237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:256:2027":{"id":"0:256:2027","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:280:1801":{"id":"b:5:687-0:280:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:7942","5:690:7943","5:691:7944"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12873:24897":{"id":"2:12873:24897","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12106:13449"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:250:1985":{"id":"0:250:1985","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:179:1983":{"id":"0:179:1983","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3560:1643":{"id":"2:3560:1643","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:40123:11631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12877:28329":{"id":"2:12877:28329","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42354:198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10651:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10651:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2966:253-0:280:1801":{"id":"a:2:2966:253-0:280:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:283:461":{"id":"0:283:461","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32882:2442-0:271:1800":{"id":"a:2:32882:2442-0:271:1800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:128:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:687-0:202:1796":{"id":"b:5:687-0:202:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:7942","5:690:7943","5:691:7944"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2758:1630":{"id":"2:2758:1630","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:173":{"id":"0:173","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:128:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:136:461":{"id":"0:136:461","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2759-0:142:1799":{"id":"b:2:2759-0:142:1799","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:166:1945":{"id":"0:166:1945","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:1921","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:187:2027":{"id":"0:187:2027","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:191":{"id":"0:191","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:192:752"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3558-0:271:1800":{"id":"b:2:3558-0:271:1800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2748-0:211:1797":{"id":"b:2:2748-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2441-0:133:1798":{"id":"b:2:2441-0:133:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2402"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42476:13031-0:271:1800":{"id":"a:2:42476:13031-0:271:1800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:13031","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:86-0:142:1799":{"id":"0:86-0:142:1799","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[27,45],"end":[27,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Rng","name":"ChaCha20Rng","id":"0:142:1799","glob":false}}},"0:87-0:271:1800":{"id":"0:87-0:271:1800","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[27,58],"end":[27,69]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Core","name":"ChaCha8Core","id":"0:271:1800","glob":false}}},"a:2:32825:244-0:133:1798":{"id":"a:2:32825:244-0:133:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12967:32887":{"id":"2:12967:32887","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:13448"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274:461":{"id":"0:274:461","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"21:273:24783":{"id":"21:273:24783","crate_id":21,"name":"vzip","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[226,4],"end":[226,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"V"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12894:1986":{"id":"2:12894:1986","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:44225:8417","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32882:2442-0:280:1801":{"id":"a:2:32882:2442-0:280:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:253:1993":{"id":"0:253:1993","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:248:1983":{"id":"0:248:1983","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:246:1952":{"id":"0:246:1952","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:134:1924","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2744-0:142:1799":{"id":"b:2:2744-0:142:1799","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:1997"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2446:24780":{"id":"2:2446:24780","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12987:25978":{"id":"2:12987:25978","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5555:33580":{"id":"5:5555:33580","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:2446","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:281:2446","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12865:882":{"id":"2:12865:882","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12055:457"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:184:1993":{"id":"0:184:1993","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12950:32879":{"id":"2:12950:32879","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12558:13448","`DoubleEndedIterator`":"2:7942:128","prim@char":"1:12055:457","str::rmatch_indices":"2:12953:32880"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44389:11872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:233:171":{"id":"0:233:171","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"5:5574:25981":{"id":"5:5574:25981","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12991:25984"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12889:28358":{"id":"2:12889:28358","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:12890:28359"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42476:13031-0:211:1797":{"id":"a:2:42476:13031-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:13031","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12962:32884":{"id":"2:12962:32884","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:230":{"id":"0:230","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:231:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42477:13237-0:202:1796":{"id":"a:2:42477:13237-0:202:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:13237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2441-0:142:1799":{"id":"b:2:2441-0:142:1799","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2402"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:193":{"id":"0:193","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:194:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32825:244-0:280:1801":{"id":"a:2:32825:244-0:280:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12897:25177":{"id":"2:12897:25177","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44493:11877","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"20:123:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:110:1983","0:111:1984","0:112:1985","0:113:1987"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:135":{"id":"0:135","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:136:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12923:28363":{"id":"2:12923:28363","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12558:13448","`DoubleEndedIterator`":"2:7942:128","prim@char":"1:12055:457","str::split":"2:12917:25176"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44257:11522","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:13446","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3558-0:211:1797":{"id":"b:2:3558-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12953:32880":{"id":"2:12953:32880","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12558:13448","`DoubleEndedIterator`":"2:7942:128","prim@char":"1:12055:457","str::match_indices":"2:12950:32879"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44407:11873","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:13446","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:139:668":{"id":"0:139:668","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2441-0:271:1800":{"id":"b:2:2441-0:271:1800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2402"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12893:11893":{"id":"2:12893:11893","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12055:457"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:44215:11861","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12944:2417":{"id":"2:12944:2417","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12558:13448","`DoubleEndedIterator`":"2:7942:128","prim@char":"1:12055:457","str::rmatches":"2:12947:32878"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44443:11875","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12947:32878":{"id":"2:12947:32878","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12558:13448","`DoubleEndedIterator`":"2:7942:128","prim@char":"1:12055:457","str::matches":"2:12944:2417"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44461:11876","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:13446","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277:668":{"id":"0:277:668","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:162:725":{"id":"0:162:725","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261:752":{"id":"0:261:752","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12864":{"id":"2:12864","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12865:882","2:12866:7882","2:12867:32869","2:12868:32870","2:12870:32871","2:12873:24897","2:12874:32872","2:12875:339","2:12876:28333","2:12877:28329","2:12879:28330","2:12881:28331","2:12883:28332","2:12885:32873","2:12886:32874","2:12887:28354","2:12888:28355","2:12889:28358","2:12890:28359","2:12892:11882","2:12893:11893","2:12894:1986","2:12895:30329","2:12896:30327","2:12897:25177","2:12898:32875","2:12899:30309","2:12900:28371","2:12903:28372","2:12906:28373","2:12909:7922","2:12913:7881","2:12917:25176","2:12920:28361","2:12923:28363","2:12926:32876","2:12929:32877","2:12932:28365","2:12935:28367","2:12938:28369","2:12941:28370","2:12944:2417","2:12947:32878","2:12950:32879","2:12953:32880","2:12956:32881","2:12958:32882","2:12960:32883","2:12962:32884","2:12963:32885","2:12964:32886","2:12967:32887","2:12970:24916","2:12973:28374","2:12976:32888","2:12979:32889","2:12982:32890","2:12985:32891","2:12987:25978","2:12988:28246","2:12989:25982","2:12990:25983","2:12991:25984","2:12992:28249","2:12993:28250","2:12994:28251","2:12995:32892","2:12997:13023","2:12998:32893"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5562:33582":{"id":"5:5562:33582","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7571:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42476:13031-0:280:1801":{"id":"a:2:42476:13031-0:280:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:13031","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:280:1801":{"id":"0:280:1801","crate_id":0,"name":"ChaCha8Rng","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:154:1920","`RngCore`":"20:123:1923"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:252","a:2:42477:13237-0:280:1801","a:2:2966:253-0:280:1801","a:2:32825:244-0:280:1801","a:2:32882:2442-0:280:1801","a:2:42476:13031-0:280:1801","b:2:2754-0:280:1801","b:2:2744-0:280:1801","b:2:2748-0:280:1801","b:2:2441-0:280:1801","b:2:2444-0:280:1801","b:2:3558-0:280:1801","b:2:2759-0:280:1801","b:5:687-0:280:1801","b:20:131-0:280:1801","b:21:270-0:280:1801","0:243","0:282","0:247","0:262","0:264","0:259","0:284","0:260"]}}},"b:20:131-0:280:1801":{"id":"b:20:131-0:280:1801","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand_core-0.6.4/src/lib.rs","begin":[234,0],"end":[234,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"20:128:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RngCore","id":"20:123:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CryptoRngCore","id":"20:129:2454","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["20:133:24784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5572:13154":{"id":"5:5572:13154","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7571:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:140":{"id":"0:140","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2748-0:142:1799":{"id":"b:2:2748-0:142:1799","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:21:270-0:280:1801":{"id":"b:21:270-0:280:1801","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"21:263:2225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"21:267:2484","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["21:273:24783"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3558-0:142:1799":{"id":"b:2:3558-0:142:1799","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:20:131-0:142:1799":{"id":"b:20:131-0:142:1799","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand_core-0.6.4/src/lib.rs","begin":[234,0],"end":[234,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"20:128:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RngCore","id":"20:123:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CryptoRngCore","id":"20:129:2454","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["20:133:24784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2763:1628":{"id":"2:2763:1628","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:192:752":{"id":"0:192:752","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2444-0:271:1800":{"id":"b:2:2444-0:271:1800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:24780"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12883:28332":{"id":"2:12883:28332","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10651:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10651:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:108:1952":{"id":"0:108:1952","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:134:1924","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:263:668":{"id":"0:263:668","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115:1993":{"id":"0:115:1993","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:142:1799":{"id":"0:142:1799","crate_id":0,"name":"ChaCha20Rng","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:154:1920","`RngCore`":"20:123:1923"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:114","a:2:42477:13237-0:142:1799","a:2:2966:253-0:142:1799","a:2:32825:244-0:142:1799","a:2:32882:2442-0:142:1799","a:2:42476:13031-0:142:1799","b:2:2754-0:142:1799","b:2:2744-0:142:1799","b:2:2748-0:142:1799","b:2:2441-0:142:1799","b:2:2444-0:142:1799","b:2:3558-0:142:1799","b:2:2759-0:142:1799","b:5:687-0:142:1799","b:20:131-0:142:1799","b:21:270-0:142:1799","0:124","0:144","0:126","0:146","0:105","0:122","0:121","0:109"]}}},"0:243":{"id":"0:243","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:134:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:244:1951","0:246:1952"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12997:13023":{"id":"2:12997:13023","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4739:13023"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44547:11760","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:20:131-0:211:1797":{"id":"b:20:131-0:211:1797","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand_core-0.6.4/src/lib.rs","begin":[234,0],"end":[234,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"20:128:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RngCore","id":"20:123:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CryptoRngCore","id":"20:129:2454","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["20:133:24784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:273":{"id":"0:273","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:274:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12875:339":{"id":"2:12875:339","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12876:28333","`u8`":"1:12072:1652"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:146":{"id":"0:146","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:147:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12941:28370":{"id":"2:12941:28370","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:13446","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2747:1997":{"id":"2:2747:1997","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2721:142"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12917:25176":{"id":"2:12917:25176","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12558:13448","`DoubleEndedIterator`":"2:7942:128","prim@char":"1:12055:457","str::split_whitespace":"2:12895:30329","str::rsplit":"2:12923:28363"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:44239:11518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:102:1952":{"id":"0:102:1952","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:134:1924","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:145:461":{"id":"0:145:461","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:689:7942":{"id":"5:689:7942","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"a:2:42477:13237-0:280:1801":{"id":"a:2:42477:13237-0:280:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:13237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:687-0:133:1798":{"id":"b:5:687-0:133:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:7942","5:690:7943","5:691:7944"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2444-0:142:1799":{"id":"b:2:2444-0:142:1799","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:24780"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:285:725":{"id":"0:285:725","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12896:30327":{"id":"2:12896:30327","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12895:30329"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44522:11880","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110:1983":{"id":"0:110:1983","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:113:1987":{"id":"0:113:1987","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:72:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:202:1796":{"id":"b:2:2754-0:202:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12885:32873":{"id":"2:12885:32873","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12061:1548","str::slice_mut_unchecked":"2:12886:32874","crate::ops::Index":"2:39955:13058"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3558-0:133:1798":{"id":"b:2:3558-0:133:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12899:30309":{"id":"2:12899:30309","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44531:11881","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12992:28249":{"id":"2:12992:28249","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:910:34710"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2966:253-0:202:1796":{"id":"a:2:2966:253-0:202:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12988:28246":{"id":"2:12988:28246","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40309:28253","Self::is_ascii":"2:12987:25978"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40309:28253","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:216:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12956:32881":{"id":"2:12956:32881","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32825:244-0:271:1800":{"id":"a:2:32825:244-0:271:1800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12982:32890":{"id":"2:12982:32890","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:13448"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:13446","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2441-0:202:1796":{"id":"b:2:2441-0:202:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2402"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:85-0:133:1798":{"id":"0:85-0:133:1798","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[27,31],"end":[27,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Core","name":"ChaCha20Core","id":"0:133:1798","glob":false}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2441-0:211:1797":{"id":"b:2:2441-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2402"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:181:1985":{"id":"0:181:1985","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:690:7943":{"id":"5:690:7943","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:211:1797":{"id":"b:5:687-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:7942","5:690:7943","5:691:7944"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:252":{"id":"0:252","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:253:1993","0:254:2009","0:255:2022","0:256:2027","0:257:2030"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32882:2442-0:211:1797":{"id":"a:2:32882:2442-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:276":{"id":"0:276","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:277:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12887:28354":{"id":"2:12887:28354","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:12889:28358","str::split_at_mut":"2:12888:28355"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12913:7881":{"id":"2:12913:7881","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42354:198","prim@char":"1:12055:457","self::pattern":"2:12558:13448"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:13446","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:216:725":{"id":"0:216:725","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12876:28333":{"id":"2:12876:28333","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12072:1652"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:254:2009":{"id":"0:254:2009","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12874:32872":{"id":"2:12874:32872","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12920:28361":{"id":"2:12920:28361","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:13448"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12374:11521","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:122":{"id":"0:122","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:123:752"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:119:2030":{"id":"0:119:2030","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2759-0:211:1797":{"id":"b:2:2759-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:257:2030":{"id":"0:257:2030","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2748-0:271:1800":{"id":"b:2:2748-0:271:1800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12909:7922":{"id":"2:12909:7922","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42354:198","prim@char":"1:12055:457","self::pattern":"2:12558:13448"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:178":{"id":"0:178","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"20:123:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:179:1983","0:180:1984","0:181:1985","0:182:1987"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12935:28367":{"id":"2:12935:28367","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12055:457","str::splitn":"2:12932:28365","self::pattern":"2:12558:13448"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44361:11870","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:13446","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12964:32886":{"id":"2:12964:32886","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:13448"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12583:13445","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12868:32870":{"id":"2:12868:32870","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112:1985":{"id":"0:112:1985","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:278":{"id":"0:278","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:90:1805":{"id":"0:90:1805","crate_id":0,"name":"ChaChaCore","span":{"filename":"src/lib.rs","begin":[33,0],"end":[33,35]},"visibility":"public","docs":"ChaCha with 20 rounds, low-level interface","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"2:12866:7882":{"id":"2:12866:7882","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12973:28374":{"id":"2:12973:28374","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:13448"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:13446","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180:1984":{"id":"0:180:1984","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:1806":{"id":"0:0:1806","crate_id":0,"name":"rand_chacha","span":{"filename":"src/lib.rs","begin":[9,0],"end":[33,35]},"visibility":"public","docs":"The ChaCha random number generator.","links":{},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\", html_favicon_url\n= \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://rust-random.github.io/rand/\")]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:3-20:0:1793","0:83-0:202:1796","0:84-0:211:1797","0:85-0:133:1798","0:86-0:142:1799","0:87-0:271:1800","0:88-0:280:1801","0:89:1803","0:90:1805"],"is_stripped":false}}},"2:12970:24916":{"id":"2:12970:24916","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:13448"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2757:135":{"id":"2:2757:135","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"a:2:2966:253-0:133:1798":{"id":"a:2:2966:253-0:133:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2748-0:280:1801":{"id":"b:2:2748-0:280:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42477:13237-0:211:1797":{"id":"a:2:42477:13237-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:13237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:194:668":{"id":"0:194:668","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12960:32883":{"id":"2:12960:32883","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5570:33583":{"id":"5:5570:33583","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7571:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2444-0:280:1801":{"id":"b:2:2444-0:280:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:24780"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12985:32891":{"id":"2:12985:32891","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12519:134","`FromStr`":"2:12518:13248"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12518:13248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12518:13248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:249:1984":{"id":"0:249:1984","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:168":{"id":"0:168","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:134:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:169:1951","0:171:1952"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42477:13237-0:133:1798":{"id":"a:2:42477:13237-0:133:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:13237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32825:244-0:202:1796":{"id":"a:2:32825:244-0:202:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:231:725":{"id":"0:231:725","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12881:28331":{"id":"2:12881:28331","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10651:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10651:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:205:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12886:32874":{"id":"2:12886:32874","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12061:1548","crate::ops::IndexMut":"2:3220:13059","str::slice_unchecked":"2:12885:32873"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12890:28359":{"id":"2:12890:28359","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:12889:28358"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12998:32893":{"id":"2:12998:32893","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4736:32893"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44556:11768","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:211:1797":{"id":"b:2:2754-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3558-0:280:1801":{"id":"b:2:3558-0:280:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:93:725":{"id":"0:93:725","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:133:1798":{"id":"b:2:2754-0:133:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12938:28369":{"id":"2:12938:28369","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5556:13686":{"id":"5:5556:13686","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7571:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5573:25980":{"id":"5:5573:25980","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12990:25983"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12995:32892":{"id":"2:12995:32892","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4738:32892"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44538:11769","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:255:2022":{"id":"0:255:2022","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[345,0],"end":[345,75]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12932:28365":{"id":"2:12932:28365","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:13448","str::rsplitn":"2:12935:28367"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44343:11869","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:12387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12990:25983":{"id":"2:12990:25983","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:42-21:274:2220":{"id":"0:42-21:274:2220","crate_id":0,"name":null,"span":{"filename":"src/guts.rs","begin":[14,0],"end":[14,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"ppv_lite86::Machine","name":"Machine","id":"21:274:2220","glob":false}}},"0:147:725":{"id":"0:147:725","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83-0:202:1796":{"id":"0:83-0:202:1796","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[27,4],"end":[27,16]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Core","name":"ChaCha12Core","id":"0:202:1796","glob":false}}},"b:2:2744-0:202:1796":{"id":"b:2:2744-0:202:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:1997"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5571:33584":{"id":"5:5571:33584","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:281:2446","`String`":"5:7571:250"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:2446","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:202:1796":{"id":"0:202:1796","crate_id":0,"name":"ChaCha12Core","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"ChaCha with 12 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42477:13237-0:202:1796","a:2:2966:253-0:202:1796","a:2:32825:244-0:202:1796","a:2:32882:2442-0:202:1796","a:2:42476:13031-0:202:1796","b:2:2754-0:202:1796","b:2:2744-0:202:1796","b:2:2748-0:202:1796","b:2:2441-0:202:1796","b:2:2444-0:202:1796","b:2:3558-0:202:1796","b:2:2759-0:202:1796","b:5:687-0:202:1796","b:21:270-0:202:1796","0:204","0:168","0:173","0:161","0:209","0:191","0:163","0:207","0:206"]}}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:128:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:18:1933":{"id":"0:18:1933","crate_id":0,"name":"Array64","span":{"filename":"src/chacha.rs","begin":[27,0],"end":[27,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"b:21:270-0:271:1800":{"id":"b:21:270-0:271:1800","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"21:263:2225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"21:267:2484","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["21:273:24783"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5554":{"id":"5:5554","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5555:33580","5:5556:13686","5:5559:33581","5:5562:33582","5:5570:33583","5:5571:33584","5:5572:13154","5:5573:25980","5:5574:25981"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:186:2022":{"id":"0:186:2022","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2750:752":{"id":"2:2750:752","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:164:171":{"id":"0:164:171","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"b:2:3558-0:202:1796":{"id":"b:2:3558-0:202:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:214:461":{"id":"0:214:461","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12993:28250":{"id":"2:12993:28250","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:910:34710"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2759-0:133:1798":{"id":"b:2:2759-0:133:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2441-0:280:1801":{"id":"b:2:2441-0:280:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:280:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2402"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[344,0],"end":[344,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:202:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:208:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32882:2442-0:133:1798":{"id":"a:2:32882:2442-0:133:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:133:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2443:2402":{"id":"2:2443:2402","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:691:7944":{"id":"5:691:7944","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:142:1799":{"id":"b:2:2754-0:142:1799","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:105":{"id":"0:105","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"20:134:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:142:1799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:106:1951","0:108:1952"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2966:253-0:271:1800":{"id":"a:2:2966:253-0:271:1800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:271:1800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:100:1951":{"id":"0:100:1951","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[343,0],"end":[343,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"b:2:2444-0:211:1797":{"id":"b:2:2444-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:24780"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}}},"paths":{"2:44225:8417":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:2795:123":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:2721:142":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"5:786:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"21:1530:8005":{"crate_id":21,"path":["ppv_lite86","x86_64","NoA2"],"kind":"struct"},"2:7333:13676":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:10646:12509":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"17:10419:8418":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"11:2554:33670":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:7946:137":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:12076:1648":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:30979:8622":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"6:4847:10918":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:43074:7948":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:44987:8613":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"17:13753:9294":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"11:328:10389":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"11:2403:8034":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"17:9671:20553":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"6:4947:10962":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:46721:11949":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"21:260:2483":{"crate_id":21,"path":["ppv_lite86","types","u128x4"],"kind":"trait"},"6:5044:11021":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:9002:12087":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"5:4426:8218":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:11079:11869":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:12328:9096":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:15400:9697":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:14968:9600":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:15058:8447":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"18:670:12183":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"16:3773:9975":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"5:1478:8579":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:22755:11536":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:42476:13031":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"16:4761:9992":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"16:5846:12283":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:12530:12271":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"18:726:8388":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:8599:8033":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"16:6221:8519":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"6:4529:10800":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"16:5759:10025":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:12297:11868":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:12072:1652":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:23797:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:2341:642":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"5:7477:13042":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"5:3211:32241":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:13553:9242":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:1072:12354":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"16:2979:9969":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"21:967:8370":{"crate_id":21,"path":["ppv_lite86","soft","x4"],"kind":"struct"},"2:48449:7847":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:4375:10713":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:7968:8641":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"16:4907:9997":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:39875:8038":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:14587:9441":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:22477:13387":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"17:3473:12196":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"6:5146:11065":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"6:4610:10842":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:22211:13390":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"17:261:12185":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:12824:20577":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:48309:12003":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:21341:30914":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:46326:11937":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"11:123:8178":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:15473:9716":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:15582:9760":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:10155:8392":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:15023:9612":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:48355:12004":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:9781:20568":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:46445:11942":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:33967:13301":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:4890:13183":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:893:8212":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"18:538:8381":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:41123:11789":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:39296:13705":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"21:1510:7999":{"crate_id":21,"path":["ppv_lite86","x86_64","NoS4"],"kind":"struct"},"2:32795:10225":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"17:15356:9686":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"5:6032:14016":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"18:548:150":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:4841:10915":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:42332:11832":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:11242:12218":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"5:4267:8033":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"5:5020:8218":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:13899:9318":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:40787:11767":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:8300:13163":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"16:4968:9999":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:4448:12380":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:3494:12059":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:3268:12440":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:22771:30296":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"11:1896:8232":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"2:10651:246":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:46242:11934":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"20:162:2455":{"crate_id":20,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"1:8605:12078":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:9284:12430":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"1:12053:407":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"16:7595:8539":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:42418:8034":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"5:2157:8209":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"16:6320:10078":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"19:0:1142":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:46751:11950":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:9054:12496":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:2032:205":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:12070:805":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:44833:11904":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:8534:12076":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"16:2553:9947":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:48185:12002":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:43592:8629":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:15655:9780":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"16:5726:10018":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:4706:11334":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"17:14723:9450":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:10170:8393":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:14489:9427":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"6:5015:11004":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:11382:12113":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:11038:12390":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"5:7311:7886":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"6:6047:11200":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:8916:7886":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:10137:20551":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:4093:8218":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"16:7537:8537":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:46627:2476":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"6:6100:11225":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:14235:9385":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:6612:13266":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"5:7419:7886":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"16:3830:9976":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:5708:12010":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"16:7951:10295":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"11:1923:10394":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"17:13959:9327":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"12:0:2306":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:10622:33705":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:44522:11880":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:10185:8411":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:41607:11811":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"21:183:2467":{"crate_id":21,"path":["ppv_lite86","types","RotateEachWord32"],"kind":"trait"},"11:710:8581":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"5:3622:8034":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:12054:1044":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:44686:11895":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"16:2319:9936":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"11:434:33675":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"11:2548:10397":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:1686:8191":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"11:2352:12351":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"17:11621:8405":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:22123:13122":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"11:430:33674":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:16093:9893":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"2:3556:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:13986:9332":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:10524:12200":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:42280:11830":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"6:4830:10907":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"5:3245:32245":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"6:1650:10650":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:15313:9671":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:6595:8265":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"16:6376:10080":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:43378:7945":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:12027:13030":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:3008:7966":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"2:3185:138":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:40066:223":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"16:6141:33694":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:41135:11790":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:2977:8291":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:9163:12091":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"17:16259:9204":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"2:48489:7851":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:12454:9111":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"5:7492:8222":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"21:892:8368":{"crate_id":21,"path":["ppv_lite86","soft","x2"],"kind":"struct"},"1:3349:12444":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:4380:12451":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:38552:13701":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:7602:9013":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"6:6107:11226":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:43984:12408":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:40764:11765":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:11764:9049":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"2:1795:641":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"6:4566:10821":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"10:0:2304":{"crate_id":10,"path":["adler"],"kind":"module"},"6:6927:11422":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:7735:12469":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"6:7679:11469":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"6:1570:10593":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:46941:11956":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:8892:8643":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"16:6803:12303":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:2504:208":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:42174:8624":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"2:34144:13697":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:4517:8257":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:13922:9323":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:43341:30357":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"16:7971:12335":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"16:7565:10236":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"17:15214:9648":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:12724:20576":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:13367:8282":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:16165:9911":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"1:8413:12064":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"18:491:8881":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:8071:8654":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"16:4937:9998":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"16:6215:8517":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"18:765:24760":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:11606:12393":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"1:3569:13120":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"6:4745:10863":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:44123:12411":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:10670:12098":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"1:12071:801":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:22975:196":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"17:14271:9390":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:3227:25706":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:44209:11860":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:34085:13695":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:39959:11626":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:10845:11518":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"16:2399:9940":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:8066:12478":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:33488:10182":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:13485:9223":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:32826:2441":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:14545:9434":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:45210:11924":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:10746:24928":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:12251:12265":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"16:6268:8520":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:11367:8407":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:24025:243":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:5849:8644":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"21:1540:8007":{"crate_id":21,"path":["ppv_lite86","x86_64","NoNI"],"kind":"struct"},"5:6549:8191":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"5:1287:12351":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:640:12422":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"16:6431:8523":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"14:40:9186":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:31574:203":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:7912:12474":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"5:281:2446":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"21:1560:7996":{"crate_id":21,"path":["ppv_lite86","x86_64","Avx2Machine"],"kind":"struct"},"2:39955:13058":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:10718:126":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"16:8109:135":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:40008:219":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"21:1505:8001":{"crate_id":21,"path":["ppv_lite86","x86_64","YesS4"],"kind":"struct"},"2:1923:11507":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"6:4523:10798":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"6:6128:11232":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"5:7331:8212":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"17:12508:9117":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:44669:11894":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:21370:30917":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"1:6665:13268":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"17:9984:20573":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"11:299:10386":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:13814:9306":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:40136:11632":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:43416:7947":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:32802:12400":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"17:14298:9393":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:44407:11873":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:11354:12223":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:16138:9902":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"17:13344:8446":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"5:4381:270":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:8051:176":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"6:6086:11214":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:14012:9335":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:3188:139":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"6:7371:11440":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"16:5959:19614":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"16:6724:10148":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:9445:136":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"6:4628:10853":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:15168:9637":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:7639:11461":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:8253:8596":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:12408:8425":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"6:6813:11351":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:40993:11527":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:2718:160":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"16:3010:8917":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:13252:9189":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"11:2231:8549":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"6:5891:11115":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:47465:11972":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"16:2617:9950":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"6:1501:10554":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:4914:10945":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"6:6079:11213":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:4975:13222":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:10008:7958":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:41044:8599":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:10054:12429":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"18:718:8908":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:12433:8426":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:13239:12397":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:548:10523":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:637:12420":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:11227:12217":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:6590:11516":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"5:2167:11478":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:4453:12381":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:8336:12061":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:1602:10393":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"0:89:1803":{"crate_id":0,"path":["rand_chacha","ChaChaRng"],"kind":"type_alias"},"17:12711:135":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"21:178:2222":{"crate_id":21,"path":["ppv_lite86","types","ArithOps"],"kind":"trait"},"16:4518:9985":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:40895:30305":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:10211:150":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"11:774:8579":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:8354:12487":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:10448:8272":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:7863:13674":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:14325:9397":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:40738:11762":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"11:844:13043":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:859:7886":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"5:7571:250":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:5309:210":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:45250:10403":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"5:7302:8576":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"17:12201:12261":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:12038:24915":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"16:4844:9995":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:14341:9399":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:836:8033":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:11661:9038":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:22699:8617":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:26425:272":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"6:6169:11244":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:11288:10456":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"17:14463:9425":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:46274:11935":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:12478:9113":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:8370:12063":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"11:883:12349":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:1900:13725":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"20:0:1793":{"crate_id":20,"path":["rand_core"],"kind":"module"},"17:1098:12188":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:15760:9810":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"5:1506:8581":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:14560:9438":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:6934:11425":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:21512:13122":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"17:11595:8419":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:13674:9260":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:48568:7856":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"21:263:2225":{"crate_id":21,"path":["ppv_lite86","types","MultiLane"],"kind":"trait"},"5:2196:8583":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"5:7319:11490":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:3230:26422":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:44556:11768":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:41216:11797":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:13235:9186":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"6:5117:11056":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2:2959:7961":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"16:6462:20507":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:12388:9106":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"6:542:10520":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"21:216:2474":{"crate_id":21,"path":["ppv_lite86","types","Words4"],"kind":"trait"},"17:15376:9692":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:6254:10072":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:3264:12195":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"5:7361:32210":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:3739:13165":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:2037:12190":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:5238:10002":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"10:36:10404":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"14:220:10383":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"6:5897:11116":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"11:1582:12356":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"16:6077:8497":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:15456:9709":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:5515:112":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:21565:13122":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:3665:8212":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"16:7889:10287":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:6849:12304":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:3804:12448":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"18:581:7870":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:11537:12230":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:15190:9643":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"6:1558:10585":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:4491:9984":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:40806:11760":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:40026:222":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:16235:9927":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"21:224:2475":{"crate_id":21,"path":["ppv_lite86","types","Swap64"],"kind":"trait"},"2:48530:7854":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:42352:201":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"6:6804:11348":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"16:2749:9956":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"21:1593:2461":{"crate_id":21,"path":["ppv_lite86","x86_64","vec512_storage"],"kind":"union"},"1:4035:13170":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:3027:10186":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:7679:8295":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:43816:11851":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:8616:12079":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"11:837:12343":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:2035:204":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:42130:11817":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"16:7706:20514":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"13:226:8547":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:11865:12251":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:15992:9874":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"6:4549:10811":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"18:573:8882":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:11743:9045":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"2:9150:12387":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"16:7998:8541":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:45202:12414":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"6:123:14097":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:43835:11853":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:16050:9199":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"6:4884:10931":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:6011:8227":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:12929:9141":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"6:7604:11453":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"6:1703:10678":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"5:1425:8033":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:10688:12104":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"17:12993:20578":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:32827:251":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"5:6893:8242":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"6:7657:11464":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:14189:9375":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"18:689:8903":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:6366:227":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:40046:221":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"21:220:2224":{"crate_id":21,"path":["ppv_lite86","types","LaneWords4"],"kind":"trait"},"2:32914:113":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"21:247:2480":{"crate_id":21,"path":["ppv_lite86","types","u64x4"],"kind":"trait"},"6:4800:10892":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:10350:8416":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:13064:9151":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"16:6230:10068":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"6:588:10544":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:10440:12439":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"2:32912:7967":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"17:437:8970":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:13526:9233":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:9130:184":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:12887:8430":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:7740:12012":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:11841:8328":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:621:12419":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"21:1495:8000":{"crate_id":21,"path":["ppv_lite86","x86_64","YesS3"],"kind":"struct"},"1:3560:25115":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"6:5130:11062":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"21:1580:2460":{"crate_id":21,"path":["ppv_lite86","x86_64","vec256_storage"],"kind":"union"},"1:10699:8655":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"9:329:10441":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:7225:20511":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:43576:8626":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:3431:13413":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:4236:13492":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"16:7118:8024":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"17:15102:9621":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"18:643:8882":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:41580:11808":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:12336:11874":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:11121:12392":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"11:1107:12352":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"18:698:8386":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:12572:8396":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"5:3702:8191":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"5:7375:7886":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:22319:13122":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"6:4595:10835":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:4616:10844":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:7907:8963":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"16:4433:9982":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:12362:9105":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:38662:13703":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:10769:33704":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:645:13025":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:41091:11785":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:12074:1650":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:44979:11919":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:15176:9640":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"11:1728:153":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:21971:13122":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"17:403:12186":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:11042:12208":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:10155:12921":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"6:1528:10565":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:8289:12484":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:3551:7954":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:10229:112":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"1:1585:8232":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"16:7400:8531":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:42495:233":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"5:2718:11486":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"5:3199:8033":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:11335:8650":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:12792:8984":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"11:1160:12354":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:15635:9777":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:4005:13168":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"11:2569:11492":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:44035:11523":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:4461:10769":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"6:4755:10870":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:11166:9022":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:11228:12514":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"11:2151:12351":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:12213:12262":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:46130:11929":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:6880:13302":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"21:1445:8878":{"crate_id":21,"path":["ppv_lite86","x86_64","sse2","avx2","u32x4x2_avx2"],"kind":"struct"},"2:42898:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:41365:11802":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:14503:9430":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:46196:11932":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:42551:7886":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"5:3596:180":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"16:6941:20510":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"16:3406:9971":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"11:2542:10396":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"21:1520:8003":{"crate_id":21,"path":["ppv_lite86","x86_64","NoA1"],"kind":"struct"},"1:939:12346":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:4170:12378":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:4805:13510":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:47855:11999":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:3435:11808":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:32882:2442":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:2351:13715":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"5:4881:224":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:47153:11968":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"18:521:24761":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"16:6062:10065":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:40986:12403":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"16:6292:10076":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:1802:11503":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:10828:33700":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"20:72:135":{"crate_id":20,"path":["rand_core","error","Error"],"kind":"struct"},"2:44655:11891":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"6:4488:10784":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:22482:13385":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"2:41558:11805":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"5:1131:32108":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:5829:11072":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"9:501:10459":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:5464:12456":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:11407:12115":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:15944:9185":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"2:5681:8218":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"1:7802:13029":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"6:6718:11321":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:15266:9661":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"6:5068:11028":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:4708:11336":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:40086:13036":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"18:563:8383":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:23609:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"11:1051:12351":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:6535:8305":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:8446:13233":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"6:7610:11454":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:15039:9615":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:2234:12194":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:13146:9162":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"6:4473:10778":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:3545:9972":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:9755:20550":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:11293:20605":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"17:16223:9924":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"1:1809:665":{"crate_id":1,"path":["std","env"],"kind":"module"},"17:14599:9448":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"6:5859:11097":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:12022:8664":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:5640:13253":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:10796:8033":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:13797:9303":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:12671:12275":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"2:21976:13310":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"2:12558:13448":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"16:2789:9958":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:30749:13166":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"11:2469:8232":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"17:13363:9200":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"18:113:24751":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:15616:9772":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:5485:8485":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:42535:8033":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:44955:11913":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:44538:11769":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"16:7452:20512":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"18:80:24749":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"16:6116:12294":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"11:832:12355":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:7788:13028":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:1537:10570":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:8343:12062":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"6:7702:11475":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"5:5170:8227":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:16249:9928":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"17:15206:9646":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"5:2994:32112":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"21:1416:8877":{"crate_id":21,"path":["ppv_lite86","x86_64","sse2","G1"],"kind":"struct"},"1:10381:8316":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"2:12106:13449":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:12543:12272":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"1:7056:26294":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:10338:12489":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:13774:9298":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:15410:9700":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:3392:13150":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"21:1535:8006":{"crate_id":21,"path":["ppv_lite86","x86_64","YesNI"],"kind":"struct"},"17:15126:9623":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:3181:2443":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"16:7869:10286":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:22833:11548":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"6:4556:10814":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"21:296:2485":{"crate_id":21,"path":["ppv_lite86","types","Store"],"kind":"trait"},"2:48107:12001":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:12056:1668":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"5:7383:217":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"16:3177:9935":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"6:1674:10667":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:43081:7949":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:12320:11871":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"16:6895:10166":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:4813:13187":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:13877:9317":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:44443:11875":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"18:0:2311":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:12969:9143":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"5:2249:32212":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:2271:8253":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"5:7548:11498":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"6:6781:11341":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:14356:9403":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:4097:13174":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:9061:8648":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:22615:11532":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"16:5541:10006":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:12659:12274":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"17:11605:8420":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"21:1525:8004":{"crate_id":21,"path":["ppv_lite86","x86_64","YesA2"],"kind":"struct"},"1:1862:12429":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"21:1569:2221":{"crate_id":21,"path":["ppv_lite86","x86_64","vec128_storage"],"kind":"union"},"17:12225:12263":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:44343:11869":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:10927:12388":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"16:6030:10062":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:14111:9348":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"6:5075:11031":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"6:4516:10795":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:4638:13215":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:3049:13708":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"6:5992:11163":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:2438:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:6263:11281":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:45223:178":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:11853:12250":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:46605:2254":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:15390:9694":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:4601:7970":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"5:3266:10394":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"17:13972:9055":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:8407:30852":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"7:31:19480":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:44963:11915":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:42292:12061":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"11:351:33671":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"2:44503:11878":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:9916:20571":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:13375:9203":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"5:2049:8656":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"5:4459:8220":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"18:608:12178":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:8076:13153":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:1578:7886":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"6:4968:10977":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:40866:11776":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:918:8582":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:3386:260":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"18:589:8887":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:23985:11556":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:3266:12439":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"21:0:1807":{"crate_id":21,"path":["ppv_lite86"],"kind":"module"},"1:4538:13197":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:12572:8904":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"6:1913:15447":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:1887:12431":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:8360:8035":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:46995:11958":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:501:10491":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:3999:13169":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:2419:9941":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:41022:8596":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"11:2140:12350":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"6:563:10531":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:11541:12448":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"17:12707:12278":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"5:6631:7886":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"16:2769:9957":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"11:1883:8033":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:44971:11917":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:12695:12277":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"1:1607:10394":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"21:180:2223":{"crate_id":21,"path":["ppv_lite86","types","BitOps32"],"kind":"trait"},"6:4783:10883":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:5555:12281":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:11497:12227":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"6:4908:10942":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:48469:7849":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:7227:2286":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:48458:7848":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:1708:8218":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:10073:12501":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"16:7551:8538":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:39986:217":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"6:6741:11339":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:32791:12399":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:10254:13127":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:1590:10391":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"11:875:12348":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:11075:8613":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"21:232:2254":{"crate_id":21,"path":["ppv_lite86","types","u32x4"],"kind":"trait"},"1:11478:8324":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:10982:20586":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:14986:9605":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"5:692:117":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:7209:27805":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"1:7453:27956":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:42314:11831":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:11089:12212":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"11:2124:10172":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"1:8463:8740":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"9:52:8551":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"11:856:12346":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:1596:10392":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:15624:9773":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:1207:12189":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:34627:13700":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:12089:9084":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"20:128:1922":{"crate_id":20,"path":["rand_core","CryptoRng"],"kind":"trait"},"2:40956:8259":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"16:6737:8482":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"14:7:12339":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:12055:457":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:1581:8212":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"16:6788:33695":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:4057:13172":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:3313:218":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:13594:9253":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:10818:12204":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:12583:13445":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"21:884:2218":{"crate_id":21,"path":["ppv_lite86","dispatch"],"kind":"macro"},"6:1496:10552":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:2175:20632":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"5:0:313":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:8348:13196":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"5:4107:8034":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:48645:7859":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:44289:11866":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"11:1603:12357":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"11:1903:10391":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"9:446:19494":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:21693:13305":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:16198:9918":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"2:9659:8607":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:10443:12441":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"2:43584:8628":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:4764:10875":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:2676:13521":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:4111:13176":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:5484:12457":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"17:15678:9793":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:1697:10677":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:7294:10227":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"11:364:8180":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:4824:10904":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"6:6819:11352":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:4376:7982":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:2509:132":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:21586:8614":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:42426:7886":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:44307:11867":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"16:6282:10075":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:15596:9766":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"21:257:2482":{"crate_id":21,"path":["ppv_lite86","types","u64x2x4"],"kind":"trait"},"6:1691:10674":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:22806:30362":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"5:5404:13433":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:45161:234":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"16:2304:19641":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"2:1832:1199":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:44959:11914":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:9145:159":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"6:119:14096":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"6:4603:10840":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:0:887":{"crate_id":6,"path":["libc"],"kind":"module"},"17:14529:9432":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:15521:9753":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"16:2355:9938":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"7:78:19487":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:22013:30921":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"18:598:33712":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:7823:12473":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"16:3260:9970":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:31100:30332":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"17:10457:136":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"2:44547:11760":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:9467:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"16:6422:8177":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"2:23425:197":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:14260:9389":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"5:1528:217":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:12289:9089":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:1914:11504":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"16:7345:10231":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:44215:11861":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:12238:12264":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:3012:13298":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:42818:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:6056:227":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"16:2641:9951":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:11107:12391":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"16:6610:10129":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:11773:9124":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"5:6903:8243":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"1:4049:13171":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"6:6159:11241":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:7998:8656":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"18:735:24759":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"5:2063:12365":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"17:15418:9701":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:12518:13248":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:11547:8962":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:5815:12460":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:2584:12436":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:9457:8315":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"17:12422:9108":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:1975:712":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"11:2443:8212":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"1:8922:12083":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:11825:12247":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:15368:9689":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:42258:30359":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:9135:241":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"6:1604:10614":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:6858:10162":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"6:5955:11149":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:46464:11943":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"16:5278:10003":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"18:706:8904":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:23891:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"14:187:19584":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:14051:9340":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"6:6868:11389":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:12260:11863":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:13308:8437":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:4119:13178":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:10044:20574":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"15:327:8543":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:42114:11815":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:2712:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"6:1710:10681":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:47649:11974":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"15:0:2308":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:11788:12242":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:44823:11900":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:31043:30341":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:7934:12016":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:4063:13173":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:5151:12453":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:7556:11451":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:46405:11940":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"6:4977:10983":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:48583:7857":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"6:1521:10562":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"16:6759:8526":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"21:1299:8379":{"crate_id":21,"path":["ppv_lite86","x86_64","sse2","u128x1_sse2"],"kind":"struct"},"16:4733:9991":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"21:176:2463":{"crate_id":21,"path":["ppv_lite86","types","BSwap"],"kind":"trait"},"2:44053:12409":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:4:1125":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:4107:13175":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:3376:13709":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"6:4480:10782":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"20:154:1920":{"crate_id":20,"path":["rand_core","block","BlockRng"],"kind":"struct"},"1:5120:12453":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"5:6136:8218":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"17:12318:9094":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"17:15324:9675":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"16:2284:19615":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:11467:9035":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:3801:12447":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:10446:12443":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"2:22668:8616":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:4444:228":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:21324:30908":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"17:11493:12226":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"5:2487:11483":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:7867:13673":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"17:16212:9922":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"1:7982:12476":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:15116:9622":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:46819:11953":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:13214:212":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:13406:149":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"5:2269:8586":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"20:88:24768":{"crate_id":20,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"2:4628:7985":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"5:1496:12355":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:6395:11512":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:8270:8417":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:4811:13186":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:2457:111":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:11413:12116":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:13089:9152":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"16:6445:10091":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:12189:12260":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:2266:136":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:945:12348":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:11324:12219":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"21:274:2220":{"crate_id":21,"path":["ppv_lite86","types","Machine"],"kind":"trait"},"1:5450:12454":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"16:6692:10144":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"21:1205:8378":{"crate_id":21,"path":["ppv_lite86","x86_64","sse2","u64x2_sse2"],"kind":"struct"},"17:13015:8426":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:12264:12266":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:39911:13415":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"2:41105:8602":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:3579:13142":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"21:1515:8002":{"crate_id":21,"path":["ppv_lite86","x86_64","YesA1"],"kind":"struct"},"2:43353:10264":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:21567:13304":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:10259:8612":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:43369:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:3170:8039":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:12074:13780":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"6:489:10486":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:12768:20555":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"1:3308:12441":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:10720:33701":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:4867:8292":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:11443:9034":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:557:12418":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:9452:12474":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"2:42779:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:9799:7946":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"1:909:12355":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:8511:2236":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:42976:8625":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:12863:9140":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:4228:13193":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"6:7692:11473":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"16:6579:20508":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:6713:240":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:14079:9344":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:41167:8603":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"20:18:1921":{"crate_id":20,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"2:22791:30328":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:32755:10399":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:48504:7852":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"16:6546:10115":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:6040:8301":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"1:914:8581":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:7717:12011":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:15445:9708":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:588:13022":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:23245:195":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:13538:9236":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:11680:13442":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:21573:13307":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:11812:12245":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"11:1087:33679":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:41551:11804":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"6:6248:11270":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:15273:9662":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"18:635:8899":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:12621:9120":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"16:5919:20505":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:10661:12202":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:15569:9754":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:14788:9501":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"16:2489:9944":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:9015:8645":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:7942:128":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"16:6045:213":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:44361:11870":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"0:0:1806":{"crate_id":0,"path":["rand_chacha"],"kind":"module"},"2:40884:11777":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:9995:118":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:11067:24913":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:11128:159":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"5:1790:8232":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"1:5822:12463":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"5:266:8191":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:6499:12464":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"16:2709:9954":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:5033:13229":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:41035:8597":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"5:4396:8220":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:12075:1651":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:32883:7968":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:9020:114":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"16:5316:8392":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"16:3600:8922":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"6:5123:11059":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"5:2990:11480":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"16:7932:10292":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:4455:10766":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:15434:9704":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:5885:11112":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:11877:8422":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"16:0:2309":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:5852:11511":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:21312:30908":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"2:42478:2828":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:15701:9794":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:11405:12225":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"9:237:2236":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:3906:12449":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"3:0:484":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:21358:30920":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:10010:213":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:4581:7984":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"9:177:8567":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:9949:11827":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"16:4399:9981":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"11:742:8582":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:43088:7957":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:10915:33707":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:7913:2445":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:44812:13461":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"5:1151:32285":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"16:5878:8470":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:922:12343":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"14:31:12339":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:40798:11768":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:2420:13107":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"5:7351:11491":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"16:6882:10163":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:9220:25898":{"crate_id":1,"path":["std","sys","pal","common","thread_local","fast_local","DtorState"],"kind":"enum"},"1:2268:12435":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:16187:9917":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"2:23515:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:46797:11952":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"16:3709:9973":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:3233:26425":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:41176:11793":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:15769:9814":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:12077:857":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:12647:12273":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"2:39971:220":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:9181:12092":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:9107:8660":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"21:241:2478":{"crate_id":21,"path":["ppv_lite86","types","u32x4x2"],"kind":"trait"},"11:1891:8212":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:8210:8657":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"16:7507:217":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"17:13455:9219":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"13:110:8014":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"5:7063:8252":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:4986:12199":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"2:22125:13306":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"6:7622:11456":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"16:7355:10232":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"11:1887:7886":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:2435:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:42487:8037":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"5:1456:7886":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:7962:126":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:23155:194":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"6:6691:11311":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"11:2562:10400":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:951:12349":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"16:6201:8515":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"16:6348:8521":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"6:1591:10607":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:903:8232":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"2:21339:30919":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"21:253:2277":{"crate_id":21,"path":["ppv_lite86","types","u32x4x4"],"kind":"trait"},"17:13424:9210":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:11634:9036":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:7924:8655":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"5:212:8189":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:44136:11528":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:11574:8549":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"16:5346:10004":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"16:4702:9990":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:11341:12515":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"11:687:8034":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:15092:9620":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"16:7194:33697":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:10431:8271":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:7917:12015":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:14868:9563":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"17:15138:9626":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"16:2509:9945":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"6:483:10483":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:6263:8649":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"1:12066:701":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"9:356:19509":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:7099:8309":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:10869:24927":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:21695:8614":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:22348:13715":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"17:15281:9663":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"2:8363:8036":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:10284:8414":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"6:4351:10696":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:10573:33706":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:43613:2236":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"6:7616:11455":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"9:391:19495":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:14876:9564":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"16:7306:12326":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"16:4674:9989":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:8391:11321":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:48431:12005":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"6:4698:10858":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:13999:9333":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:11128:9006":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:482:8284":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:34026:13696":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"6:580:10539":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"3:234:233":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"16:3856:9977":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"17:12597:9119":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"5:4792:725":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:13165:162":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"16:5662:20503":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:9140:242":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:6139:8296":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:9970:141":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"18:96:24750":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:1446:153":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:42560:203":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"16:4462:9983":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"17:12371:9141":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"17:15814:9820":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"5:1271:10172":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:40777:11766":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"5:4035:8212":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:33302:10185":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"16:5580:9963":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"17:9938:20572":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:12949:9094":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:22722:11533":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:12062:1633":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:7900:143":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"6:4686:10857":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"6:596:10548":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:16121:9900":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"16:6152:8512":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:9951:233":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"2:21302:7870":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"6:4789:10886":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:0:2310":{"crate_id":17,"path":["object"],"kind":"module"},"2:3397:13490":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:32816:11623":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"6:475:10478":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"6:6222:11255":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:10737:24923":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:9039:8605":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"6:4922:10950":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:42662:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:12080:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:12073:1649":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:4198:27802":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"21:238:2477":{"crate_id":21,"path":["ppv_lite86","types","u128x1"],"kind":"trait"},"11:1025:12350":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:10092:20575":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:11644:12118":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:47997:12000":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"5:5980:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:8283:11877":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"5:3206:10392":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:45151:226":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"5:7560:8228":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"5:5360:8191":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"11:1142:12353":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:8951:13272":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"6:7388:11450":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:5377:127":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:10886:8643":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"6:7598:11452":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:5637:11242":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:12851:8429":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:4984:13223":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"1:4694:13173":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:46843:11954":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:5025:12384":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1:533:8285":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:44761:11898":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:46575:11947":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:40721:11760":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:5009:11003":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:4821:12198":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"6:1664:10661":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:1990:186":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:44155:11529":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"17:10439:8394":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"6:6059:11205":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"16:6555:10116":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"5:7584:11499":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"6:6943:11428":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:11000:11522":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:7990:12477":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:43324:7945":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:3139:13414":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"4:0:2301":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:7973:8640":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"16:5006:10000":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:12056:9082":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:4966:425":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"16:6646:10142":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:13766:9296":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"6:7668:11468":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"6:6120:11230":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:3080:10187":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:3044:13707":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:11093:12091":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"1:2446:13117":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"6:4955:10967":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"6:4434:10757":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:44798:11899":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"14:160:12339":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"16:5601:20502":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"16:2859:9961":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"6:6682:11305":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:11898:9050":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:3310:12442":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:13173:9170":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"17:14516:9431":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:42857:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:11510:12228":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:10950:8321":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"11:2536:10395":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:527:10511":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:1054:12350":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:11075:8407":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:880:8580":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:47499:11973":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:2806:135":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"16:7444:12333":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:22388:13396":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"5:3609:8033":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"5:1537:12364":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:1682:10668":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"16:3993:9978":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:7653:8311":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:2971:7962":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:15957:9844":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"11:1007:10172":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"5:3232:10393":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"21:299:2226":{"crate_id":21,"path":["ppv_lite86","types","StoreBytes"],"kind":"trait"},"2:41589:8267":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:7904:163":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:11799:12243":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"16:6331:10079":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"15:288:19596":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:11110:12107":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"17:13116:9158":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:41013:12404":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"16:2729:9955":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:12043:12253":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:1885:12430":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:13946:9324":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:4333:8595":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:10006:7957":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"6:1639:10642":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"11:1917:10393":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:3403:13489":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"17:14284:9392":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:14038:9338":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:15799:9819":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:10965:12389":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:41157:11792":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:14436:9423":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:2110:11510":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:13785:9301":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:11063:12210":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:10675:12015":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"21:267:2484":{"crate_id":21,"path":["ppv_lite86","types","VZip"],"kind":"trait"},"2:10014:7956":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"6:6658:11288":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:0:539":{"crate_id":2,"path":["core"],"kind":"module"},"2:31601:7870":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:46304:11936":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:12065:699":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:44951:11912":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"6:1507:10557":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:12150:9087":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:6837:11363":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"11:0:2305":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"16:7491:10235":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"5:3833:8232":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"6:4543:10808":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:10954:20585":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"5:7669:8236":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:6966:8308":{"crate_id":1,"path":["std","sys","pal","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"6:4584:10830":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:10399:8417":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:43601:154":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"16:6362:8522":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:9472:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:22334:13395":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"17:15734:9801":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:14091:9345":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"16:7914:10290":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:12374:11521":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:14855:9556":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:867:8579":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:40923:13091":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"6:507:10494":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"17:15301:9670":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:13723:9285":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"6:4364:10705":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:11093:11870":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"6:4998:10998":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"1:10246:25057":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"17:11524:12229":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"6:4535:10803":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:7995:2444":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"16:6394:10088":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:9807:20558":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:33908:13299":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:11142:8396":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:11115:12214":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:11618:8663":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:44846:11908":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:13356:114":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:12629:13454":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:42146:13164":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"16:2439:9942":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"6:7651:11463":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:40833:11771":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"16:8055:10225":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:13832:9307":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:5966:8601":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"6:4738:10861":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"20:116:24773":{"crate_id":20,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"16:2883:19642":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:1040:10172":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:2966:253":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"16:5331:8393":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:12353:9104":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"17:12278:12267":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:42092:168":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:5894:8294":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"6:6898:11406":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"16:7482:12334":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:14475:9426":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:45148:147":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"1:6495:11806":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:22402:13715":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"16:6811:20509":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:44165:12413":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"6:495:10489":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:21684:13122":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:12578:13446":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:10002:7949":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:41063:8600":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:31205:30308":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:40814:11769":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"5:7594:12376":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:4496:10786":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"16:7653:10245":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"16:7684:10249":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:47199:8365":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:40749:30307":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:13412:9209":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:15836:9826":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:23065:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:48393:8367":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"11:787:8580":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2:36676:10192":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:44073:12410":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"18:754:8914":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:2688:12437":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"5:634:12361":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:4870:10927":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"16:6134:8481":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:4527:7983":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"5:7411:7886":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"6:6961:11431":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:2203:12191":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:10944:8320":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:41082:11784":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:44864:11910":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:1063:12351":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"16:3741:9974":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:5066:863":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:15289:9664":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:40123:11631":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:5694:227":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:22256:13391":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"11:800:8212":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:15078:9616":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:8879:12082":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:12058:1162":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:41599:11809":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"6:4860:10923":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:44461:11876":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:1576:10595":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:9074:12088":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:11915:20674":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:12494:9114":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:47075:11959":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:44493:11877":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:10012:7955":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:15463:9711":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:1939:12432":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"6:4506:10792":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:11630:25939":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"18:623:33709":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:13325:8439":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:4878:10930":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:46773:11951":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"5:2074:12366":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"17:12584:12204":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"6:5969:11150":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"16:6773:8527":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:2353:13716":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"2:46174:11931":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:5776:8218":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"16:7386:8530":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"5:2988:32106":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"16:7414:8532":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"16:5696:8491":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:7449:13668":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:3463:8218":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"14:0:2307":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:9952:7954":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:9737:20552":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"2:2546:209":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"6:4808:10896":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"5:40:8187":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:8263:11800":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"15:394:19606":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"5:1440:8034":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:14414:9412":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:10365:8269":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"2:2728:263":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"5:7391:8588":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:16079:9889":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"1:10075:12500":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"17:9886:20570":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:8855:206":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"16:2689:9953":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:14994:9606":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"11:811:8232":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"16:6745:8525":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"5:6870:8230":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:40847:13517":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"21:244:2479":{"crate_id":21,"path":["ppv_lite86","types","u64x2x2"],"kind":"trait"},"1:723:151":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"16:6965:12088":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"5:830:8197":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:6584:11517":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:41351:11801":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:5928:11129":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:13399:9207":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"18:651:8882":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:43095:7958":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:43395:135":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"5:5408:13434":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:12683:12276":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"17:10887:33708":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:4302:8594":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"16:7523:8535":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:42701:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:15222:9650":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"14:165:19577":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"11:102:10385":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:47311:11969":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"6:4776:10882":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:44967:11916":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:46529:11945":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:15342:9679":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:10534:33703":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:4249:13195":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:42401:171":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"16:4572:9987":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:11567:12233":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"17:11715:9042":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"1:363:12417":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"6:5104:11050":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:44239:11518":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:4401:10733":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:42410:8033":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"16:7270:8478":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:8900:8033":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:12030:12252":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"5:7038:8248":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:4545:9986":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"5:7466:11492":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:2847:12377":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"17:15608:9769":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:45040:13819":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:7808:13077":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:6609:12465":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:2652:8288":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"10:44:8550":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"6:5033:11015":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:10018:20554":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:46220:11933":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:31011:11501":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:10665:12096":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"16:4871:9996":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:8549:13247":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:43631:8631":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:11158:12108":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:41341:11800":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"16:8012:10296":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:4769:13224":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:22853:11552":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:7613:12518":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"5:1316:12354":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:44983:11920":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:12127:9086":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:12079:1258":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:15197:9645":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:5499:9962":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:41073:11782":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"17:11557:12232":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"21:235:2476":{"crate_id":21,"path":["ppv_lite86","types","u64x2"],"kind":"trait"},"2:3157:124":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:11501:12447":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:4560:13198":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:46894:11955":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"5:790:8194":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:2418:11506":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:11016:12207":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:10933:8319":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:7645:11462":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:8939:12084":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:15:1936":{"crate_id":2,"path":["core","write"],"kind":"macro"},"16:6188:10067":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"17:11102:12213":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:11153:12204":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"5:1517:8582":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:10728:12056":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"17:13509:9225":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"14:202:13462":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:14912:9594":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"5:6370:13398":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:16105:9895":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"1:2492:2318":{"crate_id":1,"path":["std","io"],"kind":"module"},"16:8097:10303":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:10218:8412":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"5:3753:8656":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"17:14212:9384":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"9:481:19493":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:2275:13104":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:48247:8366":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:42543:8034":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:14847:9553":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:14933:9599":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"5:1487:8580":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"16:7335:9967":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"6:4710:10859":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"16:149:8174":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"18:680:8900":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:10251:8413":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"6:4932:10956":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"6:5910:11117":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:14386:9406":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:14402:9410":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:44619:13460":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:14575:8426":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"6:654:14455":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"6:1514:10560":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"21:1500:7998":{"crate_id":21,"path":["ppv_lite86","x86_64","NoS3"],"kind":"struct"},"17:10997:9020":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:11026:20587":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"5:7536:11496":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"5:886:8199":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"6:7343:11437":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:41114:11788":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:11730:9044":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"5:7341:8202":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:46150:11930":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:23703:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:11583:12238":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"16:6408:10090":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:4452:12452":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"16:2459:9943":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:22448:13386":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"11:2369:12360":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:44198:11859":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"9:0:2303":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"16:6599:10128":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:44257:11522":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:9654:30849":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"6:6798:11346":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"6:4893:10934":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:2666:8272":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"5:4227:8218":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"17:16069:9888":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"17:12300:20698":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"20:113:24772":{"crate_id":20,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"2:2540:202":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:46482:11944":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"16:4283:9979":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"20:129:2454":{"crate_id":20,"path":["rand_core","CryptoRngCore"],"kind":"trait"},"18:531:8884":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"5:5896:8212":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"21:206:2227":{"crate_id":21,"path":["ppv_lite86","types","Vec4"],"kind":"trait"},"2:34281:13698":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:10710:12203":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:4704:11332":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"5:903:8033":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"5:6713:8191":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:13387:9204":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:8966:13271":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"14:214:10381":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:3191:140":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"5:4197:8218":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"17:12808:9138":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"18:481:8880":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:8221:12056":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:15822:9823":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:41565:11806":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:13187:31141":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:5197:211":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"6:4647:10854":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"20:90:24769":{"crate_id":20,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"2:21356:30912":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:13568:9248":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"16:5825:8464":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"16:6099:12290":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"17:11674:9039":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:16176:9916":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"18:659:12179":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:12464:20699":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:4194:108":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"1:8362:12484":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:2434:13111":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:43831:11852":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"16:2917:19643":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"11:1066:19573":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:4300:12450":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:31032:7945":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:6215:8282":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"2:2715:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:3799:7886":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:48515:7853":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:44185:11856":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:45169:214":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:12900:8432":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"16:2819:9959":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"6:5974:11151":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:597:9013":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:15720:9799":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:15383:9693":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"16:5298:20501":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:4236:13194":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:4572:8258":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:8295:12486":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:415:182":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"6:4440:10759":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"11:2423:7886":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:3391:144":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:7716:13122":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"17:513:12187":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"15:306:19597":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:38607:13702":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"5:3240:10391":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"6:7365:11438":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:41144:11791":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:41192:8897":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"5:6994:269":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:44513:11879":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"6:1734:10690":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:10612:12201":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:21514:13308":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:6426:183":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"6:555:10526":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:10463:8277":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"16:5038:10001":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:44084:11854":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:42477:13237":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"6:4676:10856":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:12342:9100":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:7672:8313":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:22001:8615":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:44734:11897":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:11755:9048":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"16:7376:10233":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"6:6700:11312":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:2728:12438":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:11392:12224":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"11:490:151":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:3017:13300":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"11:1676:8184":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:9858:20569":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:8233:13121":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"1:12067:806":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:47435:11971":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:47229:2480":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"16:2375:9939":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"11:2498:19569":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:45262:11928":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:14752:9470":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:40821:13516":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"6:5867:11099":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:15748:9808":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"11:1566:19574":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"20:134:1924":{"crate_id":20,"path":["rand_core","SeedableRng"],"kind":"trait"},"17:13211:9185":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"11:2383:8033":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"5:5826:257":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:10000:127":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"16:536:8468":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"6:6913:11413":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:6666:11293":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:38717:13704":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:46427:11941":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"6:6764:11340":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"16:7984:12338":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"0:90:1805":{"crate_id":0,"path":["rand_chacha","ChaChaCore"],"kind":"type_alias"},"17:14147:9354":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:11841:12249":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:34454:13699":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:5569:12459":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:22747:11535":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:46344:11938":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:10641:13122":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"6:6071:11212":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:8276:11518":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"18:507:8882":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:7152:10208":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"5:2987:7942":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:44975:11918":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"16:6908:10169":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:13606:9256":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:22346:30520":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"17:11419:8396":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:23335:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:10846:12473":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"17:10877:12205":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"6:1632:10638":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:12557:8407":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"1:11637:12118":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:2336:8456":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:9026:12492":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"6:6228:11256":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"11:2326:12350":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"6:6012:11179":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"6:574:10536":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"5:3170:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"6:6711:11317":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:15931:9171":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"2:43314:11839":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:11043:8642":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:13844:9309":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:11051:12209":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:40910:11778":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"16:2995:19644":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:0:1540":{"crate_id":1,"path":["std"],"kind":"module"},"5:5669:8230":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:11214:12216":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"9:423:19496":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"6:569:10534":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:44389:11872":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:40840:11772":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:14372:9404":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:2436:13112":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:3468:13416":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:15249:9654":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:10671:33702":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"16:6929:10171":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:928:13043":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"11:700:7886":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:11688:9040":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"1:5500:12458":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:9066:8658":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"1:9087:24925":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:41574:11807":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"16:7176:33698":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:45029:11921":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:46972:11957":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:13581:9252":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:12443:9110":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:1718:10685":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:13497:9224":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"6:5052:11023":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"16:5713:8496":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"6:5140:11063":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:47389:11970":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:357:12416":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:6318:8301":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"16:2665:9952":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"6:4854:10920":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:12090:12395":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"6:4666:10855":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:13738:9289":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:11189:9024":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:11396:12468":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"6:5111:11053":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"6:4902:10940":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:43623:8630":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"6:1546:10576":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:14246:9387":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:45005:129":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:10486:8317":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"5:7521:30305":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:5568:10010":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:11639:12394":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"1:12059:338":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:13437:9211":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:3597:12197":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:4809:13184":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"5:7653:8232":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"2:22683:8589":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:10317:8415":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:7332:13675":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"17:12399:9107":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:16151:9908":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"17:12516:12269":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"2:42937:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:42466:8025":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:16269:9209":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"2:48478:7850":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:14977:9604":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"5:3768:12365":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:22733:30304":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"6:5152:11068":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"11:673:8033":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:40879:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"6:1596:10609":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:13473:9220":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:1574:8033":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:11702:9041":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"1:8981:13273":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:256:12184":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:7397:30693":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:2593:9949":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:11562:12449":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"6:5982:11156":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:40116:12401":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:41053:11780":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:12006:12521":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"17:10759:8396":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:4220:13192":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"6:4939:1112":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:8387:12488":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"11:1910:10392":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:33674:13694":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:849:8034":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"16:5521:9964":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"6:5004:11001":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"1:12061:1548":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:42435:8024":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:22562:11531":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"16:7324:10228":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"16:7609:10237":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:8866:8642":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:12068:803":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:3012:135":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"17:13024:20579":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:44640:11885":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:10854:12459":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"2:12563:12387":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"6:5941:11138":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:34800:10191":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:40966:12402":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"21:885:2219":{"crate_id":21,"path":["ppv_lite86","dispatch_light128"],"kind":"macro"},"2:10820:8034":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:10219:154":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"5:7508:11493":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"6:6889:11403":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:40727:11761":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:3001:7964":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:14311:9394":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:12107:8396":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:44044:11524":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"16:8022:20515":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"7:0:1697":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:9033:24921":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:7760:8317":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"21:250:2481":{"crate_id":21,"path":["ppv_lite86","types","u128x2"],"kind":"trait"},"1:1968:13087":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:12060:1515":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"5:2998:32109":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:44110:11527":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"6:4724:10860":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:2961:116":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"6:4449:10764":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:4649:9988":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:3347:12443":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:4217:13412":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:2675:13122":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:44063:11526":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"21:202:2471":{"crate_id":21,"path":["ppv_lite86","types","Vec2"],"kind":"trait"},"6:6114:11227":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:22433:13122":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"1:1826:12428":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:15646:9778":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"6:4388:10723":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"5:1388:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"13:0:2300":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:4987:31231":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:45239:11927":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"16:4813:9994":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:5921:11125":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:7103:33696":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:5701:8301":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"11:396:8182":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:7619:8604":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"6:4578:10827":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"16:5645:10012":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:13461:13044":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:2724:264":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:42623:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"5:1115:32287":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:10709:137":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"16:2835:9960":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:4182:12379":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:11313:9032":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"17:14131:9349":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:6231:8300":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"16:7619:20513":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:11056:12082":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"5:6503:8212":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"5:3358:8232":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"2:10888:11521":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"5:1302:12350":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:11256:9026":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"6:5023:11009":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:11318:8322":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"17:12175:12256":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"6:4814:10898":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:22840:11551":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:11341:12222":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:32825:244":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"18:515:8883":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"20:123:1923":{"crate_id":20,"path":["rand_core","RngCore"],"kind":"trait"},"2:10004:7948":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:12485:20700":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:9198:12497":{"crate_id":1,"path":["std","sys","pal","common","thread_local","fast_local","Key"],"kind":"struct"},"1:3010:233":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"17:15426:9703":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:13187:9171":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"5:683:256":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:14025:9336":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:533:10514":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:11368:12112":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:13292:8433":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:4772:13197":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:32809:7983":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"17:10905:12206":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:48553:7855":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:12078:1707":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:504:8209":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:8849:12489":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"16:5794:10028":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:14449:9424":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:8908:12491":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:16032:9189":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"1:6679:8306":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:3512:12446":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:44531:11881":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:22:739":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"17:11269:20604":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"2:46675:11948":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:15151:9632":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"16:5616:8486":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"6:6136:11235":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:12789:118":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:46375:11939":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:22295:13392":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"2:44145:12412":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"16:5865:10034":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"6:5085:11036":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:3220:13059":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"6:4428:10756":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:3039:13706":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"17:15010:9607":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:40309:28253":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"16:5897:20504":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"21:1111:8371":{"crate_id":21,"path":["ppv_lite86","x86_64","sse2","u32x4_sse2"],"kind":"struct"},"17:13272:9199":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:14066:9343":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:8589:8744":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:22864:13167":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:42740:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"21:1411:8876":{"crate_id":21,"path":["ppv_lite86","x86_64","sse2","G0"],"kind":"struct"},"2:31017:11558":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:8369:13672":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:15778:9816":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"16:6669:10143":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"16:5630:8489":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"16:2529:9946":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"16:6244:20506":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:4355:9980":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"8:0:2302":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"16:7429:33693":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:7366:9968":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"5:1024:8191":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:12069:804":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:10068:20557":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"11:2304:10172":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"6:62:14042":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:48606:7858":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"18:613:33711":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:1824:12427":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:42584:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:13855:9310":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"21:1545:7997":{"crate_id":21,"path":["ppv_lite86","x86_64","SseMachine"],"kind":"struct"},"2:41206:11796":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:11647:9037":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:15333:9678":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:12076:12255":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:8201:8604":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:14177:9373":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"6:4989:10992":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"16:2573:9948":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"6:7633:11460":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"5:4065:8191":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"16:4787:9993":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:3416:30570":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:13046:9148":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"}},"external_crates":{"20":{"name":"rand_core","html_root_url":"https://rust-random.github.io/rand/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"ppv_lite86","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}