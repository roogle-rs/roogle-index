{"root":"0:0:1964","crate_version":"0.9.0-alpha.0","includes_private":false,"index":{"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2466:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:148":{"id":"0:148","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2427:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:149:464"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:31852:2611-0:282:1959":{"id":"a:2:31852:2611-0:282:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31852:2611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:25:2078","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12955:27137":{"id":"2:12955:27137","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"üóª‚ààüåè\");\n\nassert_eq!(Some(\"üóª\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41318:190"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41316:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10721:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10721:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2909:246-0:137:1956":{"id":"a:2:2909:246-0:137:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2909:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:95:1963":{"id":"0:95:1963","crate_id":0,"name":"ChaChaCore","span":{"filename":"src/lib.rs","begin":[34,0],"end":[34,35]},"visibility":"public","docs":"ChaCha with 20 rounds, low-level interface","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2466:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12976:33085":{"id":"2:12976:33085","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43472:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2411-0:205:1954":{"id":"b:2:2411-0:205:1954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31796:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2405:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2413:2567"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13069:26459":{"id":"2:13069:26459","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GR√ú√üE, J√úRGEN ‚ù§\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"gr√ú√üe, j√úrgen ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:123:2184":{"id":"0:123:2184","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:731:8114":{"id":"5:731:8114","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31852:2611-0:146:1957":{"id":"a:2:31852:2611-0:146:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31852:2611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:144:2081","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:104:2105","0:106:2106"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:197:677":{"id":"0:197:677","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258:2181":{"id":"0:258:2181","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:90-0:137:1956":{"id":"0:90-0:137:1956","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,31],"end":[28,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Core","name":"ChaCha20Core","id":"0:137:1956","glob":false}}},"a:2:41441:13348-0:146:1957":{"id":"a:2:41441:13348-0:146:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41441:13348","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2696-0:273:1958":{"id":"b:2:2696-0:273:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2670:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2666:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2699:137","2:2700:1757"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13048:25592":{"id":"2:13048:25592","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12294:458","self::pattern":"2:12633:13561"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41316:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:2141":{"id":"0:253:2141","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41459:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:79:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5602:13805":{"id":"5:5602:13805","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7616:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7616:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41440:13131-0:205:1954":{"id":"a:2:41440:13131-0:205:1954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41440:13131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:168:172":{"id":"0:168:172","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:237:2101":{"id":"0:237:2101","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:19:2090","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"2:13075:13123":{"id":"2:13075:13123","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4707:13123"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43516:11782","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3523-0:146:1957":{"id":"b:2:3523-0:146:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31796:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3521:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3525:1770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:279:677":{"id":"0:279:677","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:119:2147","0:120:2163","0:121:2176","0:122:2181","0:123:2184"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:727-0:205:1954":{"id":"b:5:727-0:205:1954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2427:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:723:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:729:8112","5:730:8113","5:731:8114"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5617:33802":{"id":"5:5617:33802","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:296:2612","`String`":"5:7616:242"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:296:2612","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7616:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13007:33087":{"id":"2:13007:33087","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12633:13561","str::split":"2:12995:25623","prim@char":"1:12294:458","str::split_terminator":"2:13004:33086"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43276:11889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12654:13559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:811":{"id":"0:195:811","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:104:2105":{"id":"0:104:2105","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:125":{"id":"0:125","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:143:2079","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31797:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12951:27077":{"id":"2:12951:27077","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12181:13562"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2414-0:205:1954":{"id":"b:2:2414-0:205:1954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31796:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2408:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2416:25424"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12957:27138":{"id":"2:12957:27138","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41318:190"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41316:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10721:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10721:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41440:13131-0:214:1955":{"id":"a:2:41440:13131-0:214:1955","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41440:13131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:144:2081","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:246:2105","0:248:2106"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2701-0:137:1956":{"id":"b:2:2701-0:137:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2660:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2670:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2704:137","2:2705:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:187:2147":{"id":"0:187:2147","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183:2138":{"id":"0:183:2138","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13022:2582":{"id":"2:13022:2582","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12633:13561","`DoubleEndedIterator`":"2:8007:130","prim@char":"1:12294:458","str::rmatches":"2:13025:33088"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43412:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2705:1755":{"id":"2:2705:1755","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41459:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2670:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2411-0:137:1956":{"id":"b:2:2411-0:137:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31796:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2405:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2413:2567"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:21:2077","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:100:172","0:101:2101","0:102:2102"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:116:2139":{"id":"0:116:2139","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:128":{"id":"0:128","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2461:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:129:677"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:235":{"id":"0:235","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:21:2077","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:236:172","0:237:2101","0:238:2102"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13034:33091":{"id":"2:13034:33091","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176":{"id":"0:176","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:25:2078","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5608:33800":{"id":"5:5608:33800","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Œ£\";\n\nassert_eq!(\"œÉ\", sigma.to_lowercase());\n\n// but at the end of a word, it's œÇ, not œÉ:\nlet odysseus = \"·ΩàŒîŒ•Œ£Œ£ŒïŒéŒ£\";\n\nassert_eq!(\"·ΩÄŒ¥œÖœÉœÉŒµœçœÇ\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7616:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7616:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:727-0:282:1959":{"id":"b:5:727-0:282:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2427:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:723:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:729:8112","5:730:8113","5:731:8114"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:251:2138":{"id":"0:251:2138","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:236:172":{"id":"0:236:172","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"2:13068:26458":{"id":"2:13068:26458","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Gr√º√üe, J√ºrgen ‚ù§\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:106:2106":{"id":"0:106:2106","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:144:2081","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31797:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:100:172":{"id":"0:100:172","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"b:2:2701-0:282:1959":{"id":"b:2:2701-0:282:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2660:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2670:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2704:137","2:2705:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12966:27165":{"id":"2:12966:27165","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-L√∂f\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-L√∂f\", last);\n}\nassert_eq!(\"PER Martin-L√∂f\", s);\n```","links":{"str::split_at":"2:12965:27164","str::split_at_mut_checked":"2:12968:27169"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:150":{"id":"0:150","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10065:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:151:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10065:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:98:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3523-0:273:1958":{"id":"b:2:3523-0:273:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31796:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3521:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3525:1770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:181":{"id":"0:181","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["read_adapter"],"trait":{"name":"RngCore","id":"20:137:2080","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:182:2137","0:183:2138","0:184:2139","0:185:2141"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:255:2147":{"id":"0:255:2147","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:137:1956":{"id":"0:137:1956","crate_id":0,"name":"ChaCha20Core","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:31852:2611-0:137:1956","a:2:41440:13131-0:137:1956","a:2:41441:13348-0:137:1956","a:2:2909:246-0:137:1956","a:2:31795:236-0:137:1956","a:2:2944:8134-0:137:1956","b:2:2701-0:137:1956","b:2:3523-0:137:1956","b:2:2686-0:137:1956","b:2:2690-0:137:1956","b:2:2411-0:137:1956","b:2:2696-0:137:1956","b:2:2414-0:137:1956","b:5:727-0:137:1956","b:22:270-0:137:1956","0:141","0:139","0:126","0:108","0:99","0:142","0:144","0:103","0:97"]}}},"0:140:464":{"id":"0:140:464","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12977:31510":{"id":"2:12977:31510","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Za≈º√≥≈Çƒá gƒô≈õlƒÖ ja≈∫≈Ñ\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43500:11903","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:184:2139":{"id":"0:184:2139","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:781":{"id":"0:98:781","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10039:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10020:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12995:25623":{"id":"2:12995:25623","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12633:13561","`DoubleEndedIterator`":"2:8007:130","prim@char":"1:12294:458","str::split_whitespace":"2:12973:31451","str::rsplit":"2:13001:27173"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43208:11668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12965:27164":{"id":"2:12965:27164","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-L√∂f\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-L√∂f\", last);\n```","links":{"str::split_at_checked":"2:12967:27168","str::split_at_mut":"2:12966:27165"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2696-0:137:1956":{"id":"b:2:2696-0:137:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2670:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2666:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2699:137","2:2700:1757"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13028:33089":{"id":"2:13028:33089","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12633:13561","`DoubleEndedIterator`":"2:8007:130","prim@char":"1:12294:458","str::rmatch_indices":"2:13031:33090"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43358:11894","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13001:27173":{"id":"2:13001:27173","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12633:13561","`DoubleEndedIterator`":"2:8007:130","prim@char":"1:12294:458","str::split":"2:12995:25623"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43226:11673","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12654:13559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:727-0:146:1957":{"id":"b:5:727-0:146:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2427:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:723:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:729:8112","5:730:8113","5:731:8114"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:149:464":{"id":"0:149:464","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12961:27140":{"id":"2:12961:27140","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"üóª‚ààüåè\");\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10721:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10721:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:151:781":{"id":"0:151:781","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10039:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10020:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2427:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:276:464"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12972:2140":{"id":"2:12972:2140","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43194:8325","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13038:33093":{"id":"2:13038:33093","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:256:2163":{"id":"0:256:2163","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3523-0:282:1959":{"id":"b:2:3523-0:282:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31796:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3521:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3525:1770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12967:27168":{"id":"2:12967:27168","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that‚Äôs not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet s = \"Per Martin-L√∂f\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-L√∂f\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside ‚Äú√∂‚Äù\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:12968:27169"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41316:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2909:246-0:214:1955":{"id":"a:2:2909:246-0:214:1955","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2909:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2416:25424":{"id":"2:2416:25424","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:190:2181":{"id":"0:190:2181","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2427:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:285:464"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:214:1955":{"id":"0:214:1955","crate_id":0,"name":"ChaCha12Rng","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:182:2076","`RngCore`":"20:137:2080"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:186","a:2:31852:2611-0:214:1955","a:2:41440:13131-0:214:1955","a:2:41441:13348-0:214:1955","a:2:2909:246-0:214:1955","a:2:31795:236-0:214:1955","a:2:2944:8134-0:214:1955","b:2:2701-0:214:1955","b:2:3523-0:214:1955","b:2:2686-0:214:1955","b:2:2690-0:214:1955","b:2:2411-0:214:1955","b:2:2696-0:214:1955","b:2:2414-0:214:1955","b:5:727-0:214:1955","b:22:270-0:214:1955","0:218","0:196","0:194","0:193","0:177","0:216","0:181","0:198"]}}},"2:12945:33079":{"id":"2:12945:33079","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nassert!(s.is_char_boundary(0));\n// start of `ËÄÅ`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `√∂`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `ËÄÅ`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2944:8134-0:146:1957":{"id":"a:2:2944:8134-0:146:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:2944:8134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:177":{"id":"0:177","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:144:2081","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:178:2105","0:180:2106"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12946:33080":{"id":"2:12946:33080","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji üßë‚Äçüî¨ (scientist) could be split so that the string only\nincludes üßë (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13025:33088":{"id":"2:13025:33088","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12633:13561","`DoubleEndedIterator`":"2:8007:130","prim@char":"1:12294:458","str::matches":"2:13022:2582"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43430:11898","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12654:13559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31795:236-0:137:1956":{"id":"a:2:31795:236-0:137:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31795:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2701-0:205:1954":{"id":"b:2:2701-0:205:1954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2660:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2670:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2704:137","2:2705:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12954:27141":{"id":"2:12954:27141","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12311:1799"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2411-0:273:1958":{"id":"b:2:2411-0:273:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31796:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2405:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2413:2567"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:727-0:273:1958":{"id":"b:5:727-0:273:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2427:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:723:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:729:8112","5:730:8113","5:731:8114"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:22:270-0:205:1954":{"id":"b:22:270-0:205:1954","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2382","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:2646","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25427"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12953:334":{"id":"2:12953:334","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12954:27141","`u8`":"1:12311:1799"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12998:27171":{"id":"2:12998:27171","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12294:458","self::pattern":"2:12633:13561"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12449:11672","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31797:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:248:2106":{"id":"0:248:2106","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:144:2081","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13040:33094":{"id":"2:13040:33094","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™\";\nassert!(Some('◊¢') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["read_adapter"],"trait":{"name":"RngCore","id":"20:137:2080","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:114:2137","0:115:2138","0:116:2139","0:117:2141"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2413:2567":{"id":"2:2413:2567","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:178:2105":{"id":"0:178:2105","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:191:2184":{"id":"0:191:2184","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2663:144","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:263:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:730:8113":{"id":"5:730:8113","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:165":{"id":"0:165","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10065:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:166:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:31795:236-0:214:1955":{"id":"a:2:31795:236-0:214:1955","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31795:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:189:2176":{"id":"0:189:2176","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:187:2147","0:188:2163","0:189:2176","0:190:2181","0:191:2184"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2696-0:214:1955":{"id":"b:2:2696-0:214:1955","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2670:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2666:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2699:137","2:2700:1757"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2466:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2690-0:273:1958":{"id":"b:2:2690-0:273:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2663:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2692:811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2699:137":{"id":"2:2699:137","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2670:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"2:12984:27183":{"id":"2:12984:27183","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12294:458","self::pattern":"2:12633:13561"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12654:13559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2690-0:214:1955":{"id":"b:2:2690-0:214:1955","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2663:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2692:811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13004:33086":{"id":"2:13004:33086","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12633:13561","str::split":"2:12995:25623","prim@char":"1:12294:458","`DoubleEndedIterator`":"2:8007:130","str::rsplit_terminator":"2:13007:33087"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43258:11888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2696-0:146:1957":{"id":"b:2:2696-0:146:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2670:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2666:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2699:137","2:2700:1757"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10065:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2689:2151":{"id":"2:2689:2151","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2663:144"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2686-0:205:1954":{"id":"b:2:2686-0:205:1954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2663:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2660:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2689:2151"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:273:1958":{"id":"0:273:1958","crate_id":0,"name":"ChaCha8Core","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"ChaCha with 8 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:31852:2611-0:273:1958","a:2:41440:13131-0:273:1958","a:2:41441:13348-0:273:1958","a:2:2909:246-0:273:1958","a:2:31795:236-0:273:1958","a:2:2944:8134-0:273:1958","b:2:2701-0:273:1958","b:2:3523-0:273:1958","b:2:2686-0:273:1958","b:2:2690-0:273:1958","b:2:2411-0:273:1958","b:2:2696-0:273:1958","b:2:2414-0:273:1958","b:5:727-0:273:1958","b:22:270-0:273:1958","0:278","0:239","0:280","0:235","0:233","0:262","0:275","0:244","0:277"]}}},"2:12970:11904":{"id":"2:12970:11904","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"yÃÜ\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'yÃÜ'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12294:458"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43178:11882","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:238:2102":{"id":"0:238:2102","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:21:2077","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13057:33099":{"id":"2:13057:33099","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12294:458","self::pattern":"2:12633:13561"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31852:2611-0:137:1956":{"id":"a:2:31852:2611-0:137:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31852:2611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2696-0:205:1954":{"id":"b:2:2696-0:205:1954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2670:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2666:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2699:137","2:2700:1757"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2466:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:121:2176":{"id":"0:121:2176","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:252:2139":{"id":"0:252:2139","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:239":{"id":"0:239","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:144:2081","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:240:2105","0:242:2106"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13063:33101":{"id":"2:13063:33101","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12594:136","`FromStr`":"2:12593:13206"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41459:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12593:13206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12593:13206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:263:811":{"id":"0:263:811","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:22:270-0:137:1956":{"id":"b:22:270-0:137:1956","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2382","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:2646","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25427"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5620:26456":{"id":"5:5620:26456","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"gr√º√üe, j√ºrgen ‚ù§\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13069:26459"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7616:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31795:236-0:273:1958":{"id":"a:2:31795:236-0:273:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31795:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2414-0:273:1958":{"id":"b:2:2414-0:273:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31796:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2408:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2416:25424"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"22:273:25427":{"id":"22:273:25427","crate_id":22,"name":"vzip","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[226,4],"end":[226,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"V"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259:2184":{"id":"0:259:2184","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13067:26457":{"id":"2:13067:26457","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√∂S\"));\nassert!(!\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√ñS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5616:33801":{"id":"5:5616:33801","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tsch√º√ü\";\n\nassert_eq!(\"TSCH√úSS\", s.to_uppercase());\n```","links":{"`String`":"5:7616:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7616:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12973:31451":{"id":"2:12973:31451","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12974:31453"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43482:11901","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12964:33084":{"id":"2:12964:33084","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12300:1672","crate::ops::IndexMut":"2:3184:13161","str::slice_unchecked":"2:12963:33083"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13070:27084":{"id":"2:13070:27084","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:970:38660"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2700:1757":{"id":"2:2700:1757","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41459:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2670:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:729:8112":{"id":"5:729:8112","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:120:2163":{"id":"0:120:2163","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:102:2102":{"id":"0:102:2102","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:21:2077","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:117:2141":{"id":"0:117:2141","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41459:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:79:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2686-0:214:1955":{"id":"b:2:2686-0:214:1955","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2663:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2660:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2689:2151"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:242:2106":{"id":"0:242:2106","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:144:2081","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13076:33103":{"id":"2:13076:33103","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4704:33103"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43525:11790","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12968:27169":{"id":"2:12968:27169","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that‚Äôs not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet mut s = \"Per Martin-L√∂f\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-L√∂f\", last);\n}\nassert_eq!(\"PER Martin-L√∂f\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside ‚Äú√∂‚Äù\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:12967:27168"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41316:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12952:33082":{"id":"2:12952:33082","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"üóª‚ààüåè\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"üçî‚ààüåè\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2414-0:214:1955":{"id":"b:2:2414-0:214:1955","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31796:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2408:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2416:25424"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12987:8092":{"id":"2:12987:8092","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('√©'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41318:190","prim@char":"1:12294:458","self::pattern":"2:12633:13561"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41316:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3525:1770":{"id":"2:3525:1770","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39094:11780","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:88-0:205:1954":{"id":"0:88-0:205:1954","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,4],"end":[28,16]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Core","name":"ChaCha12Core","id":"0:205:1954","glob":false}}},"0:142":{"id":"0:142","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2461:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:143:677"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2663:144","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:195:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2411-0:146:1957":{"id":"b:2:2411-0:146:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31796:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2405:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2413:2567"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3523-0:205:1954":{"id":"b:2:3523-0:205:1954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31796:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3521:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3525:1770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:193":{"id":"0:193","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:143:2079","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12942":{"id":"2:12942","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12943:974","2:12944:8051","2:12945:33079","2:12946:33080","2:12948:33081","2:12951:27077","2:12952:33082","2:12953:334","2:12954:27141","2:12955:27137","2:12957:27138","2:12959:27139","2:12961:27140","2:12963:33083","2:12964:33084","2:12965:27164","2:12966:27165","2:12967:27168","2:12968:27169","2:12970:11904","2:12971:11915","2:12972:2140","2:12973:31451","2:12974:31453","2:12975:25624","2:12976:33085","2:12977:31510","2:12978:27181","2:12981:27182","2:12984:27183","2:12987:8092","2:12991:8050","2:12995:25623","2:12998:27171","2:13001:27173","2:13004:33086","2:13007:33087","2:13010:27175","2:13013:27177","2:13016:27179","2:13019:27180","2:13022:2582","2:13025:33088","2:13028:33089","2:13031:33090","2:13034:33091","2:13036:33092","2:13038:33093","2:13040:33094","2:13041:33095","2:13042:33096","2:13045:33097","2:13048:25592","2:13051:27184","2:13054:33098","2:13057:33099","2:13060:33100","2:13063:33101","2:13065:26453","2:13066:27081","2:13067:26457","2:13068:26458","2:13069:26459","2:13070:27084","2:13071:27085","2:13072:27086","2:13073:33102","2:13075:13123","2:13076:33103"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:143:677":{"id":"0:143:677","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:144:2081","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:110:2105","0:112:2106"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:265:677":{"id":"0:265:677","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43-22:274:2377":{"id":"0:43-22:274:2377","crate_id":0,"name":null,"span":{"filename":"src/guts.rs","begin":[14,0],"end":[14,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"ppv_lite86::Machine","name":"Machine","id":"22:274:2377","glob":false}}},"b:2:3523-0:137:1956":{"id":"b:2:3523-0:137:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31796:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3521:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3525:1770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:196":{"id":"0:196","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2461:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:197:677"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:180:2106":{"id":"0:180:2106","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:144:2081","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:22:270-0:282:1959":{"id":"b:22:270-0:282:1959","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2382","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:2646","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25427"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2701-0:214:1955":{"id":"b:2:2701-0:214:1955","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2660:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2670:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2704:137","2:2705:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:249":{"id":"0:249","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["read_adapter"],"trait":{"name":"RngCore","id":"20:137:2080","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:250:2137","0:251:2138","0:252:2139","0:253:2141"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:115:2138":{"id":"0:115:2138","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31852:2611-0:273:1958":{"id":"a:2:31852:2611-0:273:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31852:2611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12943:974":{"id":"2:12943:974","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"∆íoo\".len(), 4); // fancy f!\nassert_eq!(\"∆íoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12294:458"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2686-0:273:1958":{"id":"b:2:2686-0:273:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2663:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2660:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2689:2151"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13016:27179":{"id":"2:13016:27179","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41316:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2427:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:217:464"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:110:2105":{"id":"0:110:2105","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"2:13045:33097":{"id":"2:13045:33097","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12294:458","self::pattern":"2:12633:13561"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:114:2137":{"id":"0:114:2137","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41441:13348-0:137:1956":{"id":"a:2:41441:13348-0:137:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41441:13348","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:19:2090":{"id":"0:19:2090","crate_id":0,"name":"Array64","span":{"filename":"src/chacha.rs","begin":[27,0],"end":[27,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"b:2:2701-0:146:1957":{"id":"b:2:2701-0:146:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2660:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2670:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2704:137","2:2705:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:25:2078","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12975:25624":{"id":"2:12975:25624","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43462:11899","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13054:33098":{"id":"2:13054:33098","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12294:458","self::pattern":"2:12633:13561"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12654:13559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2690-0:282:1959":{"id":"b:2:2690-0:282:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2663:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2692:811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2690-0:205:1954":{"id":"b:2:2690-0:205:1954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2663:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2692:811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:41441:13348-0:205:1954":{"id":"a:2:41441:13348-0:205:1954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41441:13348","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:41440:13131-0:282:1959":{"id":"a:2:41440:13131-0:282:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41440:13131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:234:781":{"id":"0:234:781","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10039:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10020:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:727-0:214:1955":{"id":"b:5:727-0:214:1955","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2427:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:723:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:729:8112","5:730:8113","5:731:8114"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3-20:0:1951":{"id":"0:3-20:0:1951","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[22,0],"end":[22,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"rand_core","name":"rand_core","id":"20:0:1951","glob":false}}},"0:217:464":{"id":"0:217:464","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31852:2611-0:214:1955":{"id":"a:2:31852:2611-0:214:1955","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31852:2611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:41441:13348-0:273:1958":{"id":"a:2:41441:13348-0:273:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41441:13348","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:89-0:214:1955":{"id":"0:89-0:214:1955","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,18],"end":[28,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Rng","name":"ChaCha12Rng","id":"0:214:1955","glob":false}}},"0:233":{"id":"0:233","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10065:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:234:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2663:144","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:127:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2414-0:146:1957":{"id":"b:2:2414-0:146:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31796:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2408:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2416:25424"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13042:33096":{"id":"2:13042:33096","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12294:458","self::pattern":"2:12633:13561"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12659:13558","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:94:1961":{"id":"0:94:1961","crate_id":0,"name":"ChaChaRng","span":{"filename":"src/lib.rs","begin":[32,0],"end":[32,33]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"0:130":{"id":"0:130","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2466:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12991:8050":{"id":"2:12991:8050","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('√©'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41318:190","prim@char":"1:12294:458","self::pattern":"2:12633:13561"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41316:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12654:13559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2461:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:211:677"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:41441:13348-0:282:1959":{"id":"a:2:41441:13348-0:282:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41441:13348","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2686-0:146:1957":{"id":"b:2:2686-0:146:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2663:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2660:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2689:2151"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:139":{"id":"0:139","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2427:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:140:464"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3523-0:214:1955":{"id":"b:2:3523-0:214:1955","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31796:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3521:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3525:1770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12944:8051":{"id":"2:12944:8051","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13019:27180":{"id":"2:13019:27180","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41316:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12654:13559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:464":{"id":"0:208:464","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:240:2105":{"id":"0:240:2105","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"b:5:727-0:137:1956":{"id":"b:5:727-0:137:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2427:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:723:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:729:8112","5:730:8113","5:731:8114"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2692:811":{"id":"2:2692:811","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12978:27181":{"id":"2:12978:27181","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12294:458","self::pattern":"2:12633:13561"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13066:27081":{"id":"2:13066:27081","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39280:13638","Self::is_ascii":"2:13065:26453"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41316:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39280:13638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2690-0:137:1956":{"id":"b:2:2690-0:137:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2663:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2692:811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:219:781":{"id":"0:219:781","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10039:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10020:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2461:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:265:677"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13010:27175":{"id":"2:13010:27175","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12294:458","self::pattern":"2:12633:13561","str::rsplitn":"2:13013:27177"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43312:11891","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5600":{"id":"5:5600","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5601:33798","5:5602:13805","5:5605:33799","5:5608:33800","5:5616:33801","5:5617:33802","5:5618:13257","5:5619:26455","5:5620:26456"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13073:33102":{"id":"2:13073:33102","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"‚ù§\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_debug().to_string(), \"‚ù§\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4706:33102"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43507:11791","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:167":{"id":"0:167","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:21:2077","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:168:172","0:169:2101","0:170:2102"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:41440:13131-0:137:1956":{"id":"a:2:41440:13131-0:137:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41440:13131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13041:33095":{"id":"2:13041:33095","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:22:270-0:146:1957":{"id":"b:22:270-0:146:1957","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2382","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:2646","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25427"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:211:677":{"id":"0:211:677","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2690-0:146:1957":{"id":"b:2:2690-0:146:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2663:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2692:811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5618:13257":{"id":"5:5618:13257","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7616:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7616:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31795:236-0:146:1957":{"id":"a:2:31795:236-0:146:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31795:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:0:1964":{"id":"0:0:1964","crate_id":0,"name":"rand_chacha","span":{"filename":"src/lib.rs","begin":[9,0],"end":[34,35]},"visibility":"public","docs":"The ChaCha random number generator.","links":{},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\", html_favicon_url\n= \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://rust-random.github.io/rand/\")]","#![forbid(unsafe_code)]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:3-20:0:1951","0:88-0:205:1954","0:89-0:214:1955","0:90-0:137:1956","0:91-0:146:1957","0:92-0:273:1958","0:93-0:282:1959","0:94:1961","0:95:1963"],"is_stripped":false}}},"2:12974:31453":{"id":"2:12974:31453","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12973:31451"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43491:11902","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12959:27139":{"id":"2:12959:27139","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"üóª‚ààüåè\";\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10721:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10721:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:188:2163":{"id":"0:188:2163","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5605:33799":{"id":"5:5605:33799","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7616:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7616:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13071:27085":{"id":"2:13071:27085","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:970:38660"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:254":{"id":"0:254","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:255:2147","0:256:2163","0:257:2176","0:258:2181","0:259:2184"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:278":{"id":"0:278","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2461:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:279:677"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:91-0:146:1957":{"id":"0:91-0:146:1957","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,45],"end":[28,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Rng","name":"ChaCha20Rng","id":"0:146:1957","glob":false}}},"2:12971:11915":{"id":"2:12971:11915","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"yÃÜes\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'yÃÜ')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12294:458"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43184:11883","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2466:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13031:33090":{"id":"2:13031:33090","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12633:13561","`DoubleEndedIterator`":"2:8007:130","prim@char":"1:12294:458","str::match_indices":"2:13028:33089"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43376:11895","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12654:13559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:146:1957":{"id":"0:146:1957","crate_id":0,"name":"ChaCha20Rng","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:182:2076","`RngCore`":"20:137:2080"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:118","a:2:31852:2611-0:146:1957","a:2:41440:13131-0:146:1957","a:2:41441:13348-0:146:1957","a:2:2909:246-0:146:1957","a:2:31795:236-0:146:1957","a:2:2944:8134-0:146:1957","b:2:2701-0:146:1957","b:2:3523-0:146:1957","b:2:2686-0:146:1957","b:2:2690-0:146:1957","b:2:2411-0:146:1957","b:2:2696-0:146:1957","b:2:2414-0:146:1957","b:5:727-0:146:1957","b:22:270-0:146:1957","0:148","0:125","0:130","0:113","0:126","0:109","0:128","0:150"]}}},"5:5601:33798":{"id":"5:5601:33798","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:296:2612","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:296:2612","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:171":{"id":"0:171","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:144:2081","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:172:2105","0:174:2106"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2944:8134-0:273:1958":{"id":"a:2:2944:8134-0:273:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:2944:8134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13060:33100":{"id":"2:13060:33100","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12294:458","self::pattern":"2:12633:13561"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12654:13559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2686-0:282:1959":{"id":"b:2:2686-0:282:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2663:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2660:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2689:2151"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:143:2079","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:112:2106":{"id":"0:112:2106","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:144:2081","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2944:8134-0:205:1954":{"id":"a:2:2944:8134-0:205:1954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:2944:8134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:182:2137":{"id":"0:182:2137","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12981:27182":{"id":"2:12981:27182","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12294:458","self::pattern":"2:12633:13561"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2909:246-0:282:1959":{"id":"a:2:2909:246-0:282:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2909:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:285:464":{"id":"0:285:464","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13065:26453":{"id":"2:13065:26453","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2411-0:282:1959":{"id":"b:2:2411-0:282:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31796:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2405:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2413:2567"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5619:26455":{"id":"5:5619:26455","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13068:26458"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7616:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:127:811":{"id":"0:127:811","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2909:246-0:205:1954":{"id":"a:2:2909:246-0:205:1954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2909:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:41440:13131-0:146:1957":{"id":"a:2:41440:13131-0:146:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41440:13131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:93-0:282:1959":{"id":"0:93-0:282:1959","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,71],"end":[28,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Rng","name":"ChaCha8Rng","id":"0:282:1959","glob":false}}},"0:250:2137":{"id":"0:250:2137","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:205:1954":{"id":"0:205:1954","crate_id":0,"name":"ChaCha12Core","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"ChaCha with 12 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:31852:2611-0:205:1954","a:2:41440:13131-0:205:1954","a:2:41441:13348-0:205:1954","a:2:2909:246-0:205:1954","a:2:31795:236-0:205:1954","a:2:2944:8134-0:205:1954","b:2:2701-0:205:1954","b:2:3523-0:205:1954","b:2:2686-0:205:1954","b:2:2690-0:205:1954","b:2:2411-0:205:1954","b:2:2696-0:205:1954","b:2:2414-0:205:1954","b:5:727-0:205:1954","b:22:270-0:205:1954","0:212","0:209","0:210","0:165","0:194","0:176","0:171","0:167","0:207"]}}},"2:13036:33092":{"id":"2:13036:33092","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊¢') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2909:246-0:273:1958":{"id":"a:2:2909:246-0:273:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2909:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2411-0:214:1955":{"id":"b:2:2411-0:214:1955","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31796:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2405:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2413:2567"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:276:464":{"id":"0:276:464","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:172:2105":{"id":"0:172:2105","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"a:2:2909:246-0:146:1957":{"id":"a:2:2909:246-0:146:1957","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2909:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:41441:13348-0:214:1955":{"id":"a:2:41441:13348-0:214:1955","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41441:13348","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:31795:236-0:282:1959":{"id":"a:2:31795:236-0:282:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31795:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2944:8134-0:282:1959":{"id":"a:2:2944:8134-0:282:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:2944:8134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:31795:236-0:205:1954":{"id":"a:2:31795:236-0:205:1954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31795:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13051:27184":{"id":"2:13051:27184","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12294:458","self::pattern":"2:12633:13561"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41316:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12654:13559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2414-0:137:1956":{"id":"b:2:2414-0:137:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31796:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2408:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2416:25424"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:119:2147":{"id":"0:119:2147","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2944:8134-0:137:1956":{"id":"a:2:2944:8134-0:137:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:2944:8134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:286":{"id":"0:286","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10065:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:287:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2686-0:137:1956":{"id":"b:2:2686-0:137:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2663:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2660:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2689:2151"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:287:781":{"id":"0:287:781","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10039:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10020:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13013:27177":{"id":"2:13013:27177","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12294:458","str::splitn":"2:13010:27175","self::pattern":"2:12633:13561"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43330:11892","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12639:12470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12654:13559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12948:33081":{"id":"2:12948:33081","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°üíõ\");\n```","links":{"str::floor_char_boundary":"2:12946:33080"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2704:137":{"id":"2:2704:137","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:31723:10476","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:31852:2611-0:205:1954":{"id":"a:2:31852:2611-0:205:1954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31852:2611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2701-0:273:1958":{"id":"b:2:2701-0:273:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2660:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2670:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2704:137","2:2705:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2944:8134-0:214:1955":{"id":"a:2:2944:8134-0:214:1955","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:2944:8134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:174:2106":{"id":"0:174:2106","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:144:2081","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:170:2102":{"id":"0:170:2102","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:21:2077","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:129:677":{"id":"0:129:677","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:1957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41440:13131-0:273:1958":{"id":"a:2:41440:13131-0:273:1958","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41440:13131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:22:270-0:273:1958":{"id":"b:22:270-0:273:1958","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2382","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:2646","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25427"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:101:2101":{"id":"0:101:2101","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:19:2090","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"0:282:1959":{"id":"0:282:1959","crate_id":0,"name":"ChaCha8Rng","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:182:2076","`RngCore`":"20:137:2080"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:254","a:2:31852:2611-0:282:1959","a:2:41440:13131-0:282:1959","a:2:41441:13348-0:282:1959","a:2:2909:246-0:282:1959","a:2:31795:236-0:282:1959","a:2:2944:8134-0:282:1959","b:2:2701-0:282:1959","b:2:3523-0:282:1959","b:2:2686-0:282:1959","b:2:2690-0:282:1959","b:2:2411-0:282:1959","b:2:2696-0:282:1959","b:2:2414-0:282:1959","b:5:727-0:282:1959","b:22:270-0:282:1959","0:249","0:245","0:266","0:261","0:262","0:264","0:284","0:286"]}}},"0:92-0:273:1958":{"id":"0:92-0:273:1958","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,58],"end":[28,69]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Core","name":"ChaCha8Core","id":"0:273:1958","glob":false}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2427:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:1954","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:208:464"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:122:2181":{"id":"0:122:2181","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:246:2105":{"id":"0:246:2105","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"b:22:270-0:214:1955":{"id":"b:22:270-0:214:1955","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2382","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:2646","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:1955","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25427"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:169:2101":{"id":"0:169:2101","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:19:2090","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"b:2:2414-0:282:1959":{"id":"b:2:2414-0:282:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31796:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2408:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2416:25424"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:185:2141":{"id":"0:185:2141","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41459:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:79:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12963:33083":{"id":"2:12963:33083","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nunsafe {\n    assert_eq!(\"L√∂we ËÄÅËôé L√©opard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12300:1672","str::slice_mut_unchecked":"2:12964:33084","crate::ops::Index":"2:38925:13160"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13072:27086":{"id":"2:13072:27086","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:970:38660"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:166:781":{"id":"0:166:781","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10039:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10020:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2696-0:282:1959":{"id":"b:2:2696-0:282:1959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2670:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2666:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:1959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2699:137","2:2700:1757"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:257:2176":{"id":"0:257:2176","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"2:45548:11988":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:8691:8810":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:44122:163":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:14066:9421":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:13522:151":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:25511:266":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"5:3030:11618":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"6:1535:10655":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"6:6880:11396":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:13581:9330":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"11:1107:12419":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:13814:9384":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"6:5039:10920":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:7339:11451":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"6:8012:11578":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:12478:9191":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:45242:11965":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:4549:8154":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:12724:21175":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"6:6664:11330":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:45848:12014":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"6:5146:10939":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"16:2572:10026":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:45478:11984":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"22:238:2640":{"crate_id":22,"path":["ppv_lite86","types","u128x1"],"kind":"trait"},"17:13999:9411":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"11:1142:12420":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:12318:1370":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:15368:9768":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"5:7511:11631":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:38997:214":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:11730:9121":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"1:1596:10469":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:6749:10197":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"6:6524:11254":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:523:10592":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:43590:13573":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:14356:9482":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:2749:137":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"18:623:34564":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"6:6738:11357":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"1:8298:8718":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:13877:9395":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:4291:13312":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:45609:11991":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:40008:8525":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:39986:8521":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:3377:12534":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"11:2548:10474":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"11:2562:10477":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"18:491:8962":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"5:1568:209":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:10720:34558":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:15678:9872":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:10084:8126":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:11621:8313":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:10721:238":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"6:5031:10915":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:7485:11504":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:909:12422":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:939:12413":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"11:430:34519":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"11:2124:10254":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"5:830:12430":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:40037:11804":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:39747:11788":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:40563:11832":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"6:6409:11200":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:11102:12278":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:13455:9297":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"16:8136:10374":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:43794:11922":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"6:5677:11171":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:4421:12464":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:1794:1311":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:11739:12538":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:45819:12013":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:4485:11651":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:8596:12125":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"6:5052:10924":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"18:481:8961":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"8:0:2467":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"5:1171:32918":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:4939:13299":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:43093:12495":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"16:6300:12355":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"16:2548:10025":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:10155:8299":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"1:9669:25803":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"16:6079:8381":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"6:497:10572":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:1939:12519":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"16:0:2474":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:11313:9109":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"5:1356:12421":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"11:2469:12436":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"2:8428:8206":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"16:6342:34548":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:40571:11834":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"6:5636:11155":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"1:7967:12074":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:22497:8545":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:45984:12050":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"21:1747:8278":{"crate_id":21,"path":["zerocopy","byteorder","Usize"],"kind":"struct"},"2:44126:218":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"16:6758:10198":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"22:247:2643":{"crate_id":22,"path":["ppv_lite86","types","u64x4"],"kind":"trait"},"1:2457:13221":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"22:1500:8168":{"crate_id":22,"path":["ppv_lite86","x86_64","NoS3"],"kind":"struct"},"17:13674:9338":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:10889:12166":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"5:3034:32910":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:7512:13788":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:8134:9041":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:13946:9402":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:1607:10471":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"16:7014:21108":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:14271:9469":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:4412:220":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"5:2197:13107":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"21:2469:8281":{"crate_id":21,"path":["zerocopy","byteorder","I64"],"kind":"struct"},"1:3334:12532":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:42342:8115":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:10612:12266":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"5:2089:8720":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"1:9209:13381":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"21:2249:8280":{"crate_id":21,"path":["zerocopy","byteorder","I32"],"kind":"struct"},"5:7522:13142":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:43783:13574":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"6:4924:10863":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:4540:13616":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"16:3810:10053":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:10350:8324":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:11856:8727":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:2234:12259":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:12530:12335":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"2:22553:11686":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:41524:195":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:12388:9184":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"16:6412:21104":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"17:2175:21231":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:8564:12123":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"22:1411:8947":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","G0"],"kind":"struct"},"1:4077:13286":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"16:5927:10097":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:16235:10006":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"17:14986:9684":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"16:8093:10369":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:5535:12548":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:6725:13375":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:45204:11960":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"5:1342:12417":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:15333:9757":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"22:244:2642":{"crate_id":22,"path":["ppv_lite86","types","u64x2x2"],"kind":"trait"},"18:589:8968":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"3:234:225":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:13399:9285":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:39920:11652":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"5:40:13162":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"6:4864:10835":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"6:6532:11259":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:14449:9503":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:2738:124":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"5:1496:8055":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"16:2508:10023":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:11142:8304":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"6:1559:10672":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:5758:12154":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"22:180:2380":{"crate_id":22,"path":["ppv_lite86","types","BitOps32"],"kind":"trait"},"1:11883:12183":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"6:5483:11092":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"16:4641:10066":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"5:1064:32966":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:44185:11946":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:513:12252":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:10218:8320":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:46317:8017":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:15521:9832":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:22545:11685":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:46337:8019":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:2970:10268":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:39037:215":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"21:745:8300":{"crate_id":21,"path":["zerocopy","byteorder","BigEndian"],"kind":"enum"},"2:46454:8026":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:44000:11943":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"17:14933:9678":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:46326:8018":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:43430:11898":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:7744:8702":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:11915:21273":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"16:2394:10018":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:2196:129":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"1:2595:12524":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:12335:11885":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:5103:13340":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:11877:8330":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:40156:8978":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:3155:142":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:11574:8463":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:11605:8328":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"1:10876:12077":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"2:33251:13817":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"18:706:8985":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:42038:8118":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"18:80:25348":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"6:0:979":{"crate_id":6,"path":["libc"],"kind":"module"},"2:3764:8055":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"5:6055:14130":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"6:5219:10963":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:8615:12588":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"6:5336:11015":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"6:6636:11317":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:10329:8539":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"16:7428:21110":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:10866:8203":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:10039:143":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"5:7456:8055":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:13187:9249":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"6:6874:11395":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:8139:12574":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"17:11557:12296":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"17:12422:9186":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"21:3439:34806":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Shared"],"kind":"enum"},"2:39017:213":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:31761:12483":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:5662:12154":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:32996:13815":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:16165:9990":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"1:10929:12118":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"2:43930:11936":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:8015:13128":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:2955:13406":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:13272:9277":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:44207:179":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"5:1311:10254":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:9755:21149":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:12395:11893":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:43258:11888":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"17:14038:9416":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:45417:2421":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:45499:11985":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:14372:9483":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"5:6936:13592":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:11242:12283":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"14:187:20182":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:4967:31954":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"6:5277:10995":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:10958:11672":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:45189:11959":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:14847:9632":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"5:7037:263":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:11166:9099":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:11709:12477":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"16:7132:10253":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"19:0:1248":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:2677:26213":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"16:5367:21099":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"17:11051:12274":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:11204:12155":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"2:43732:11920":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"5:3028:32919":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:41382:8204":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"17:15176:9719":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"21:0:2606":{"crate_id":21,"path":["zerocopy"],"kind":"module"},"17:15249:9733":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"6:6650:11328":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"6:578:10623":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"6:465:10556":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"13:0:2465":{"crate_id":13,"path":["std_detect"],"kind":"module"},"6:4876:10838":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:8817:8814":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"17:14587:9520":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"6:7575:11563":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"9:53:8465":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"6:5502:11099":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"1:11573:8714":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:8844:12142":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"5:6673:8055":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:10966:12551":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"1:5222:12545":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:5046:10922":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:7684:8530":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:43023:12493":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"5:4503:32965":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"16:2418:10019":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:16259:9282":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"2:3396:13525":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:8116:177":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:2992:13524":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"9:482:20091":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"5:926:13145":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"5:723:249":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:10092:21174":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"5:7420:8055":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:15356:9765":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"16:7509:12391":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"16:4771:10069":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"21:891:8273":{"crate_id":21,"path":["zerocopy","byteorder","U16"],"kind":"struct"},"16:5769:10089":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:22604:31461":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"16:6026:8375":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"6:1621:10717":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:8619:11461":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:13116:9236":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"1:7681:30955":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:31852:2611":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:41442:2996":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"15:394:20204":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"5:2527:11621":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:41821:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:2670:256":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:4240:30911":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:12264:12330":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"5:6546:8804":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"11:774:8496":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:41078:11838":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"16:8073:10368":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:3121:125":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:14147:9432":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:918:8500":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"5:3246:10469":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:22589:31468":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"6:6689:11338":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"16:7355:10290":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:9254:12591":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"1:12308:875":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:2960:13408":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"6:6657:11329":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"16:6849:10224":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:7359:11457":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:14025:9414":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:33114:13816":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:43472:11900":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"6:5134:10938":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:2986:12529":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"6:5102:10935":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:5700:10041":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:45774:12012":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:4424:10059":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"10:44:8464":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"16:7111:10251":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"5:1546:8499":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"6:6714:11352":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"2:44136:226":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:8225:8720":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"6:6788:11375":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"18:531:8965":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:15701:9873":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:6658:11664":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"2:39999:8522":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"16:7528:10310":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"22:232:2421":{"crate_id":22,"path":["ppv_lite86","types","u32x4"],"kind":"trait"},"17:16105:9974":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"17:12127:9164":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"18:521:25360":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"5:1536:12422":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:9248:116":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:43934:11937":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:2914:8132":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"5:7083:33012":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"22:183:2633":{"crate_id":22,"path":["ppv_lite86","types","RotateEachWord32"],"kind":"trait"},"16:6560:8432":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:15992:9953":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"6:5515:11100":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"6:5376:11029":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:11875:12183":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"5:1830:12436":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:725:13226":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1:5897:12556":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:11753:13554":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"6:1585:10688":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:15301:9749":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:12371:9219":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:4756:11476":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"9:392:20093":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"11:0:2470":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"5:2103:12437":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:45580:11990":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:9916:21170":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:4629:13315":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:12304:716":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:21241:8038":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"6:1628:10721":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:14855:9635":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:10759:8304":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"16:5006:10077":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"11:800:8804":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:12301:1760":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"5:1155:34432":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:13235:9264":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:11443:9111":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"18:507:8963":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"18:718:8989":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"11:2231:8463":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"1:9144:8055":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"16:2902:20240":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:9398:161":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:9807:21157":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:15313:9750":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:4897:10848":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:13509:9303":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"18:538:8288":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:6317:12359":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:45662:11994":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"16:2478:10022":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:3019:225":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"16:7006:12368":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:42780:11873":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"17:12278:12331":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:15931:9249":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"5:943:8203":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"14:160:12405":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:12317:1859":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"5:3636:181":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"16:2592:10027":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:39708:11784":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"17:13173:9248":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:6779:8710":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"6:5181:10943":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:43358:11894":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"16:6782:21107":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"6:5472:11089":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"6:6811:11381":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:4607:13314":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:12201:12325":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:15010:9686":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"16:6466:10154":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"16:7823:21112":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:15445:9787":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"17:13064:9229":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:4891:10845":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:11674:9116":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:14788:9580":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"16:7397:34545":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:14189:9454":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"6:7461:11491":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:11341:12287":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"16:2768:10035":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:9671:21152":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:11634:12568":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:4596:8155":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"11:837:12410":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:15214:9727":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:22098:13500":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"9:447:20092":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:3530:12121":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:7962:12569":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"16:6991:34544":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:43194:8325":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"22:1540:8177":{"crate_id":22,"path":["ppv_lite86","x86_64","NoNI"],"kind":"struct"},"17:15197:9724":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:6494:10157":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"11:2383:8203":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"1:5776:12070":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:6756:11365":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"17:15624:9852":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:16187:9996":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"2:43080:11677":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:12245:12620":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"6:8029:11588":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:9868:8116":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"17:15390:9773":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"22:1111:8264":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","u32x4_sse2"],"kind":"struct"},"1:1446:155":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"16:2878:10040":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"5:7108:32990":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"16:6263:10144":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:10661:12267":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:12150:9165":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:6775:11368":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"11:1887:8055":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:45157:11957":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"16:6433:8430":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:46061:12051":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:42587:8686":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:11567:12297":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"16:7741:8448":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"20:21:2077":{"crate_id":20,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"2:9536:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:2663:144":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:11354:12288":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"21:126:8950":{"crate_id":21,"path":["zerocopy","pointer","ptr","def","Ptr"],"kind":"struct"},"1:8173:139":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:1602:10470":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"22:1530:8175":{"crate_id":22,"path":["ppv_lite86","x86_64","NoA2"],"kind":"struct"},"17:15463:9790":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"6:1526:10649":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:6290:8807":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"5:2309:8505":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"22:1416:8948":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","G1"],"kind":"struct"},"2:21807:8543":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"6:6435:11215":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:13485:9301":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:15635:9856":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:14436:9502":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:12306:887":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:3278:210":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"6:7546:11547":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:46209:12054":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:8200:8696":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"2:4773:13626":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:2466:134":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"1:8571:12124":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:10887:34556":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"21:2673:8282":{"crate_id":21,"path":["zerocopy","byteorder","I128"],"kind":"struct"},"17:14977:9683":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:0:2475":{"crate_id":17,"path":["object"],"kind":"module"},"2:11163:11892":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:46378:8022":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"5:4836:781":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:12792:9061":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:9315:25586":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"17:11026:21186":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:4569:8140":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"6:1663:10746":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:9107:12145":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"6:8294:11600":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"18:643:8963":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:12293:1149":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"11:1566:20172":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"6:8282:11598":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:2431:13211":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"20:112:25368":{"crate_id":20,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"1:10958:12573":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"17:9938:21171":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:3433:13528":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:10828:34554":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:40046:11806":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"6:545:10605":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"16:7570:10047":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"22:220:2381":{"crate_id":22,"path":["ppv_lite86","types","LaneWords4"],"kind":"trait"},"1:5024:13333":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:12312:1781":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"16:4502:10061":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"5:2114:12438":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"2:22638:11701":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:4161:13294":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:3368:13605":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:7604:8442":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:14560:9517":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:39849:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:13899:9396":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:32272:10267":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"21:39:25411":{"crate_id":21,"path":["zerocopy","byteorder","Order"],"kind":"enum"},"2:39836:11798":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:2790:12460":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"21:2877:8283":{"crate_id":21,"path":["zerocopy","byteorder","Isize"],"kind":"struct"},"18:573:8963":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:2282:12160":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"14:220:10460":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:8777:13358":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:4147:12462":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:10020:225":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"17:12399:9185":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:22569:31467":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:45140:11955":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:15720:9878":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:40315:11823":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"5:6394:13506":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:41782:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:10622:34555":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:13723:9363":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:11227:12282":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:39854:11799":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"16:4802:10070":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:15426:9782":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:5546:11112":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:10877:12270":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:10137:21150":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"11:811:12436":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"2:1863:13844":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:4495:8153":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"13:226:8458":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:14311:9473":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"6:7561:11554":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:14012:9413":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"6:553:10610":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:2277:138":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:21778:13226":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"2:31723:10476":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:22276:13495":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"2:33055:13814":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:12310:862":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:9728:8534":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"5:5454:13546":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:40099:11812":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:22148:32251":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"17:12362:9183":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"1:5711:13363":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"5:3285:32960":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"16:6385:10146":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"18:680:8981":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:2307:651":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"16:7061:10244":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:10769:34557":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"16:3842:10054":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:4268:8519":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:12305:732":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:41515:8055":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:3149:140":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:14298:9472":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"11:832:12422":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:2321:13834":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"17:16079:9968":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"16:5756:12346":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"15:0:2473":{"crate_id":15,"path":["addr2line"],"kind":"module"},"16:2323:20239":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"5:5714:13591":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:2438:10020":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:10068:21156":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:13832:9385":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:542:8379":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:11865:12315":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"16:5385:8299":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:261:12250":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:1678:12154":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"16:5960:10104":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:3021:137":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:11061:26198":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:8590:12584":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:9541:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:39094:11780":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:8472:31939":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:39902:13193":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"13:109:8184":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"5:7593:11637":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"16:2708:10032":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:12030:12316":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:5307:10081":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"5:671:12429":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:2660:162":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"16:2728:10033":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:41138:8680":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:14091:9423":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:11089:12277":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:41256:12123":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"17:11825:12311":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:11167:12145":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:10671:34551":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"7:0:1849":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:40329:11824":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:12900:8340":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:5268:203":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:45869:12015":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"16:5817:8397":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"6:1547:10664":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:2902:8131":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:15799:9898":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:14111:9426":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:14489:9506":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"5:1480:8204":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:5047:13335":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"6:4985:10890":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"5:7616:242":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"11:351:34511":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"1:12300:1672":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"17:15092:9699":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"16:7321:8194":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"17:12543:12336":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"3:0:487":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"6:5020:10909":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:5122:10937":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:21278:32444":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"22:235:2434":{"crate_id":22,"path":["ppv_lite86","types","u64x2"],"kind":"trait"},"5:870:13144":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"16:3329:10049":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"16:6648:10173":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"16:2355:8364":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:10518:26213":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:533:13111":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"16:7857:10327":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"16:5863:21101":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:2497:194":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:41587:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"11:2369:12427":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"16:8216:10378":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:13553:9320":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:11606:12177":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:2503:201":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:42059:8128":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"20:137:2080":{"crate_id":20,"path":["rand_core","RngCore"],"kind":"trait"},"2:11676:12476":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"1:903:12436":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"16:5075:10079":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:11044:26194":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"16:8118:10372":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:9294:8722":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"17:12929:9219":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"16:7539:10046":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:2447:13216":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"6:6460:11220":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"6:8341:11611":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"16:4560:10063":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:22631:11698":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:2041:196":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"17:15039:9694":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:15281:9742":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"20:167:2620":{"crate_id":20,"path":["rand_core","RngReadAdapter"],"kind":"struct"},"21:2013:8279":{"crate_id":21,"path":["zerocopy","byteorder","I16"],"kind":"struct"},"2:10074:8118":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"1:12309:881":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:43507:11791":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"11:1917:10470":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:4707:13332":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:42540:8682":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"17:15582:9839":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:12671:12339":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"1:5586:114":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"9:330:10519":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:11812:12309":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"5:732:119":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"6:1496:10636":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:42795:11874":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:9282:12595":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:45353:11972":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:10683:9131":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"11:1923:10471":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:11239:161":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"2:30662:8038":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:11042:12273":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:12949:9172":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:3341:13825":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"5:7537:8509":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"16:6634:8434":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"6:6519:11253":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:46416:8024":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:8007:130":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"5:826:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"6:7314:11433":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:5200:10955":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:8739:2395":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"17:15734:9880":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"6:7389:11479":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:11841:12313":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:256:12249":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"16:6427:8428":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"1:8641:12126":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"22:1525:8174":{"crate_id":22,"path":["ppv_lite86","x86_64","YesA2"],"kind":"struct"},"11:2423:8055":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"1:4498:12543":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:8833:12141":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:7928:13794":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"5:3027:8112":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:9385:12566":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"6:6609:11308":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:10439:8301":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:10573:34550":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:40027:8526":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:12319:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:4153:13292":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"6:5250:10978":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:12508:9195":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:4821:13314":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"18:113:25350":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:15151:9711":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"6:6447:11219":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:8576:13313":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"5:3251:32959":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"6:7348:11452":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:7755:8449":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"6:4971:10882":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:15206:9725":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"16:6456:21105":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:39977:12488":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:31797:243":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:13015:8334":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:8006:11576":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:4856:10072":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"6:4885:10843":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:10317:8323":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"6:7330:11445":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"22:1515:8172":{"crate_id":22,"path":["ppv_lite86","x86_64","YesA1"],"kind":"struct"},"6:5191:10950":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:3103:13526":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"1:4041:13285":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:43033:11676":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"6:6670:11333":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:8491:11822":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:10954:21184":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:30228:8550":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:6131:219":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"5:7356:8055":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"17:11293:21204":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"1:4149:13291":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"14:165:20175":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:8029:13129":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:42799:11875":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"5:2207:11616":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:3499:12154":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"6:5489:11094":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"11:1025:12417":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"16:2854:10039":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:12633:13561":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"6:1580:10686":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"16:7686:12400":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:1757:650":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"22:1580:2626":{"crate_id":22,"path":["ppv_lite86","x86_64","vec256_storage"],"kind":"union"},"2:43611:11907":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:10501:31866":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:3946:12540":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:21400:8542":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"6:5665:11166":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:8481:8521":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:6793:12564":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"2:21329:13416":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"18:754:8995":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"11:2403:8204":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2:12707:13567":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"16:2788:10036":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:45563:11989":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"5:4105:32966":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:22248:13494":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1:3286:12531":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:46238:12055":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:3615:13245":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"5:7386:12453":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:12251:12329":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:21496:13226":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"6:4952:10874":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:41440:13131":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:12307:869":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:10080:205":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:21280:32442":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:10251:8321":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"11:687:8204":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"18:651:8963":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:13485:8809":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"6:5290:11000":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:14575:8334":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"16:4743:10068":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:22:796":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"17:15748:9887":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:32458:10264":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"22:224:2639":{"crate_id":22,"path":["ppv_lite86","types","Swap64"],"kind":"trait"},"6:1593:10693":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:41110:13267":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:41094:11840":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"5:296:2612":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"21:37:25410":{"crate_id":21,"path":["zerocopy","byteorder","ByteOrder"],"kind":"trait"},"17:15078:9695":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:9335:8724":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:1886:11646":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:10641:12534":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"1:5783:12071":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"7:78:20085":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:12292:405":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"6:6763:11366":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"1:10847:12606":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"17:15608:9848":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"5:3398:12436":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"16:7695:10317":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:11256:9103":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"2:42595:8687":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:43125:11679":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:5448:129":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"17:16151:9987":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"1:12261:8728":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:9723:31940":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:4159:110":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:42045:8119":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:3184:13161":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:14545:9513":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"5:1465:8203":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:10534:34553":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"10:36:10482":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:41901:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"11:1066:20171":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:6665:21106":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:6895:10226":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"22:0:1965":{"crate_id":22,"path":["ppv_lite86"],"kind":"module"},"17:12464:21298":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"1:6306:26209":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:6848:232":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:43014:11675":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"6:5536:11106":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:43330:11892":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:15222:9729":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:4824:10802":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:7379:34549":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:12867:120":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"11:2498:20167":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"6:8265:11593":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"6:5174:10941":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:15376:9771":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:15760:9889":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:16198:9997":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"2:22203:13834":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"function"},"17:13774:9376":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:14402:9489":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"6:5225:10966":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:12165:12478":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"17:11269:21203":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"16:7769:10318":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"18:581:8038":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"16:7656:21111":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:39692:11782":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:5653:11159":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"6:4932:10865":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:10156:11850":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"2:726:13270":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"17:15822:9902":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:40131:8529":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:4182:13521":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:9416:12155":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:4754:11474":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"2:45292:11968":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"6:5557:11118":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:5914:8407":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:1063:12418":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"11:2443:8804":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"17:14414:9491":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:12683:12340":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"17:2037:12255":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:43491:11902":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"11:1007:10254":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:5521:12546":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"14:7:12405":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:3134:8209":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:33597:13819":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:12597:9197":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"2:43115:12496":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:9289:8706":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"1:3844:12539":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:10399:8325":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:22360:11681":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"6:6698:11344":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"22:257:2436":{"crate_id":22,"path":["ppv_lite86","types","u64x2x4"],"kind":"trait"},"2:45338:11971":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"16:5415:10083":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"22:296:2647":{"crate_id":22,"path":["ppv_lite86","types","Store"],"kind":"trait"},"2:40069:8528":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:12238:12328":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:9167:12147":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:11177:12474":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:11651:12181":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:38929:11775":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"6:6505:11252":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"21:505:25373":{"crate_id":21,"path":["zerocopy","IntoBytes"],"kind":"trait"},"17:11799:12307":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"16:4062:10057":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:10871:12159":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"2:45396:11982":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:13959:9405":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:45324:11970":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:14079:9422":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:13271:32232":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:9136:12590":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"6:7306:11428":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"16:6574:8433":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"16:5781:10042":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:2503:2483":{"crate_id":1,"path":["std","io"],"kind":"module"},"17:15410:9779":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:11702:9118":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"6:5266:10987":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:14752:9549":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"6:5361:11021":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"18:698:8293":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:8425:8205":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:9302:12151":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"6:6678:11335":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:15058:8355":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:10919:128":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"2:46493:8027":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:11755:9125":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"20:199:8960":{"crate_id":20,"path":["rand_core","error","ErrorCode"],"kind":"struct"},"6:5407:1218":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:3044:10269":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:45271:11967":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:11214:12281":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:10982:21185":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:13437:9289":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:6471:11228":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:5064:10933":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:11779:12539":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:40140:11815":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"6:4909:10857":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:22016:13498":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"20:79:137":{"crate_id":20,"path":["rand_core","error","Error"],"kind":"struct"},"11:700:8055":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"16:5802:21100":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:45531:11987":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:9496:12517":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"20:130:25372":{"crate_id":20,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"2:29835:13269":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"5:7406:32954":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:12298:333":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:38925:13160":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:10938:25581":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"1:4262:13309":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"6:4800:10784":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:30266:11707":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:32644:13813":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:9179:13380":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:11419:8304":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:39784:11791":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:9230:12150":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:12824:21176":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:7880:26216":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:12887:8338":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:640:12509":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"5:5918:8804":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:39107:11781":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"6:5423:11055":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"16:7549:10313":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:4787:10775":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"6:5320:11011":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"16:860:12345":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"2:0:545":{"crate_id":2,"path":["core"],"kind":"module"},"6:1517:10644":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"18:735:25358":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:21380:13226":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:3473:12261":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:31853:8138":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"5:3306:10471":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:22481:8514":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:46363:8021":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:11898:9127":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"6:5382:11032":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:13594:9331":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"6:5002:10900":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"16:4830:10071":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"6:4965:10879":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:21295:32435":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:12181:13562":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"16:6976:8438":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"5:4439:32965":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:9083:198":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"5:3742:32966":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"22:892:8260":{"crate_id":22,"path":["ppv_lite86","soft","x2"],"kind":"struct"},"16:5742:10085":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:39817:13633":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"5:1191:34433":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"16:6335:8392":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:11764:9126":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"1:8035:13180":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"17:15266:9740":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"5:6592:32966":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:33424:13818":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"20:143:2079":{"crate_id":20,"path":["rand_core","CryptoRng"],"kind":"trait"},"1:12316:943":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:41374:8203":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"6:8253:11591":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"5:7698:12436":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"17:12851:8337":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:42305:31551":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:5835:11658":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"16:6353:8423":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"6:5588:11127":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:8674:13344":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:40544:11830":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:12314:1793":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"20:25:2078":{"crate_id":20,"path":["rand_core","block","CryptoBlockRng"],"kind":"trait"},"21:1545:8277":{"crate_id":21,"path":["zerocopy","byteorder","U128"],"kind":"struct"},"16:7727:8446":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:9363:12557":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"16:6940:8393":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:928:13143":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:3899:10055":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:14529:9511":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"18:0:2476":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:12557:8315":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"17:13325:8347":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:4047:13284":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"11:673:8203":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:1585:12436":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"5:4150:8204":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"5:5848:250":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"16:7559:10314":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"11:490:153":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"16:8301:10380":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:40121:11814":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"5:1518:8496":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"11:1676:34514":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:16032:9267":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"2:38957:209":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"6:5260:10984":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:16093:9972":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"16:3014:20242":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"16:5846:10091":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:4343:12541":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:6441:219":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"16:4614:10065":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"21:3425:34799":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Invariants"],"kind":"trait"},"1:9128:8203":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"1:4860:13302":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:45125:11954":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:39803:11793":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:10424:114":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"18:613:34565":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"0:95:1963":{"crate_id":0,"path":["rand_chacha","ChaChaCore"],"kind":"type_alias"},"2:21783:13418":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"5:7714:12457":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"5:7629:11638":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:2038:197":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"6:4959:10877":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"6:5083:10934":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"20:127:25371":{"crate_id":20,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"16:3475:10050":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"5:3280:10468":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:8504:11668":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:41316:193":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"16:2458:10021":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"6:479:10564":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"6:6721:11353":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"2:41940:8681":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:13412:9287":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"6:6900:11410":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:5630:11152":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2:42565:156":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:45449:11983":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:21309:32447":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"16:2338:10015":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:1098:12253":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"16:4882:10073":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:6588:10162":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:14876:9643":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"16:3669:9003":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:40522:11827":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"6:4811:10792":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"16:6278:8408":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:16176:9995":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"17:14051:9418":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:10170:8300":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"6:7366:11461":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:10441:25802":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"2:22281:13493":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"2:40180:11819":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"22:1520:8173":{"crate_id":22,"path":["ppv_lite86","x86_64","NoA1"],"kind":"struct"},"17:13252:9267":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:3241:26043":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"6:6706:11348":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"5:7396:11630":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"2:8060:2608":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:40055:11807":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"5:3272:10470":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:481:26204":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:11540:12612":{"crate_id":1,"path":["std","sys","thread_local","fast_local","Key"],"kind":"struct"},"5:6413:13507":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"6:5160:10940":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:42954:12492":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:12516:12333":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"6:7516:11530":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:9781:21167":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:10289:156":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:41056:169":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"17:11524:12294":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"5:1557:8500":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"21:3510:25394":{"crate_id":21,"path":["zerocopy","SizeInfo"],"kind":"enum"},"2:22413:11682":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"6:538:10601":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:10711:13226":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:3284:12530":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:13211:9263":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:15116:9701":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:41244:11853":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:10533:12589":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:13298:204":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"9:357:20107":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"16:4531:10062":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"5:281:32966":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:8528:13266":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:39880:11800":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"6:5617:11146":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"21:3261:8285":{"crate_id":21,"path":["zerocopy","byteorder","F64"],"kind":"struct"},"17:14516:9510":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:10018:21153":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:12372:11890":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:13323:12480":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:8328:11607":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"5:6913:13591":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"6:491:10569":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"16:6098:21102":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:10324:13230":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"16:6962:8437":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"5:4469:12154":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:914:8499":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:5466:11086":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:10078:8128":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:2909:246":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"16:6532:10160":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"5:7364:11629":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"11:299:10463":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"22:274:2377":{"crate_id":22,"path":["ppv_lite86","types","Machine"],"kind":"trait"},"1:951:12416":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"22:202:2637":{"crate_id":22,"path":["ppv_lite86","types","Vec2"],"kind":"trait"},"1:3244:26695":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:12318:9172":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"6:1485:10631":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:7395:13795":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"2:10065:120":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:43976:131":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"16:150:8372":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"5:2236:8502":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:45736:8257":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"16:8226:21114":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"16:2684:10031":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:21327:13226":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"17:13308:8345":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:12076:12319":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:9150:12146":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:22520:11683":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"21:1343:8276":{"crate_id":21,"path":["zerocopy","byteorder","U64"],"kind":"struct"},"1:2429:11645":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:46306:8016":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:10905:12271":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"6:5565:11120":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:12584:12269":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"1:9094:8698":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"16:6160:20212":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:14260:9468":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:10635:12530":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"2:4342:8152":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:4058:12154":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:7965:145":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"6:564:10615":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"20:182:2076":{"crate_id":20,"path":["rand_core","block","BlockRng"],"kind":"struct"},"16:7580:10315":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:3597:12262":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:11716:25799":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"16:7648:12399":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"11:1051:12418":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:2405:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:45110:11951":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:12313:1787":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"22:299:2383":{"crate_id":22,"path":["ppv_lite86","types","StoreBytes"],"kind":"trait"},"15:288:20194":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:13292:8341":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"21:513:25387":{"crate_id":21,"path":["zerocopy","Unaligned"],"kind":"trait"},"22:885:2376":{"crate_id":22,"path":["ppv_lite86","dispatch_light128"],"kind":"macro"},"20:0:1951":{"crate_id":20,"path":["rand_core"],"kind":"module"},"6:5457:11080":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"16:7052:12369":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:2427:113":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:30281:8115":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:11186:8541":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"1:3779:13268":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:11128:9083":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:11367:8315":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:12294:458":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:872:12250":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"2:46431:8025":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:836:8203":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:5370:11027":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"18:635:8980":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:46401:8023":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:11868:26098":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:1824:12514":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:43376:11895":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:11579:12614":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:10350:13038":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"1:1968:13190":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:12295:1820":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:32937:13409":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:1885:12517":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:5624:11149":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"6:5528:11101":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:5306:11007":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"16:7473:8389":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:10981:25591":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:13538:9314":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:6458:11660":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"6:6746:11358":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"6:6379:11175":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"16:6120:21103":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:3605:13224":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"9:238:2395":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"17:12300:21297":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"2:21507:8542":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"16:6504:10158":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:42359:137":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:9664:12574":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"21:463:25374":{"crate_id":21,"path":["zerocopy","NoCell"],"kind":"trait"},"5:7581:11635":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:9984:21172":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:15168:9716":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"5:5214:8511":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:10533:31519":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"11:102:10462":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"16:5995:10107":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"6:8317:11606":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:6927:10230":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:40538:11829":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:473:10561":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:13568:9326":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"22:241:2641":{"crate_id":22,"path":["ppv_lite86","types","u32x4x2"],"kind":"trait"},"16:5722:10043":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"14:214:10458":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"21:3522:8954":{"crate_id":21,"path":["zerocopy","TrailingSliceLayout"],"kind":"struct"},"2:2904:118":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"18:726:8295":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"5:2289:33038":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:12213:12326":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:12342:9178":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:39280:13638":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"6:4942:10871":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:1578:8055":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"11:434:34520":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:15456:9788":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"5:4424:264":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"5:2758:11624":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"22:1299:8272":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","u128x1_sse2"],"kind":"struct"},"1:11221:12169":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"2:43835:11932":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:46259:8259":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:4135:12461":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:31795:236":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:12433:8334":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:6614:12560":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:16121:9979":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"5:7436:8513":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"18:96:25349":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:12189:12324":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"11:2326:12417":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"5:1577:12435":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:4821:12263":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"1:9077:12589":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:45647:11993":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"5:6034:8511":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:11149:11891":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"16:2303:20213":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:22234:13226":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"6:5244:10976":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"22:178:2379":{"crate_id":22,"path":["ppv_lite86","types","ArithOps"],"kind":"trait"},"1:3426:13253":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:13577:13146":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"17:14475:9505":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"11:1910:10469":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"17:1207:12254":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:11788:12306":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"16:8155:10377":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:41430:8195":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:41548:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"10:0:2469":{"crate_id":10,"path":["adler"],"kind":"module"},"2:31779:8153":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"1:8511:11899":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:13526:9311":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"6:5671:11168":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"11:328:10466":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"22:967:8263":{"crate_id":22,"path":["ppv_lite86","soft","x4"],"kind":"struct"},"2:43657:11917":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"6:4979:10887":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:39791:13632":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:8189:128":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:14325:9476":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:44246:11950":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:15836:9905":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:41222:31472":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:43276:11889":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:2632:13226":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:15944:9263":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"17:15434:9783":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"18:765:25359":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:8195:8697":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"2:30635:195":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"15:327:8454":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"16:7813:10319":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:45434:2434":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:7396:13796":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"4:0:2466":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"11:2569:11631":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:13606:9334":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:38942:212":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:45172:11958":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:9120:8699":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"6:5112:10936":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:10076:8127":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:4718:10067":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"16:867:12249":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"1:849:8204":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:4424:12542":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"16:2528:10024":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:11595:8327":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:4742:13289":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:21931:13414":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:11537:12295":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:44177:12498":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"16:6802:10210":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:2738:12528":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:503:13107":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:15190:9722":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:8151:8719":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"17:12043:12317":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:4818:13336":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:43942:11939":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"5:219:12428":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"5:1527:8498":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"22:206:2384":{"crate_id":22,"path":["ppv_lite86","types","Vec4"],"kind":"trait"},"2:46180:8258":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"16:6231:10141":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:4940:10075":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:11853:12314":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"18:515:8964":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"21:470:25385":{"crate_id":21,"path":["zerocopy","FromZeros"],"kind":"trait"},"16:5347:10082":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:42577:2395":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:39768:11790":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:14131:9427":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:7840:12617":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:9390:12567":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"2:8434:13792":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:1590:10468":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:1574:8203":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"16:6543:10161":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"6:6491:11241":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:39087:12485":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"18:670:12248":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:12411:11896":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:11743:9122":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"21:760:8299":{"crate_id":21,"path":["zerocopy","byteorder","LittleEndian"],"kind":"enum"},"16:3029:8998":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"16:6246:205":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"22:1593:2627":{"crate_id":22,"path":["ppv_lite86","x86_64","vec512_storage"],"kind":"union"},"17:11493:12291":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:39757:11789":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:11035:12472":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"11:364:34507":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:1809:674":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:46352:8020":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"5:6755:32966":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:4870:10836":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:11467:9112":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"5:3649:8203":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:637:12507":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:22122:13226":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"1:1072:12421":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:41704:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:42380:8117":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"11:2151:12418":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:11016:12272":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:7537:11544":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:14503:9509":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:13738:9367":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:41499:8203":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"6:5329:11014":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"17:13046:9226":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"16:5037:10078":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"16:2808:10037":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"11:2554:34518":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:45367:11973":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:45886:12016":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:5769:219":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:414:184":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:12695:12341":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"2:10072:8119":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:11153:12269":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:43926:11935":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:1862:12516":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"6:8351:11613":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:12289:9167":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"22:1510:8169":{"crate_id":22,"path":["ppv_lite86","x86_64","NoS4"],"kind":"struct"},"16:6047:12348":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"6:7584:11566":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:9243:8703":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"22:1535:8176":{"crate_id":22,"path":["ppv_lite86","x86_64","YesNI"],"kind":"struct"},"2:2657:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"5:4270:12154":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"9:424:20094":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:21382:13412":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:12768:21154":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:43462:11899":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"16:2748:10034":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:12993:21177":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"6:6821:11384":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:11063:12275":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:42548:8684":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"16:6620:10172":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:37522:13820":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"17:10524:12265":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"5:3873:12436":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"17:16138:9981":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"17:403:12251":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:45707:12011":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:6610:11828":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"6:8259:11592":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:10576:26211":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"2:44011:13932":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:5708:11382":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:2951:8136":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"17:12485:21299":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:10866:12157":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"18:598:34567":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"6:8197:11589":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"6:5400:11044":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:12449:11672":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:21505:13413":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"11:1160:12421":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:12107:8304":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:16050:9277":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"1:9194:13379":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:43482:11901":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:3145:2607":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:14994:9685":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"16:4913:10074":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:32878:13407":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:557:12505":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:43516:11782":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:13473:9298":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"21:3531:25393":{"crate_id":21,"path":["zerocopy","_CastType"],"kind":"enum"},"1:4278:13311":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:3264:12260":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:14235:9464":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:11075:8315":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:2323:13835":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"16:3925:10056":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:43626:11913":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:4139:13290":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:12056:9160":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"14:202:13575":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"18:548:152":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:1581:8804":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:13986:9410":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"18:608:12243":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"11:1883:8203":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:5571:12550":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"21:3468:8286":{"crate_id":21,"path":["zerocopy","wrappers","Unalign"],"kind":"struct"},"11:856:12413":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:15342:9758":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"16:7711:209":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:42556:8685":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:11115:12279":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:8209:12576":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:2445:13215":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:3247:26697":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"17:13844:9387":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"6:5477:11091":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:1653:10740":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"5:1327:12418":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:13465:8807":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:40078:11810":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:10997:9097":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"6:532:10598":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:4946:423":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:12659:12338":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"2:43938:11938":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:867:8496":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:14723:9529":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"6:8271:11594":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:2944:8134":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:42317:10346":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:8523:12586":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"6:6597:11303":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:23111:235":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:4099:13288":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:41626:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"6:1723:10769":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:33770:10273":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"17:14599:9527":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:6338:8707":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:38881:13527":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"11:2140:12417":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:4:1231":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:11510:12293":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:12647:12337":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"2:30292:31550":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"2:41862:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:40529:11828":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:22531:31457":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:2982:13522":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"6:5283:10998":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:7602:11569":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"9:502:10537":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"17:15957:9923":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"22:884:2375":{"crate_id":22,"path":["ppv_lite86","dispatch"],"kind":"macro"},"17:15646:9857":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:13375:9281":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"6:5436:11065":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"6:559:10613":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:30260:11640":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"18:689:8984":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:44144:206":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"11:396:34509":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:8517:12584":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:43005:11674":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:2699:12525":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:9371:12154":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"2:3356:146":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"16:5107:10080":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:43705:11919":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:9109:8531":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:13344:8354":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"14:0:2472":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:31796:2610":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"6:5643:11158":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:4992:10893":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:3379:12535":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"17:15138:9705":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:11773:9202":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:46280:12056":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:5555:12549":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"21:1125:8275":{"crate_id":21,"path":["zerocopy","byteorder","U32"],"kind":"struct"},"17:10915:34552":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"22:176:2629":{"crate_id":22,"path":["ppv_lite86","types","BSwap"],"kind":"trait"},"2:38266:13824":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:3630:8804":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:43500:11903":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"6:1565:10674":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:43817:11930":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:39734:11787":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:12863:9218":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:8303:13256":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:13972:9133":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:6729:11354":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"17:12328:9174":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:40553:11831":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"11:844:13143":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:2633:13637":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"16:5686:8396":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:11392:12289":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"22:250:2644":{"crate_id":22,"path":["ppv_lite86","types","u128x2"],"kind":"trait"},"5:6002:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"6:5314:11010":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:14212:9463":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:40108:11813":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:45516:11986":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:43950:11941":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:11583:12302":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:5380:202":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:1952:188":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:10998:8699":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"1:1040:10254":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"11:1728:155":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:45309:11969":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:10435:13899":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:6722:12561":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:39776:11782":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:15473:9795":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:43954:11942":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:46106:12052":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:588:13122":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:15273:9741":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:42052:8127":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:39892:8325":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"2:31772:12484":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"2:43154:11878":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:15:2093":{"crate_id":2,"path":["core","write"],"kind":"macro"},"1:5924:8700":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:6115:12070":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"6:5415:11050":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:10890:8204":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"5:7464:8055":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:362:12503":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"6:5236:10972":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:9358:186":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:41399:8194":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:11269:12170":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"16:2612:10028":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"21:475:25386":{"crate_id":21,"path":["zerocopy","FromBytes"],"kind":"trait"},"1:11055:26206":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"14:31:12405":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:6650:8709":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"6:5344:11016":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"1:11645:12180":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"5:6946:13593":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"16:6813:10211":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:43106:11678":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:41390:8055":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:2663:12526":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:22466:8544":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:10263:12516":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"11:710:8499":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:43208:11668":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"5:7639:12455":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:10457:138":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"2:21297:32441":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"16:5831:8400":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:4986:12264":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"17:12808:9216":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:4299:8520":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"6:5598:11132":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"6:7452:11488":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:10818:12269":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:11562:26236":{"crate_id":1,"path":["std","sys","thread_local","fast_local","DtorState"],"kind":"enum"},"1:8437:8721":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"17:14463:9504":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:10915:11668":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:43525:11790":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"16:8259:10307":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:8498:8325":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"22:1495:8170":{"crate_id":22,"path":["ppv_lite86","x86_64","YesS3"],"kind":"struct"},"5:7428:209":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:41459:225":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:13387:9282":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"11:742:8500":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"20:190:2621":{"crate_id":20,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"2:44198:12500":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"1:10638:12532":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"2:39957:11677":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"5:7605:12454":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"2:41665:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:3521:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:7460:31423":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:43178:11882":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"5:3038:32909":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"5:7553:11632":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:597:9090":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:4858:13300":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"6:6621:11315":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:13797:9381":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:10997:12471":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:41441:13348":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"14:40:9264":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:3548:12537":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:11324:12284":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"16:2936:20241":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"6:1510:10641":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:15400:9776":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"5:0:307":{"crate_id":5,"path":["alloc"],"kind":"module"},"17:437:9047":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"5:6159:12154":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:22189:13504":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:11376:10534":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"1:8050:12573":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:1877:11643":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:10282:12598":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"2:45757:2643":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:13497:9302":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:10419:8326":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:5640:12551":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:39719:31482":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:45257:11966":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"11:2536:10472":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"11:1896:12436":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"1:4916:12544":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:13785:9379":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:4105:13289":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"6:4916:10861":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:922:12410":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"11:1603:12424":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:10900:8719":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"2:22136:13503":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1:859:8055":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:3362:13606":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:12659:13558":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:41296:11855":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:12089:9162":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:12297:1269":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"5:3239:8203":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:7944:12073":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"5:5064:12154":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"6:7467:11493":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:44223:11949":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:3587:8124":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:7076:13410":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:12175:12320":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:11634:9113":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:41507:8204":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:14386:9485":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:22662:13283":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"11:123:8459":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:15655:9859":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"11:1087:34516":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"9:0:2468":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"5:1428:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:4201:13608":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"16:6398:8426":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:14868:9642":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"0:94:1961":{"crate_id":0,"path":["rand_chacha","ChaChaRng"],"kind":"type_alias"},"18:659:12244":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"5:5406:32966":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:11547:9040":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:4352:10058":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:42333:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"17:12572:8304":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"2:40170:11818":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"6:7412:11480":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:22150:13834":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"function"},"17:14968:9679":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"16:2374:10017":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:13024:21178":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:21251:32439":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:4862:13303":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:9737:21151":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"1:945:12415":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:7258:26196":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"6:5296:11003":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"16:5897:8402":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:10284:12597":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"6:6478:11232":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"16:7085:10245":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:9375:233":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"0:0:1964":{"crate_id":0,"path":["rand_chacha"],"kind":"module"},"17:14341:9478":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"16:7306:34546":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:10044:21173":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"16:7618:8443":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:16223:10003":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"22:263:2382":{"crate_id":22,"path":["ppv_lite86","types","MultiLane"],"kind":"trait"},"2:40515:11826":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"16:7590:8441":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:4837:10812":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"6:6915:11421":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"16:4468:10060":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"11:2352:12418":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"2:45907:12017":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"5:3210:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:2279:12523":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"6:8300:11601":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"17:12225:12327":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"16:8313:137":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:16069:9967":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"2:21263:32439":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"17:10284:8322":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:7899:26192":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:6653:11666":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"6:5581:11125":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:1639:10729":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:11189:9101":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:15023:9691":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"22:253:2428":{"crate_id":22,"path":["ppv_lite86","types","u32x4x4"],"kind":"trait"},"2:46297:8015":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"16:7144:21109":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:39950:12487":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:5969:8701":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:16212:10001":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"6:485:10567":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:31882:8137":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"22:1505:8171":{"crate_id":22,"path":["ppv_lite86","x86_64","YesS4"],"kind":"struct"},"17:12353:9182":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"11:1891:8804":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"6:8247:11590":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"11:2304:10254":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"6:6562:11282":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"22:216:2638":{"crate_id":22,"path":["ppv_lite86","types","Words4"],"kind":"trait"},"2:35646:10274":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:22651:11702":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:586:10627":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:7290:8063":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"5:7376:8804":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:8161:12078":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:5005:12467":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1:9657:138":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"1:11178:25593":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:39057:13136":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:15383:9772":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"16:6442:10149":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:8582:12587":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:43167:11881":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:10710:12268":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:1975:764":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"6:6768:11367":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"2:2408:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:6441:11218":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:723:153":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"16:2838:10038":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:7436:30912":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"6:1671:10747":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"16:3614:10051":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:12593:13206":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:15778:9895":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:41743:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:10947:25590":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:11466:26199":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"1:12299:1638":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:7978:2609":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:4091:13287":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"6:1490:10633":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:43640:11916":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:8293:12578":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"16:5400:8300":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"16:2636:10029":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:4976:10076":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"16:8188:12404":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:31765:10307":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"2:21388:13415":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"6:6542:11266":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:46151:12053":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:12494:9192":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"16:7497:10309":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"22:210:2385":{"crate_id":22,"path":["ppv_lite86","types","Vec4Ext"],"kind":"trait"},"11:1903:10468":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"6:8306:11602":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:645:13125":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:2203:12256":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:38845:8208":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"6:517:10589":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"21:713:25392":{"crate_id":21,"path":["zerocopy","ByteSliceMut"],"kind":"trait"},"2:12654:13559":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:43804:11926":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:11405:12290":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:31884:115":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:2072:11649":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"21:709:25391":{"crate_id":21,"path":["zerocopy","ByteSlice"],"kind":"trait"},"16:2998:10048":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"16:6066:10113":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:37632:13822":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"16:3196:10014":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:37577:13821":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:43769:11921":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"22:1205:8271":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","u64x2_sse2"],"kind":"struct"},"1:8144:12077":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:39810:11794":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:41451:8207":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:15769:9893":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:8762:12139":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:6504:185":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:12711:137":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:37687:13823":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:43958:8541":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"17:14246:9466":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:4416:12463":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"21:346:34802":{"crate_id":21,"path":["zerocopy","wrappers","update","WriteBackOnDrop"],"kind":"struct"},"2:7932:13793":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:38979:211":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:12408:8333":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"16:6872:10225":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:41365:172":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:13447:116":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:43312:11891":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:5033:13334":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"2:3381:32308":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"11:787:8498":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"1:8428:8530":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"21:3108:8284":{"crate_id":21,"path":["zerocopy","byteorder","F32"],"kind":"struct"},"2:39865:13875":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:3596:26884":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:12443:9188":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:15289:9743":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:6948:8436":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:10082:8125":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"16:7888:10331":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"6:6629:11316":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:15596:9845":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:2666:257":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:6393:12070":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:2654:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"6:6417:11202":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:42288:8115":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:3336:12533":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:12454:9189":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:880:8498":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"20:110:25367":{"crate_id":20,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"11:883:12416":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:14912:9673":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:11647:9114":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"5:7566:13875":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:13753:9372":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:7830:9090":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:45630:11992":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:11070:11673":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:44119:149":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:1699:10760":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"22:1560:8166":{"crate_id":22,"path":["ppv_lite86","x86_64","Avx2Machine"],"kind":"struct"},"2:11108:12473":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"12:0:2471":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"15:306:20195":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"16:6480:8431":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:11620:12178":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:12707:12342":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:43043:12494":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:3152:141":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"16:7168:12151":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"16:8202:8452":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:12315:1775":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:43946:11940":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:15814:9899":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:45225:11964":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:11497:12292":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"6:1692:10757":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:7799:8450":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:10185:8319":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"22:1545:8167":{"crate_id":22,"path":["ppv_lite86","x86_64","SseMachine"],"kind":"struct"},"2:10281:152":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"17:15418:9780":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:10021:8124":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"6:5352:11017":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"5:3662:8204":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"5:4925:216":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:11715:9119":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"1:12311:1799":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"6:1686:10756":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:9434:12156":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"5:5450:13545":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:43054:11876":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:11800:12540":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"5:4075:8804":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"22:260:2645":{"crate_id":22,"path":["ppv_lite86","types","u128x4"],"kind":"trait"},"1:7987:9131":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:16269:9287":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"1:12266:13130":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"11:875:12415":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:14177:9451":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:2987:13523":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"6:7446:11486":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:40305:11822":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:5047:954":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:13146:9240":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:7287:26293":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:40087:11811":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"22:213:2386":{"crate_id":22,"path":["ppv_lite86","types","Vector"],"kind":"trait"},"6:1707:10764":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:43922:11934":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"17:13363:9278":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:13922:9401":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:44234:10480":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:21929:13226":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:40017:11802":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:6647:11667":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"17:11688:9117":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:12639:12470":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:3351:253":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:12621:9198":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"16:7910:21113":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:10070:129":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:7969:164":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"11:2542:10473":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:43184:11883":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"16:2660:10030":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:43412:11897":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"16:7098:10248":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"18:563:8290":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"5:3808:12437":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"17:14284:9471":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:8288:11599":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:893:8804":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:2461:200":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:42278:11861":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"21:708:34831":{"crate_id":21,"path":["zerocopy","sealed","ByteSliceSealed"],"kind":"trait"},"22:1569:2378":{"crate_id":22,"path":["ppv_lite86","x86_64","vec128_storage"],"kind":"union"},"1:12277:25598":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"9:178:8481":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:11191:12475":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:15569:9833":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:11661:9115":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:5949:8527":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:21819:32445":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:3469:11830":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"5:1726:32966":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:9886:21169":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:13089:9230":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:4270:13310":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:7633:34542":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:13855:9388":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:8217:12577":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:12969:9221":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"6:7984:11575":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:15324:9754":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:5191:12545":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"22:1445:8949":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","avx2","u32x4x2_avx2"],"kind":"struct"},"1:8461:13225":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"1:0:1664":{"crate_id":1,"path":["std"],"kind":"module"},"1:5890:12552":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:39698:11783":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"5:4310:8203":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"6:5212:10962":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:13424:9288":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:7429:11481":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:15616:9851":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"5:3793:8720":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:4752:11472":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"1:11154:8698":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:356:12501":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:3841:12538":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:12080:26210":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"5:4240:12154":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"6:5445:11071":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:41278:11854":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:8449:12118":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"5:7347:8490":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"16:3778:10052":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"20:144:2081":{"crate_id":20,"path":["rand_core","SeedableRng"],"kind":"trait"},"1:10910:139":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"2:31786:11772":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"21:519:8153":{"crate_id":21,"path":["zerocopy","Ref"],"kind":"struct"},"1:621:12506":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"11:1582:12423":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:9261:25588":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:1054:12417":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:9858:21168":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"7:31:20078":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:2286:13208":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:15102:9700":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"16:8175:12401":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:39930:12486":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:43135:12497":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:15126:9702":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:6214:26218":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:12648:8985":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"6:1680:10753":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:9219:12470":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:16249:10007":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"6:5390:11037":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"16:4587:10064":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:12149:13888":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:1887:12518":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:13766:9374":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"6:1503:10639":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:8827:8203":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"16:6606:10170":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:11314:12611":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"6:570:10618":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:7943:13226":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:9380:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:7330:26207":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"6:5014:10906":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:728:189":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"2:43226:11673":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:22060:13499":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"1:1826:12515":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"22:267:2646":{"crate_id":22,"path":["ppv_lite86","types","VZip"],"kind":"trait"},"2:1764:11642":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"}},"external_crates":{"20":{"name":"rand_core","html_root_url":"https://rust-random.github.io/rand/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"ppv_lite86","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"zerocopy","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}