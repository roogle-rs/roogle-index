{"root":2254,"crate_version":"0.4.39","includes_private":false,"index":{"1527":{"id":1527,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"292":{"id":292,"crate_id":0,"name":"and_hms_micro","span":{"filename":"src/date.rs","begin":[150,4],"end":[152,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute, second and/or microsecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use and_hms_micro_opt() instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use and_hms_micro_opt() instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1819":{"id":1819,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"584":{"id":584,"crate_id":0,"name":"duration_round","span":{"filename":"src/round.rs","begin":[161,4],"end":[163,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["duration",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Result","id":39,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":585,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"876":{"id":876,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2111":{"id":2111,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1168":{"id":1168,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1460":{"id":1460,"crate_id":0,"name":"with_day","span":{"filename":"src/naive/datetime/mod.rs","begin":[1246,4],"end":[1248,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of month (starting from 1) changed.\n\nSee also the [`NaiveDate::with_day`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (for example `day(31)` in April).\n- The value for `day` is invalid.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(\n    dt.with_day(30),\n    Some(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().and_hms_opt(12, 34, 56).unwrap())\n);\nassert_eq!(dt.with_day(31), None); // no September 31\n```","links":{"`NaiveDate::with_day`":493},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"225":{"id":225,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"517":{"id":517,"crate_id":0,"name":"eq","span":{"filename":"src/datetime/mod.rs","begin":[1421,4],"end":[1423,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1752":{"id":1752,"crate_id":0,"name":"clone","span":{"filename":"src/offset/fixed.rs","begin":[22,36],"end":[22,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"809":{"id":809,"crate_id":0,"name":"Zero","span":{"filename":"src/format/mod.rs","begin":[83,4],"end":[83,8]},"visibility":"default","docs":"Zero (`0`) padding.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2044":{"id":2044,"crate_id":0,"name":"April","span":{"filename":"src/month.rs","begin":[48,4],"end":[48,13]},"visibility":"default","docs":"April","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"3","value":"3"}}}},"1101":{"id":1101,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"158":{"id":158,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[553,0],"end":[557,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sum","id":156,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[157],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1393":{"id":1393,"crate_id":0,"name":"parse_from_str","span":{"filename":"src/naive/datetime/mod.rs","begin":[285,4],"end":[289,5]},"visibility":"public","docs":" Parses a string with the specified format string and returns a new `NaiveDateTime`.\n See the [`format::strftime` module](crate::format::strftime)\n on the supported escape sequences.\n\n # Example\n\n ```\n use chrono::{NaiveDate, NaiveDateTime};\n\n let parse_from_str = NaiveDateTime::parse_from_str;\n\n assert_eq!(\n     parse_from_str(\"2015-09-05 23:56:04\", \"%Y-%m-%d %H:%M:%S\"),\n     Ok(NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap())\n );\n assert_eq!(\n     parse_from_str(\"5sep2015pm012345.6789\", \"%d%b%Y%p%I%M%S%.f\"),\n     Ok(NaiveDate::from_ymd_opt(2015, 9, 5)\n         .unwrap()\n         .and_hms_micro_opt(13, 23, 45, 678_900)\n         .unwrap())\n );\n ```\n\n Offset is ignored for the purpose of parsing.\n\n ```\n # use chrono::{NaiveDateTime, NaiveDate};\n # let parse_from_str = NaiveDateTime::parse_from_str;\n assert_eq!(\n     parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),\n     Ok(NaiveDate::from_ymd_opt(2014, 5, 17).unwrap().and_hms_opt(12, 34, 56).unwrap())\n );\n ```\n\n [Leap seconds](./struct.NaiveTime.html#leap-second-handling) are correctly handled by\n treating any time of the form `hh:mm:60` as a leap second.\n (This equally applies to the formatting, so the round trip is possible.)\n\n ```\n # use chrono::{NaiveDateTime, NaiveDate};\n # let parse_from_str = NaiveDateTime::parse_from_str;\n assert_eq!(\n     parse_from_str(\"2015-07-01 08:59:60.123\", \"%Y-%m-%d %H:%M:%S%.f\"),\n     Ok(NaiveDate::from_ymd_opt(2015, 7, 1)\n         .unwrap()\n         .and_hms_milli_opt(8, 59, 59, 1_123)\n         .unwrap())\n );\n ```\n\n Missing seconds are assumed to be zero,\n but out-of-bound times or insufficient fields are errors otherwise.\n\n ```\n # use chrono::{NaiveDateTime, NaiveDate};\n # let parse_from_str = NaiveDateTime::parse_from_str;\n assert_eq!(\n     parse_from_str(\"94/9/4 7:15\", \"%y/%m/%d %H:%M\"),\n     Ok(NaiveDate::from_ymd_opt(1994, 9, 4).unwrap().and_hms_opt(7, 15, 0).unwrap())\n );\n\n assert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());\n assert!(parse_from_str(\"94/9/4 12\", \"%y/%m/%d %H\").is_err());\n assert!(parse_from_str(\"94/9/4 17:60\", \"%y/%m/%d %H:%M\").is_err());\n assert!(parse_from_str(\"94/9/4 24:00:00\", \"%y/%m/%d %H:%M:%S\").is_err());\n ```\n\n All parsed fields should be consistent to each other, otherwise it's an error.\n\n ```\n # use chrono::NaiveDateTime;\n # let parse_from_str = NaiveDateTime::parse_from_str;\n let fmt = \"%Y-%m-%d %H:%M:%S = UNIX timestamp %s\";\n assert!(parse_from_str(\"2001-09-09 01:46:39 = UNIX timestamp 999999999\", fmt).is_ok());\n assert!(parse_from_str(\"1970-01-01 00:00:00 = UNIX timestamp 1\", fmt).is_err());\n ```\n\n Years before 1 BCE or after 9999 CE, require an initial sign\n\n```\n # use chrono::NaiveDateTime;\n # let parse_from_str = NaiveDateTime::parse_from_str;\n let fmt = \"%Y-%m-%d %H:%M:%S\";\n assert!(parse_from_str(\"10000-09-09 01:46:39\", fmt).is_err());\n assert!(parse_from_str(\"+10000-09-09 01:46:39\", fmt).is_ok());\n ```","links":{"crate::format::strftime":315},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"450":{"id":450,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1685":{"id":1685,"crate_id":0,"name":"eq","span":{"filename":"src/naive/mod.rs","begin":[32,39],"end":[32,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1977":{"id":1977,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"742":{"id":742,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1034":{"id":1034,"crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[296,9],"end":[296,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1326":{"id":1326,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2130,46],"end":[2130,56]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","gt","ge"],"trait":{"path":"PartialOrd","id":114,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1325],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1618":{"id":1618,"crate_id":0,"name":"add","span":{"filename":"src/naive/time/mod.rs","begin":[1263,4],"end":[1265,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"383":{"id":383,"crate_id":0,"name":"time","span":{"filename":"src/datetime/mod.rs","begin":[180,4],"end":[182,5]},"visibility":"public","docs":"Retrieves the time component.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1910":{"id":1910,"crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/mod.rs","begin":[552,4],"end":[552,97]},"visibility":"default","docs":"Creates the offset(s) for given local `NaiveDateTime` if possible.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["local",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":165,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"967":{"id":967,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2202":{"id":2202,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[562,48],"end":[562,57]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"inner":{"use":{"source":"naive::NaiveTime","name":"NaiveTime","id":202,"is_glob":false}}},"1259":{"id":1259,"crate_id":0,"name":"month","span":{"filename":"src/naive/date/mod.rs","begin":[1473,4],"end":[1475,5]},"visibility":"default","docs":"Returns the month number starting from 1.\n\nThe return value ranges from 1 to 12.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().month(), 9);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().month(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"24":{"id":24,"crate_id":0,"name":"subsec_nanos","span":{"filename":"src/time_delta.rs","begin":[314,4],"end":[320,5]},"visibility":"public","docs":"Returns the number of nanoseconds such that\n`subsec_nanos() + num_seconds() * NANOS_PER_SEC` is the total number of\nnanoseconds in the `TimeDelta`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"316":{"id":316,"crate_id":0,"name":"format","span":{"filename":"src/date.rs","begin":[351,4],"end":[353,5]},"visibility":"public","docs":"Formats the date with the specified format string.\nSee the [`crate::format::strftime`] module\non the supported escape sequences.","links":{"`crate::format::strftime`":315},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1551":{"id":1551,"crate_id":0,"name":"clone","span":{"filename":"src/naive/isoweek.rs","begin":[19,47],"end":[19,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"608":{"id":608,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1843":{"id":1843,"crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[136,0],"end":[140,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Offset","id":278,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1842],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"900":{"id":900,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2135":{"id":2135,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1192":{"id":1192,"crate_id":0,"name":"from_yo_opt","span":{"filename":"src/naive/date/mod.rs","begin":[245,4],"end":[248,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n(year and day of the year).\n\n# Errors\n\nReturns `None` if:\n- The specified ordinal day does not exist (for example 2023-366).\n- The value for `ordinal` is invalid (for example: `0`, `400`).\n- `year` is out of range for `NaiveDate`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet from_yo_opt = NaiveDate::from_yo_opt;\n\nassert!(from_yo_opt(2015, 100).is_some());\nassert!(from_yo_opt(2015, 0).is_none());\nassert!(from_yo_opt(2015, 365).is_some());\nassert!(from_yo_opt(2015, 366).is_none());\nassert!(from_yo_opt(-4, 366).is_some()); // 5 BCE is a leap year\nassert!(from_yo_opt(400000, 1).is_none());\nassert!(from_yo_opt(-400000, 1).is_none());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["year",{"primitive":"i32"}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"249":{"id":249,"crate_id":0,"name":"fmt","span":{"filename":"src/time_delta.rs","begin":[606,4],"end":[608,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1484":{"id":1484,"crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1751,4],"end":[1751,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1776":{"id":1776,"crate_id":0,"name":"today","span":{"filename":"src/offset/local/mod.rs","begin":[129,4],"end":[131,5]},"visibility":"public","docs":"Returns a `Date` which corresponds to the current date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `Local::now()` instead\")]","#[allow(deprecated)]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `Local::now()` instead"},"inner":{"function":{"sig":{"inputs":[],"output":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"541":{"id":541,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1657,0],"end":[1664,1]},"visibility":"default","docs":"Subtract-assign `std::time::Duration` from `DateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `DateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`DateTime<Tz>::checked_sub_signed`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_sub_signed`":182},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"SubAssign","id":144,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[540],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2068":{"id":2068,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"833":{"id":833,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[78,33],"end":[78,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1125":{"id":1125,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1417":{"id":1417,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[81,0],"end":[950,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1386,1388,1389,1390,1391,1392,1393,433,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,203,1404,1405,1406,209,1407,1408,1409,1410,764,1411,378,1413,1414,1415,1416],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"182":{"id":182,"crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/datetime/mod.rs","begin":[476,4],"end":[480,5]},"visibility":"public","docs":"Subtracts given `TimeDelta` from the current date and time.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1709":{"id":1709,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[215,22],"end":[215,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1708],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"474":{"id":474,"crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[935,4],"end":[937,5]},"visibility":"default","docs":"Convert this `DateTime<Local>` instance into a `DateTime<Utc>` instance.\n\nConversion is performed via [`DateTime::with_timezone`], accounting for the difference in\ntimezones.","links":{"`DateTime::with_timezone`":396},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["src",{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"766":{"id":766,"crate_id":0,"name":"format_with_items","span":{"filename":"src/naive/time/mod.rs","begin":[824,4],"end":[830,5]},"visibility":"public","docs":"Formats the time with the specified formatting items.\nOtherwise it is the same as the ordinary [`format`](#method.format) method.\n\nThe `Iterator` of items should be `Clone`able,\nsince the resulting `DelayedFormat` value may be formatted multiple times.\n\n# Example\n\n```\nuse chrono::format::strftime::StrftimeItems;\nuse chrono::NaiveTime;\n\nlet fmt = StrftimeItems::new(\"%H:%M:%S\");\nlet t = NaiveTime::from_hms_opt(23, 56, 4).unwrap();\nassert_eq!(t.format_with_items(fmt.clone()).to_string(), \"23:56:04\");\nassert_eq!(t.format(\"%H:%M:%S\").to_string(), \"23:56:04\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveTime;\n# use chrono::format::strftime::StrftimeItems;\n# let fmt = StrftimeItems::new(\"%H:%M:%S\").clone();\n# let t = NaiveTime::from_hms_opt(23, 56, 4).unwrap();\nassert_eq!(format!(\"{}\", t.format_with_items(fmt)), \"23:56:04\");\n```","links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":154,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2001":{"id":2001,"crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,44],"end":[32,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2000],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1058":{"id":1058,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1350":{"id":1350,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"115":{"id":115,"crate_id":0,"name":"cmp","span":{"filename":"src/time_delta.rs","begin":[52,58],"end":[52,61]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"407":{"id":407,"crate_id":0,"name":"signed_duration_since","span":{"filename":"src/datetime/mod.rs","begin":[553,4],"end":[558,5]},"visibility":"public","docs":"Subtracts another `DateTime` from the current date and time.\nThis does not overflow or underflow at all.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"impl_trait":[{"trait_bound":{"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"constraints":[]}}}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"impl Borrow<DateTime<Tz2>>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"constraints":[]}}}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":true}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1642":{"id":1642,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[18,32],"end":[18,53]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"self::date::NaiveDateDaysIterator","name":"NaiveDateDaysIterator","id":1220,"is_glob":false}}},"699":{"id":699,"crate_id":0,"name":"isoweek","span":{"filename":"src/format/parsed.rs","begin":[1053,4],"end":[1055,5]},"visibility":"public","docs":"Get the `isoweek` field that is part of an [ISO 8601 week date] if set.\n\nSee also [`set_isoweek()`](Parsed::set_isoweek).\n\n[ISO 8601 week date]: crate::NaiveDate#week-date","links":{"crate::NaiveDate#week-date":187,"Parsed::set_isoweek":700},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1934":{"id":1934,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2226":{"id":2226,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"991":{"id":991,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1283":{"id":1283,"crate_id":0,"name":"from","span":{"filename":"src/naive/date/mod.rs","begin":[2124,4],"end":[2126,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["naive_datetime",{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"340":{"id":340,"crate_id":0,"name":"day0","span":{"filename":"src/date.rs","begin":[410,4],"end":[412,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1575":{"id":1575,"crate_id":0,"name":"signed_duration_since","span":{"filename":"src/naive/time/mod.rs","begin":[741,4],"end":[766,5]},"visibility":"public","docs":"Subtracts another `NaiveTime` from the current time.\nReturns a `TimeDelta` within +/- 1 day.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\n# Example\n\n```\nuse chrono::{NaiveTime, TimeDelta};\n\nlet from_hmsm = |h, m, s, milli| NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap();\nlet since = NaiveTime::signed_duration_since;\n\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 900)), TimeDelta::zero());\nassert_eq!(\n    since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 875)),\n    TimeDelta::try_milliseconds(25).unwrap()\n);\nassert_eq!(\n    since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 6, 925)),\n    TimeDelta::try_milliseconds(975).unwrap()\n);\nassert_eq!(\n    since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 0, 900)),\n    TimeDelta::try_seconds(7).unwrap()\n);\nassert_eq!(\n    since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 0, 7, 900)),\n    TimeDelta::try_seconds(5 * 60).unwrap()\n);\nassert_eq!(\n    since(from_hmsm(3, 5, 7, 900), from_hmsm(0, 5, 7, 900)),\n    TimeDelta::try_seconds(3 * 3600).unwrap()\n);\nassert_eq!(\n    since(from_hmsm(3, 5, 7, 900), from_hmsm(4, 5, 7, 900)),\n    TimeDelta::try_seconds(-3600).unwrap()\n);\nassert_eq!(\n    since(from_hmsm(3, 5, 7, 900), from_hmsm(2, 4, 6, 800)),\n    TimeDelta::try_seconds(3600 + 60 + 1).unwrap() + TimeDelta::try_milliseconds(100).unwrap()\n);\n```\n\nLeap seconds are handled, but the subtraction assumes that\nthere were no other leap seconds happened.\n\n```\n# use chrono::{TimeDelta, NaiveTime};\n# let from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\n# let since = NaiveTime::signed_duration_since;\nassert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 59, 0)),\n           TimeDelta::try_seconds(1).unwrap());\nassert_eq!(since(from_hmsm(3, 0, 59, 1_500), from_hmsm(3, 0, 59, 0)),\n           TimeDelta::try_milliseconds(1500).unwrap());\nassert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 0, 0)),\n           TimeDelta::try_seconds(60).unwrap());\nassert_eq!(since(from_hmsm(3, 0, 0, 0), from_hmsm(2, 59, 59, 1_000)),\n           TimeDelta::try_seconds(1).unwrap());\nassert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(2, 59, 59, 1_000)),\n           TimeDelta::try_seconds(61).unwrap());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1867":{"id":1867,"crate_id":0,"name":"and_hms_micro_opt","span":{"filename":"src/offset/mod.rs","begin":[208,4],"end":[221,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"632":{"id":632,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2159":{"id":2159,"crate_id":0,"name":"fmt","span":{"filename":"src/month.rs","begin":[258,4],"end":[260,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"924":{"id":924,"crate_id":0,"name":"RFC3339","span":{"filename":"src/format/mod.rs","begin":[248,4],"end":[248,11]},"visibility":"default","docs":"RFC 3339 & ISO 8601 date and time syntax.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1216":{"id":1216,"crate_id":0,"name":"signed_duration_since","span":{"filename":"src/naive/date/mod.rs","begin":[1122,4],"end":[1133,5]},"visibility":"public","docs":"Subtracts another `NaiveDate` from the current date.\nReturns a `TimeDelta` of integral numbers.\n\nThis does not overflow or underflow at all,\nas all possible output fits in the range of `TimeDelta`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, TimeDelta};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\nlet since = NaiveDate::signed_duration_since;\n\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 1)), TimeDelta::zero());\nassert_eq!(\n    since(from_ymd(2014, 1, 1), from_ymd(2013, 12, 31)),\n    TimeDelta::try_days(1).unwrap()\n);\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 2)), TimeDelta::try_days(-1).unwrap());\nassert_eq!(\n    since(from_ymd(2014, 1, 1), from_ymd(2013, 9, 23)),\n    TimeDelta::try_days(100).unwrap()\n);\nassert_eq!(\n    since(from_ymd(2014, 1, 1), from_ymd(2013, 1, 1)),\n    TimeDelta::try_days(365).unwrap()\n);\nassert_eq!(\n    since(from_ymd(2014, 1, 1), from_ymd(2010, 1, 1)),\n    TimeDelta::try_days(365 * 4 + 1).unwrap()\n);\nassert_eq!(\n    since(from_ymd(2014, 1, 1), from_ymd(1614, 1, 1)),\n    TimeDelta::try_days(365 * 400 + 97).unwrap()\n);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1508":{"id":1508,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[2048,0],"end":[2054,1]},"visibility":"default","docs":"The `Debug` output of the naive date and time `dt` is the same as\n[`dt.format(\"%Y-%m-%dT%H:%M:%S%.f\")`](crate::format::strftime).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 11, 15).unwrap().and_hms_opt(7, 39, 24).unwrap();\nassert_eq!(format!(\"{:?}\", dt), \"2016-11-15T07:39:24\");\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveDate;\nlet dt =\n    NaiveDate::from_ymd_opt(2015, 6, 30).unwrap().and_hms_milli_opt(23, 59, 59, 1_500).unwrap();\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:59:60.500\");\n```","links":{"crate::format::strftime":315},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1507],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"273":{"id":273,"crate_id":0,"name":"Utc","span":{"filename":"src/offset/utc.rs","begin":[52,0],"end":[52,15]},"visibility":"public","docs":"The UTC time zone. This is the most efficient time zone when you don't need the local time.\nIt is also used as an offset (which is also a dummy type).\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non the UTC struct is the preferred way to construct `DateTime<Utc>`\ninstances.\n\n# Example\n\n```\nuse chrono::{DateTime, TimeZone, Utc};\n\nlet dt = DateTime::from_timestamp(61, 0).unwrap();\n\nassert_eq!(Utc.timestamp_opt(61, 0).unwrap(), dt);\nassert_eq!(Utc.with_ymd_and_hms(1970, 1, 1, 0, 1, 1).unwrap(), dt);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":[1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1828,1829,1831,1832,1834,1841,1843,1845,1847]}}},"1800":{"id":1800,"crate_id":0,"name":"Offset","span":{"filename":"src/offset/local/mod.rs","begin":[166,4],"end":[166,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"565":{"id":565,"crate_id":0,"name":"ParseError","span":{"filename":"src/format/mod.rs","begin":[387,0],"end":[387,38]},"visibility":"public","docs":"An error from the `parse` function.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":[1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1138,1139,1141,1142,1143,1145,1147,1149]}}},"857":{"id":857,"crate_id":0,"name":"Timestamp","span":{"filename":"src/format/mod.rs","begin":[148,4],"end":[148,13]},"visibility":"default","docs":"The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).\nFor formatting, it assumes UTC upon the absence of time zone offset.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2092":{"id":2092,"crate_id":0,"name":"Error","span":{"filename":"src/month.rs","begin":[167,4],"end":[167,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1149":{"id":1149,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[452,0],"end":[457,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","description","cause","provide"],"trait":{"path":"Error","id":253,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1148],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"206":{"id":206,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1666,0],"end":[1671,1]},"visibility":"default","docs":"Add-assign `TimeDelta` to `NaiveDateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDateTime::checked_add_signed`] to get an `Option` instead.","links":{"`NaiveDateTime::checked_add_signed`":203},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"AddAssign","id":141,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[205],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1441":{"id":1441,"crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/datetime/mod.rs","begin":[67,30],"end":[67,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::option::Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"498":{"id":498,"crate_id":0,"name":"with_ordinal","span":{"filename":"src/datetime/mod.rs","begin":[1308,4],"end":[1310,5]},"visibility":"default","docs":"Makes a new `DateTime` with the day of year (starting from 1) changed.\n\nSee also the [`NaiveDate::with_ordinal`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (`with_ordinal(366)` in a non-leap year).\n- The value for `ordinal` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_ordinal`":497},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1733":{"id":1733,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"790":{"id":790,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2025":{"id":2025,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1082":{"id":1082,"crate_id":0,"name":"OwnedSpace","span":{"filename":"src/format/mod.rs","begin":[339,4],"end":[339,24]},"visibility":"default","docs":"Same as `Space` but with the string owned by the item.","links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[1081]},"discriminant":null}}},"139":{"id":139,"crate_id":0,"name":"add_assign","span":{"filename":"src/time_delta.rs","begin":[518,4],"end":[521,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1374":{"id":1374,"crate_id":0,"name":"next","span":{"filename":"src/naive/date/mod.rs","begin":[2174,4],"end":[2178,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":154,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1666":{"id":1666,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"431":{"id":431,"crate_id":0,"name":"parse_from_rfc3339","span":{"filename":"src/datetime/mod.rs","begin":[1014,4],"end":[1021,5]},"visibility":"public","docs":"Parses an RFC 3339 date-and-time string into a `DateTime<FixedOffset>` value.\n\nParses all valid RFC 3339 values (as well as the subset of valid ISO 8601 values that are\nalso valid RFC 3339 date-and-time values) and returns a new [`DateTime`] with a\n[`FixedOffset`] corresponding to the parsed timezone. While RFC 3339 values come in a wide\nvariety of shapes and sizes, `1996-12-19T16:39:57-08:00` is an example of the most commonly\nencountered variety of RFC 3339 formats.\n\nWhy isn't this named `parse_from_iso8601`? That's because ISO 8601 allows representing\nvalues in a wide range of formats, only some of which represent actual date-and-time\ninstances (rather than periods, ranges, dates, or times). Some valid ISO 8601 values are\nalso simultaneously valid RFC 3339 values, but not all RFC 3339 values are valid ISO 8601\nvalues (or the other way around).","links":{"`DateTime`":174,"`FixedOffset`":271},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1958":{"id":1958,"crate_id":0,"name":"Wed","span":{"filename":"src/weekday.rs","begin":[47,4],"end":[47,11]},"visibility":"default","docs":"Wednesday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"2","value":"2"}}}},"723":{"id":723,"crate_id":0,"name":"to_naive_time","span":{"filename":"src/format/parsed.rs","begin":[728,4],"end":[761,5]},"visibility":"public","docs":"Returns a parsed naive time out of given fields.\n\nThis method is able to determine the time from given subset of fields:\n\n- Hour, minute. (second and nanosecond assumed to be 0)\n- Hour, minute, second. (nanosecond assumed to be 0)\n- Hour, minute, second, nanosecond.\n\nIt is able to handle leap seconds when given second is 60.\n\n# Errors\n\nThis method returns:\n- `OUT_OF_RANGE` if any of the time fields of `Parsed` are set to a value beyond\n  their acceptable range.\n- `NOT_ENOUGH` if an hour field is missing, if AM/PM is missing in a 12-hour clock,\n  if minutes are missing, or if seconds are missing while the nanosecond field is present.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2250":{"id":2250,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[681,0],"end":[685,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2249],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1015":{"id":1015,"crate_id":0,"name":"Seconds","span":{"filename":"src/format/mod.rs","begin":[306,4],"end":[306,11]},"visibility":"default","docs":"Format offset from UTC as hours, minutes and seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1307":{"id":1307,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"72":{"id":72,"crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1599":{"id":1599,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[212,20],"end":[212,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"364":{"id":364,"crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[490,0],"end":[494,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[363],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1891":{"id":1891,"crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[58,16],"end":[58,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::cmp::PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1890],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"948":{"id":948,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[174,16],"end":[174,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[947],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2183":{"id":2183,"crate_id":0,"name":"with_minute","span":{"filename":"src/traits.rs","begin":[302,4],"end":[302,52]},"visibility":"default","docs":"Makes a new value with the minute number changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["min",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"1240":{"id":1240,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"5":{"id":5,"crate_id":0,"name":"weeks","span":{"filename":"src/time_delta.rs","begin":[105,4],"end":[107,5]},"visibility":"public","docs":"Makes a new `TimeDelta` with the given number of weeks.\n\nEquivalent to `TimeDelta::seconds(weeks * 7 * 24 * 60 * 60)` with\noverflow checks.\n\n# Panics\n\nPanics when the duration is out of bounds.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["weeks",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"297":{"id":297,"crate_id":0,"name":"succ_opt","span":{"filename":"src/date.rs","begin":[215,4],"end":[217,5]},"visibility":"public","docs":"Makes a new `Date` for the next date.\n\nReturns `None` when `self` is the last representable date.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1532":{"id":1532,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"589":{"id":589,"crate_id":0,"name":"MAX_DATETIME","span":{"filename":"src/datetime/mod.rs","begin":[66,0],"end":[66,65]},"visibility":"public","docs":"The maximum possible `DateTime<Utc>`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use DateTime::MAX_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use DateTime::MAX_UTC instead"},"inner":{"constant":{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::offset::Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"const":{"expr":"DateTime<Utc>::MAX_UTC","value":null,"is_literal":false}}}},"1824":{"id":1824,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"881":{"id":881,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[102,16],"end":[102,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[880],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2116":{"id":2116,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1173":{"id":1173,"crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[398,9],"end":[398,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"230":{"id":230,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1465":{"id":1465,"crate_id":0,"name":"hour","span":{"filename":"src/naive/time/mod.rs","begin":[914,4],"end":[916,5]},"visibility":"default","docs":"Returns the hour number from 0 to 23.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(0, 0, 0).unwrap().hour(), 0);\nassert_eq!(NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().hour(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1757":{"id":1757,"crate_id":0,"name":"Offset","span":{"filename":"src/offset/fixed.rs","begin":[128,4],"end":[128,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"522":{"id":522,"crate_id":0,"name":"cmp","span":{"filename":"src/datetime/mod.rs","begin":[1456,4],"end":[1458,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2049":{"id":2049,"crate_id":0,"name":"September","span":{"filename":"src/month.rs","begin":[58,4],"end":[58,17]},"visibility":"default","docs":"September","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"8","value":"8"}}}},"814":{"id":814,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1106":{"id":1106,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[328,9],"end":[328,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[1105],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1398":{"id":1398,"crate_id":0,"name":"timestamp_micros","span":{"filename":"src/naive/datetime/mod.rs","begin":[378,4],"end":[380,5]},"visibility":"public","docs":"Returns the number of non-leap *microseconds* since midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","links":{},"attrs":["#[deprecated(since = \"0.4.35\", note =\n\"use `.and_utc().timestamp_micros()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.35","note":"use `.and_utc().timestamp_micros()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"163":{"id":163,"crate_id":0,"name":"add","span":{"filename":"src/date.rs","begin":[500,4],"end":[502,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1690":{"id":1690,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"455":{"id":455,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"747":{"id":747,"crate_id":0,"name":"eq","span":{"filename":"src/format/parsed.rs","begin":[128,16],"end":[128,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1982":{"id":1982,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1039":{"id":1039,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[296,29],"end":[296,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1331":{"id":1331,"crate_id":0,"name":"next","span":{"filename":"src/naive/date/mod.rs","begin":[2138,4],"end":[2144,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":154,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"388":{"id":388,"crate_id":0,"name":"timestamp_micros","span":{"filename":"src/datetime/mod.rs","begin":[261,4],"end":[264,5]},"visibility":"public","docs":"Returns the number of non-leap-microseconds since January 1, 1970 UTC.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Utc};\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1)\n    .unwrap()\n    .and_hms_micro_opt(0, 0, 1, 444)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\nassert_eq!(dt.timestamp_micros(), 1_000_444);\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9)\n    .unwrap()\n    .and_hms_micro_opt(1, 46, 40, 555)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\nassert_eq!(dt.timestamp_micros(), 1_000_000_000_000_555);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1623":{"id":1623,"crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/time/mod.rs","begin":[1372,4],"end":[1374,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"680":{"id":680,"crate_id":0,"name":"new","span":{"filename":"src/format/parsed.rs","begin":[193,4],"end":[195,5]},"visibility":"public","docs":"Returns the initial value of parsed parts.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1915":{"id":1915,"crate_id":0,"name":"from_utc_datetime","span":{"filename":"src/offset/mod.rs","begin":[593,4],"end":[595,5]},"visibility":"default","docs":"Converts the UTC `NaiveDateTime` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).","links":{},"attrs":["#[allow(clippy::wrong_self_convention)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["utc",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2207":{"id":2207,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[573,17],"end":[573,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"inner":{"use":{"source":"offset::FixedOffset","name":"FixedOffset","id":271,"is_glob":false}}},"972":{"id":972,"crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[258,16],"end":[258,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"29":{"id":29,"crate_id":0,"name":"checked_sub","span":{"filename":"src/time_delta.rs","begin":[364,4],"end":[374,5]},"visibility":"public","docs":"Subtract two `TimeDelta`s, returning `None` if overflow occurred.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1264":{"id":1264,"crate_id":0,"name":"ordinal0","span":{"filename":"src/naive/date/mod.rs","begin":[1603,4],"end":[1605,5]},"visibility":"default","docs":"Returns the day of year starting from 0.\n\nThe return value ranges from 0 to 365. (The last day of year differs by years.)\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().ordinal0(), 250);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().ordinal0(), 73);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"321":{"id":321,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1556":{"id":1556,"crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[150,0],"end":[161,1]},"visibility":"default","docs":"The `Debug` output of the ISO week `w` is the same as\n[`d.format(\"%G-W%V\")`](../format/strftime/index.html)\nwhere `d` is any `NaiveDate` value in that week.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate};\n\nassert_eq!(\n    format!(\"{:?}\", NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().iso_week()),\n    \"2015-W36\"\n);\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(0, 1, 3).unwrap().iso_week()), \"0000-W01\");\nassert_eq!(\n    format!(\"{:?}\", NaiveDate::from_ymd_opt(9999, 12, 31).unwrap().iso_week()),\n    \"9999-W52\"\n);\n```\n\nISO 8601 requires an explicit sign for years before 1 BCE or after 9999 CE.\n\n```\n# use chrono::{NaiveDate, Datelike};\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(0, 1, 2).unwrap().iso_week()), \"-0001-W52\");\nassert_eq!(\n    format!(\"{:?}\", NaiveDate::from_ymd_opt(10000, 12, 31).unwrap().iso_week()),\n    \"+10000-W52\"\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1555],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"613":{"id":613,"crate_id":0,"name":"fmt","span":{"filename":"src/format/formatting.rs","begin":[33,9],"end":[33,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2140":{"id":2140,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"905":{"id":905,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[158,16],"end":[158,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1197":{"id":1197,"crate_id":0,"name":"from_weekday_of_month","span":{"filename":"src/naive/date/mod.rs","begin":[399,4],"end":[406,5]},"visibility":"public","docs":"Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\nsince the beginning of the given month. For instance, if you want the 2nd Friday of March\n2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.\n\n`n` is 1-indexed.\n\n# Panics\n\nPanics if the specified day does not exist in that month, on invalid values for `month` or\n`n`, or if `year` is out of range for `NaiveDate`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_weekday_of_month_opt()` instead\")]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_weekday_of_month_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["weekday",{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}],["n",{"primitive":"u8"}]],"output":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1489":{"id":1489,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1833,0],"end":[1842,1]},"visibility":"default","docs":"Subtract `std::time::Duration` from `NaiveDateTime`.\n\nAs a part of Chrono's [leap second handling] the subtraction assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDateTime::checked_sub_signed`] to get an `Option` instead.","links":{"`NaiveDateTime::checked_sub_signed`":209},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1487,1488],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1781":{"id":1781,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"546":{"id":546,"crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1698,4],"end":[1700,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":138,"args":null}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"838":{"id":838,"crate_id":0,"name":"Year","span":{"filename":"src/format/mod.rs","begin":[106,4],"end":[106,8]},"visibility":"default","docs":"Full Gregorian year (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign (+/-).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2073":{"id":2073,"crate_id":0,"name":"Err","span":{"filename":"src/format/mod.rs","begin":[532,4],"end":[532,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1130":{"id":1130,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"187":{"id":187,"crate_id":0,"name":"NaiveDate","span":{"filename":"src/naive/date/mod.rs","begin":[102,0],"end":[104,1]},"visibility":"public","docs":"ISO 8601 calendar date without timezone.\nAllows for every [proleptic Gregorian date] from Jan 1, 262145 BCE to Dec 31, 262143 CE.\nAlso supports the conversion from ISO 8601 ordinal and week date.\n\n# Calendar Date\n\nThe ISO 8601 **calendar date** follows the proleptic Gregorian calendar.\nIt is like a normal civil calendar but note some slight differences:\n\n* Dates before the Gregorian calendar's inception in 1582 are defined via the extrapolation.\n  Be careful, as historical dates are often noted in the Julian calendar and others\n  and the transition to Gregorian may differ across countries (as late as early 20C).\n\n  (Some example: Both Shakespeare from Britain and Cervantes from Spain seemingly died\n  on the same calendar date---April 23, 1616---but in the different calendar.\n  Britain used the Julian calendar at that time, so Shakespeare's death is later.)\n\n* ISO 8601 calendars has the year 0, which is 1 BCE (a year before 1 CE).\n  If you need a typical BCE/BC and CE/AD notation for year numbers,\n  use the [`Datelike::year_ce`] method.\n\n# Week Date\n\nThe ISO 8601 **week date** is a triple of year number, week number\nand [day of the week](Weekday) with the following rules:\n\n* A week consists of Monday through Sunday, and is always numbered within some year.\n  The week number ranges from 1 to 52 or 53 depending on the year.\n\n* The week 1 of given year is defined as the first week containing January 4 of that year,\n  or equivalently, the first week containing four or more days in that year.\n\n* The year number in the week date may *not* correspond to the actual Gregorian year.\n  For example, January 3, 2016 (Sunday) was on the last (53rd) week of 2015.\n\nChrono's date types default to the ISO 8601 [calendar date](#calendar-date), but\n[`Datelike::iso_week`] and [`Datelike::weekday`] methods can be used to get the corresponding\nweek date.\n\n# Ordinal Date\n\nThe ISO 8601 **ordinal date** is a pair of year number and day of the year (\"ordinal\").\nThe ordinal number ranges from 1 to 365 or 366 depending on the year.\nThe year number is the same as that of the [calendar date](#calendar-date).\n\nThis is currently the internal format of Chrono's date types.\n\n[proleptic Gregorian date]: crate::NaiveDate#calendar-date","links":{"`Datelike::year_ce`":1186,"crate::NaiveDate#calendar-date":187,"Weekday":269,"`Datelike::iso_week`":1187,"`Datelike::weekday`":1188},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[],"where_predicates":[]},"impls":[1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1250,1252,1254,1255,1257,1267,190,192,1270,1273,1276,1279,196,198,1282,1284,1286,1288,1291,1293,1295]}}},"1422":{"id":1422,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"479":{"id":479,"crate_id":0,"name":"month","span":{"filename":"src/datetime/mod.rs","begin":[1178,4],"end":[1180,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1714":{"id":1714,"crate_id":0,"name":"eq","span":{"filename":"src/naive/mod.rs","begin":[215,39],"end":[215,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"771":{"id":771,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2006":{"id":2006,"crate_id":0,"name":"try_from","span":{"filename":"src/weekday.rs","begin":[192,4],"end":[203,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["value",{"primitive":"u8"}]],"output":{"resolved_path":{"path":"Result","id":39,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":75,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1063":{"id":1063,"crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[317,9],"end":[317,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1355":{"id":1355,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1647":{"id":1647,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[22,40],"end":[22,52]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"use":{"source":"self::datetime::MAX_DATETIME","name":"MAX_DATETIME","id":1383,"is_glob":false}}},"412":{"id":412,"crate_id":0,"name":"to_rfc3339","span":{"filename":"src/datetime/mod.rs","begin":[633,4],"end":[641,5]},"visibility":"public","docs":"Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.","links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"String","id":93,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1939":{"id":1939,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"704":{"id":704,"crate_id":0,"name":"set_ordinal","span":{"filename":"src/format/parsed.rs","begin":[395,4],"end":[400,5]},"visibility":"public","docs":"Set the [`ordinal`](Parsed::ordinal) (day of the year) field to the given value.\n\n# Errors\n\nReturns `OUT_OF_RANGE` if `value` is not in the range 1-366.\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"Parsed::ordinal":703},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2231":{"id":2231,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"996":{"id":996,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1288":{"id":1288,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2263,0],"end":[2267,1]},"visibility":"default","docs":"The `Display` output of the naive date `d` is the same as\n[`d.format(\"%Y-%m-%d\")`](crate::format::strftime).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(2015, 9, 5).unwrap()), \"2015-09-05\");\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(0, 1, 1).unwrap()), \"0000-01-01\");\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(9999, 12, 31).unwrap()), \"9999-12-31\");\n```\n\nISO 8601 requires an explicit sign for years before 1 BCE or after 9999 CE.\n\n```\n# use chrono::NaiveDate;\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(-1, 1, 1).unwrap()), \"-0001-01-01\");\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(10000, 12, 31).unwrap()), \"+10000-12-31\");\n```","links":{"crate::format::strftime":315},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1287],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"53":{"id":53,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1580":{"id":1580,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"345":{"id":345,"crate_id":0,"name":"IsoWeek","span":{"filename":"src/naive/isoweek.rs","begin":[27,0],"end":[32,1]},"visibility":"public","docs":"ISO 8601 week.\n\nThis type, combined with [`Weekday`](../enum.Weekday.html),\nconstitutes the ISO 8601 [week date](./struct.NaiveDate.html#week-date).\nOne can retrieve this type from the existing [`Datelike`](../trait.Datelike.html) types\nvia the [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) method.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[],"where_predicates":[]},"impls":[1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1544,1545,1547,1549,1550,1552,1554,1556]}}},"637":{"id":637,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1872":{"id":1872,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"929":{"id":929,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2164":{"id":2164,"crate_id":0,"name":"month0","span":{"filename":"src/traits.rs","begin":[55,4],"end":[55,28]},"visibility":"default","docs":"Returns the month number starting from 0.\n\nThe return value ranges from 0 to 11.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"1221":{"id":1221,"crate_id":0,"name":"iter_weeks","span":{"filename":"src/naive/date/mod.rs","begin":[1323,4],"end":[1325,5]},"visibility":"public","docs":"Returns an iterator that steps by weeks across all representable dates.\n\n# Example\n\n```\n# use chrono::NaiveDate;\n\nlet expected = [\n    NaiveDate::from_ymd_opt(2016, 2, 27).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 3, 5).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 3, 12).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 3, 19).unwrap(),\n];\n\nlet mut count = 0;\nfor (idx, d) in NaiveDate::from_ymd_opt(2016, 2, 27).unwrap().iter_weeks().take(4).enumerate() {\n    assert_eq!(d, expected[idx]);\n    count += 1;\n}\nassert_eq!(count, 4);\n\nfor d in NaiveDate::from_ymd_opt(2016, 3, 19).unwrap().iter_weeks().rev().take(4) {\n    count -= 1;\n    assert_eq!(d, expected[count]);\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1513":{"id":1513,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[2106,0],"end":[2135,1]},"visibility":"default","docs":"Parsing a `str` into a `NaiveDateTime` uses the same format,\n[`%Y-%m-%dT%H:%M:%S%.f`](crate::format::strftime), as in `Debug`.\n\n# Example\n\n```\nuse chrono::{NaiveDateTime, NaiveDate};\n\nlet dt = NaiveDate::from_ymd_opt(2015, 9, 18).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(\"2015-09-18T23:56:04\".parse::<NaiveDateTime>(), Ok(dt));\n\nlet dt = NaiveDate::from_ymd_opt(12345, 6, 7).unwrap().and_hms_milli_opt(7, 59, 59, 1_500).unwrap(); // leap second\nassert_eq!(\"+12345-6-7T7:59:60.5\".parse::<NaiveDateTime>(), Ok(dt));\n\nassert!(\"foo\".parse::<NaiveDateTime>().is_err());\n```","links":{"crate::format::strftime":315},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FromStr","id":568,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1511,1512],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"278":{"id":278,"crate_id":0,"name":"Offset","span":{"filename":"src/offset/mod.rs","begin":[271,0],"end":[274,1]},"visibility":"public","docs":"The offset from the local time to UTC.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_dyn_compatible":false,"items":[1898],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"fmt::Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[1765,1843]}}},"570":{"id":570,"crate_id":0,"name":"from_str","span":{"filename":"src/datetime/mod.rs","begin":[1838,4],"end":[1840,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1805":{"id":1805,"crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/local/mod.rs","begin":[188,4],"end":[190,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["utc",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2097":{"id":2097,"crate_id":0,"name":"from_u32","span":{"filename":"src/month.rs","begin":[205,4],"end":[221,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["n",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"862":{"id":862,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1154":{"id":1154,"crate_id":0,"name":"TooShort","span":{"filename":"src/format/mod.rs","begin":[420,4],"end":[420,12]},"visibility":"default","docs":"The input string has been prematurely ended.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"211":{"id":211,"crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/datetime/mod.rs","begin":[1858,4],"end":[1860,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1446":{"id":1446,"crate_id":0,"name":"clone","span":{"filename":"src/naive/datetime/mod.rs","begin":[67,53],"end":[67,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1738":{"id":1738,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"503":{"id":503,"crate_id":0,"name":"minute","span":{"filename":"src/datetime/mod.rs","begin":[1335,4],"end":[1337,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2030":{"id":2030,"crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[240,9],"end":[240,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2029],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"795":{"id":795,"crate_id":0,"name":"Item","span":{"filename":"src/format/strftime.rs","begin":[391,4],"end":[391,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}}},"1087":{"id":1087,"crate_id":0,"name":"Fixed","span":{"filename":"src/format/mod.rs","begin":[344,4],"end":[344,16]},"visibility":"default","docs":"Fixed-format item.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[1086]},"discriminant":null}}},"1379":{"id":1379,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2188,0],"end":[2194,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["advance_back_by","nth_back","try_rfold","rfold","rfind"],"trait":{"path":"DoubleEndedIterator","id":1338,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1378],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1671":{"id":1671,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"436":{"id":436,"crate_id":0,"name":"format_with_items","span":{"filename":"src/datetime/mod.rs","begin":[1104,4],"end":[1111,5]},"visibility":"public","docs":"Formats the combined date and time with the specified formatting items.","links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":154,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"728":{"id":728,"crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[190,0],"end":[1137,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[680,684,685,686,690,691,692,694,696,698,700,702,704,706,708,710,711,713,715,717,719,721,722,723,724,725,726,727,681,682,683,687,688,689,693,695,697,699,701,703,705,707,709,712,714,716,718,720],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1963":{"id":1963,"crate_id":0,"name":"succ","span":{"filename":"src/weekday.rs","begin":[66,4],"end":[76,5]},"visibility":"public","docs":"The next day in the week.\n\n`w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.succ()`: | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun` | `Mon`","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1020":{"id":1020,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"77":{"id":77,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1312":{"id":1312,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"369":{"id":369,"crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[537,0],"end":[542,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[368],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1604":{"id":1604,"crate_id":0,"name":"cmp","span":{"filename":"src/naive/time/mod.rs","begin":[212,42],"end":[212,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1896":{"id":1896,"crate_id":0,"name":"hash","span":{"filename":"src/offset/mod.rs","begin":[58,44],"end":[58,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2188":{"id":2188,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[518,0],"end":[518,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"time_delta::TimeDelta","name":"TimeDelta","id":2,"is_glob":false}}},"953":{"id":953,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[174,38],"end":[174,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[952],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"10":{"id":10,"crate_id":0,"name":"try_hours","span":{"filename":"src/time_delta.rs","begin":[170,4],"end":[172,5]},"visibility":"public","docs":"Makes a new `TimeDelta` with the given number of hours.\n\nEquivalent to `TimeDelta::try_seconds(hours * 60 * 60)` with overflow checks.\n\n# Errors\n\nReturns `None` when the `TimeDelta` would be out of bounds.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["hours",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1245":{"id":1245,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[94,9],"end":[94,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1537":{"id":1537,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"302":{"id":302,"crate_id":0,"name":"with_timezone","span":{"filename":"src/date.rs","begin":[256,4],"end":[258,5]},"visibility":"public","docs":"Changes the associated time zone.\nThis does not change the actual `Date` (but will change the string representation).","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["tz",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Tz2"}}}]],"output":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1829":{"id":1829,"crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,22],"end":[43,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2121":{"id":2121,"crate_id":0,"name":"fmt","span":{"filename":"src/month.rs","begin":[225,22],"end":[225,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"886":{"id":886,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[102,38],"end":[102,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[885],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1178":{"id":1178,"crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[398,23],"end":[398,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1470":{"id":1470,"crate_id":0,"name":"second","span":{"filename":"src/naive/datetime/mod.rs","begin":[1408,4],"end":[1410,5]},"visibility":"default","docs":"Returns the second number from 0 to 59.\n\nSee also the [`NaiveTime::second`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.second(), 56);\n```","links":{"`NaiveTime::second`":1469},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"235":{"id":235,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1762":{"id":1762,"crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/fixed.rs","begin":[144,4],"end":[146,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["_utc",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"527":{"id":527,"crate_id":0,"name":"add","span":{"filename":"src/datetime/mod.rs","begin":[1500,4],"end":[1504,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"819":{"id":819,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2054":{"id":2054,"crate_id":0,"name":"pred","span":{"filename":"src/month.rs","begin":[99,4],"end":[114,5]},"visibility":"public","docs":"The previous month.\n\n`m`:        | `January`  | `February` | `...` | `December`\n----------- | ---------  | ---------- | --- | ---------\n`m.pred()`: | `December` | `January`  | `...` | `November`","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1111":{"id":1111,"crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[328,31],"end":[328,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"168":{"id":168,"crate_id":0,"name":"Output","span":{"filename":"src/date.rs","begin":[513,4],"end":[513,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}}},"1403":{"id":1403,"crate_id":0,"name":"timestamp_subsec_nanos","span":{"filename":"src/naive/datetime/mod.rs","begin":[448,4],"end":[450,5]},"visibility":"public","docs":"Returns the number of nanoseconds since the last whole non-leap second.\n\nThe return value ranges from 0 to 999,999,999,\nor for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999,999.","links":{},"attrs":["#[deprecated(since = \"0.4.36\", note =\n\"use `.and_utc().timestamp_subsec_nanos()` instead\")]"],"deprecation":{"since":"0.4.36","note":"use `.and_utc().timestamp_subsec_nanos()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"460":{"id":460,"crate_id":0,"name":"default","span":{"filename":"src/datetime/mod.rs","begin":[865,4],"end":[867,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1695":{"id":1695,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"752":{"id":752,"crate_id":0,"name":"default","span":{"filename":"src/format/parsed.rs","begin":[128,38],"end":[128,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1987":{"id":1987,"crate_id":0,"name":"Err","span":{"filename":"src/format/mod.rs","begin":[495,4],"end":[495,33]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1044":{"id":1044,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[296,44],"end":[296,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1043],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"101":{"id":101,"crate_id":0,"name":"default","span":{"filename":"src/time_delta.rs","begin":[52,22],"end":[52,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1336":{"id":1336,"crate_id":0,"name":"next_back","span":{"filename":"src/naive/date/mod.rs","begin":[2155,4],"end":[2160,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":154,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1628":{"id":1628,"crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1456,4],"end":[1456,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"393":{"id":393,"crate_id":0,"name":"timestamp_subsec_nanos","span":{"filename":"src/datetime/mod.rs","begin":[389,4],"end":[391,5]},"visibility":"public","docs":"Returns the number of nanoseconds since the last second boundary\n\nIn event of a leap second this may exceed 999,999,999.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1920":{"id":1920,"crate_id":0,"name":"Err","span":{"filename":"src/round.rs","begin":[109,4],"end":[109,32]},"visibility":"default","docs":"Error that can occur in rounding or truncating","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"path":"std::error::Error","id":253,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"type":null}}},"685":{"id":685,"crate_id":0,"name":"set_year_div_100","span":{"filename":"src/format/parsed.rs","begin":[220,4],"end":[225,5]},"visibility":"public","docs":"Set the [`year_div_100`](Parsed::year_div_100) field to the given value.\n\n# Errors\n\nReturns `OUT_OF_RANGE` if `value` is negative or if it is greater than `i32::MAX`.\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"Parsed::year_div_100":682},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2212":{"id":2212,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[576,31],"end":[576,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"round::RoundingError","name":"RoundingError","id":583,"is_glob":false}}},"977":{"id":977,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[258,34],"end":[258,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1269":{"id":1269,"crate_id":0,"name":"add","span":{"filename":"src/naive/date/mod.rs","begin":[1958,4],"end":[1960,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["months",{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":134,"args":null}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"34":{"id":34,"crate_id":0,"name":"max_value","span":{"filename":"src/time_delta.rs","begin":[430,4],"end":[432,5]},"visibility":"public","docs":"The maximum possible `TimeDelta`: `i64::MAX` milliseconds.","links":{},"attrs":["#[deprecated(since = \"0.4.39\", note = \"Use `TimeDelta::MAX` instead\")]","#[inline]"],"deprecation":{"since":"0.4.39","note":"Use `TimeDelta::MAX` instead"},"inner":{"function":{"sig":{"inputs":[],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1561":{"id":1561,"crate_id":0,"name":"from_hms","span":{"filename":"src/naive/time/mod.rs","begin":[253,4],"end":[255,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute and second.\n\nNo [leap second](#leap-second-handling) is allowed here;\nuse `NaiveTime::from_hms_*` methods with a subsecond parameter instead.\n\n# Panics\n\nPanics on invalid hour, minute and/or second.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_hms_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_hms_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"326":{"id":326,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"618":{"id":618,"crate_id":0,"name":"format_item","span":{"filename":"src/format/formatting.rs","begin":[357,0],"end":[372,1]},"visibility":"public","docs":"Formats single formatting item","links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[deprecated(since = \"0.4.32\", note = \"Use DelayedFormat::fmt instead\")]"],"deprecation":{"since":"0.4.32","note":"Use DelayedFormat::fmt instead"},"inner":{"function":{"sig":{"inputs":[["w",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}],["date",{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"crate::NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}}],"constraints":[]}}}}],["time",{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"crate::NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}}],"constraints":[]}}}}],["off",{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"tuple":[{"resolved_path":{"path":"String","id":93,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},{"resolved_path":{"path":"crate::FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]}}}}],"constraints":[]}}}}],["item",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"super::Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1853":{"id":1853,"crate_id":0,"name":"Single","span":{"filename":"src/offset/mod.rs","begin":[63,4],"end":[63,13]},"visibility":"default","docs":"The local time maps to a single unique result.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[1852]},"discriminant":null}}},"910":{"id":910,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[158,26],"end":[158,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[909],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2145":{"id":2145,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1202":{"id":1202,"crate_id":0,"name":"checked_sub_days","span":{"filename":"src/naive/date/mod.rs","begin":[660,4],"end":[665,5]},"visibility":"public","docs":"Subtract a duration in [`Days`] from the date\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\n# use chrono::{NaiveDate, Days};\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_sub_days(Days::new(6)),\n    Some(NaiveDate::from_ymd_opt(2022, 2, 14).unwrap())\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_sub_days(Days::new(1000000000000)),\n    None\n);\n```","links":{"`Days`":404},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"259":{"id":259,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[533,4],"end":[533,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::SubsecRound","name":"SubsecRound","id":258,"is_glob":false}}},"1494":{"id":1494,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1886,0],"end":[1893,1]},"visibility":"default","docs":"Subtract `FixedOffset` from `NaiveDateTime`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using `checked_sub_offset` to get an `Option` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1492,1493],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"551":{"id":551,"crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1713,4],"end":[1713,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1786":{"id":1786,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2078":{"id":2078,"crate_id":0,"name":"eq","span":{"filename":"src/month.rs","begin":[31,9],"end":[31,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"843":{"id":843,"crate_id":0,"name":"IsoYearMod100","span":{"filename":"src/format/mod.rs","begin":[117,4],"end":[117,17]},"visibility":"default","docs":"Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1135":{"id":1135,"crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[386,9],"end":[386,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"192":{"id":192,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[1924,0],"end":[1929,1]},"visibility":"default","docs":"Add-assign of `TimeDelta` to `NaiveDate`.\n\nThis discards the fractional days in `TimeDelta`, rounding to the closest integral number of days\ntowards `TimeDelta::zero()`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDate::checked_add_signed`] to get an `Option` instead.","links":{"`NaiveDate::checked_add_signed`":189},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"AddAssign","id":141,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[191],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1427":{"id":1427,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1719":{"id":1719,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[215,62],"end":[215,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"path":"Ord","id":117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1718],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"484":{"id":484,"crate_id":0,"name":"ordinal0","span":{"filename":"src/datetime/mod.rs","begin":[1198,4],"end":[1200,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"776":{"id":776,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1068":{"id":1068,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[317,29],"end":[317,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1360":{"id":1360,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2166,16],"end":[2166,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"125":{"id":125,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[52,70],"end":[52,74]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[123],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"417":{"id":417,"crate_id":0,"name":"LocalResult","span":{"filename":"src/offset/mod.rs","begin":[61,0],"end":[75,1]},"visibility":"public","docs":"Old name of [`MappedLocalTime`]. See that type for more documentation.","links":{"`MappedLocalTime`":1412},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"has_stripped_variants":false,"variants":[1853,1856,1857],"impls":[1863,1869,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1888,1889,1891,1893,1894,1895,1897]}}},"709":{"id":709,"crate_id":0,"name":"hour_mod_12","span":{"filename":"src/format/parsed.rs","begin":[1094,4],"end":[1096,5]},"visibility":"public","docs":"Get the `hour_mod_12` field if set.\n\nSee also [`set_hour12()`](Parsed::set_hour12) and [`set_hour()`](Parsed::set_hour).","links":{"Parsed::set_hour":711,"Parsed::set_hour12":710},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1944":{"id":1944,"crate_id":0,"name":"clone","span":{"filename":"src/round.rs","begin":[244,16],"end":[244,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1001":{"id":1001,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2236":{"id":2236,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"58":{"id":58,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1293":{"id":1293,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2316,0],"end":[2320,1]},"visibility":"default","docs":"The default value for a NaiveDate is 1st of January 1970.\n\n# Example\n\n```rust\nuse chrono::NaiveDate;\n\nlet default_date = NaiveDate::default();\nassert_eq!(default_date, NaiveDate::from_ymd_opt(1970, 1, 1).unwrap());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":103,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1292],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"350":{"id":350,"crate_id":0,"name":"with_day0","span":{"filename":"src/date.rs","begin":[451,4],"end":[453,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["day0",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1585":{"id":1585,"crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[52,0],"end":[80,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Timelike","id":267,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"SubsecRound","id":258,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[445,446],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"642":{"id":642,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1877":{"id":1877,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2169":{"id":2169,"crate_id":0,"name":"with_year","span":{"filename":"src/traits.rs","begin":[119,4],"end":[119,51]},"visibility":"default","docs":"Makes a new value with the year number changed, while keeping the same month and day.\n\nThis method assumes you want to work on the date as a year-month-day value. Don't use it if\nyou want the ordinal to stay the same after changing the year, of if you want the week and\nweekday values to stay the same.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (February 29 in a non-leap year).\n- The year is out of range for [`NaiveDate`].\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n\n[`NaiveDate`]: crate::NaiveDate\n[`DateTime<Tz>`]: crate::DateTime\n\n# Examples\n\n```\nuse chrono::{Datelike, NaiveDate};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2020, 5, 13).unwrap().with_year(2023).unwrap(),\n    NaiveDate::from_ymd_opt(2023, 5, 13).unwrap()\n);\n// Resulting date 2023-02-29 does not exist:\nassert!(NaiveDate::from_ymd_opt(2020, 2, 29).unwrap().with_year(2023).is_none());\n\n// Don't use `with_year` if you want the ordinal date to stay the same:\nassert_ne!(\n    NaiveDate::from_yo_opt(2020, 100).unwrap().with_year(2023).unwrap(),\n    NaiveDate::from_yo_opt(2023, 100).unwrap() // result is 2023-101\n);\n```","links":{"crate::DateTime":174,"crate::NaiveDate":187},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"934":{"id":934,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1226":{"id":1226,"crate_id":0,"name":"MIN","span":{"filename":"src/naive/date/mod.rs","begin":[1431,4],"end":[1431,95]},"visibility":"public","docs":"The minimum possible `NaiveDate` (January 1, 262144 BCE).","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"value":"_"}}},"1518":{"id":1518,"crate_id":0,"name":"duration_trunc","span":{"filename":"src/round.rs","begin":[177,4],"end":[179,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["duration",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Result","id":39,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":585,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1810":{"id":1810,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"575":{"id":575,"crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[1865,4],"end":[1867,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["t",{"resolved_path":{"path":"SystemTime","id":573,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2102":{"id":2102,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[229,0],"end":[240,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2100,2101],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"867":{"id":867,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1159":{"id":1159,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1451":{"id":1451,"crate_id":0,"name":"day","span":{"filename":"src/naive/datetime/mod.rs","begin":[1043,4],"end":[1045,5]},"visibility":"default","docs":"Returns the day of month starting from 1.\n\nThe return value ranges from 1 to 31. (The last day of month differs by months.)\n\nSee also the [`NaiveDate::day`](./struct.NaiveDate.html#method.day) method.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.day(), 25);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"216":{"id":216,"crate_id":0,"name":"add_assign","span":{"filename":"src/naive/time/mod.rs","begin":[1221,4],"end":[1223,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"508":{"id":508,"crate_id":0,"name":"with_minute","span":{"filename":"src/naive/time/mod.rs","begin":[1037,4],"end":[1043,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with the minute number changed.\n\n# Errors\n\nReturns `None` if the value for `minute` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(\n    dt.with_minute(45),\n    Some(NaiveTime::from_hms_nano_opt(23, 45, 4, 12_345_678).unwrap())\n);\nassert_eq!(dt.with_minute(60), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["min",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1743":{"id":1743,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"800":{"id":800,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[62,0],"end":[62,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"formatting::SecondsFormat","name":"SecondsFormat","id":261,"is_glob":false}}},"2035":{"id":2035,"crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[246,0],"end":[246,47]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","description","cause","provide"],"trait":{"path":"Error","id":253,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1092":{"id":1092,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"149":{"id":149,"crate_id":0,"name":"Output","span":{"filename":"src/time_delta.rs","begin":[540,4],"end":[540,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"441":{"id":441,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1676":{"id":1676,"crate_id":0,"name":"clone","span":{"filename":"src/naive/mod.rs","begin":[32,9],"end":[32,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1968":{"id":1968,"crate_id":0,"name":"num_days_from_sunday","span":{"filename":"src/weekday.rs","begin":[147,4],"end":[149,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Sunday = 0.\n\n`w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n--------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.num_days_from_sunday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 0","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"733":{"id":733,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1025":{"id":1025,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"82":{"id":82,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1317":{"id":1317,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2130,16],"end":[2130,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1609":{"id":1609,"crate_id":0,"name":"nanosecond","span":{"filename":"src/naive/time/mod.rs","begin":[990,4],"end":[992,5]},"visibility":"default","docs":"Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](#leap-second-handling).\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(0, 0, 0).unwrap().nanosecond(), 0);\nassert_eq!(\n    NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().nanosecond(),\n    12_345_678\n);\n```\n\nLeap seconds may have seemingly out-of-range return values.\nYou can reduce the range with `time.nanosecond() % 1_000_000_000`, or\nuse the proper [formatting method](#method.format) to get a human-readable representation.\n\n```\n# #[cfg(feature = \"alloc\")] {\n# use chrono::{NaiveTime, Timelike};\nlet leap = NaiveTime::from_hms_milli_opt(23, 59, 59, 1_000).unwrap();\nassert_eq!(leap.nanosecond(), 1_000_000_000);\nassert_eq!(leap.format(\"%H:%M:%S%.9f\").to_string(), \"23:59:60.000000000\");\n# }\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1901":{"id":1901,"crate_id":0,"name":"ymd_opt","span":{"filename":"src/offset/mod.rs","begin":[328,4],"end":[333,5]},"visibility":"default","docs":"Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date, invalid month and/or day.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `with_ymd_and_hms()` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `with_ymd_and_hms()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"958":{"id":958,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2193":{"id":2193,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[549,0],"end":[549,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"datetime::DateTime","name":"DateTime","id":174,"is_glob":false}}},"1250":{"id":1250,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[94,24],"end":[94,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1249],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"15":{"id":15,"crate_id":0,"name":"milliseconds","span":{"filename":"src/time_delta.rs","begin":[230,4],"end":[232,5]},"visibility":"public","docs":"Makes a new `TimeDelta` with the given number of milliseconds.\n\n# Panics\n\nPanics when the `TimeDelta` would be out of bounds, i.e. when `milliseconds` is more than\n`i64::MAX` or less than `-i64::MAX`. Notably, this is not the same as `i64::MIN`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["milliseconds",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1542":{"id":1542,"crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,9],"end":[19,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"307":{"id":307,"crate_id":0,"name":"naive_local","span":{"filename":"src/date.rs","begin":[305,4],"end":[307,5]},"visibility":"public","docs":"Returns a view to the naive local date.\n\nThis is technically the same as [`naive_utc`](#method.naive_utc)\nbecause the offset is restricted to never exceed one day,\nbut provided for the consistency.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"599":{"id":599,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1834":{"id":1834,"crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,37],"end":[43,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1833],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"891":{"id":891,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2126":{"id":2126,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[225,39],"end":[225,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1183":{"id":1183,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[398,44],"end":[398,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1182],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"240":{"id":240,"crate_id":0,"name":"fmt","span":{"filename":"src/time_delta.rs","begin":[602,9],"end":[602,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1475":{"id":1475,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1357,0],"end":[1568,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hour12","num_seconds_from_midnight"],"trait":{"path":"Timelike","id":267,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1466,1468,1470,512,1471,1472,1473,1474],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"532":{"id":532,"crate_id":0,"name":"add","span":{"filename":"src/datetime/mod.rs","begin":[1555,4],"end":[1559,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1767":{"id":1767,"crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[155,0],"end":[169,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1766],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2059":{"id":2059,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"824":{"id":824,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1116":{"id":1116,"crate_id":0,"name":"kind","span":{"filename":"src/format/mod.rs","begin":[391,4],"end":[393,5]},"visibility":"public","docs":"The category of parse error","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1408":{"id":1408,"crate_id":0,"name":"checked_add_days","span":{"filename":"src/naive/datetime/mod.rs","begin":[756,4],"end":[758,5]},"visibility":"public","docs":"Add a duration in [`Days`] to the date part of the `NaiveDateTime`\n\nReturns `None` if the resulting date would be out of range.","links":{"`Days`":404},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"173":{"id":173,"crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1478,4],"end":[1478,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}}},"1700":{"id":1700,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"465":{"id":465,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[877,0],"end":[881,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":103,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::offset::FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"items":[464],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1992":{"id":1992,"crate_id":0,"name":"eq","span":{"filename":"src/weekday.rs","begin":[32,9],"end":[32,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"757":{"id":757,"crate_id":0,"name":"parse_and_remainder","span":{"filename":"src/format/parse.rs","begin":[270,0],"end":[280,1]},"visibility":"public","docs":"Tries to parse given string into `parsed` with given formatting items.\nReturns `Ok` with a slice of the unparsed remainder.\n\nThis particular date and time parser is:\n\n- Greedy. It will consume the longest possible prefix.\n  For example, `April` is always consumed entirely when the long month name is requested;\n  it equally accepts `Apr`, but prefers the longer prefix in this case.\n\n- Padding-agnostic (for numeric items).\n  The [`Pad`](./enum.Pad.html) field is completely ignored,\n  so one can prepend any number of zeroes before numbers.\n\n- (Still) obeying the intrinsic parsing width. This allows, for example, parsing `HHMMSS`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["parsed",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"super::Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}],["s",{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"primitive":"str"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"path":"super::ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"primitive":"str"}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":154,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"super::Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1049":{"id":1049,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"106":{"id":106,"crate_id":0,"name":"eq","span":{"filename":"src/time_delta.rs","begin":[52,31],"end":[52,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1633":{"id":1633,"crate_id":0,"name":"fmt","span":{"filename":"src/naive/time/mod.rs","begin":[1573,4],"end":[1575,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"398":{"id":398,"crate_id":0,"name":"to_utc","span":{"filename":"src/datetime/mod.rs","begin":[428,4],"end":[430,5]},"visibility":"public","docs":"Turn this `DateTime` into a `DateTime<Utc>`, dropping the offset and associated timezone\ninformation.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"690":{"id":690,"crate_id":0,"name":"set_isoyear","span":{"filename":"src/format/parsed.rs","begin":[263,4],"end":[265,5]},"visibility":"public","docs":"Set the [`isoyear`](Parsed::isoyear) field, that is part of an [ISO 8601 week date], to the\ngiven value.\n\nThe value can be negative, unlike the [`isoyear_div_100`](Parsed::isoyear_div_100) and\n[`isoyear_mod_100`](Parsed::isoyear_mod_100) fields.\n\n[ISO 8601 week date]: crate::NaiveDate#week-date\n\n# Errors\n\nReturns `OUT_OF_RANGE` if `value` is outside the range of an `i32`.\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"Parsed::isoyear_mod_100":689,"crate::NaiveDate#week-date":187,"Parsed::isoyear":687,"Parsed::isoyear_div_100":688},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1925":{"id":1925,"crate_id":0,"name":"TimestampExceedsLimit","span":{"filename":"src/round.rs","begin":[279,4],"end":[279,25]},"visibility":"default","docs":"Error when `DateTime.timestamp_nanos` exceeds the limit.\n\n``` rust\n# use chrono::{DurationRound, TimeDelta, RoundingError, TimeZone, Utc};\nlet dt = Utc.with_ymd_and_hms(2300, 12, 12, 0, 0, 0).unwrap();\n\nassert_eq!(\n    dt.duration_round(TimeDelta::try_days(1).unwrap()),\n    Err(RoundingError::TimestampExceedsLimit)\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"982":{"id":982,"crate_id":0,"name":"colons","span":{"filename":"src/format/mod.rs","begin":[288,4],"end":[288,22]},"visibility":"public","docs":"Separator between hours, minutes and seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}},"2217":{"id":2217,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[586,16],"end":[586,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"month::Month","name":"Month","id":265,"is_glob":false}}},"1274":{"id":1274,"crate_id":0,"name":"Output","span":{"filename":"src/naive/date/mod.rs","begin":[1999,4],"end":[1999,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"331":{"id":331,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1566":{"id":1566,"crate_id":0,"name":"from_hms_micro_opt","span":{"filename":"src/naive/time/mod.rs","begin":[377,4],"end":[385,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and microsecond.\n\nThe microsecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute, second and/or microsecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hmsu_opt = NaiveTime::from_hms_micro_opt;\n\nassert!(from_hmsu_opt(0, 0, 0, 0).is_some());\nassert!(from_hmsu_opt(23, 59, 59, 999_999).is_some());\nassert!(from_hmsu_opt(23, 59, 59, 1_999_999).is_some()); // a leap second after 23:59:59\nassert!(from_hmsu_opt(24, 0, 0, 0).is_none());\nassert!(from_hmsu_opt(23, 60, 0, 0).is_none());\nassert!(from_hmsu_opt(23, 59, 60, 0).is_none());\nassert!(from_hmsu_opt(23, 59, 59, 2_000_000).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"623":{"id":623,"crate_id":0,"name":"Micros","span":{"filename":"src/format/formatting.rs","begin":[468,4],"end":[468,10]},"visibility":"default","docs":"Use fixed 6 subsecond digits. This corresponds to [Fixed::Nanosecond6].","links":{"Fixed::Nanosecond6":622},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1858":{"id":1858,"crate_id":0,"name":"single","span":{"filename":"src/offset/mod.rs","begin":[85,4],"end":[90,5]},"visibility":"public","docs":"Returns `Some` if the time zone mapping has a single result.\n\n# Errors\n\nReturns `None` if local time falls in a _fold_ or _gap_ in the local time, or if there was\nan error.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2150":{"id":2150,"crate_id":0,"name":"clone","span":{"filename":"src/month.rs","begin":[243,9],"end":[243,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"915":{"id":915,"crate_id":0,"name":"ShortWeekdayName","span":{"filename":"src/format/mod.rs","begin":[187,4],"end":[187,20]},"visibility":"default","docs":"Abbreviated day of the week names.\n\nPrints a three-letter-long name in the title case, reads the same name in any case.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1207":{"id":1207,"crate_id":0,"name":"and_hms_milli_opt","span":{"filename":"src/naive/date/mod.rs","begin":[795,4],"end":[804,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.\n\nThe millisecond part is allowed to exceed 1,000,000,000 in order to represent a [leap second](\n./struct.NaiveTime.html#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute, second and/or millisecond.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nassert!(d.and_hms_milli_opt(12, 34, 56, 789).is_some());\nassert!(d.and_hms_milli_opt(12, 34, 59, 1_789).is_some()); // leap second\nassert!(d.and_hms_milli_opt(12, 34, 59, 2_789).is_none());\nassert!(d.and_hms_milli_opt(12, 34, 60, 789).is_none());\nassert!(d.and_hms_milli_opt(12, 60, 56, 789).is_none());\nassert!(d.and_hms_milli_opt(24, 34, 56, 789).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1499":{"id":1499,"crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1987,4],"end":[1989,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"264":{"id":264,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[535,20],"end":[535,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::Datelike","name":"Datelike","id":263,"is_glob":false}}},"1791":{"id":1791,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"556":{"id":556,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1731,0],"end":[1737,1]},"visibility":"default","docs":"Add `Days` to `NaiveDateTime`.\n\n# Panics\n\nPanics if:\n- The resulting date would be out of range.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.\n\nStrongly consider using `DateTime<Tz>::checked_add_days` to get an `Option` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[554,555],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2083":{"id":2083,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,30],"end":[31,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2082],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"848":{"id":848,"crate_id":0,"name":"IsoWeek","span":{"filename":"src/format/mod.rs","begin":[127,4],"end":[127,11]},"visibility":"default","docs":"Week number in the ISO week date (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1140":{"id":1140,"crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[386,23],"end":[386,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1432":{"id":1432,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"197":{"id":197,"crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/date/mod.rs","begin":[2079,4],"end":[2081,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"489":{"id":489,"crate_id":0,"name":"with_month","span":{"filename":"src/naive/date/mod.rs","begin":[1723,4],"end":[1725,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the month number (starting from 1) changed.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (for example `month(4)` when day of the month is 31).\n- The value for `month` is invalid.\n\n# Examples\n\n```\nuse chrono::{Datelike, NaiveDate};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_month(10),\n    Some(NaiveDate::from_ymd_opt(2015, 10, 8).unwrap())\n);\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_month(13), None); // No month 13\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().with_month(2), None); // No Feb 30\n```\n\nDon't combine multiple `Datelike::with_*` methods. The intermediate value may not exist.\n\n```\nuse chrono::{Datelike, NaiveDate};\n\nfn with_year_month(date: NaiveDate, year: i32, month: u32) -> Option<NaiveDate> {\n    date.with_year(year)?.with_month(month)\n}\nlet d = NaiveDate::from_ymd_opt(2020, 2, 29).unwrap();\nassert!(with_year_month(d, 2019, 1).is_none()); // fails because of invalid intermediate value\n\n// Correct version:\nfn with_year_month_fixed(date: NaiveDate, year: i32, month: u32) -> Option<NaiveDate> {\n    NaiveDate::from_ymd_opt(year, month, date.day())\n}\nlet d = NaiveDate::from_ymd_opt(2020, 2, 29).unwrap();\nassert_eq!(with_year_month_fixed(d, 2019, 1), NaiveDate::from_ymd_opt(2019, 1, 29));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["month",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1724":{"id":1724,"crate_id":0,"name":"west","span":{"filename":"src/offset/fixed.rs","begin":[76,4],"end":[78,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.\n\nPanics on the out-of-bound `secs`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `west_opt()` instead\")]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `west_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["secs",{"primitive":"i32"}]],"output":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"781":{"id":781,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2016":{"id":2016,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1073":{"id":1073,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[317,44],"end":[317,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1072],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1365":{"id":1365,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2166,35],"end":[2166,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"422":{"id":422,"crate_id":0,"name":"from_timestamp_millis","span":{"filename":"src/datetime/mod.rs","begin":[782,4],"end":[786,5]},"visibility":"public","docs":"Makes a new `DateTime<Utc>` from the number of non-leap milliseconds\nsince January 1, 1970 0:00:00.000 UTC (aka \"UNIX timestamp\").\n\nThis is guaranteed to round-trip with [`timestamp_millis`](DateTime::timestamp_millis).\n\nIf you need to create a `DateTime` with a [`TimeZone`] different from [`Utc`], use\n[`TimeZone::timestamp_millis_opt`] or [`DateTime::with_timezone`].\n\n# Errors\n\nReturns `None` on out-of-range number of milliseconds, otherwise returns `Some(DateTime {...})`.\n\n# Example\n\n```\nuse chrono::DateTime;\n\nlet dt = DateTime::from_timestamp_millis(947638923004).expect(\"invalid timestamp\");\n\nassert_eq!(dt.to_string(), \"2000-01-12 01:02:03.004 UTC\");\nassert_eq!(DateTime::from_timestamp_millis(dt.timestamp_millis()).unwrap(), dt);\n```","links":{"DateTime::timestamp_millis":387,"`Utc`":273,"`DateTime::with_timezone`":396,"`TimeZone::timestamp_millis_opt`":421,"`TimeZone`":165},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["millis",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1949":{"id":1949,"crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[244,34],"end":[244,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"714":{"id":714,"crate_id":0,"name":"second","span":{"filename":"src/format/parsed.rs","begin":[1110,4],"end":[1112,5]},"visibility":"public","docs":"Get the `second` field if set.\n\nSee also [`set_second()`](Parsed::set_second).","links":{"Parsed::set_second":715},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2241":{"id":2241,"crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[664,22],"end":[664,26]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1006":{"id":1006,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[283,22],"end":[283,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1005],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1590":{"id":1590,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"355":{"id":355,"crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[468,0],"end":[468,83]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1882":{"id":1882,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"647":{"id":647,"crate_id":0,"name":"fmt","span":{"filename":"src/format/formatting.rs","begin":[458,22],"end":[458,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"939":{"id":939,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2174":{"id":2174,"crate_id":0,"name":"with_ordinal","span":{"filename":"src/traits.rs","begin":[220,4],"end":[220,57]},"visibility":"default","docs":"Makes a new value with the day of year (starting from 1) changed.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (`with_ordinal(366)` in a non-leap year).\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n- The value for `ordinal` is out of range.\n\n[`DateTime<Tz>`]: crate::DateTime","links":{"crate::DateTime":174},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"1231":{"id":1231,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1523":{"id":1523,"crate_id":0,"name":"year","span":{"filename":"src/naive/isoweek.rs","begin":[81,4],"end":[83,5]},"visibility":"public","docs":"Returns the year number for this ISO week.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, Weekday};\n\nlet d = NaiveDate::from_isoywd_opt(2015, 1, Weekday::Mon).unwrap();\nassert_eq!(d.iso_week().year(), 2015);\n```\n\nThis year number might not match the calendar year number.\nContinuing the example...\n\n```\n# use chrono::{NaiveDate, Datelike, Weekday};\n# let d = NaiveDate::from_isoywd_opt(2015, 1, Weekday::Mon).unwrap();\nassert_eq!(d.year(), 2014);\nassert_eq!(d, NaiveDate::from_ymd_opt(2014, 12, 29).unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"288":{"id":288,"crate_id":0,"name":"and_hms","span":{"filename":"src/date.rs","begin":[99,4],"end":[101,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute and/or second.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use and_hms_opt() instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use and_hms_opt() instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"580":{"id":580,"crate_id":0,"name":"from_str","span":{"filename":"src/format/parse.rs","begin":[525,4],"end":[532,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1815":{"id":1815,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"872":{"id":872,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2107":{"id":2107,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1164":{"id":1164,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"221":{"id":221,"crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/time/mod.rs","begin":[1343,4],"end":[1345,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1456":{"id":1456,"crate_id":0,"name":"iso_week","span":{"filename":"src/naive/datetime/mod.rs","begin":[1126,4],"end":[1128,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"513":{"id":513,"crate_id":0,"name":"with_nanosecond","span":{"filename":"src/naive/time/mod.rs","begin":[1109,4],"end":[1114,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with nanoseconds since the whole non-leap second changed.\n\nAs with the [`nanosecond`](#method.nanosecond) method,\nthe input range can exceed 1,000,000,000 for leap seconds.\n\n# Errors\n\nReturns `None` if `nanosecond >= 2,000,000,000`.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(\n    dt.with_nanosecond(333_333_333),\n    Some(NaiveTime::from_hms_nano_opt(23, 56, 4, 333_333_333).unwrap())\n);\nassert_eq!(dt.with_nanosecond(2_000_000_000), None);\n```\n\nLeap seconds can theoretically follow *any* whole second.\nThe following would be a proper leap second at the time zone offset of UTC-00:03:57\n(there are several historical examples comparable to this \"non-sense\" offset),\nand therefore is allowed.\n\n```\n# use chrono::{NaiveTime, Timelike};\nlet dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nlet strange_leap_second = dt.with_nanosecond(1_333_333_333).unwrap();\nassert_eq!(strange_leap_second.nanosecond(), 1_333_333_333);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1748":{"id":1748,"crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[22,20],"end":[22,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"805":{"id":805,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[69,23],"end":[69,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"parse::parse_and_remainder","name":"parse_and_remainder","id":757,"is_glob":false}}},"1097":{"id":1097,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1389":{"id":1389,"crate_id":0,"name":"from_timestamp_millis","span":{"filename":"src/naive/datetime/mod.rs","begin":[139,4],"end":[141,5]},"visibility":"public","docs":"Creates a new [NaiveDateTime] from milliseconds since the UNIX epoch.\n\nThe UNIX epoch starts on midnight, January 1, 1970, UTC.\n\n# Errors\n\nReturns `None` if the number of milliseconds would be out of range for a `NaiveDateTime`\n(more than ca. 262,000 years away from common era)","links":{"NaiveDateTime":200},"attrs":["#[deprecated(since = \"0.4.35\", note =\n\"use `DateTime::from_timestamp_millis` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.35","note":"use `DateTime::from_timestamp_millis` instead"},"inner":{"function":{"sig":{"inputs":[["millis",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1681":{"id":1681,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[32,29],"end":[32,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"446":{"id":446,"crate_id":0,"name":"trunc_subsecs","span":{"filename":"src/round.rs","begin":[71,4],"end":[79,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["digits",{"primitive":"u16"}]],"output":{"generic":"T"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1973":{"id":1973,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"738":{"id":738,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1030":{"id":1030,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1322":{"id":1322,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2130,35],"end":[2130,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"87":{"id":87,"crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"T"}}}},"379":{"id":379,"crate_id":0,"name":"from_naive_utc_and_offset","span":{"filename":"src/datetime/mod.rs","begin":[94,4],"end":[99,5]},"visibility":"public","docs":"Makes a new `DateTime` from its components: a `NaiveDateTime` in UTC and an `Offset`.\n\nThis is a low-level method, intended for use cases such as deserializing a `DateTime` or\npassing it through FFI.\n\nFor regular use you will probably want to use a method such as\n[`TimeZone::from_local_datetime`] or [`NaiveDateTime::and_local_timezone`] instead.\n\n# Example\n\n```\n# #[cfg(feature = \"clock\")] {\nuse chrono::{DateTime, Local};\n\nlet dt = Local::now();\n// Get components\nlet naive_utc = dt.naive_utc();\nlet offset = dt.offset().clone();\n// Serialize, pass through FFI... and recreate the `DateTime`:\nlet dt_new = DateTime::<Local>::from_naive_utc_and_offset(naive_utc, offset);\nassert_eq!(dt, dt_new);\n# }\n```","links":{"`TimeZone::from_local_datetime`":377,"`NaiveDateTime::and_local_timezone`":378},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["datetime",{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}],["offset",{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"","id":165,"args":null}}}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1614":{"id":1614,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1230,0],"end":[1242,1]},"visibility":"default","docs":"Add `std::time::Duration` to `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the addition ignores integral number of days.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1612,1613],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1906":{"id":1906,"crate_id":0,"name":"timestamp_millis","span":{"filename":"src/offset/mod.rs","begin":[459,4],"end":[461,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap milliseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\nPanics on out-of-range number of milliseconds for a non-panicking\nversion see [`timestamp_millis_opt`](#method.timestamp_millis_opt).","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `timestamp_millis_opt()` instead\")]"],"deprecation":{"since":"0.4.23","note":"use `timestamp_millis_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["millis",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"963":{"id":963,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2198":{"id":2198,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[558,42],"end":[558,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"format::SecondsFormat","name":"SecondsFormat","id":261,"is_glob":false}}},"20":{"id":20,"crate_id":0,"name":"num_days","span":{"filename":"src/time_delta.rs","begin":[285,4],"end":[287,5]},"visibility":"public","docs":"Returns the total number of whole days in the `TimeDelta`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1255":{"id":1255,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[94,47],"end":[94,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"312":{"id":312,"crate_id":0,"name":"format_with_items","span":{"filename":"src/date.rs","begin":[337,4],"end":[343,5]},"visibility":"public","docs":"Formats the date with the specified formatting items.","links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":154,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1547":{"id":1547,"crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,24],"end":[19,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","gt","ge"],"trait":{"path":"PartialOrd","id":114,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1546],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1839":{"id":1839,"crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/utc.rs","begin":[128,4],"end":[130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["_utc",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"604":{"id":604,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2131":{"id":2131,"crate_id":0,"name":"cmp","span":{"filename":"src/month.rs","begin":[225,62],"end":[225,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"896":{"id":896,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1188":{"id":1188,"crate_id":0,"name":"weekday","span":{"filename":"src/traits.rs","begin":[78,4],"end":[78,33]},"visibility":"default","docs":"Returns the day of week.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"1480":{"id":1480,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1683,0],"end":[1688,1]},"visibility":"default","docs":"Add-assign `std::time::Duration` to `NaiveDateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDateTime::checked_add_signed`] to get an `Option` instead.","links":{"`NaiveDateTime::checked_add_signed`":203},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"AddAssign","id":141,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1479],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"245":{"id":245,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[602,29],"end":[602,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"537":{"id":537,"crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1615,4],"end":[1615,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}}},"829":{"id":829,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[78,15],"end":[78,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[828],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2064":{"id":2064,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1121":{"id":1121,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1413":{"id":1413,"crate_id":0,"name":"and_utc","span":{"filename":"src/naive/datetime/mod.rs","begin":[937,4],"end":[939,5]},"visibility":"public","docs":"Converts the `NaiveDateTime` into the timezone-aware `DateTime<Utc>`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Utc};\nlet dt =\n    NaiveDate::from_ymd_opt(2023, 1, 30).unwrap().and_hms_opt(19, 32, 33).unwrap().and_utc();\nassert_eq!(dt.timezone(), Utc);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"178":{"id":178,"crate_id":0,"name":"add_assign","span":{"filename":"src/datetime/mod.rs","begin":[1519,4],"end":[1524,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"470":{"id":470,"crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[911,4],"end":[913,5]},"visibility":"default","docs":"Convert this `DateTime<FixedOffset>` instance into a `DateTime<Utc>` instance.\n\nConversion is performed via [`DateTime::with_timezone`], accounting for the timezone\ndifference.","links":{"`DateTime::with_timezone`":396},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["src",{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1705":{"id":1705,"crate_id":0,"name":"clone","span":{"filename":"src/naive/mod.rs","begin":[215,9],"end":[215,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"762":{"id":762,"crate_id":0,"name":"Error","span":{"filename":"src/format/mod.rs","begin":[346,4],"end":[346,9]},"visibility":"default","docs":"Issues a formatting error. Used to signal an invalid format string.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1997":{"id":1997,"crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,30],"end":[32,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1996],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1054":{"id":1054,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"111":{"id":111,"crate_id":0,"name":"partial_cmp","span":{"filename":"src/time_delta.rs","begin":[52,46],"end":[52,56]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::option::Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1346":{"id":1346,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"403":{"id":403,"crate_id":0,"name":"checked_sub_months","span":{"filename":"src/datetime/mod.rs","begin":[496,4],"end":[504,5]},"visibility":"public","docs":"Subtracts given `Months` from the current date and time.\n\nUses the last day of the month if the day does not exist in the resulting month.\n\nSee [`NaiveDate::checked_sub_months`] for more details on behavior.\n\n# Errors\n\nReturns `None` if:\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.\n- The resulting UTC datetime would be out of range.\n- The resulting local datetime would be out of range (unless `months` is zero).","links":{"`NaiveDate::checked_sub_months`":402},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["months",{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1638":{"id":1638,"crate_id":0,"name":"default","span":{"filename":"src/naive/time/mod.rs","begin":[1640,4],"end":[1642,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1930":{"id":1930,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"695":{"id":695,"crate_id":0,"name":"week_from_sun","span":{"filename":"src/format/parsed.rs","begin":[1035,4],"end":[1037,5]},"visibility":"public","docs":"Get the `week_from_sun` field if set.\n\nSee also [`set_week_from_sun()`](Parsed::set_week_from_sun).","links":{"Parsed::set_week_from_sun":696},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2222":{"id":2222,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"987":{"id":987,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1279":{"id":1279,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2012,0],"end":[2018,1]},"visibility":"default","docs":"Subtract `Days` from `NaiveDate`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using `NaiveDate::checked_sub_days` to get an `Option` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1277,1278],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"44":{"id":44,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[77,0],"end":[486,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,41,42,43],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1571":{"id":1571,"crate_id":0,"name":"parse_from_str","span":{"filename":"src/naive/time/mod.rs","begin":[553,4],"end":[557,5]},"visibility":"public","docs":"Parses a string with the specified format string and returns a new `NaiveTime`.\nSee the [`format::strftime` module](crate::format::strftime)\non the supported escape sequences.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet parse_from_str = NaiveTime::parse_from_str;\n\nassert_eq!(\n    parse_from_str(\"23:56:04\", \"%H:%M:%S\"),\n    Ok(NaiveTime::from_hms_opt(23, 56, 4).unwrap())\n);\nassert_eq!(\n    parse_from_str(\"pm012345.6789\", \"%p%I%M%S%.f\"),\n    Ok(NaiveTime::from_hms_micro_opt(13, 23, 45, 678_900).unwrap())\n);\n```\n\nDate and offset is ignored for the purpose of parsing.\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert_eq!(\n    parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),\n    Ok(NaiveTime::from_hms_opt(12, 34, 56).unwrap())\n);\n```\n\n[Leap seconds](#leap-second-handling) are correctly handled by\ntreating any time of the form `hh:mm:60` as a leap second.\n(This equally applies to the formatting, so the round trip is possible.)\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert_eq!(\n    parse_from_str(\"08:59:60.123\", \"%H:%M:%S%.f\"),\n    Ok(NaiveTime::from_hms_milli_opt(8, 59, 59, 1_123).unwrap())\n);\n```\n\nMissing seconds are assumed to be zero,\nbut out-of-bound times or insufficient fields are errors otherwise.\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert_eq!(parse_from_str(\"7:15\", \"%H:%M\"), Ok(NaiveTime::from_hms_opt(7, 15, 0).unwrap()));\n\nassert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());\nassert!(parse_from_str(\"12\", \"%H\").is_err());\nassert!(parse_from_str(\"17:60\", \"%H:%M\").is_err());\nassert!(parse_from_str(\"24:00:00\", \"%H:%M:%S\").is_err());\n```\n\nAll parsed fields should be consistent to each other, otherwise it's an error.\nHere `%H` is for 24-hour clocks, unlike `%I`,\nand thus can be independently determined without AM/PM.\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert!(parse_from_str(\"13:07 AM\", \"%H:%M %p\").is_err());\n```","links":{"crate::format::strftime":315},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"336":{"id":336,"crate_id":0,"name":"year","span":{"filename":"src/date.rs","begin":[394,4],"end":[396,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1863":{"id":1863,"crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[77,0],"end":[145,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1858,1859,1860,1861],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"920":{"id":920,"crate_id":0,"name":"TimezoneOffsetDoubleColon","span":{"filename":"src/format/mod.rs","begin":[225,4],"end":[225,29]},"visibility":"default","docs":"Offset from the local time to UTC with seconds (`+09:00:00` or `-04:00:00` or `+00:00:00`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace.\nThe offset is limited from `-24:00:00` to `+24:00:00`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2155":{"id":2155,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[243,27],"end":[243,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1212":{"id":1212,"crate_id":0,"name":"succ","span":{"filename":"src/naive/date/mod.rs","begin":[948,4],"end":[950,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the next calendar date.\n\n# Panics\n\nPanics when `self` is the last representable date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `succ_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `succ_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1504":{"id":1504,"crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[2013,4],"end":[2013,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"269":{"id":269,"crate_id":0,"name":"Weekday","span":{"filename":"src/weekday.rs","begin":[41,0],"end":[56,1]},"visibility":"public","docs":"The day of week.\n\nThe order of the days of week depends on the context.\n(This is why this type does *not* implement `PartialOrd` or `Ord` traits.)\nOne should prefer `*_from_monday` or `*_from_sunday` methods to get the correct result.\n\n# Example\n```\nuse chrono::Weekday;\n\nlet monday = \"Monday\".parse::<Weekday>().unwrap();\nassert_eq!(monday, Weekday::Mon);\n\nlet sunday = Weekday::try_from(6).unwrap();\nassert_eq!(sunday, Weekday::Sun);\n\nassert_eq!(sunday.num_days_from_monday(), 6); // starts counting with Monday = 0\nassert_eq!(sunday.number_from_monday(), 7); // starts counting with Monday = 1\nassert_eq!(sunday.num_days_from_sunday(), 0); // starts counting with Sunday = 0\nassert_eq!(sunday.number_from_sunday(), 1); // starts counting with Sunday = 1\n\nassert_eq!(sunday.succ(), monday);\nassert_eq!(sunday.pred(), Weekday::Sat);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"has_stripped_variants":false,"variants":[1956,1957,1958,1959,1960,1961,1962],"impls":[1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1990,1991,1993,1994,1995,1997,1999,2001,2003,2007,2010]}}},"561":{"id":561,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1757,0],"end":[1762,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[560],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1796":{"id":1796,"crate_id":0,"name":"clone","span":{"filename":"src/offset/local/mod.rs","begin":[113,15],"end":[113,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"853":{"id":853,"crate_id":0,"name":"Hour12","span":{"filename":"src/format/mod.rs","begin":[137,4],"end":[137,10]},"visibility":"default","docs":"Hour number in the 12-hour clocks (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2088":{"id":2088,"crate_id":0,"name":"partial_cmp","span":{"filename":"src/month.rs","begin":[31,50],"end":[31,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::option::Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1145":{"id":1145,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[386,44],"end":[386,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1144],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1437":{"id":1437,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[67,9],"end":[67,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1436],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"202":{"id":202,"crate_id":0,"name":"NaiveTime","span":{"filename":"src/naive/time/mod.rs","begin":[220,0],"end":[223,1]},"visibility":"public","docs":"ISO 8601 time without timezone.\nAllows for the nanosecond precision and optional leap second representation.\n\n# Leap Second Handling\n\nSince 1960s, the manmade atomic clock has been so accurate that\nit is much more accurate than Earth's own motion.\nIt became desirable to define the civil time in terms of the atomic clock,\nbut that risks the desynchronization of the civil time from Earth.\nTo account for this, the designers of the Coordinated Universal Time (UTC)\nmade that the UTC should be kept within 0.9 seconds of the observed Earth-bound time.\nWhen the mean solar day is longer than the ideal (86,400 seconds),\nthe error slowly accumulates and it is necessary to add a **leap second**\nto slow the UTC down a bit.\n(We may also remove a second to speed the UTC up a bit, but it never happened.)\nThe leap second, if any, follows 23:59:59 of June 30 or December 31 in the UTC.\n\nFast forward to the 21st century,\nwe have seen 26 leap seconds from January 1972 to December 2015.\nYes, 26 seconds. Probably you can read this paragraph within 26 seconds.\nBut those 26 seconds, and possibly more in the future, are never predictable,\nand whether to add a leap second or not is known only before 6 months.\nInternet-based clocks (via NTP) do account for known leap seconds,\nbut the system API normally doesn't (and often can't, with no network connection)\nand there is no reliable way to retrieve leap second information.\n\nChrono does not try to accurately implement leap seconds; it is impossible.\nRather, **it allows for leap seconds but behaves as if there are *no other* leap seconds.**\nVarious operations will ignore any possible leap second(s)\nexcept when any of the operands were actually leap seconds.\n\nIf you cannot tolerate this behavior,\nyou must use a separate `TimeZone` for the International Atomic Time (TAI).\nTAI is like UTC but has no leap seconds, and thus slightly differs from UTC.\nChrono does not yet provide such implementation, but it is planned.\n\n## Representing Leap Seconds\n\nThe leap second is indicated via fractional seconds more than 1 second.\nThis makes possible to treat a leap second as the prior non-leap second\nif you don't care about sub-second accuracy.\nYou should use the proper formatting to get the raw leap second.\n\nAll methods accepting fractional seconds will accept such values.\n\n```\nuse chrono::{NaiveDate, NaiveTime};\n\nlet t = NaiveTime::from_hms_milli_opt(8, 59, 59, 1_000).unwrap();\n\nlet dt1 = NaiveDate::from_ymd_opt(2015, 7, 1)\n    .unwrap()\n    .and_hms_micro_opt(8, 59, 59, 1_000_000)\n    .unwrap();\n\nlet dt2 = NaiveDate::from_ymd_opt(2015, 6, 30)\n    .unwrap()\n    .and_hms_nano_opt(23, 59, 59, 1_000_000_000)\n    .unwrap()\n    .and_utc();\n# let _ = (t, dt1, dt2);\n```\n\nNote that the leap second can happen anytime given an appropriate time zone;\n2015-07-01 01:23:60 would be a proper leap second if UTC+01:24 had existed.\nPractically speaking, though, by the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.\n\n## Date And Time Arithmetics\n\nAs a concrete example, let's assume that `03:00:60` and `04:00:60` are leap seconds.\nIn reality, of course, leap seconds are separated by at least 6 months.\nWe will also use some intuitive concise notations for the explanation.\n\n`Time + TimeDelta`\n(short for [`NaiveTime::overflowing_add_signed`](#method.overflowing_add_signed)):\n\n- `03:00:00 + 1s = 03:00:01`.\n- `03:00:59 + 60s = 03:01:59`.\n- `03:00:59 + 61s = 03:02:00`.\n- `03:00:59 + 1s = 03:01:00`.\n- `03:00:60 + 1s = 03:01:00`.\n  Note that the sum is identical to the previous.\n- `03:00:60 + 60s = 03:01:59`.\n- `03:00:60 + 61s = 03:02:00`.\n- `03:00:60.1 + 0.8s = 03:00:60.9`.\n\n`Time - TimeDelta`\n(short for [`NaiveTime::overflowing_sub_signed`](#method.overflowing_sub_signed)):\n\n- `03:00:00 - 1s = 02:59:59`.\n- `03:01:00 - 1s = 03:00:59`.\n- `03:01:00 - 60s = 03:00:00`.\n- `03:00:60 - 60s = 03:00:00`.\n  Note that the result is identical to the previous.\n- `03:00:60.7 - 0.4s = 03:00:60.3`.\n- `03:00:60.7 - 0.9s = 03:00:59.8`.\n\n`Time - Time`\n(short for [`NaiveTime::signed_duration_since`](#method.signed_duration_since)):\n\n- `04:00:00 - 03:00:00 = 3600s`.\n- `03:01:00 - 03:00:00 = 60s`.\n- `03:00:60 - 03:00:00 = 60s`.\n  Note that the difference is identical to the previous.\n- `03:00:60.6 - 03:00:59.4 = 1.2s`.\n- `03:01:00 - 03:00:59.8 = 0.2s`.\n- `03:01:00 - 03:00:60.5 = 0.5s`.\n  Note that the difference is larger than the previous,\n  even though the leap second clearly follows the previous whole second.\n- `04:00:60.9 - 03:00:60.1 =\n  (04:00:60.9 - 04:00:00) + (04:00:00 - 03:01:00) + (03:01:00 - 03:00:60.1) =\n  60.9s + 3540s + 0.9s = 3601.8s`.\n\nIn general,\n\n- `Time + TimeDelta` unconditionally equals to `TimeDelta + Time`.\n\n- `Time - TimeDelta` unconditionally equals to `Time + (-TimeDelta)`.\n\n- `Time1 - Time2` unconditionally equals to `-(Time2 - Time1)`.\n\n- Associativity does not generally hold, because\n  `(Time + TimeDelta1) - TimeDelta2` no longer equals to `Time + (TimeDelta1 - TimeDelta2)`\n  for two positive durations.\n\n    - As a special case, `(Time + TimeDelta) - TimeDelta` also does not equal to `Time`.\n\n    - If you can assume that all durations have the same sign, however,\n      then the associativity holds:\n      `(Time + TimeDelta1) + TimeDelta2` equals to `Time + (TimeDelta1 + TimeDelta2)`\n      for two positive durations.\n\n## Reading And Writing Leap Seconds\n\nThe \"typical\" leap seconds on the minute boundary are\ncorrectly handled both in the formatting and parsing.\nThe leap second in the human-readable representation\nwill be represented as the second part being 60, as required by ISO 8601.\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2015, 6, 30)\n    .unwrap()\n    .and_hms_milli_opt(23, 59, 59, 1_000)\n    .unwrap()\n    .and_utc();\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:59:60Z\");\n```\n\nThere are hypothetical leap seconds not on the minute boundary nevertheless supported by Chrono.\nThey are allowed for the sake of completeness and consistency; there were several \"exotic\" time\nzone offsets with fractional minutes prior to UTC after all.\nFor such cases the human-readable representation is ambiguous and would be read back to the next\nnon-leap second.\n\nA `NaiveTime` with a leap second that is not on a minute boundary can only be created from a\n[`DateTime`](crate::DateTime) with fractional minutes as offset, or using\n[`Timelike::with_nanosecond()`].\n\n```\nuse chrono::{FixedOffset, NaiveDate, TimeZone};\n\nlet paramaribo_pre1945 = FixedOffset::east_opt(-13236).unwrap(); // -03:40:36\nlet leap_sec_2015 =\n    NaiveDate::from_ymd_opt(2015, 6, 30).unwrap().and_hms_milli_opt(23, 59, 59, 1_000).unwrap();\nlet dt1 = paramaribo_pre1945.from_utc_datetime(&leap_sec_2015);\nassert_eq!(format!(\"{:?}\", dt1), \"2015-06-30T20:19:24-03:40:36\");\nassert_eq!(format!(\"{:?}\", dt1.time()), \"20:19:24\");\n\nlet next_sec = NaiveDate::from_ymd_opt(2015, 7, 1).unwrap().and_hms_opt(0, 0, 0).unwrap();\nlet dt2 = paramaribo_pre1945.from_utc_datetime(&next_sec);\nassert_eq!(format!(\"{:?}\", dt2), \"2015-06-30T20:19:24-03:40:36\");\nassert_eq!(format!(\"{:?}\", dt2.time()), \"20:19:24\");\n\nassert!(dt1.time() != dt2.time());\nassert!(dt1.time().to_string() == dt2.time().to_string());\n```\n\nSince Chrono alone cannot determine any existence of leap seconds,\n**there is absolutely no guarantee that the leap second read has actually happened**.","links":{"crate::DateTime":174,"`Timelike::with_nanosecond()`":1560},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[],"where_predicates":[]},"impls":[1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,1595,1596,1598,1599,1601,1603,1605,1606,1608,1611,215,217,1614,1616,1619,220,222,1622,1624,1627,1630,1632,1634,1637,1639]}}},"494":{"id":494,"crate_id":0,"name":"with_day","span":{"filename":"src/datetime/mod.rs","begin":[1276,4],"end":[1278,5]},"visibility":"default","docs":"Makes a new `DateTime` with the day of month (starting from 1) changed.\n\nSee also the [`NaiveDate::with_day`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (for example `day(31)` in April).\n- The value for `day` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_day`":493},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1729":{"id":1729,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2021":{"id":2021,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"786":{"id":786,"crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"I"}}}},"1078":{"id":1078,"crate_id":0,"name":"OwnedLiteral","span":{"filename":"src/format/mod.rs","begin":[334,4],"end":[334,26]},"visibility":"default","docs":"Same as `Literal` but with the string owned by the item.","links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[1076]},"discriminant":null}}},"1370":{"id":1370,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2166,58],"end":[2166,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"135":{"id":135,"crate_id":0,"name":"Output","span":{"filename":"src/time_delta.rs","begin":[510,4],"end":[510,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1662":{"id":1662,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"427":{"id":427,"crate_id":0,"name":"UNIX_EPOCH","span":{"filename":"src/datetime/mod.rs","begin":[861,4],"end":[861,91]},"visibility":"public","docs":"The Unix Epoch, 1970-01-01 00:00:00 UTC.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"value":"_"}}},"1954":{"id":1954,"crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[299,0],"end":[304,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","description","cause","provide"],"trait":{"path":"Error","id":253,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1953],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"719":{"id":719,"crate_id":0,"name":"set_timestamp","span":{"filename":"src/format/parsed.rs","begin":[529,4],"end":[531,5]},"visibility":"public","docs":"Set the [`timestamp`](Parsed::timestamp) field to the given value.\n\nA Unix timestamp is defined as the number of non-leap seconds since midnight UTC on\nJanuary 1, 1970.\n\n# Errors\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"Parsed::timestamp":718},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1011":{"id":1011,"crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[283,44],"end":[283,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2246":{"id":2246,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[664,39],"end":[664,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1303":{"id":1303,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"360":{"id":360,"crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[478,0],"end":[482,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["lt","le","gt","ge"],"trait":{"path":"PartialOrd","id":114,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[359],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1595":{"id":1595,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"ToString","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[92],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"652":{"id":652,"crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[458,33],"end":[458,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[651],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1887":{"id":1887,"crate_id":0,"name":"clone","span":{"filename":"src/offset/mod.rs","begin":[58,9],"end":[58,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"944":{"id":944,"crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[174,9],"end":[174,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2179":{"id":2179,"crate_id":0,"name":"minute","span":{"filename":"src/traits.rs","begin":[284,4],"end":[284,28]},"visibility":"default","docs":"Returns the minute number from 0 to 59.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"1236":{"id":1236,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"293":{"id":293,"crate_id":0,"name":"and_hms_micro_opt","span":{"filename":"src/date.rs","begin":[161,4],"end":[169,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute, second and/or microsecond.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1528":{"id":1528,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1820":{"id":1820,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"585":{"id":585,"crate_id":0,"name":"DurationRound","span":{"filename":"src/round.rs","begin":[106,0],"end":[156,1]},"visibility":"public","docs":"Extension trait for rounding or truncating a DateTime by a TimeDelta.\n\n# Limitations\nBoth rounding and truncating are done via [`TimeDelta::num_nanoseconds`] and\n[`DateTime::timestamp_nanos_opt`]. This means that they will fail if either the\n`TimeDelta` or the `DateTime` are too big to represented as nanoseconds. They\nwill also fail if the `TimeDelta` is bigger than the timestamp, negative or zero.","links":{"`TimeDelta::num_nanoseconds`":27,"`DateTime::timestamp_nanos_opt`":390},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_dyn_compatible":false,"items":[1920,1921,1922],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[587,1519]}}},"2112":{"id":2112,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"877":{"id":877,"crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[102,9],"end":[102,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1169":{"id":1169,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1461":{"id":1461,"crate_id":0,"name":"with_day0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1274,4],"end":[1276,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of month (starting from 0) changed.\n\nSee also the [`NaiveDate::with_day0`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (for example `day(30)` in April).\n- The value for `day0` is invalid.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(\n    dt.with_day0(29),\n    Some(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().and_hms_opt(12, 34, 56).unwrap())\n);\nassert_eq!(dt.with_day0(30), None); // no September 31\n```","links":{"`NaiveDate::with_day0`":495},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["day0",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"226":{"id":226,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1753":{"id":1753,"crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[22,36],"end":[22,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1752],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"518":{"id":518,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1420,0],"end":[1424,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[517],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"810":{"id":810,"crate_id":0,"name":"Space","span":{"filename":"src/format/mod.rs","begin":[85,4],"end":[85,9]},"visibility":"default","docs":"Space padding.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2045":{"id":2045,"crate_id":0,"name":"May","span":{"filename":"src/month.rs","begin":[50,4],"end":[50,11]},"visibility":"default","docs":"May","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"4","value":"4"}}}},"1102":{"id":1102,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1394":{"id":1394,"crate_id":0,"name":"date","span":{"filename":"src/naive/datetime/mod.rs","begin":[330,4],"end":[332,5]},"visibility":"public","docs":"Retrieves a date component.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(9, 10, 11).unwrap();\nassert_eq!(dt.date(), NaiveDate::from_ymd_opt(2016, 7, 8).unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"159":{"id":159,"crate_id":0,"name":"fmt","span":{"filename":"src/time_delta.rs","begin":[563,4],"end":[593,5]},"visibility":"default","docs":"Format a `TimeDelta` using the [ISO 8601] format\n\n[ISO 8601]: https://en.wikipedia.org/wiki/ISO_8601#Durations","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"451":{"id":451,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1686":{"id":1686,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[32,39],"end":[32,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1685],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"743":{"id":743,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1978":{"id":1978,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1035":{"id":1035,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[296,9],"end":[296,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1034],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"92":{"id":92,"crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"String","id":93,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1327":{"id":1327,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2130,58],"end":[2130,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"384":{"id":384,"crate_id":0,"name":"from_timestamp","span":{"filename":"src/datetime/mod.rs","begin":[747,4],"end":[756,5]},"visibility":"public","docs":"Makes a new `DateTime<Utc>` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nThis is guaranteed to round-trip with regard to [`timestamp`](DateTime::timestamp) and\n[`timestamp_subsec_nanos`](DateTime::timestamp_subsec_nanos).\n\nIf you need to create a `DateTime` with a [`TimeZone`] different from [`Utc`], use\n[`TimeZone::timestamp_opt`] or [`DateTime::with_timezone`].\n\nThe nanosecond part can exceed 1,000,000,000 in order to represent a\n[leap second](NaiveTime#leap-second-handling), but only when `secs % 60 == 59`.\n(The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)\n\n# Errors\n\nReturns `None` on out-of-range number of seconds and/or\ninvalid nanosecond, otherwise returns `Some(DateTime {...})`.\n\n# Example\n\n```\nuse chrono::DateTime;\n\nlet dt = DateTime::from_timestamp(1431648000, 0).expect(\"invalid timestamp\");\n\nassert_eq!(dt.to_string(), \"2015-05-15 00:00:00 UTC\");\nassert_eq!(DateTime::from_timestamp(dt.timestamp(), dt.timestamp_subsec_nanos()).unwrap(), dt);\n```","links":{"DateTime::timestamp_subsec_nanos":393,"NaiveTime#leap-second-handling":202,"`Utc`":273,"`TimeZone::timestamp_opt`":385,"DateTime::timestamp":386,"`DateTime::with_timezone`":396,"`TimeZone`":165},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["secs",{"primitive":"i64"}],["nsecs",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1619":{"id":1619,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1259,0],"end":[1266,1]},"visibility":"default","docs":"Add `FixedOffset` to `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the addition ignores integral number of days.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1617,1618],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1911":{"id":1911,"crate_id":0,"name":"from_local_date","span":{"filename":"src/offset/mod.rs","begin":[558,4],"end":[563,5]},"visibility":"default","docs":"Converts the local `NaiveDate` to the timezone-aware `Date` if possible.","links":{},"attrs":["#[allow(clippy::wrong_self_convention)]","#[deprecated(since = \"0.4.23\", note = \"use `from_local_datetime()` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["local",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2203":{"id":2203,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[563,16],"end":[563,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"naive::IsoWeek","name":"IsoWeek","id":345,"is_glob":false}}},"968":{"id":968,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1260":{"id":1260,"crate_id":0,"name":"month0","span":{"filename":"src/naive/date/mod.rs","begin":[1490,4],"end":[1492,5]},"visibility":"default","docs":"Returns the month number starting from 0.\n\nThe return value ranges from 0 to 11.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().month0(), 8);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().month0(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"25":{"id":25,"crate_id":0,"name":"num_milliseconds","span":{"filename":"src/time_delta.rs","begin":[323,4],"end":[330,5]},"visibility":"public","docs":"Returns the total number of whole milliseconds in the `TimeDelta`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1552":{"id":1552,"crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,47],"end":[19,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1551],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"317":{"id":317,"crate_id":0,"name":"StrftimeItems","span":{"filename":"src/format/strftime.rs","begin":[191,0],"end":[201,1]},"visibility":"public","docs":"Parsing iterator for `strftime`-like format strings.\n\nSee the [`format::strftime` module](crate::format::strftime) for supported formatting\nspecifiers.\n\n`StrftimeItems` is used in combination with more low-level methods such as [`format::parse()`]\nor [`format_with_items`].\n\nIf formatting or parsing date and time values is not performance-critical, the methods\n[`parse_from_str`] and [`format`] on types such as [`DateTime`](crate::DateTime) are easier to\nuse.\n\n[`format`]: crate::DateTime::format\n[`format_with_items`]: crate::DateTime::format\n[`parse_from_str`]: crate::DateTime::parse_from_str\n[`DateTime`]: crate::DateTime\n[`format::parse()`]: crate::format::parse()","links":{"crate::DateTime":174,"crate::format::parse()":678,"crate::format::strftime":315,"crate::DateTime::parse_from_str":432,"crate::DateTime::format":437},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":[770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,788,790,792,794,797]}}},"1844":{"id":1844,"crate_id":0,"name":"fmt","span":{"filename":"src/offset/utc.rs","begin":[143,4],"end":[145,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"609":{"id":609,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"901":{"id":901,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2136":{"id":2136,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1193":{"id":1193,"crate_id":0,"name":"from_isoywd","span":{"filename":"src/naive/date/mod.rs","begin":[260,4],"end":[262,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ISO week date](#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.\n\n# Panics\n\nPanics if the specified week does not exist in that year, on invalid values for `week`, or\nif the resulting date is out of range for `NaiveDate`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_isoywd_opt()` instead\")]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_isoywd_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["year",{"primitive":"i32"}],["week",{"primitive":"u32"}],["weekday",{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"250":{"id":250,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[605,0],"end":[609,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[249],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1485":{"id":1485,"crate_id":0,"name":"add","span":{"filename":"src/naive/datetime/mod.rs","begin":[1753,4],"end":[1755,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":134,"args":null}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"542":{"id":542,"crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1672,4],"end":[1672,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}}},"1777":{"id":1777,"crate_id":0,"name":"now","span":{"filename":"src/offset/utc.rs","begin":[95,4],"end":[99,5]},"visibility":"public","docs":"Returns a `DateTime<Utc>` which corresponds to the current date and time in UTC.\n\nSee also the similar [`Local::now()`] which returns `DateTime<Local>`, i.e. the local date\nand time including offset from UTC.\n\n[`Local::now()`]: crate::Local::now\n\n# Example\n\n```\n# #![allow(unused_variables)]\n# use chrono::{FixedOffset, Utc};\n// Current time in UTC\nlet now_utc = Utc::now();\n\n// Current date in UTC\nlet today_utc = now_utc.date_naive();\n\n// Current time in some timezone (let's use +05:00)\nlet offset = FixedOffset::east_opt(5 * 60 * 60).unwrap();\nlet now_with_offset = Utc::now().with_timezone(&offset);\n```","links":{"crate::Local::now":1778},"attrs":["#[cfg(not(all(target_arch = \"wasm32\", feature = \"wasmbind\",\nnot(any(target_os = \"emscripten\", target_os = \"wasi\")))))]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"834":{"id":834,"crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[78,37],"end":[78,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2069":{"id":2069,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1126":{"id":1126,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"183":{"id":183,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1595,0],"end":[1602,1]},"visibility":"default","docs":"Subtract `TimeDelta` from `DateTime`.\n\nThis is the same as the addition with a negated `TimeDelta`.\n\nAs a part of Chrono's [leap second handling] the subtraction assumes that **there is no leap\nsecond ever**, except when the `DateTime` itself represents a leap second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`DateTime<Tz>::checked_sub_signed`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_sub_signed`":182},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[180,181],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1418":{"id":1418,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1710":{"id":1710,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[215,29],"end":[215,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"475":{"id":475,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[930,0],"end":[938,1]},"visibility":"default","docs":"Convert a `DateTime<Local>` instance into a `DateTime<Utc>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::offset::Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"items":[474],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2002":{"id":2002,"crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[173,4],"end":[183,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"767":{"id":767,"crate_id":0,"name":"parse","span":{"filename":"src/format/strftime.rs","begin":[335,4],"end":[342,5]},"visibility":"public","docs":"Parse format string into a `Vec` of formatting [`Item`]'s.\n\nIf you need to format or parse multiple values with the same format string, it is more\nefficient to convert it to a `Vec` of formatting [`Item`]'s than to re-parse the format\nstring on every use.\n\nThe `format_with_items` methods on [`DateTime`], [`NaiveDateTime`], [`NaiveDate`] and\n[`NaiveTime`] accept the result for formatting. [`format::parse()`] can make use of it for\nparsing.\n\n[`DateTime`]: crate::DateTime::format_with_items\n[`NaiveDateTime`]: crate::NaiveDateTime::format_with_items\n[`NaiveDate`]: crate::NaiveDate::format_with_items\n[`NaiveTime`]: crate::NaiveTime::format_with_items\n[`format::parse()`]: crate::format::parse()\n\n# Errors\n\nReturns an error if the format string contains an invalid or unrecognized formatting\nspecifier.\n\n# Example\n\n```\nuse chrono::format::{parse, Parsed, StrftimeItems};\nuse chrono::NaiveDate;\n\nlet fmt_items = StrftimeItems::new(\"%e %b %Y %k.%M\").parse()?;\nlet datetime = NaiveDate::from_ymd_opt(2023, 7, 11).unwrap().and_hms_opt(9, 0, 0).unwrap();\n\n// Formatting\nassert_eq!(\n    datetime.format_with_items(fmt_items.as_slice().iter()).to_string(),\n    \"11 Jul 2023  9.00\"\n);\n\n// Parsing\nlet mut parsed = Parsed::new();\nparse(&mut parsed, \"11 Jul 2023  9.00\", fmt_items.as_slice().iter())?;\nlet parsed_dt = parsed.to_naive_datetime_with_offset(0)?;\nassert_eq!(parsed_dt, datetime);\n# Ok::<(), chrono::ParseError>(())\n```","links":{"crate::NaiveDateTime::format_with_items":764,"crate::NaiveDate::format_with_items":765,"crate::NaiveTime::format_with_items":766,"crate::format::parse()":678,"crate::DateTime::format_with_items":436,"`Item`":314},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"Result","id":39,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Vec","id":768,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}}}},{"type":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1059":{"id":1059,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1351":{"id":1351,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"116":{"id":116,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[52,58],"end":[52,61]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"path":"Ord","id":117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[115],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1643":{"id":1643,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[18,55],"end":[18,77]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"self::date::NaiveDateWeeksIterator","name":"NaiveDateWeeksIterator","id":1222,"is_glob":false}}},"408":{"id":408,"crate_id":0,"name":"naive_utc","span":{"filename":"src/datetime/mod.rs","begin":[563,4],"end":[565,5]},"visibility":"public","docs":"Returns a view to the naive UTC datetime.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"700":{"id":700,"crate_id":0,"name":"set_isoweek","span":{"filename":"src/format/parsed.rs","begin":[370,4],"end":[375,5]},"visibility":"public","docs":"Set the [`isoweek`](Parsed::isoweek) field for an [ISO 8601 week date] to the given value.\n\n[ISO 8601 week date]: crate::NaiveDate#week-date\n\n# Errors\n\nReturns `OUT_OF_RANGE` if `value` is not in the range 1-53.\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"crate::NaiveDate#week-date":187,"Parsed::isoweek":699},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1935":{"id":1935,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"992":{"id":992,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2227":{"id":2227,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1284":{"id":1284,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2123,0],"end":[2127,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1283],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"49":{"id":49,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"341":{"id":341,"crate_id":0,"name":"ordinal","span":{"filename":"src/date.rs","begin":[414,4],"end":[416,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1576":{"id":1576,"crate_id":0,"name":"format","span":{"filename":"src/naive/time/mod.rs","begin":[869,4],"end":[871,5]},"visibility":"public","docs":"Formats the time with the specified format string.\nSee the [`format::strftime` module](crate::format::strftime)\non the supported escape sequences.\n\nThis returns a `DelayedFormat`,\nwhich gets converted to a string only when actual formatting happens.\nYou may use the `to_string` method to get a `String`,\nor just feed it into `print!` and other formatting macros.\n(In this way it avoids the redundant memory allocation.)\n\nA wrong format string does *not* issue an error immediately.\nRather, converting or formatting the `DelayedFormat` fails.\nYou are recommended to immediately use `DelayedFormat` for this reason.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet t = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(t.format(\"%H:%M:%S\").to_string(), \"23:56:04\");\nassert_eq!(t.format(\"%H:%M:%S%.6f\").to_string(), \"23:56:04.012345\");\nassert_eq!(t.format(\"%-I:%M %p\").to_string(), \"11:56 PM\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveTime;\n# let t = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(format!(\"{}\", t.format(\"%H:%M:%S\")), \"23:56:04\");\nassert_eq!(format!(\"{}\", t.format(\"%H:%M:%S%.6f\")), \"23:56:04.012345\");\nassert_eq!(format!(\"{}\", t.format(\"%-I:%M %p\")), \"11:56 PM\");\n```","links":{"crate::format::strftime":315},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"633":{"id":633,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1868":{"id":1868,"crate_id":0,"name":"and_hms_nano_opt","span":{"filename":"src/offset/mod.rs","begin":[230,4],"end":[243,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2160":{"id":2160,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[257,0],"end":[261,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2159],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"925":{"id":925,"crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[254,13],"end":[254,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}},"1217":{"id":1217,"crate_id":0,"name":"years_since","span":{"filename":"src/naive/date/mod.rs","begin":[1141,4],"end":[1153,5]},"visibility":"public","docs":"Returns the number of whole years from the given `base` until `self`.\n\n# Errors\n\nReturns `None` if `base > self`.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["base",{"generic":"Self"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"274":{"id":274,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[536,33],"end":[536,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::Utc","name":"Utc","id":273,"is_glob":false}}},"1509":{"id":1509,"crate_id":0,"name":"fmt","span":{"filename":"src/naive/datetime/mod.rs","begin":[2083,4],"end":[2087,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1801":{"id":1801,"crate_id":0,"name":"from_offset","span":{"filename":"src/offset/local/mod.rs","begin":[168,4],"end":[170,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["_offset",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"566":{"id":566,"crate_id":0,"name":"from_str","span":{"filename":"src/datetime/mod.rs","begin":[1816,4],"end":[1818,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2093":{"id":2093,"crate_id":0,"name":"try_from","span":{"filename":"src/month.rs","begin":[169,4],"end":[185,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["value",{"primitive":"u8"}]],"output":{"resolved_path":{"path":"Result","id":39,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":75,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"858":{"id":858,"crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[154,13],"end":[154,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}},"1150":{"id":1150,"crate_id":0,"name":"OutOfRange","span":{"filename":"src/format/mod.rs","begin":[401,4],"end":[401,14]},"visibility":"default","docs":"Given field is out of permitted range.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1442":{"id":1442,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[67,30],"end":[67,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","gt","ge"],"trait":{"path":"PartialOrd","id":114,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1441],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"207":{"id":207,"crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1815,4],"end":[1815,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1734":{"id":1734,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"499":{"id":499,"crate_id":0,"name":"with_ordinal0","span":{"filename":"src/naive/date/mod.rs","begin":[1863,4],"end":[1866,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of year (starting from 0) changed.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (`with_ordinal0(365)` in a non-leap year).\n- The value for `ordinal0` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().with_ordinal0(59),\n           Some(NaiveDate::from_ymd_opt(2015, 3, 1).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().with_ordinal0(365),\n           None); // 2015 had only 365 days\n\nassert_eq!(NaiveDate::from_ymd_opt(2016, 1, 1).unwrap().with_ordinal0(59),\n           Some(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2016, 1, 1).unwrap().with_ordinal0(365),\n           Some(NaiveDate::from_ymd_opt(2016, 12, 31).unwrap()));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["ordinal0",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"791":{"id":791,"crate_id":0,"name":"clone","span":{"filename":"src/format/strftime.rs","begin":[190,9],"end":[190,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2026":{"id":2026,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1083":{"id":1083,"crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[342,12],"end":[342,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}},"1375":{"id":1375,"crate_id":0,"name":"size_hint","span":{"filename":"src/naive/date/mod.rs","begin":[2180,4],"end":[2183,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"140":{"id":140,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[517,0],"end":[522,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"AddAssign","id":141,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[139],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"432":{"id":432,"crate_id":0,"name":"parse_from_str","span":{"filename":"src/datetime/mod.rs","begin":[1052,4],"end":[1056,5]},"visibility":"public","docs":"Parses a string from a user-specified format into a `DateTime<FixedOffset>` value.\n\nNote that this method *requires a timezone* in the input string. See\n[`NaiveDateTime::parse_from_str`](./naive/struct.NaiveDateTime.html#method.parse_from_str)\nfor a version that does not require a timezone in the to-be-parsed str. The returned\n[`DateTime`] value will have a [`FixedOffset`] reflecting the parsed timezone.\n\nSee the [`format::strftime` module](crate::format::strftime) for supported format\nsequences.\n\n# Example\n\n```rust\nuse chrono::{DateTime, FixedOffset, NaiveDate, TimeZone};\n\nlet dt = DateTime::parse_from_str(\"1983 Apr 13 12:09:14.274 +0000\", \"%Y %b %d %H:%M:%S%.3f %z\");\nassert_eq!(\n    dt,\n    Ok(FixedOffset::east_opt(0)\n        .unwrap()\n        .from_local_datetime(\n            &NaiveDate::from_ymd_opt(1983, 4, 13)\n                .unwrap()\n                .and_hms_milli_opt(12, 9, 14, 274)\n                .unwrap()\n        )\n        .unwrap())\n);\n```","links":{"`DateTime`":174,"`FixedOffset`":271,"crate::format::strftime":315},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1667":{"id":1667,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"724":{"id":724,"crate_id":0,"name":"to_naive_datetime_with_offset","span":{"filename":"src/format/parsed.rs","begin":[782,4],"end":[851,5]},"visibility":"public","docs":"Returns a parsed naive date and time out of given fields, except for the offset field.\n\nThe offset is assumed to have a given value. It is not compared against the offset field set\nin the `Parsed` type, so it is allowed to be inconsistent.\n\nThis method is able to determine the combined date and time from date and time fields or\nfrom a single timestamp field. It checks all fields are consistent with each other.\n\n# Errors\n\nThis method returns:\n- `IMPOSSIBLE`  if any of the date fields conflict, or if a timestamp conflicts with any of\n  the other fields.\n- `NOT_ENOUGH` if there are not enough fields set in `Parsed` for a complete datetime.\n- `OUT_OF_RANGE`\n  - if any of the date or time fields of `Parsed` are set to a value beyond their acceptable\n    range.\n  - if the value would be outside the range of a [`NaiveDateTime`].\n  - if the date does not exist.","links":{"`NaiveDateTime`":200},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["offset",{"primitive":"i32"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1959":{"id":1959,"crate_id":0,"name":"Thu","span":{"filename":"src/weekday.rs","begin":[49,4],"end":[49,11]},"visibility":"default","docs":"Thursday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"3","value":"3"}}}},"2251":{"id":2251,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[688,0],"end":[688,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","description","cause","provide"],"trait":{"path":"Error","id":253,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1016":{"id":1016,"crate_id":0,"name":"OptionalMinutes","span":{"filename":"src/format/mod.rs","begin":[309,4],"end":[309,19]},"visibility":"default","docs":"Format offset from UTC as hours, and optionally with minutes.\nAny seconds will be rounded to the nearest minute.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"73":{"id":73,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1308":{"id":1308,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"365":{"id":365,"crate_id":0,"name":"Output","span":{"filename":"src/date.rs","begin":[529,4],"end":[529,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1600":{"id":1600,"crate_id":0,"name":"hash","span":{"filename":"src/naive/time/mod.rs","begin":[212,24],"end":[212,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1892":{"id":1892,"crate_id":0,"name":"fmt","span":{"filename":"src/offset/mod.rs","begin":[58,27],"end":[58,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2184":{"id":2184,"crate_id":0,"name":"with_second","span":{"filename":"src/traits.rs","begin":[309,4],"end":[309,52]},"visibility":"default","docs":"Makes a new value with the second number changed.\n\nReturns `None` when the resulting value would be invalid.\nAs with the [`second`](#tymethod.second) method,\nthe input range is restricted to 0 through 59.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"949":{"id":949,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[174,27],"end":[174,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1241":{"id":1241,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"6":{"id":6,"crate_id":0,"name":"try_weeks","span":{"filename":"src/time_delta.rs","begin":[118,4],"end":[120,5]},"visibility":"public","docs":"Makes a new `TimeDelta` with the given number of weeks.\n\nEquivalent to `TimeDelta::try_seconds(weeks * 7 * 24 * 60 * 60)` with\noverflow checks.\n\n# Errors\n\nReturns `None` when the `TimeDelta` would be out of bounds.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["weeks",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1533":{"id":1533,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"298":{"id":298,"crate_id":0,"name":"pred","span":{"filename":"src/date.rs","begin":[225,4],"end":[227,5]},"visibility":"public","docs":"Makes a new `Date` for the prior date.\n\nPanics when `self` is the first representable date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use pred_opt() instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use pred_opt() instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1825":{"id":1825,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"ToString","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[92],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"882":{"id":882,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[102,27],"end":[102,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2117":{"id":2117,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1174":{"id":1174,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[398,9],"end":[398,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1173],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"231":{"id":231,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1466":{"id":1466,"crate_id":0,"name":"hour","span":{"filename":"src/naive/datetime/mod.rs","begin":[1372,4],"end":[1374,5]},"visibility":"default","docs":"Returns the hour number from 0 to 23.\n\nSee also the [`NaiveTime::hour`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.hour(), 12);\n```","links":{"`NaiveTime::hour`":1465},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"523":{"id":523,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1455,0],"end":[1459,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"path":"Ord","id":117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[522],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1758":{"id":1758,"crate_id":0,"name":"from_offset","span":{"filename":"src/offset/fixed.rs","begin":[130,4],"end":[132,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["offset",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"815":{"id":815,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2050":{"id":2050,"crate_id":0,"name":"October","span":{"filename":"src/month.rs","begin":[60,4],"end":[60,15]},"visibility":"default","docs":"October","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"9","value":"9"}}}},"1107":{"id":1107,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[328,16],"end":[328,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"164":{"id":164,"crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[496,0],"end":[503,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[161,163],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1399":{"id":1399,"crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/naive/datetime/mod.rs","begin":[398,4],"end":[400,5]},"visibility":"public","docs":"Returns the number of non-leap *nanoseconds* since midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\n# Panics\n\nAn `i64` with nanosecond precision can span a range of ~584 years. This function panics on\nan out of range `NaiveDateTime`.\n\nThe dates that can be represented as nanoseconds are between 1677-09-21T00:12:43.145224192\nand 2262-04-11T23:47:16.854775807.","links":{},"attrs":["#[deprecated(since = \"0.4.31\", note =\n\"use `.and_utc().timestamp_nanos_opt()` instead\")]","#[inline]","#[must_use]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.31","note":"use `.and_utc().timestamp_nanos_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1691":{"id":1691,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"456":{"id":456,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1983":{"id":1983,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"748":{"id":748,"crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[128,16],"end":[128,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[747],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1040":{"id":1040,"crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[296,29],"end":[296,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1332":{"id":1332,"crate_id":0,"name":"size_hint","span":{"filename":"src/naive/date/mod.rs","begin":[2146,4],"end":[2149,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"97":{"id":97,"crate_id":0,"name":"clone","span":{"filename":"src/time_delta.rs","begin":[52,9],"end":[52,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1624":{"id":1624,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1370,0],"end":[1375,1]},"visibility":"default","docs":"Subtract-assign `std::time::Duration` from `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the subtraction ignores integral number of days.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"SubAssign","id":144,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1623],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"389":{"id":389,"crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/datetime/mod.rs","begin":[278,4],"end":[283,5]},"visibility":"public","docs":"Returns the number of non-leap-nanoseconds since January 1, 1970 UTC.\n\n# Panics\n\nAn `i64` with nanosecond precision can span a range of ~584 years. This function panics on\nan out of range `DateTime`.\n\nThe dates that can be represented as nanoseconds are between 1677-09-21T00:12:43.145224192\nand 2262-04-11T23:47:16.854775807.","links":{},"attrs":["#[deprecated(since = \"0.4.31\", note = \"use `timestamp_nanos_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.31","note":"use `timestamp_nanos_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"681":{"id":681,"crate_id":0,"name":"year","span":{"filename":"src/format/parsed.rs","begin":[973,4],"end":[975,5]},"visibility":"public","docs":"Get the `year` field if set.\n\nSee also [`set_year()`](Parsed::set_year).","links":{"Parsed::set_year":684},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1916":{"id":1916,"crate_id":0,"name":"offset","span":{"filename":"src/offset/mod.rs","begin":[4,0],"end":[695,1]},"visibility":"public","docs":"The time zone, which calculates offsets from the local time to UTC.\n\nThere are four operations provided by the `TimeZone` trait:\n\n1. Converting the local `NaiveDateTime` to `DateTime<Tz>`\n2. Converting the UTC `NaiveDateTime` to `DateTime<Tz>`\n3. Converting `DateTime<Tz>` to the local `NaiveDateTime`\n4. Constructing `DateTime<Tz>` objects from various offsets\n\n1 is used for constructors. 2 is used for the `with_timezone` method of date and time types.\n3 is used for other methods, e.g. `year()` or `format()`, and provided by an associated type\nwhich implements `Offset` (which then passed to `TimeZone` for actual implementations).\nTechnically speaking `TimeZone` has a total knowledge about given timescale,\nbut `Offset` is used as a cache to avoid the repeated conversion\nand provides implementations for 1 and 3.\nAn `TimeZone` instance can be reconstructed from the corresponding `Offset` instance.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[1849,1850,1851,1412,417,278,165],"is_stripped":false}}},"973":{"id":973,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[258,16],"end":[258,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[972],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2208":{"id":2208,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[573,30],"end":[573,36]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"inner":{"use":{"source":"offset::Offset","name":"Offset","id":278,"is_glob":false}}},"1265":{"id":1265,"crate_id":0,"name":"weekday","span":{"filename":"src/naive/date/mod.rs","begin":[1618,4],"end":[1620,5]},"visibility":"default","docs":"Returns the day of week.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, Weekday};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().weekday(), Weekday::Tue);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().weekday(), Weekday::Fri);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"30":{"id":30,"crate_id":0,"name":"checked_mul","span":{"filename":"src/time_delta.rs","begin":[378,4],"end":[388,5]},"visibility":"public","docs":"Multiply a `TimeDelta` with a i32, returning `None` if overflow occurred.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["rhs",{"primitive":"i32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"322":{"id":322,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"614":{"id":614,"crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[33,9],"end":[33,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::fmt::Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"items":[613],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1849":{"id":1849,"crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[30,0],"end":[30,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"self::fixed::FixedOffset","name":"FixedOffset","id":271,"is_glob":false}}},"2141":{"id":2141,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"906":{"id":906,"crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[158,20],"end":[158,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1198":{"id":1198,"crate_id":0,"name":"from_weekday_of_month_opt","span":{"filename":"src/naive/date/mod.rs","begin":[431,4],"end":[444,5]},"visibility":"public","docs":"Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\nsince the beginning of the given month. For instance, if you want the 2nd Friday of March\n2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.\n\n`n` is 1-indexed.\n\n# Errors\n\nReturns `None` if:\n- The specified day does not exist in that month (for example the 5th Monday of Apr. 2023).\n- The value for `month` or `n` is invalid.\n- `year` is out of range for `NaiveDate`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Weekday};\nassert_eq!(\n    NaiveDate::from_weekday_of_month_opt(2017, 3, Weekday::Fri, 2),\n    NaiveDate::from_ymd_opt(2017, 3, 10)\n)\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["weekday",{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}],["n",{"primitive":"u8"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"255":{"id":255,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[528,4],"end":[528,24]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"use":{"source":"crate::Date","name":"Date","id":162,"is_glob":false}}},"1490":{"id":1490,"crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/datetime/mod.rs","begin":[1875,4],"end":[1877,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1782":{"id":1782,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"547":{"id":547,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1695,0],"end":[1701,1]},"visibility":"default","docs":"Subtract `Months` from `DateTime`.\n\nThe result will be clamped to valid days in the resulting month, see\n[`DateTime<Tz>::checked_sub_months`] for details.\n\n# Panics\n\nPanics if:\n- The resulting date would be out of range.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.\n\nStrongly consider using [`DateTime<Tz>::checked_sub_months`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_sub_months`":403},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[545,546],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2074":{"id":2074,"crate_id":0,"name":"ParseMonthError","span":{"filename":"src/month.rs","begin":[244,0],"end":[246,1]},"visibility":"public","docs":"An error resulting from reading `<Month>` value with `FromStr`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[],"where_predicates":[]},"impls":[2134,2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2147,2148,2149,2151,2152,2154,2155,2156,2158,2160]}}},"839":{"id":839,"crate_id":0,"name":"YearDiv100","span":{"filename":"src/format/mod.rs","begin":[108,4],"end":[108,14]},"visibility":"default","docs":"Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1131":{"id":1131,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1423":{"id":1423,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"188":{"id":188,"crate_id":0,"name":"add","span":{"filename":"src/naive/date/mod.rs","begin":[1910,4],"end":[1912,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1715":{"id":1715,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[215,39],"end":[215,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1714],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"480":{"id":480,"crate_id":0,"name":"month0","span":{"filename":"src/datetime/mod.rs","begin":[1182,4],"end":[1184,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"772":{"id":772,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2007":{"id":2007,"crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[189,0],"end":[204,1]},"visibility":"default","docs":"Any weekday can be represented as an integer from 0 to 6, which equals to\n[`Weekday::num_days_from_monday`](#method.num_days_from_monday) in this implementation.\nDo not heavily depend on this though; use explicit methods whenever possible.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2004,2006],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1064":{"id":1064,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[317,9],"end":[317,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1063],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"121":{"id":121,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[52,63],"end":[52,68]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[118],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1356":{"id":1356,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":154,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":789,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[785,786,787],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"413":{"id":413,"crate_id":0,"name":"TimezoneOffsetColonZ","span":{"filename":"src/format/mod.rs","begin":[238,4],"end":[238,24]},"visibility":"default","docs":"Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace,\nand `Z` can be either in upper case or in lower case.\nThe offset is limited from `-24:00` to `+24:00`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1648":{"id":1648,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[22,54],"end":[22,66]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"use":{"source":"self::datetime::MIN_DATETIME","name":"MIN_DATETIME","id":1382,"is_glob":false}}},"705":{"id":705,"crate_id":0,"name":"day","span":{"filename":"src/format/parsed.rs","begin":[1077,4],"end":[1079,5]},"visibility":"public","docs":"Get the `day` of the month field if set.\n\nSee also [`set_day()`](Parsed::set_day).","links":{"Parsed::set_day":706},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1940":{"id":1940,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2232":{"id":2232,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"997":{"id":997,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1289":{"id":1289,"crate_id":0,"name":"Err","span":{"filename":"src/naive/date/mod.rs","begin":[2286,4],"end":[2286,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1581":{"id":1581,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"346":{"id":346,"crate_id":0,"name":"with_year","span":{"filename":"src/date.rs","begin":[431,4],"end":[433,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1873":{"id":1873,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"638":{"id":638,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2165":{"id":2165,"crate_id":0,"name":"day","span":{"filename":"src/traits.rs","begin":[60,4],"end":[60,25]},"visibility":"default","docs":"Returns the day of month starting from 1.\n\nThe return value ranges from 1 to 31. (The last day of month differs by months.)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"930":{"id":930,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1222":{"id":1222,"crate_id":0,"name":"NaiveDateWeeksIterator","span":{"filename":"src/naive/date/mod.rs","begin":[2167,0],"end":[2169,1]},"visibility":"public","docs":"Iterator over `NaiveDate` with a step size of one week.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[],"where_predicates":[]},"impls":[1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1359,1360,1362,1364,1365,1367,1369,1370,1372,1376,1377,1379,1380]}}},"1514":{"id":1514,"crate_id":0,"name":"default","span":{"filename":"src/naive/datetime/mod.rs","begin":[2148,4],"end":[2150,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"279":{"id":279,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[538,20],"end":[538,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::Offset","name":"Offset","id":278,"is_glob":false}}},"571":{"id":571,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1835,0],"end":[1841,1]},"visibility":"default","docs":"Accepts a relaxed form of RFC3339.\nA space or a 'T' are accepted as the separator between the date and time\nparts.\n\nAll of these examples are equivalent:\n```\n# use chrono::{DateTime, Local};\n\"2012-12-12T12:12:12Z\".parse::<DateTime<Local>>()?;\n\"2012-12-12 12:12:12Z\".parse::<DateTime<Local>>()?;\n\"2012-12-12 12:12:12+0000\".parse::<DateTime<Local>>()?;\n\"2012-12-12 12:12:12+00:00\".parse::<DateTime<Local>>()?;\n# Ok::<(), chrono::ParseError>(())\n```","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FromStr","id":568,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::offset::Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"items":[569,570],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1806":{"id":1806,"crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[165,0],"end":[191,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["with_ymd_and_hms","ymd","ymd_opt","yo","yo_opt","isoywd","isoywd_opt","timestamp","timestamp_opt","timestamp_millis","timestamp_millis_opt","timestamp_nanos","timestamp_micros","datetime_from_str","from_local_date","from_local_datetime","from_utc_date","from_utc_datetime"],"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1800,1801,1802,1803,1804,1805],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"863":{"id":863,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2098":{"id":2098,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[188,0],"end":[222,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_isize","from_i8","from_i16","from_i32","from_i128","from_usize","from_u8","from_u16","from_u32","from_u128","from_f32","from_f64"],"trait":{"path":"FromPrimitive","id":2011,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2095,2096,2097],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1155":{"id":1155,"crate_id":0,"name":"TooLong","span":{"filename":"src/format/mod.rs","begin":[423,4],"end":[423,11]},"visibility":"default","docs":"All formatting items have been read but there is a remaining input.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"212":{"id":212,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1856,0],"end":[1861,1]},"visibility":"default","docs":"Subtract-assign `TimeDelta` from `NaiveDateTime`.\n\nThis is the same as the addition with a negated `TimeDelta`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDateTime::checked_sub_signed`] to get an `Option` instead.","links":{"`NaiveDateTime::checked_sub_signed`":209},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"SubAssign","id":144,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[211],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1447":{"id":1447,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[67,53],"end":[67,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1446],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"504":{"id":504,"crate_id":0,"name":"second","span":{"filename":"src/datetime/mod.rs","begin":[1339,4],"end":[1341,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1739":{"id":1739,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2031":{"id":2031,"crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[240,16],"end":[240,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"796":{"id":796,"crate_id":0,"name":"next","span":{"filename":"src/format/strftime.rs","begin":[393,4],"end":[412,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1088":{"id":1088,"crate_id":0,"name":"to_owned","span":{"filename":"src/format/mod.rs","begin":[372,4],"end":[382,5]},"visibility":"public","docs":"Convert items that contain a reference to the format string into an owned variant.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"145":{"id":145,"crate_id":0,"name":"Output","span":{"filename":"src/time_delta.rs","begin":[532,4],"end":[532,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1380":{"id":1380,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2196,0],"end":[2196,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":1340,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1672":{"id":1672,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"437":{"id":437,"crate_id":0,"name":"format","span":{"filename":"src/datetime/mod.rs","begin":[1128,4],"end":[1130,5]},"visibility":"public","docs":"Formats the combined date and time per the specified format string.\n\nSee the [`crate::format::strftime`] module for the supported escape sequences.\n\n# Example\n```rust\nuse chrono::prelude::*;\n\nlet date_time: DateTime<Utc> = Utc.with_ymd_and_hms(2017, 04, 02, 12, 50, 32).unwrap();\nlet formatted = format!(\"{}\", date_time.format(\"%d/%m/%Y %H:%M\"));\nassert_eq!(formatted, \"02/04/2017 12:50\");\n```","links":{"`crate::format::strftime`":315},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1964":{"id":1964,"crate_id":0,"name":"pred","span":{"filename":"src/weekday.rs","begin":[85,4],"end":[95,5]},"visibility":"public","docs":"The previous day in the week.\n\n`w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.pred()`: | `Sun` | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat`","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"729":{"id":729,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1021":{"id":1021,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1313":{"id":1313,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":154,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":789,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[785,786,787],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"1605":{"id":1605,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[212,42],"end":[212,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"path":"Ord","id":117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1604],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"370":{"id":370,"crate_id":0,"name":"fmt","span":{"filename":"src/date.rs","begin":[548,4],"end":[551,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1897":{"id":1897,"crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[58,44],"end":[58,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1896],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2189":{"id":2189,"crate_id":0,"name":"Duration","span":{"filename":"src/lib.rs","begin":[521,0],"end":[521,30]},"visibility":"public","docs":"Alias of [`TimeDelta`].","links":{"`TimeDelta`":2},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"1246":{"id":1246,"crate_id":0,"name":"eq","span":{"filename":"src/naive/date/mod.rs","begin":[94,9],"end":[94,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"11":{"id":11,"crate_id":0,"name":"minutes","span":{"filename":"src/time_delta.rs","begin":[183,4],"end":[185,5]},"visibility":"public","docs":"Makes a new `TimeDelta` with the given number of minutes.\n\nEquivalent to `TimeDelta::seconds(minutes * 60)` with overflow checks.\n\n# Panics\n\nPanics when the `TimeDelta` would be out of bounds.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["minutes",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"303":{"id":303,"crate_id":0,"name":"checked_add_signed","span":{"filename":"src/date.rs","begin":[265,4],"end":[268,5]},"visibility":"public","docs":"Adds given `TimeDelta` to the current date.\n\nReturns `None` when it will result in overflow.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1538":{"id":1538,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1830":{"id":1830,"crate_id":0,"name":"eq","span":{"filename":"src/offset/utc.rs","begin":[43,22],"end":[43,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2122":{"id":2122,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[225,22],"end":[225,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2121],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1179":{"id":1179,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[398,23],"end":[398,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1178],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"236":{"id":236,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1471":{"id":1471,"crate_id":0,"name":"with_hour","span":{"filename":"src/naive/datetime/mod.rs","begin":[1456,4],"end":[1458,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the hour number changed.\n\nSee also the [`NaiveTime::with_hour`] method.\n\n# Errors\n\nReturns `None` if the value for `hour` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(\n    dt.with_hour(7),\n    Some(\n        NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(7, 34, 56, 789).unwrap()\n    )\n);\nassert_eq!(dt.with_hour(24), None);\n```","links":{"`NaiveTime::with_hour`":506},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1763":{"id":1763,"crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[127,0],"end":[147,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["with_ymd_and_hms","ymd","ymd_opt","yo","yo_opt","isoywd","isoywd_opt","timestamp","timestamp_opt","timestamp_millis","timestamp_millis_opt","timestamp_nanos","timestamp_micros","datetime_from_str","from_local_date","from_local_datetime","from_utc_date","from_utc_datetime"],"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1757,1758,1759,1760,1761,1762],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"528":{"id":528,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1496,0],"end":[1505,1]},"visibility":"default","docs":"Add `std::time::Duration` to `DateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`DateTime<Tz>::checked_add_signed`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_add_signed`":176},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[526,527],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2055":{"id":2055,"crate_id":0,"name":"number_from_month","span":{"filename":"src/month.rs","begin":[123,4],"end":[138,5]},"visibility":"public","docs":"Returns a month-of-year number starting from January = 1.\n\n`m`:                     | `January` | `February` | `...` | `December`\n-------------------------| --------- | ---------- | --- | -----\n`m.number_from_month()`: | 1         | 2          | `...` | 12","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"820":{"id":820,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1112":{"id":1112,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[328,31],"end":[328,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[1111],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1404":{"id":1404,"crate_id":0,"name":"checked_add_months","span":{"filename":"src/naive/datetime/mod.rs","begin":[568,4],"end":[570,5]},"visibility":"public","docs":"Adds given `Months` to the current date and time.\n\nUses the last day of the month if the day does not exist in the resulting month.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Months, NaiveDate};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1)\n        .unwrap()\n        .and_hms_opt(1, 0, 0)\n        .unwrap()\n        .checked_add_months(Months::new(1)),\n    Some(NaiveDate::from_ymd_opt(2014, 2, 1).unwrap().and_hms_opt(1, 0, 0).unwrap())\n);\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1)\n        .unwrap()\n        .and_hms_opt(1, 0, 0)\n        .unwrap()\n        .checked_add_months(Months::new(core::i32::MAX as u32 + 1)),\n    None\n);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"169":{"id":169,"crate_id":0,"name":"sub","span":{"filename":"src/date.rs","begin":[516,4],"end":[518,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1696":{"id":1696,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"461":{"id":461,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[864,0],"end":[868,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":103,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::offset::Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"items":[460],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"753":{"id":753,"crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[128,38],"end":[128,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":103,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[752],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1988":{"id":1988,"crate_id":0,"name":"ParseWeekdayError","span":{"filename":"src/weekday.rs","begin":[241,0],"end":[243,1]},"visibility":"public","docs":"An error resulting from reading `Weekday` value with `FromStr`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[],"where_predicates":[]},"impls":[2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2030,2031,2033,2034,2035,2037,2039]}}},"1045":{"id":1045,"crate_id":0,"name":"None","span":{"filename":"src/format/mod.rs","begin":[320,4],"end":[320,8]},"visibility":"default","docs":"No separator","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"102":{"id":102,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[52,22],"end":[52,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":103,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[101],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1337":{"id":1337,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2154,0],"end":[2161,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["advance_back_by","nth_back","try_rfold","rfold","rfind"],"trait":{"path":"DoubleEndedIterator","id":1338,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1336],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"394":{"id":394,"crate_id":0,"name":"offset","span":{"filename":"src/datetime/mod.rs","begin":[396,4],"end":[398,5]},"visibility":"public","docs":"Retrieves an associated offset from UTC.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"","id":165,"args":null}}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1629":{"id":1629,"crate_id":0,"name":"sub","span":{"filename":"src/naive/time/mod.rs","begin":[1459,4],"end":[1461,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"686":{"id":686,"crate_id":0,"name":"set_year_mod_100","span":{"filename":"src/format/parsed.rs","begin":[242,4],"end":[247,5]},"visibility":"public","docs":"Set the [`year_mod_100`](Parsed::year_mod_100) field to the given value.\n\nWhen set it implies that the year is not negative.\n\nIf this field is set while the [`year_div_100`](Parsed::year_div_100) field is missing (and\nthe full [`year`](Parsed::year) field is also not set), it assumes a default value for the\n[`year_div_100`](Parsed::year_div_100) field.\nThe default is 19 when `year_mod_100 >= 70` and 20 otherwise.\n\n# Errors\n\nReturns `OUT_OF_RANGE` if `value` is negative or if it is greater than 99.\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"Parsed::year_div_100":682,"Parsed::year":681,"Parsed::year_mod_100":683},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1921":{"id":1921,"crate_id":0,"name":"duration_round","span":{"filename":"src/round.rs","begin":[134,4],"end":[134,76]},"visibility":"default","docs":"Return a copy rounded by TimeDelta.\n\n# Example\n``` rust\n# use chrono::{DurationRound, TimeDelta, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 11)\n    .unwrap()\n    .and_hms_milli_opt(12, 0, 0, 154)\n    .unwrap()\n    .and_utc();\nassert_eq!(\n    dt.duration_round(TimeDelta::try_milliseconds(10).unwrap()).unwrap().to_string(),\n    \"2018-01-11 12:00:00.150 UTC\"\n);\nassert_eq!(\n    dt.duration_round(TimeDelta::try_days(1).unwrap()).unwrap().to_string(),\n    \"2018-01-12 00:00:00 UTC\"\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["duration",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Result","id":39,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":585,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"2213":{"id":2213,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[576,46],"end":[576,57]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"round::SubsecRound","name":"SubsecRound","id":258,"is_glob":false}}},"978":{"id":978,"crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[258,38],"end":[258,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"35":{"id":35,"crate_id":0,"name":"zero","span":{"filename":"src/time_delta.rs","begin":[436,4],"end":[438,5]},"visibility":"public","docs":"A `TimeDelta` where the stored seconds and nanoseconds are equal to zero.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1270":{"id":1270,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[1955,0],"end":[1961,1]},"visibility":"default","docs":"Add `Months` to `NaiveDate`.\n\nThe result will be clamped to valid days in the resulting month, see `checked_add_months` for\ndetails.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using `NaiveDate::checked_add_months` to get an `Option` instead.\n\n# Example\n\n```\nuse chrono::{Months, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(1), from_ymd(2014, 2, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(11), from_ymd(2014, 12, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(12), from_ymd(2015, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(13), from_ymd(2015, 2, 1));\nassert_eq!(from_ymd(2014, 1, 31) + Months::new(1), from_ymd(2014, 2, 28));\nassert_eq!(from_ymd(2020, 1, 31) + Months::new(1), from_ymd(2020, 2, 29));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1268,1269],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1562":{"id":1562,"crate_id":0,"name":"from_hms_opt","span":{"filename":"src/naive/time/mod.rs","begin":[281,4],"end":[283,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute and second.\n\nThe millisecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute and/or second.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hms_opt = NaiveTime::from_hms_opt;\n\nassert!(from_hms_opt(0, 0, 0).is_some());\nassert!(from_hms_opt(23, 59, 59).is_some());\nassert!(from_hms_opt(24, 0, 0).is_none());\nassert!(from_hms_opt(23, 60, 0).is_none());\nassert!(from_hms_opt(23, 59, 60).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"327":{"id":327,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1854":{"id":1854,"crate_id":0,"name":"0","span":{"filename":"src/offset/mod.rs","begin":[68,14],"end":[68,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"619":{"id":619,"crate_id":0,"name":"Secs","span":{"filename":"src/format/formatting.rs","begin":[462,4],"end":[462,8]},"visibility":"default","docs":"Format whole seconds only, with no decimal point nor subseconds.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2146":{"id":2146,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"911":{"id":911,"crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[164,4],"end":[166,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1203":{"id":1203,"crate_id":0,"name":"and_time","span":{"filename":"src/naive/date/mod.rs","begin":[710,4],"end":[712,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, NaiveTime};\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nlet t = NaiveTime::from_hms_milli_opt(12, 34, 56, 789).unwrap();\n\nlet dt: NaiveDateTime = d.and_time(t);\nassert_eq!(dt.date(), d);\nassert_eq!(dt.time(), t);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["time",{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1495":{"id":1495,"crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1927,4],"end":[1927,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"260":{"id":260,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[534,20],"end":[534,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::DateTime","name":"DateTime","id":174,"is_glob":false}}},"552":{"id":552,"crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1716,4],"end":[1718,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1787":{"id":1787,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"844":{"id":844,"crate_id":0,"name":"Month","span":{"filename":"src/format/mod.rs","begin":[119,4],"end":[119,9]},"visibility":"default","docs":"Month (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2079":{"id":2079,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,9],"end":[31,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2078],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1136":{"id":1136,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[386,9],"end":[386,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1135],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"193":{"id":193,"crate_id":0,"name":"Output","span":{"filename":"src/naive/date/mod.rs","begin":[2059,4],"end":[2059,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1428":{"id":1428,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"485":{"id":485,"crate_id":0,"name":"weekday","span":{"filename":"src/datetime/mod.rs","begin":[1202,4],"end":[1204,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1720":{"id":1720,"crate_id":0,"name":"naive","span":{"filename":"src/naive/mod.rs","begin":[1,0],"end":[281,1]},"visibility":"public","docs":"Date and time types unconcerned with timezones.\n\nThey are primarily building blocks for other types\n(e.g. [`TimeZone`](../offset/trait.TimeZone.html)),\nbut can be also used for the simpler date and time handling.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[1641,1642,1643,1644,1645,1646,1647,1648,1649,1650,1223,404],"is_stripped":false}}},"777":{"id":777,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1069":{"id":1069,"crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[317,29],"end":[317,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1361":{"id":1361,"crate_id":0,"name":"clone","span":{"filename":"src/naive/date/mod.rs","begin":[2166,22],"end":[2166,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1653":{"id":1653,"crate_id":0,"name":"first_day","span":{"filename":"src/naive/mod.rs","begin":[62,4],"end":[64,5]},"visibility":"public","docs":"Returns a date representing the first day of the week.\n\n# Panics\n\nPanics if the first day of the week happens to fall just out of range of `NaiveDate`\n(more than ca. 262,000 years away from common era).\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet date = NaiveDate::from_ymd_opt(2022, 4, 18).unwrap();\nlet week = date.week(Weekday::Mon);\nassert!(week.first_day() <= date);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"418":{"id":418,"crate_id":0,"name":"MIN_UTC","span":{"filename":"src/datetime/mod.rs","begin":[710,4],"end":[710,94]},"visibility":"public","docs":"The minimum possible `DateTime<Utc>`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"value":"_"}}},"1945":{"id":1945,"crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[244,16],"end":[244,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1944],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"710":{"id":710,"crate_id":0,"name":"set_hour12","span":{"filename":"src/format/parsed.rs","begin":[441,4],"end":[449,5]},"visibility":"public","docs":"Set the [`hour_mod_12`](Parsed::hour_mod_12) field, for the hour number in 12-hour clocks,\nto the given value.\n\nValue must be in the canonical range of 1-12.\nIt will internally be stored as 0-11 (`value % 12`).\n\n# Errors\n\nReturns `OUT_OF_RANGE` if `value` is not in the range 1-12.\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"Parsed::hour_mod_12":709},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1002":{"id":1002,"crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[283,9],"end":[283,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2237":{"id":2237,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"ToString","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[92],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1294":{"id":1294,"crate_id":0,"name":"from","span":{"filename":"src/naive/datetime/mod.rs","begin":[963,4],"end":[965,5]},"visibility":"default","docs":"Converts a `NaiveDate` to a `NaiveDateTime` of the same date but at midnight.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime};\n\nlet nd = NaiveDate::from_ymd_opt(2016, 5, 28).unwrap();\nlet ndt = NaiveDate::from_ymd_opt(2016, 5, 28).unwrap().and_hms_opt(0, 0, 0).unwrap();\nassert_eq!(ndt, NaiveDateTime::from(nd));","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["date",{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1586":{"id":1586,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"351":{"id":351,"crate_id":0,"name":"with_ordinal","span":{"filename":"src/date.rs","begin":[456,4],"end":[458,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"643":{"id":643,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1878":{"id":1878,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"935":{"id":935,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2170":{"id":2170,"crate_id":0,"name":"with_month","span":{"filename":"src/traits.rs","begin":[164,4],"end":[164,53]},"visibility":"default","docs":"Makes a new value with the month number (starting from 1) changed.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (for example `month(4)` when day of the month is 31).\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n- The value for `month` is out of range.\n\n[`DateTime<Tz>`]: crate::DateTime\n\n# Examples\n\n```\nuse chrono::{Datelike, NaiveDate};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2023, 5, 12).unwrap().with_month(9).unwrap(),\n    NaiveDate::from_ymd_opt(2023, 9, 12).unwrap()\n);\n// Resulting date 2023-09-31 does not exist:\nassert!(NaiveDate::from_ymd_opt(2023, 5, 31).unwrap().with_month(9).is_none());\n```\n\nDon't combine multiple `Datelike::with_*` methods. The intermediate value may not exist.\n```\nuse chrono::{Datelike, NaiveDate};\n\nfn with_year_month(date: NaiveDate, year: i32, month: u32) -> Option<NaiveDate> {\n    date.with_year(year)?.with_month(month)\n}\nlet d = NaiveDate::from_ymd_opt(2020, 2, 29).unwrap();\nassert!(with_year_month(d, 2019, 1).is_none()); // fails because of invalid intermediate value\n\n// Correct version:\nfn with_year_month_fixed(date: NaiveDate, year: i32, month: u32) -> Option<NaiveDate> {\n    NaiveDate::from_ymd_opt(year, month, date.day())\n}\nlet d = NaiveDate::from_ymd_opt(2020, 2, 29).unwrap();\nassert_eq!(with_year_month_fixed(d, 2019, 1), NaiveDate::from_ymd_opt(2019, 1, 29));\n```","links":{"crate::DateTime":174},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["month",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"1227":{"id":1227,"crate_id":0,"name":"MAX","span":{"filename":"src/naive/date/mod.rs","begin":[1433,4],"end":[1434,74]},"visibility":"public","docs":"The maximum possible `NaiveDate` (December 31, 262142 CE).","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"value":"_"}}},"1519":{"id":1519,"crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[170,0],"end":[180,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"DurationRound","id":585,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"crate::NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1516,1517,1518],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"284":{"id":284,"crate_id":0,"name":"ymd","span":{"filename":"src/offset/mod.rs","begin":[315,4],"end":[317,5]},"visibility":"default","docs":"Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date, invalid month and/or day.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `with_ymd_and_hms()` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `with_ymd_and_hms()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"576":{"id":576,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1864,0],"end":[1868,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"SystemTime","id":573,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::offset::Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"items":[575],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1811":{"id":1811,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2103":{"id":2103,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"868":{"id":868,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1160":{"id":1160,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1452":{"id":1452,"crate_id":0,"name":"day0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1063,4],"end":[1065,5]},"visibility":"default","docs":"Returns the day of month starting from 0.\n\nThe return value ranges from 0 to 30. (The last day of month differs by months.)\n\nSee also the [`NaiveDate::day0`] method.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.day0(), 24);\n```","links":{"`NaiveDate::day0`":1262},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"217":{"id":217,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1219,0],"end":[1224,1]},"visibility":"default","docs":"Add-assign `TimeDelta` to `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the addition ignores integral number of days.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"AddAssign","id":141,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[216],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1744":{"id":1744,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"ToString","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[92],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"509":{"id":509,"crate_id":0,"name":"with_minute","span":{"filename":"src/datetime/mod.rs","begin":[1372,4],"end":[1374,5]},"visibility":"default","docs":"Makes a new `DateTime` with the minute number changed.\n\nSee also the [`NaiveTime::with_minute`] method.\n\n# Errors\n\n- The value for `minute` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveTime::with_minute`":508},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["min",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2036":{"id":2036,"crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[249,4],"end":[251,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"801":{"id":801,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[65,21],"end":[65,27]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[allow(deprecated)]"],"deprecation":null,"inner":{"use":{"source":"formatting::format","name":"format","id":617,"is_glob":false}}},"1093":{"id":1093,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"150":{"id":150,"crate_id":0,"name":"div","span":{"filename":"src/time_delta.rs","begin":[542,4],"end":[544,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"primitive":"i32"}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"442":{"id":442,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1677":{"id":1677,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[32,9],"end":[32,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1676],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"734":{"id":734,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1969":{"id":1969,"crate_id":0,"name":"days_since","span":{"filename":"src/weekday.rs","begin":[161,4],"end":[169,5]},"visibility":"public","docs":"The number of days since the given day.\n\n# Examples\n\n```\nuse chrono::Weekday::*;\nassert_eq!(Mon.days_since(Mon), 0);\nassert_eq!(Sun.days_since(Tue), 5);\nassert_eq!(Wed.days_since(Sun), 3);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1026":{"id":1026,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"83":{"id":83,"crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"TypeId","id":84,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1318":{"id":1318,"crate_id":0,"name":"clone","span":{"filename":"src/naive/date/mod.rs","begin":[2130,22],"end":[2130,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1610":{"id":1610,"crate_id":0,"name":"num_seconds_from_midnight","span":{"filename":"src/naive/time/mod.rs","begin":[1134,4],"end":[1136,5]},"visibility":"default","docs":"Returns the number of non-leap seconds past the last midnight.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(1, 2, 3).unwrap().num_seconds_from_midnight(), 3723);\nassert_eq!(\n    NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().num_seconds_from_midnight(),\n    86164\n);\nassert_eq!(\n    NaiveTime::from_hms_milli_opt(23, 59, 59, 1_000).unwrap().num_seconds_from_midnight(),\n    86399\n);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1902":{"id":1902,"crate_id":0,"name":"yo","span":{"filename":"src/offset/mod.rs","begin":[347,4],"end":[349,5]},"visibility":"default","docs":"Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date and/or invalid DOY.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_local_datetime()` with a `NaiveDateTime` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` with a `NaiveDateTime` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2194":{"id":2194,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[552,19],"end":[552,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[doc(no_inline)]"],"deprecation":null,"inner":{"use":{"source":"datetime::MAX_DATETIME","name":"MAX_DATETIME","id":589,"is_glob":false}}},"959":{"id":959,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"16":{"id":16,"crate_id":0,"name":"try_milliseconds","span":{"filename":"src/time_delta.rs","begin":[241,4],"end":[250,5]},"visibility":"public","docs":"Makes a new `TimeDelta` with the given number of milliseconds.\n\n# Errors\n\nReturns `None` the `TimeDelta` would be out of bounds, i.e. when `milliseconds` is more\nthan `i64::MAX` or less than `-i64::MAX`. Notably, this is not the same as `i64::MIN`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["milliseconds",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1251":{"id":1251,"crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/date/mod.rs","begin":[94,30],"end":[94,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::option::Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1543":{"id":1543,"crate_id":0,"name":"eq","span":{"filename":"src/naive/isoweek.rs","begin":[19,9],"end":[19,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"308":{"id":308,"crate_id":0,"name":"years_since","span":{"filename":"src/date.rs","begin":[311,4],"end":[313,5]},"visibility":"public","docs":"Returns the number of whole years from the given `base` until `self`.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["base",{"generic":"Self"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1835":{"id":1835,"crate_id":0,"name":"Offset","span":{"filename":"src/offset/utc.rs","begin":[115,4],"end":[115,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"600":{"id":600,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2127":{"id":2127,"crate_id":0,"name":"eq","span":{"filename":"src/month.rs","begin":[225,39],"end":[225,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"892":{"id":892,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1184":{"id":1184,"crate_id":0,"name":"format","span":{"filename":"src/format/mod.rs","begin":[4,0],"end":[555,1]},"visibility":"public","docs":"Formatting (and parsing) utilities for date and time.\n\nThis module provides the common types and routines to implement,\nfor example, [`DateTime::format`](../struct.DateTime.html#method.format) or\n[`DateTime::parse_from_str`](../struct.DateTime.html#method.parse_from_str) methods.\nFor most cases you should use these high-level interfaces.\n\nInternally the formatting and parsing shares the same abstract **formatting items**,\nwhich are just an [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) of\nthe [`Item`](./enum.Item.html) type.\nThey are generated from more readable **format strings**;\ncurrently Chrono supports a built-in syntax closely resembling\nC's `strftime` format. The available options can be found [here](./strftime/index.html).\n\n# Example\n```\n# #[cfg(feature = \"alloc\")] {\nuse chrono::{NaiveDateTime, TimeZone, Utc};\n\nlet date_time = Utc.with_ymd_and_hms(2020, 11, 10, 0, 1, 32).unwrap();\n\nlet formatted = format!(\"{}\", date_time.format(\"%Y-%m-%d %H:%M:%S\"));\nassert_eq!(formatted, \"2020-11-10 00:01:32\");\n\nlet parsed = NaiveDateTime::parse_from_str(&formatted, \"%Y-%m-%d %H:%M:%S\")?.and_utc();\nassert_eq!(parsed, date_time);\n# }\n# Ok::<(), chrono::ParseError>(())\n```","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[315,800,801,802,803,804,805,806,807,811,861,859,928,926,986,981,983,314,565,1117,430],"is_stripped":false}}},"1476":{"id":1476,"crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1646,4],"end":[1646,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"241":{"id":241,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[602,9],"end":[602,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[240],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"533":{"id":533,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1551,0],"end":[1560,1]},"visibility":"default","docs":"Add `FixedOffset` to the datetime value of `DateTime` (offset remains unchanged).\n\n# Panics\n\nPanics if the resulting date would be out of range.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[531,532],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1768":{"id":1768,"crate_id":0,"name":"fmt","span":{"filename":"src/offset/fixed.rs","begin":[172,4],"end":[174,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"825":{"id":825,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2060":{"id":2060,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1117":{"id":1117,"crate_id":0,"name":"ParseErrorKind","span":{"filename":"src/format/mod.rs","begin":[399,0],"end":[431,1]},"visibility":"public","docs":"The category of parse error","links":{},"attrs":["#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"has_stripped_variants":true,"variants":[1150,1151,1152,1153,1154,1155,1156],"impls":[1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1174,1176,1177,1179,1180,1181,1183]}}},"174":{"id":174,"crate_id":0,"name":"DateTime","span":{"filename":"src/datetime/mod.rs","begin":[56,0],"end":[59,1]},"visibility":"public","docs":"ISO 8601 combined date and time with time zone.\n\nThere are some constructors implemented here (the `from_*` methods), but\nthe general-purpose constructors are all via the methods on the\n[`TimeZone`](./offset/trait.TimeZone.html) implementations.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"impls":[420,428,435,438,439,440,441,442,443,444,447,448,449,450,451,452,453,454,455,456,457,459,461,463,465,467,469,471,473,475,477,501,515,516,518,519,521,523,525,177,528,179,530,533,536,183,539,185,541,544,547,550,553,556,559,561,563,567,571,574,576,578,581,587]}}},"1409":{"id":1409,"crate_id":0,"name":"checked_sub_days","span":{"filename":"src/naive/datetime/mod.rs","begin":[764,4],"end":[766,5]},"visibility":"public","docs":"Subtract a duration in [`Days`] from the date part of the `NaiveDateTime`\n\nReturns `None` if the resulting date would be out of range.","links":{"`Days`":404},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"466":{"id":466,"crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[889,4],"end":[891,5]},"visibility":"default","docs":"Convert this `DateTime<Utc>` instance into a `DateTime<FixedOffset>` instance.\n\nConversion is done via [`DateTime::with_timezone`]. Note that the converted value returned by\nthis will be created with a fixed timezone offset of 0.","links":{"`DateTime::with_timezone`":396},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["src",{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1701":{"id":1701,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1993":{"id":1993,"crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,9],"end":[32,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1992],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1050":{"id":1050,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"107":{"id":107,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[52,31],"end":[52,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[106],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1342":{"id":1342,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1634":{"id":1634,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1572,0],"end":[1576,1]},"visibility":"default","docs":"The `Display` output of the naive time `t` is the same as\n[`t.format(\"%H:%M:%S%.f\")`](crate::format::strftime).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_opt(23, 56, 4).unwrap()), \"23:56:04\");\nassert_eq!(\n    format!(\"{}\", NaiveTime::from_hms_milli_opt(23, 56, 4, 12).unwrap()),\n    \"23:56:04.012\"\n);\nassert_eq!(\n    format!(\"{}\", NaiveTime::from_hms_micro_opt(23, 56, 4, 1234).unwrap()),\n    \"23:56:04.001234\"\n);\nassert_eq!(\n    format!(\"{}\", NaiveTime::from_hms_nano_opt(23, 56, 4, 123456).unwrap()),\n    \"23:56:04.000123456\"\n);\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveTime;\nassert_eq!(\n    format!(\"{}\", NaiveTime::from_hms_milli_opt(6, 59, 59, 1_500).unwrap()),\n    \"06:59:60.500\"\n);\n```","links":{"crate::format::strftime":315},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1633],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"399":{"id":399,"crate_id":0,"name":"checked_add_months","span":{"filename":"src/naive/date/mod.rs","begin":[544,4],"end":[553,5]},"visibility":"public","docs":"Add a duration in [`Months`] to the date\n\nUses the last day of the month if the day does not exist in the resulting month.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\n# use chrono::{NaiveDate, Months};\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_add_months(Months::new(6)),\n    Some(NaiveDate::from_ymd_opt(2022, 8, 20).unwrap())\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 7, 31).unwrap().checked_add_months(Months::new(2)),\n    Some(NaiveDate::from_ymd_opt(2022, 9, 30).unwrap())\n);\n```","links":{"`Months`":401},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["months",{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1926":{"id":1926,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"691":{"id":691,"crate_id":0,"name":"set_isoyear_div_100","span":{"filename":"src/format/parsed.rs","begin":[278,4],"end":[283,5]},"visibility":"public","docs":"Set the [`isoyear_div_100`](Parsed::isoyear_div_100) field, that is part of an\n[ISO 8601 week date], to the given value.\n\n[ISO 8601 week date]: crate::NaiveDate#week-date\n\n# Errors\n\nReturns `OUT_OF_RANGE` if `value` is negative or if it is greater than `i32::MAX`.\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"crate::NaiveDate#week-date":187,"Parsed::isoyear_div_100":688},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"983":{"id":983,"crate_id":0,"name":"Colons","span":{"filename":"src/format/mod.rs","begin":[318,0],"end":[325,1]},"visibility":"public","docs":"The separator between hours and minutes in an offset.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"has_stripped_variants":false,"variants":[1045,1046,1047],"impls":[1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1064,1065,1067,1068,1070,1071,1073]}}},"2218":{"id":2218,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[586,23],"end":[586,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"month::Months","name":"Months","id":401,"is_glob":false}}},"1275":{"id":1275,"crate_id":0,"name":"add","span":{"filename":"src/naive/date/mod.rs","begin":[2001,4],"end":[2003,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":134,"args":null}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"40":{"id":40,"crate_id":0,"name":"OutOfRangeError","span":{"filename":"src/time_delta.rs","begin":[603,0],"end":[603,31]},"visibility":"public","docs":"Represents error when converting `TimeDelta` to/from a standard library\nimplementation\n\nThe `std::time::Duration` supports a range from zero to `u64::MAX`\n*seconds*, while this module supports signed range of up to\n`i64::MAX` of *milliseconds*.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":[224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,243,244,245,247,248,250,252]}}},"1567":{"id":1567,"crate_id":0,"name":"from_hms_nano","span":{"filename":"src/naive/time/mod.rs","begin":[398,4],"end":[400,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and nanosecond.\n\nThe nanosecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `sec == 59`.\n\n# Panics\n\nPanics on invalid hour, minute, second and/or nanosecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_hms_nano_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_hms_nano_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"332":{"id":332,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"624":{"id":624,"crate_id":0,"name":"Nanosecond9","span":{"filename":"src/format/mod.rs","begin":[209,4],"end":[209,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1859":{"id":1859,"crate_id":0,"name":"earliest","span":{"filename":"src/offset/mod.rs","begin":[98,4],"end":[103,5]},"visibility":"public","docs":"Returns the earliest possible result of the time zone mapping.\n\n# Errors\n\nReturns `None` if local time falls in a _gap_ in the local time, or if there was an error.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"916":{"id":916,"crate_id":0,"name":"LongWeekdayName","span":{"filename":"src/format/mod.rs","begin":[191,4],"end":[191,19]},"visibility":"default","docs":"Full day of the week names.\n\nPrints a full name in the title case, reads either a short or full name in any case.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2151":{"id":2151,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[243,9],"end":[243,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2150],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1208":{"id":1208,"crate_id":0,"name":"and_hms_micro","span":{"filename":"src/naive/date/mod.rs","begin":[831,4],"end":[833,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.\n\nThe microsecond part is allowed to exceed 1,000,000,000 in order to represent a [leap second](\n./struct.NaiveTime.html#leap-second-handling), but only when `sec == 59`.\n\n# Panics\n\nPanics on invalid hour, minute, second and/or microsecond.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, NaiveDateTime, Timelike, Weekday};\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\n\nlet dt: NaiveDateTime = d.and_hms_micro_opt(12, 34, 56, 789_012).unwrap();\nassert_eq!(dt.year(), 2015);\nassert_eq!(dt.weekday(), Weekday::Wed);\nassert_eq!(dt.second(), 56);\nassert_eq!(dt.nanosecond(), 789_012_000);\n```","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `and_hms_micro_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `and_hms_micro_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1500":{"id":1500,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1983,0],"end":[1990,1]},"visibility":"default","docs":"Subtracts another `NaiveDateTime` from the current date and time.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveDateTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\nThe implementation is a wrapper around [`NaiveDateTime::signed_duration_since`].\n\n# Example\n\n```\nuse chrono::{NaiveDate, TimeDelta};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nlet d = from_ymd(2016, 7, 8);\nassert_eq!(\n    d.and_hms_opt(3, 5, 7).unwrap() - d.and_hms_opt(2, 4, 6).unwrap(),\n    TimeDelta::try_seconds(3600 + 60 + 1).unwrap()\n);\n\n// July 8 is 190th day in the year 2016\nlet d0 = from_ymd(2016, 1, 1);\nassert_eq!(\n    d.and_hms_milli_opt(0, 7, 6, 500).unwrap() - d0.and_hms_opt(0, 0, 0).unwrap(),\n    TimeDelta::try_seconds(189 * 86_400 + 7 * 60 + 6).unwrap()\n        + TimeDelta::try_milliseconds(500).unwrap()\n);\n```\n\nLeap seconds are handled, but the subtraction assumes that no other leap\nseconds happened.\n\n```\n# use chrono::{TimeDelta, NaiveDate};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\nlet leap = from_ymd(2015, 6, 30).and_hms_milli_opt(23, 59, 59, 1_500).unwrap();\nassert_eq!(\n    leap - from_ymd(2015, 6, 30).and_hms_opt(23, 0, 0).unwrap(),\n    TimeDelta::try_seconds(3600).unwrap() + TimeDelta::try_milliseconds(500).unwrap()\n);\nassert_eq!(\n    from_ymd(2015, 7, 1).and_hms_opt(1, 0, 0).unwrap() - leap,\n    TimeDelta::try_seconds(3600).unwrap() - TimeDelta::try_milliseconds(500).unwrap()\n);\n```","links":{"`NaiveDateTime::signed_duration_since`":1410},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1498,1499],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"265":{"id":265,"crate_id":0,"name":"Month","span":{"filename":"src/month.rs","begin":[40,0],"end":[65,1]},"visibility":"public","docs":"The month of the year.\n\nThis enum is just a convenience implementation.\nThe month in dates created by DateLike objects does not return this enum.\n\nIt is possible to convert from a date to a month independently\n```\nuse chrono::prelude::*;\nlet date = Utc.with_ymd_and_hms(2019, 10, 28, 9, 10, 11).unwrap();\n// `2019-10-28T09:10:11Z`\nlet month = Month::try_from(u8::try_from(date.month()).unwrap()).ok();\nassert_eq!(month, Some(Month::October))\n```\nOr from a Month to an integer usable by dates\n```\n# use chrono::prelude::*;\nlet month = Month::January;\nlet dt = Utc.with_ymd_and_hms(2019, month.number_from_month(), 28, 9, 10, 11).unwrap();\nassert_eq!((dt.year(), dt.month(), dt.day()), (2019, 1, 28));\n```\nAllows mapping from and to month, from 1-January to 12-December.\nCan be Serialized/Deserialized with serde","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"has_stripped_variants":false,"variants":[2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052],"impls":[2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2076,2077,2079,2080,2081,2083,2085,2087,2089,2091,2094,2098]}}},"557":{"id":557,"crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1750,4],"end":[1750,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}}},"1792":{"id":1792,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2084":{"id":2084,"crate_id":0,"name":"fmt","span":{"filename":"src/month.rs","begin":[31,37],"end":[31,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"849":{"id":849,"crate_id":0,"name":"NumDaysFromSun","span":{"filename":"src/format/mod.rs","begin":[129,4],"end":[129,18]},"visibility":"default","docs":"Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1141":{"id":1141,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[386,23],"end":[386,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1140],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1433":{"id":1433,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"198":{"id":198,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2077,0],"end":[2082,1]},"visibility":"default","docs":"Subtract-assign `TimeDelta` from `NaiveDate`.\n\nThis discards the fractional days in `TimeDelta`, rounding to the closest integral number of\ndays towards `TimeDelta::zero()`.\nIt is the same as the addition with a negated `TimeDelta`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDate::checked_sub_signed`] to get an `Option` instead.","links":{"`NaiveDate::checked_sub_signed`":195},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"SubAssign","id":144,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[197],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1725":{"id":1725,"crate_id":0,"name":"west_opt","span":{"filename":"src/offset/fixed.rs","begin":[97,4],"end":[103,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.\n\nReturns `None` on the out-of-bound `secs`.\n\n# Example\n\n```\n# #[cfg(feature = \"alloc\")] {\nuse chrono::{FixedOffset, TimeZone};\nlet hour = 3600;\nlet datetime =\n    FixedOffset::west_opt(5 * hour).unwrap().with_ymd_and_hms(2016, 11, 08, 0, 0, 0).unwrap();\nassert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00-05:00\")\n# }\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["secs",{"primitive":"i32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"490":{"id":490,"crate_id":0,"name":"with_month","span":{"filename":"src/datetime/mod.rs","begin":[1244,4],"end":[1246,5]},"visibility":"default","docs":"Makes a new `DateTime` with the month number (starting from 1) changed.\n\nDon't combine multiple `Datelike::with_*` methods. The intermediate value may not exist.\n\nSee also the [`NaiveDate::with_month`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (for example `month(4)` when day of the month is 31).\n- The value for `month` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_month`":489},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["month",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2017":{"id":2017,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"782":{"id":782,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1074":{"id":1074,"crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[331,12],"end":[331,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}}},"1366":{"id":1366,"crate_id":0,"name":"eq","span":{"filename":"src/naive/date/mod.rs","begin":[2166,35],"end":[2166,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"131":{"id":131,"crate_id":0,"name":"Output","span":{"filename":"src/time_delta.rs","begin":[502,4],"end":[502,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1658":{"id":1658,"crate_id":0,"name":"days","span":{"filename":"src/naive/mod.rs","begin":[168,4],"end":[174,5]},"visibility":"public","docs":"Returns a [`RangeInclusive<T>`] representing the whole week bounded by\n[first_day](NaiveWeek::first_day) and [last_day](NaiveWeek::last_day) functions.\n\n# Panics\n\nPanics if the either the first or last day of the week happens to fall just out of range of\n`NaiveDate` (more than ca. 262,000 years away from common era).\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet date = NaiveDate::from_ymd_opt(2022, 4, 18).unwrap();\nlet week = date.week(Weekday::Mon);\nlet days = week.days();\nassert!(days.contains(&date));\n```","links":{"NaiveWeek::first_day":1653,"NaiveWeek::last_day":1655,"`RangeInclusive<T>`":1657},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"RangeInclusive","id":1657,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"423":{"id":423,"crate_id":0,"name":"timestamp_micros","span":{"filename":"src/offset/mod.rs","begin":[513,4],"end":[518,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap microseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\n# Example\n\n```\nuse chrono::{TimeZone, Utc};\n\nassert_eq!(Utc.timestamp_micros(1431648000000).unwrap().timestamp(), 1431648);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["micros",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"715":{"id":715,"crate_id":0,"name":"set_second","span":{"filename":"src/format/parsed.rs","begin":[496,4],"end":[501,5]},"visibility":"public","docs":"Set the [`second`](Parsed::second) field to the given value.\n\nThe value can be 60 in the case of a leap second.\n\n# Errors\n\nReturns `OUT_OF_RANGE` if `value` is not in the range 0-60.\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"Parsed::second":714},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1950":{"id":1950,"crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[244,38],"end":[244,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1007":{"id":1007,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[283,29],"end":[283,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2242":{"id":2242,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[664,22],"end":[664,26]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2241],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"64":{"id":64,"crate_id":2,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"is_mutable":true,"type":{"primitive":"u8"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"1299":{"id":1299,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"356":{"id":356,"crate_id":0,"name":"eq","span":{"filename":"src/date.rs","begin":[471,4],"end":[473,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1591":{"id":1591,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1883":{"id":1883,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"648":{"id":648,"crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[458,22],"end":[458,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[647],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2175":{"id":2175,"crate_id":0,"name":"with_ordinal0","span":{"filename":"src/traits.rs","begin":[234,4],"end":[234,59]},"visibility":"default","docs":"Makes a new value with the day of year (starting from 0) changed.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (`with_ordinal0(365)` in a non-leap year).\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n- The value for `ordinal0` is out of range.\n\n[`DateTime<Tz>`]: crate::DateTime","links":{"crate::DateTime":174},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["ordinal0",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"940":{"id":940,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1232":{"id":1232,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1524":{"id":1524,"crate_id":0,"name":"week","span":{"filename":"src/naive/isoweek.rs","begin":[98,4],"end":[100,5]},"visibility":"public","docs":"Returns the ISO week number starting from 1.\n\nThe return value ranges from 1 to 53. (The last week of year differs by years.)\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, Weekday};\n\nlet d = NaiveDate::from_isoywd_opt(2015, 15, Weekday::Mon).unwrap();\nassert_eq!(d.iso_week().week(), 15);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"289":{"id":289,"crate_id":0,"name":"and_hms_opt","span":{"filename":"src/date.rs","begin":[109,4],"end":[111,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute and/or second.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1816":{"id":1816,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"581":{"id":581,"crate_id":0,"name":null,"span":{"filename":"src/format/parse.rs","begin":[522,0],"end":[533,1]},"visibility":"default","docs":"Accepts a relaxed form of RFC3339.\nA space or a 'T' are accepted as the separator between the date and time\nparts. Additional spaces are allowed between each component.\n\nAll of these examples are equivalent:\n```\n# use chrono::{DateTime, offset::FixedOffset};\n\"2012-12-12T12:12:12Z\".parse::<DateTime<FixedOffset>>()?;\n\"2012-12-12 12:12:12Z\".parse::<DateTime<FixedOffset>>()?;\n\"2012-  12-12T12:  12:12Z\".parse::<DateTime<FixedOffset>>()?;\n# Ok::<(), chrono::ParseError>(())\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FromStr","id":568,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"crate::DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"items":[579,580],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"873":{"id":873,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2108":{"id":2108,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1165":{"id":1165,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1457":{"id":1457,"crate_id":0,"name":"with_year","span":{"filename":"src/naive/datetime/mod.rs","begin":[1158,4],"end":[1160,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the year number changed, while keeping the same month and\nday.\n\nSee also the [`NaiveDate::with_year`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (February 29 in a non-leap year).\n- The year is out of range for a `NaiveDate`.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(\n    dt.with_year(2016),\n    Some(NaiveDate::from_ymd_opt(2016, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap())\n);\nassert_eq!(\n    dt.with_year(-308),\n    Some(NaiveDate::from_ymd_opt(-308, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap())\n);\n```","links":{"`NaiveDate::with_year`":487},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"222":{"id":222,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1341,0],"end":[1346,1]},"visibility":"default","docs":"Subtract-assign `TimeDelta` from `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the subtraction ignores integral number of days.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"SubAssign","id":144,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[221],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"514":{"id":514,"crate_id":0,"name":"with_nanosecond","span":{"filename":"src/datetime/mod.rs","begin":[1406,4],"end":[1408,5]},"visibility":"default","docs":"Makes a new `DateTime` with nanoseconds since the whole non-leap second changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\nAs with the [`NaiveDateTime::nanosecond`] method,\nthe input range can exceed 1,000,000,000 for leap seconds.\n\nSee also the [`NaiveTime::with_nanosecond`] method.\n\n# Errors\n\nReturns `None` if `nanosecond >= 2,000,000,000`.","links":{"`NaiveDateTime::nanosecond`":512,"`NaiveTime::with_nanosecond`":513},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1749":{"id":1749,"crate_id":0,"name":"hash","span":{"filename":"src/offset/fixed.rs","begin":[22,24],"end":[22,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"806":{"id":806,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[70,0],"end":[70,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"parsed::Parsed","name":"Parsed","id":679,"is_glob":false}}},"2041":{"id":2041,"crate_id":0,"name":"January","span":{"filename":"src/month.rs","begin":[42,4],"end":[42,15]},"visibility":"default","docs":"January","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"0","value":"0"}}}},"1098":{"id":1098,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"155":{"id":155,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[547,0],"end":[551,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sum","id":156,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[153],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1390":{"id":1390,"crate_id":0,"name":"from_timestamp_micros","span":{"filename":"src/naive/datetime/mod.rs","begin":[154,4],"end":[158,5]},"visibility":"public","docs":"Creates a new [NaiveDateTime] from microseconds since the UNIX epoch.\n\nThe UNIX epoch starts on midnight, January 1, 1970, UTC.\n\n# Errors\n\nReturns `None` if the number of microseconds would be out of range for a `NaiveDateTime`\n(more than ca. 262,000 years away from common era)","links":{"NaiveDateTime":200},"attrs":["#[deprecated(since = \"0.4.35\", note =\n\"use `DateTime::from_timestamp_micros` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.35","note":"use `DateTime::from_timestamp_micros` instead"},"inner":{"function":{"sig":{"inputs":[["micros",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"447":{"id":447,"crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[52,0],"end":[80,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Timelike","id":267,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"SubsecRound","id":258,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[445,446],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1682":{"id":1682,"crate_id":0,"name":"hash","span":{"filename":"src/naive/mod.rs","begin":[32,33],"end":[32,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1974":{"id":1974,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"739":{"id":739,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1031":{"id":1031,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1323":{"id":1323,"crate_id":0,"name":"eq","span":{"filename":"src/naive/date/mod.rs","begin":[2130,35],"end":[2130,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"88":{"id":88,"crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1615":{"id":1615,"crate_id":0,"name":"add_assign","span":{"filename":"src/naive/time/mod.rs","begin":[1250,4],"end":[1252,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"380":{"id":380,"crate_id":0,"name":"from_utc","span":{"filename":"src/datetime/mod.rs","begin":[108,4],"end":[110,5]},"visibility":"public","docs":"Makes a new `DateTime` from its components: a `NaiveDateTime` in UTC and an `Offset`.","links":{},"attrs":["#[inline]","#[must_use]","#[deprecated(since = \"0.4.27\", note =\n\"Use TimeZone::from_utc_datetime() or DateTime::from_naive_utc_and_offset instead\")]"],"deprecation":{"since":"0.4.27","note":"Use TimeZone::from_utc_datetime() or DateTime::from_naive_utc_and_offset instead"},"inner":{"function":{"sig":{"inputs":[["datetime",{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}],["offset",{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"","id":165,"args":null}}}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1907":{"id":1907,"crate_id":0,"name":"datetime_from_str","span":{"filename":"src/offset/mod.rs","begin":[539,4],"end":[543,5]},"visibility":"default","docs":"Parses a string with the specified format string and returns a\n`DateTime` with the current offset.\n\nSee the [`crate::format::strftime`] module on the\nsupported escape sequences.\n\nIf the to-be-parsed string includes an offset, it *must* match the\noffset of the TimeZone, otherwise an error will be returned.\n\nSee also [`DateTime::parse_from_str`] which gives a [`DateTime`] with\nparsed [`FixedOffset`].\n\nSee also [`NaiveDateTime::parse_from_str`] which gives a [`NaiveDateTime`] without\nan offset, but can be converted to a [`DateTime`] with [`NaiveDateTime::and_utc`] or\n[`NaiveDateTime::and_local_timezone`].","links":{"`NaiveDateTime`":200,"`crate::format::strftime`":315,"`DateTime::parse_from_str`":432,"`DateTime`":174,"`NaiveDateTime::parse_from_str`":1393,"`FixedOffset`":271,"`NaiveDateTime::and_utc`":1413,"`NaiveDateTime::and_local_timezone`":378},"attrs":["#[deprecated(since = \"0.4.29\", note =\n\"use `DateTime::parse_from_str` or `NaiveDateTime::parse_from_str` with `and_utc()` or `and_local_timezone()` instead\")]"],"deprecation":{"since":"0.4.29","note":"use `DateTime::parse_from_str` or `NaiveDateTime::parse_from_str` with `and_utc()` or `and_local_timezone()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["s",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"964":{"id":964,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2199":{"id":2199,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[562,16],"end":[562,20]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"inner":{"use":{"source":"naive::Days","name":"Days","id":404,"is_glob":false}}},"1256":{"id":1256,"crate_id":0,"name":"clone","span":{"filename":"src/naive/date/mod.rs","begin":[94,53],"end":[94,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"21":{"id":21,"crate_id":0,"name":"num_hours","span":{"filename":"src/time_delta.rs","begin":[291,4],"end":[293,5]},"visibility":"public","docs":"Returns the total number of whole hours in the `TimeDelta`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"313":{"id":313,"crate_id":0,"name":"DelayedFormat","span":{"filename":"src/format/formatting.rs","begin":[34,0],"end":[46,1]},"visibility":"public","docs":"A *temporary* object which can be used as an argument to `format!` or others.\nThis is normally constructed via `format` methods of each date and time type.","links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"impls":[598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,614,616]}}},"1548":{"id":1548,"crate_id":0,"name":"cmp","span":{"filename":"src/naive/isoweek.rs","begin":[19,36],"end":[19,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"605":{"id":605,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1840":{"id":1840,"crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/utc.rs","begin":[131,4],"end":[133,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["_utc",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"897":{"id":897,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2132":{"id":2132,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[225,62],"end":[225,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"path":"Ord","id":117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2131],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1189":{"id":1189,"crate_id":0,"name":"from_ymd","span":{"filename":"src/naive/date/mod.rs","begin":[167,4],"end":[169,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n(year, month and day).\n\n# Panics\n\nPanics if the specified calendar day does not exist, on invalid values for `month` or `day`,\nor if `year` is out of range for `NaiveDate`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_ymd_opt()` instead\")]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_ymd_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"246":{"id":246,"crate_id":0,"name":"eq","span":{"filename":"src/time_delta.rs","begin":[602,29],"end":[602,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1481":{"id":1481,"crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1697,4],"end":[1697,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"538":{"id":538,"crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1618,4],"end":[1622,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2065":{"id":2065,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"830":{"id":830,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[78,22],"end":[78,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1122":{"id":1122,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1414":{"id":1414,"crate_id":0,"name":"MIN","span":{"filename":"src/naive/datetime/mod.rs","begin":[942,4],"end":[942,78]},"visibility":"public","docs":"The minimum possible `NaiveDateTime`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"value":"_"}}},"179":{"id":179,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1517,0],"end":[1525,1]},"visibility":"default","docs":"Add-assign `chrono::Duration` to `DateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`DateTime<Tz>::checked_add_signed`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_add_signed`":176},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"AddAssign","id":141,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[178],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1706":{"id":1706,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[215,9],"end":[215,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1705],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"471":{"id":471,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[906,0],"end":[914,1]},"visibility":"default","docs":"Convert a `DateTime<FixedOffset>` instance into a `DateTime<Utc>` instance.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::offset::Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"items":[470],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1998":{"id":1998,"crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[32,37],"end":[32,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"763":{"id":763,"crate_id":0,"name":"new","span":{"filename":"src/format/strftime.rs","begin":[228,4],"end":[237,5]},"visibility":"public","docs":"Creates a new parsing iterator from a `strftime`-like format string.\n\n# Errors\n\nWhile iterating [`Item::Error`] will be returned if the format string contains an invalid\nor unrecognized formatting specifier.\n\n# Example\n\n```\nuse chrono::format::*;\n\nlet strftime_parser = StrftimeItems::new(\"%F\"); // %F: year-month-day (ISO 8601)\n\nconst ISO8601_YMD_ITEMS: &[Item<'static>] = &[\n    Item::Numeric(Numeric::Year, Pad::Zero),\n    Item::Literal(\"-\"),\n    Item::Numeric(Numeric::Month, Pad::Zero),\n    Item::Literal(\"-\"),\n    Item::Numeric(Numeric::Day, Pad::Zero),\n];\nassert!(strftime_parser.eq(ISO8601_YMD_ITEMS.iter().cloned()));\n```","links":{"`Item::Error`":762},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1055":{"id":1055,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1347":{"id":1347,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1639":{"id":1639,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1639,0],"end":[1643,1]},"visibility":"default","docs":"The default value for a NaiveTime is midnight, 00:00:00 exactly.\n\n# Example\n\n```rust\nuse chrono::NaiveTime;\n\nlet default_time = NaiveTime::default();\nassert_eq!(default_time, NaiveTime::from_hms_opt(0, 0, 0).unwrap());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":103,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1638],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"404":{"id":404,"crate_id":0,"name":"Days","span":{"filename":"src/naive/mod.rs","begin":[216,0],"end":[216,32]},"visibility":"public","docs":"A duration in calendar days.\n\nThis is useful because when using `TimeDelta` it is possible that adding `TimeDelta::days(1)`\ndoesn't increment the day value as expected due to it being a fixed number of seconds. This\ndifference applies only when dealing with `DateTime<TimeZone>` data types and in other cases\n`TimeDelta::days(n)` and `Days::new(n)` are equivalent.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":[1689,1690,1691,1692,1693,1694,1695,1696,1697,1698,1699,1700,1701,1702,1703,1704,556,559,1276,1279,1503,1506,1706,1707,1709,1710,1712,1713,1715,1717,1719]}}},"696":{"id":696,"crate_id":0,"name":"set_week_from_sun","span":{"filename":"src/format/parsed.rs","begin":[335,4],"end":[340,5]},"visibility":"public","docs":"Set the [`week_from_sun`](Parsed::week_from_sun) week number field to the given value.\n\nWeek 1 starts at the first Sunday of January.\n\n# Errors\n\nReturns `OUT_OF_RANGE` if `value` is not in the range 0-53.\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"Parsed::week_from_sun":695},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1931":{"id":1931,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"988":{"id":988,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2223":{"id":2223,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"45":{"id":45,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1280":{"id":1280,"crate_id":0,"name":"Output","span":{"filename":"src/naive/date/mod.rs","begin":[2115,4],"end":[2115,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"337":{"id":337,"crate_id":0,"name":"month","span":{"filename":"src/date.rs","begin":[398,4],"end":[400,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1572":{"id":1572,"crate_id":0,"name":"parse_and_remainder","span":{"filename":"src/naive/time/mod.rs","begin":[575,4],"end":[579,5]},"visibility":"public","docs":"Parses a string from a user-specified format into a new `NaiveTime` value, and a slice with\nthe remaining portion of the string.\nSee the [`format::strftime` module](crate::format::strftime)\non the supported escape sequences.\n\nSimilar to [`parse_from_str`](#method.parse_from_str).\n\n# Example\n\n```rust\n# use chrono::{NaiveTime};\nlet (time, remainder) =\n    NaiveTime::parse_and_remainder(\"3h4m33s trailing text\", \"%-Hh%-Mm%-Ss\").unwrap();\nassert_eq!(time, NaiveTime::from_hms_opt(3, 4, 33).unwrap());\nassert_eq!(remainder, \" trailing text\");\n```","links":{"crate::format::strftime":315},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1864":{"id":1864,"crate_id":0,"name":"and_time","span":{"filename":"src/offset/mod.rs","begin":[155,4],"end":[162,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["time",{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"629":{"id":629,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2156":{"id":2156,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[249,0],"end":[249,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","description","cause","provide"],"trait":{"path":"Error","id":253,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"921":{"id":921,"crate_id":0,"name":"TimezoneOffsetTripleColon","span":{"filename":"src/format/mod.rs","begin":[231,4],"end":[231,29]},"visibility":"default","docs":"Offset from the local time to UTC without minutes (`+09` or `-04` or `+00`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace.\nThe offset is limited from `-24` to `+24`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1213":{"id":1213,"crate_id":0,"name":"succ_opt","span":{"filename":"src/naive/date/mod.rs","begin":[971,4],"end":[977,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the next calendar date.\n\n# Errors\n\nReturns `None` when `self` is the last representable date.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2015, 6, 3).unwrap().succ_opt(),\n    Some(NaiveDate::from_ymd_opt(2015, 6, 4).unwrap())\n);\nassert_eq!(NaiveDate::MAX.succ_opt(), None);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1505":{"id":1505,"crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[2015,4],"end":[2017,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":138,"args":null}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"270":{"id":270,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[535,47],"end":[535,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::Weekday","name":"Weekday","id":269,"is_glob":false}}},"1797":{"id":1797,"crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[113,15],"end":[113,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1796],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"562":{"id":562,"crate_id":0,"name":"fmt","span":{"filename":"src/datetime/mod.rs","begin":[1793,4],"end":[1797,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"854":{"id":854,"crate_id":0,"name":"Minute","span":{"filename":"src/format/mod.rs","begin":[139,4],"end":[139,10]},"visibility":"default","docs":"The number of minutes since the last whole hour (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2089":{"id":2089,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,50],"end":[31,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","gt","ge"],"trait":{"path":"PartialOrd","id":114,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2088],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1146":{"id":1146,"crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[437,4],"end":[448,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1438":{"id":1438,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[67,20],"end":[67,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"203":{"id":203,"crate_id":0,"name":"checked_add_signed","span":{"filename":"src/naive/datetime/mod.rs","begin":[529,4],"end":[534,5]},"visibility":"public","docs":"Adds given `TimeDelta` to the current date and time.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe addition assumes that **there is no leap second ever**,\nexcept when the `NaiveDateTime` itself represents a leap second\nin which case the assumption becomes that **there is exactly a single leap second ever**.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{NaiveDate, TimeDelta};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7).checked_add_signed(TimeDelta::zero()), Some(hms(3, 5, 7)));\nassert_eq!(\n    hms(3, 5, 7).checked_add_signed(TimeDelta::try_seconds(1).unwrap()),\n    Some(hms(3, 5, 8))\n);\nassert_eq!(\n    hms(3, 5, 7).checked_add_signed(TimeDelta::try_seconds(-1).unwrap()),\n    Some(hms(3, 5, 6))\n);\nassert_eq!(\n    hms(3, 5, 7).checked_add_signed(TimeDelta::try_seconds(3600 + 60).unwrap()),\n    Some(hms(4, 6, 7))\n);\nassert_eq!(\n    hms(3, 5, 7).checked_add_signed(TimeDelta::try_seconds(86_400).unwrap()),\n    Some(from_ymd(2016, 7, 9).and_hms_opt(3, 5, 7).unwrap())\n);\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli_opt(h, m, s, milli).unwrap();\nassert_eq!(\n    hmsm(3, 5, 7, 980).checked_add_signed(TimeDelta::try_milliseconds(450).unwrap()),\n    Some(hmsm(3, 5, 8, 430))\n);\n```\n\nOverflow returns `None`.\n\n```\n# use chrono::{TimeDelta, NaiveDate};\n# let hms = |h, m, s| NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7).checked_add_signed(TimeDelta::try_days(1_000_000_000).unwrap()), None);\n```\n\nLeap seconds are handled,\nbut the addition assumes that it is the only leap second happened.\n\n```\n# use chrono::{TimeDelta, NaiveDate};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli_opt(h, m, s, milli).unwrap();\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap.checked_add_signed(TimeDelta::zero()),\n           Some(hmsm(3, 5, 59, 1_300)));\nassert_eq!(leap.checked_add_signed(TimeDelta::try_milliseconds(-500).unwrap()),\n           Some(hmsm(3, 5, 59, 800)));\nassert_eq!(leap.checked_add_signed(TimeDelta::try_milliseconds(500).unwrap()),\n           Some(hmsm(3, 5, 59, 1_800)));\nassert_eq!(leap.checked_add_signed(TimeDelta::try_milliseconds(800).unwrap()),\n           Some(hmsm(3, 6, 0, 100)));\nassert_eq!(leap.checked_add_signed(TimeDelta::try_seconds(10).unwrap()),\n           Some(hmsm(3, 6, 9, 300)));\nassert_eq!(leap.checked_add_signed(TimeDelta::try_seconds(-10).unwrap()),\n           Some(hmsm(3, 5, 50, 300)));\nassert_eq!(leap.checked_add_signed(TimeDelta::try_days(1).unwrap()),\n           Some(from_ymd(2016, 7, 9).and_hms_milli_opt(3, 5, 59, 300).unwrap()));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"495":{"id":495,"crate_id":0,"name":"with_day0","span":{"filename":"src/naive/date/mod.rs","begin":[1799,4],"end":[1802,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of month (starting from 0) changed.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (for example `day(30)` in April).\n- The value for `day0` is invalid.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_day0(29),\n    Some(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap())\n);\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_day0(30), None);\n// no September 31\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["day0",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1730":{"id":1730,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"787":{"id":787,"crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"I"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2022":{"id":2022,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1079":{"id":1079,"crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[336,10],"end":[336,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}}},"136":{"id":136,"crate_id":0,"name":"sub","span":{"filename":"src/time_delta.rs","begin":[512,4],"end":[514,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1371":{"id":1371,"crate_id":0,"name":"cmp","span":{"filename":"src/naive/date/mod.rs","begin":[2166,62],"end":[2166,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"428":{"id":428,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[715,0],"end":[862,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::offset::Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"items":[384,422,424,426,427],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1663":{"id":1663,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1955":{"id":1955,"crate_id":0,"name":"round","span":{"filename":"src/round.rs","begin":[4,0],"end":[838,1]},"visibility":"public","docs":"Functionality for rounding or truncating a `DateTime` by a `TimeDelta`.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[258,585,583],"is_stripped":false}}},"720":{"id":720,"crate_id":0,"name":"offset","span":{"filename":"src/format/parsed.rs","begin":[1134,4],"end":[1136,5]},"visibility":"public","docs":"Get the `offset` field if set.\n\nSee also [`set_offset()`](Parsed::set_offset).","links":{"Parsed::set_offset":721},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2247":{"id":2247,"crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[676,4],"end":[678,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1012":{"id":1012,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[283,44],"end":[283,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1011],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1304":{"id":1304,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"69":{"id":69,"crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":68},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1596":{"id":1596,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[212,9],"end":[212,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"361":{"id":361,"crate_id":0,"name":"cmp","span":{"filename":"src/date.rs","begin":[485,4],"end":[487,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1888":{"id":1888,"crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[58,9],"end":[58,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::clone::Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1887],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"653":{"id":653,"crate_id":0,"name":"hash","span":{"filename":"src/format/formatting.rs","begin":[458,44],"end":[458,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"945":{"id":945,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[174,9],"end":[174,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[944],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2180":{"id":2180,"crate_id":0,"name":"second","span":{"filename":"src/traits.rs","begin":[287,4],"end":[287,28]},"visibility":"default","docs":"Returns the second number from 0 to 59.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"1237":{"id":1237,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2":{"id":2,"crate_id":0,"name":"TimeDelta","span":{"filename":"src/time_delta.rs","begin":[60,0],"end":[63,1]},"visibility":"public","docs":"Time duration with nanosecond precision.\n\nThis also allows for negative durations; see individual methods for details.\n\nA `TimeDelta` is represented internally as a complement of seconds and\nnanoseconds. The range is restricted to that of `i64` milliseconds, with the\nminimum value notably being set to `-i64::MAX` rather than allowing the full\nrange of `i64::MIN`. This is to allow easy flipping of sign, so that for\ninstance `abs()` can be called without any checks.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[],"where_predicates":[]},"impls":[44,45,47,49,51,53,55,58,62,65,70,73,77,82,85,90,94,98,99,102,104,107,109,113,116,121,125,129,133,137,140,143,147,151,155,158,160,164,167,170,172,177,179,183,185,190,192,196,198,204,206,210,212,215,217,220,222]}}},"294":{"id":294,"crate_id":0,"name":"and_hms_nano","span":{"filename":"src/date.rs","begin":[179,4],"end":[181,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute, second and/or nanosecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use and_hms_nano_opt() instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use and_hms_nano_opt() instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1529":{"id":1529,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"586":{"id":586,"crate_id":0,"name":"duration_trunc","span":{"filename":"src/round.rs","begin":[165,4],"end":[167,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["duration",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Result","id":39,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":585,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1821":{"id":1821,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"878":{"id":878,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[102,9],"end":[102,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[877],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2113":{"id":2113,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1170":{"id":1170,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"227":{"id":227,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1462":{"id":1462,"crate_id":0,"name":"with_ordinal","span":{"filename":"src/naive/datetime/mod.rs","begin":[1313,4],"end":[1315,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of year (starting from 1) changed.\n\nSee also the [`NaiveDate::with_ordinal`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (`with_ordinal(366)` in a non-leap year).\n- The value for `ordinal` is invalid.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(\n    dt.with_ordinal(60),\n    Some(NaiveDate::from_ymd_opt(2015, 3, 1).unwrap().and_hms_opt(12, 34, 56).unwrap())\n);\nassert_eq!(dt.with_ordinal(366), None); // 2015 had only 365 days\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2016, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(\n    dt.with_ordinal(60),\n    Some(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap().and_hms_opt(12, 34, 56).unwrap())\n);\nassert_eq!(\n    dt.with_ordinal(366),\n    Some(NaiveDate::from_ymd_opt(2016, 12, 31).unwrap().and_hms_opt(12, 34, 56).unwrap())\n);\n```","links":{"`NaiveDate::with_ordinal`":497},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1754":{"id":1754,"crate_id":0,"name":"Err","span":{"filename":"src/offset/fixed.rs","begin":[120,4],"end":[120,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"519":{"id":519,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1426,0],"end":[1426,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2046":{"id":2046,"crate_id":0,"name":"June","span":{"filename":"src/month.rs","begin":[52,4],"end":[52,12]},"visibility":"default","docs":"June","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"5","value":"5"}}}},"811":{"id":811,"crate_id":0,"name":"Pad","span":{"filename":"src/format/mod.rs","begin":[79,0],"end":[86,1]},"visibility":"public","docs":"Padding characters for numeric items.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"has_stripped_variants":false,"variants":[808,809,810],"impls":[812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,829,830,832,833,835,837]}}},"1103":{"id":1103,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1395":{"id":1395,"crate_id":0,"name":"time","span":{"filename":"src/naive/datetime/mod.rs","begin":[345,4],"end":[347,5]},"visibility":"public","docs":"Retrieves a time component.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveTime};\n\nlet dt = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(9, 10, 11).unwrap();\nassert_eq!(dt.time(), NaiveTime::from_hms_opt(9, 10, 11).unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"160":{"id":160,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[559,0],"end":[594,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[159],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"452":{"id":452,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"744":{"id":744,"crate_id":0,"name":"clone","span":{"filename":"src/format/parsed.rs","begin":[128,9],"end":[128,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1979":{"id":1979,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1036":{"id":1036,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[296,16],"end":[296,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1328":{"id":1328,"crate_id":0,"name":"cmp","span":{"filename":"src/naive/date/mod.rs","begin":[2130,62],"end":[2130,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1620":{"id":1620,"crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1353,4],"end":[1353,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"385":{"id":385,"crate_id":0,"name":"timestamp_opt","span":{"filename":"src/offset/mod.rs","begin":[446,4],"end":[451,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nThe nanosecond part can exceed 1,000,000,000 in order to represent a\n[leap second](crate::NaiveTime#leap-second-handling), but only when `secs % 60 == 59`.\n(The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)\n\n# Errors\n\nReturns `MappedLocalTime::None` on out-of-range number of seconds and/or\ninvalid nanosecond, otherwise always returns `MappedLocalTime::Single`.\n\n# Example\n\n```\nuse chrono::{TimeZone, Utc};\n\nassert_eq!(Utc.timestamp_opt(1431648000, 0).unwrap().to_string(), \"2015-05-15 00:00:00 UTC\");\n```","links":{"crate::NaiveTime#leap-second-handling":202},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["secs",{"primitive":"i64"}],["nsecs",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"677":{"id":677,"crate_id":0,"name":"RFC2822","span":{"filename":"src/format/mod.rs","begin":[246,4],"end":[246,11]},"visibility":"default","docs":"RFC 2822 date and time syntax. Commonly used for email and MIME date and time.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1912":{"id":1912,"crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/mod.rs","begin":[576,4],"end":[576,68]},"visibility":"default","docs":"Creates the offset for given UTC `NaiveDate`. This cannot fail.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["utc",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":165,"args":null}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"2204":{"id":2204,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[563,25],"end":[563,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"naive::NaiveWeek","name":"NaiveWeek","id":1223,"is_glob":false}}},"969":{"id":969,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"26":{"id":26,"crate_id":0,"name":"num_microseconds","span":{"filename":"src/time_delta.rs","begin":[334,4],"end":[338,5]},"visibility":"public","docs":"Returns the total number of whole microseconds in the `TimeDelta`,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"i64"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1261":{"id":1261,"crate_id":0,"name":"day","span":{"filename":"src/naive/date/mod.rs","begin":[1530,4],"end":[1532,5]},"visibility":"default","docs":"Returns the day of month starting from 1.\n\nThe return value ranges from 1 to 31. (The last day of month differs by months.)\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().day(), 8);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().day(), 14);\n```\n\nCombined with [`NaiveDate::pred_opt`](#method.pred_opt),\none can determine the number of days in a particular month.\n(Note that this panics when `year` is out of range.)\n\n```\nuse chrono::{Datelike, NaiveDate};\n\nfn ndays_in_month(year: i32, month: u32) -> u32 {\n    // the first day of the next month...\n    let (y, m) = if month == 12 { (year + 1, 1) } else { (year, month + 1) };\n    let d = NaiveDate::from_ymd_opt(y, m, 1).unwrap();\n\n    // ...is preceded by the last day of the original month\n    d.pred_opt().unwrap().day()\n}\n\nassert_eq!(ndays_in_month(2015, 8), 31);\nassert_eq!(ndays_in_month(2015, 9), 30);\nassert_eq!(ndays_in_month(2015, 12), 31);\nassert_eq!(ndays_in_month(2016, 2), 29);\nassert_eq!(ndays_in_month(2017, 2), 28);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"318":{"id":318,"crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[329,0],"end":[390,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"","id":165,"args":null}}},"bounds":[{"trait_bound":{"trait":{"path":"fmt::Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[312,316],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1553":{"id":1553,"crate_id":0,"name":"hash","span":{"filename":"src/naive/isoweek.rs","begin":[19,54],"end":[19,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1845":{"id":1845,"crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[142,0],"end":[146,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1844],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"610":{"id":610,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2137":{"id":2137,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"902":{"id":902,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1194":{"id":1194,"crate_id":0,"name":"from_isoywd_opt","span":{"filename":"src/naive/date/mod.rs","begin":[314,4],"end":[340,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ISO week date](#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.\n\n# Errors\n\nReturns `None` if:\n- The specified week does not exist in that year (for example 2023 week 53).\n- The value for `week` is invalid (for example: `0`, `60`).\n- If the resulting date is out of range for `NaiveDate`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\nlet from_isoywd_opt = NaiveDate::from_isoywd_opt;\n\nassert_eq!(from_isoywd_opt(2015, 0, Weekday::Sun), None);\nassert_eq!(from_isoywd_opt(2015, 10, Weekday::Sun), Some(from_ymd(2015, 3, 8)));\nassert_eq!(from_isoywd_opt(2015, 30, Weekday::Mon), Some(from_ymd(2015, 7, 20)));\nassert_eq!(from_isoywd_opt(2015, 60, Weekday::Mon), None);\n\nassert_eq!(from_isoywd_opt(400000, 10, Weekday::Fri), None);\nassert_eq!(from_isoywd_opt(-400000, 10, Weekday::Sat), None);\n```\n\nThe year number of ISO week date may differ from that of the calendar date.\n\n```\n# use chrono::{NaiveDate, Weekday};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n# let from_isoywd_opt = NaiveDate::from_isoywd_opt;\n//           Mo Tu We Th Fr Sa Su\n// 2014-W52  22 23 24 25 26 27 28    has 4+ days of new year,\n// 2015-W01  29 30 31  1  2  3  4 <- so this is the first week\nassert_eq!(from_isoywd_opt(2014, 52, Weekday::Sun), Some(from_ymd(2014, 12, 28)));\nassert_eq!(from_isoywd_opt(2014, 53, Weekday::Mon), None);\nassert_eq!(from_isoywd_opt(2015, 1, Weekday::Mon), Some(from_ymd(2014, 12, 29)));\n\n// 2015-W52  21 22 23 24 25 26 27    has 4+ days of old year,\n// 2015-W53  28 29 30 31  1  2  3 <- so this is the last week\n// 2016-W01   4  5  6  7  8  9 10\nassert_eq!(from_isoywd_opt(2015, 52, Weekday::Sun), Some(from_ymd(2015, 12, 27)));\nassert_eq!(from_isoywd_opt(2015, 53, Weekday::Sun), Some(from_ymd(2016, 1, 3)));\nassert_eq!(from_isoywd_opt(2015, 54, Weekday::Mon), None);\nassert_eq!(from_isoywd_opt(2016, 1, Weekday::Mon), Some(from_ymd(2016, 1, 4)));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["year",{"primitive":"i32"}],["week",{"primitive":"u32"}],["weekday",{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1486":{"id":1486,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1750,0],"end":[1756,1]},"visibility":"default","docs":"Add `Months` to `NaiveDateTime`.\n\nThe result will be clamped to valid days in the resulting month, see `checked_add_months` for\ndetails.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using `checked_add_months` to get an `Option` instead.\n\n# Example\n\n```\nuse chrono::{Months, NaiveDate};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(1, 0, 0).unwrap() + Months::new(1),\n    NaiveDate::from_ymd_opt(2014, 2, 1).unwrap().and_hms_opt(1, 0, 0).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(0, 2, 0).unwrap()\n        + Months::new(11),\n    NaiveDate::from_ymd_opt(2014, 12, 1).unwrap().and_hms_opt(0, 2, 0).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(0, 0, 3).unwrap()\n        + Months::new(12),\n    NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().and_hms_opt(0, 0, 3).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(0, 0, 4).unwrap()\n        + Months::new(13),\n    NaiveDate::from_ymd_opt(2015, 2, 1).unwrap().and_hms_opt(0, 0, 4).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 31).unwrap().and_hms_opt(0, 5, 0).unwrap()\n        + Months::new(1),\n    NaiveDate::from_ymd_opt(2014, 2, 28).unwrap().and_hms_opt(0, 5, 0).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2020, 1, 31).unwrap().and_hms_opt(6, 0, 0).unwrap()\n        + Months::new(1),\n    NaiveDate::from_ymd_opt(2020, 2, 29).unwrap().and_hms_opt(6, 0, 0).unwrap()\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1484,1485],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"251":{"id":251,"crate_id":0,"name":"description","span":{"filename":"src/time_delta.rs","begin":[614,4],"end":[616,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1778":{"id":1778,"crate_id":0,"name":"now","span":{"filename":"src/offset/local/mod.rs","begin":[160,4],"end":[162,5]},"visibility":"public","docs":"Returns a `DateTime<Local>` which corresponds to the current date, time and offset from\nUTC.\n\nSee also the similar [`Utc::now()`] which returns `DateTime<Utc>`, i.e. without the local\noffset.\n\n# Example\n\n```\n# #![allow(unused_variables)]\n# use chrono::{DateTime, FixedOffset, Local};\n// Current local time\nlet now = Local::now();\n\n// Current local date\nlet today = now.date_naive();\n\n// Current local time, converted to `DateTime<FixedOffset>`\nlet now_fixed_offset = Local::now().fixed_offset();\n// or\nlet now_fixed_offset: DateTime<FixedOffset> = Local::now().into();\n\n// Current time in some timezone (let's use +05:00)\n// Note that it is usually more efficient to use `Utc::now` for this use case.\nlet offset = FixedOffset::east_opt(5 * 60 * 60).unwrap();\nlet now_with_offset = Local::now().with_timezone(&offset);\n```","links":{"`Utc::now()`":1777},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"543":{"id":543,"crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1675,4],"end":[1679,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"835":{"id":835,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[78,37],"end":[78,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[834],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2070":{"id":2070,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1127":{"id":1127,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"184":{"id":184,"crate_id":0,"name":"sub_assign","span":{"filename":"src/datetime/mod.rs","begin":[1639,4],"end":[1644,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1419":{"id":1419,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"476":{"id":476,"crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[946,4],"end":[948,5]},"visibility":"default","docs":"Convert this `DateTime<Local>` instance into a `DateTime<FixedOffset>` instance.\n\nConversion is performed via [`DateTime::with_timezone`].","links":{"`DateTime::with_timezone`":396},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["src",{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1711":{"id":1711,"crate_id":0,"name":"hash","span":{"filename":"src/naive/mod.rs","begin":[215,33],"end":[215,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2003":{"id":2003,"crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[172,0],"end":[184,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2002],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1060":{"id":1060,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1352":{"id":1352,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1644":{"id":1644,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[20,21],"end":[20,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"use":{"source":"self::date::MAX_DATE","name":"MAX_DATE","id":1297,"is_glob":false}}},"409":{"id":409,"crate_id":0,"name":"naive_local","span":{"filename":"src/datetime/mod.rs","begin":[576,4],"end":[580,5]},"visibility":"public","docs":"Returns a view to the naive local datetime.\n\n# Panics\n\n[`DateTime`] internally stores the date and time in UTC with a [`NaiveDateTime`]. This\nmethod will panic if the offset from UTC would push the local datetime outside of the\nrepresentable range of a [`NaiveDateTime`].","links":{"`DateTime`":174,"`NaiveDateTime`":200},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1936":{"id":1936,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"701":{"id":701,"crate_id":0,"name":"weekday","span":{"filename":"src/format/parsed.rs","begin":[1061,4],"end":[1063,5]},"visibility":"public","docs":"Get the `weekday` field if set.\n\nSee also [`set_weekday()`](Parsed::set_weekday).","links":{"Parsed::set_weekday":702},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2228":{"id":2228,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"993":{"id":993,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1285":{"id":1285,"crate_id":0,"name":"fmt","span":{"filename":"src/naive/date/mod.rs","begin":[2221,4],"end":[2238,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1577":{"id":1577,"crate_id":0,"name":"MIN","span":{"filename":"src/naive/time/mod.rs","begin":[898,4],"end":[898,52]},"visibility":"public","docs":"The earliest possible `NaiveTime`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"value":"_"}}},"342":{"id":342,"crate_id":0,"name":"ordinal0","span":{"filename":"src/date.rs","begin":[418,4],"end":[420,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1869":{"id":1869,"crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[148,0],"end":[244,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"items":[1864,1865,1866,1867,1868],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"634":{"id":634,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"926":{"id":926,"crate_id":0,"name":"InternalFixed","span":{"filename":"src/format/mod.rs","begin":[259,0],"end":[261,1]},"visibility":"public","docs":"An opaque type representing fixed-format item types for internal uses only.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[],"where_predicates":[]},"impls":[955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,971,973,974,976,977,979]}}},"1218":{"id":1218,"crate_id":0,"name":"format","span":{"filename":"src/naive/date/mod.rs","begin":[1230,4],"end":[1232,5]},"visibility":"public","docs":"Formats the date with the specified format string.\nSee the [`format::strftime` module](crate::format::strftime)\non the supported escape sequences.\n\nThis returns a `DelayedFormat`,\nwhich gets converted to a string only when actual formatting happens.\nYou may use the `to_string` method to get a `String`,\nor just feed it into `print!` and other formatting macros.\n(In this way it avoids the redundant memory allocation.)\n\n# Panics\n\nConverting or formatting the returned `DelayedFormat` panics if the format string is wrong.\nBecause of this delayed failure, you are recommended to immediately use the `DelayedFormat`\nvalue.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(d.format(\"%Y-%m-%d\").to_string(), \"2015-09-05\");\nassert_eq!(d.format(\"%A, %-d %B, %C%y\").to_string(), \"Saturday, 5 September, 2015\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# let d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(format!(\"{}\", d.format(\"%Y-%m-%d\")), \"2015-09-05\");\nassert_eq!(format!(\"{}\", d.format(\"%A, %-d %B, %C%y\")), \"Saturday, 5 September, 2015\");\n```","links":{"crate::format::strftime":315},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"275":{"id":275,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[537,20],"end":[537,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::NaiveDate","name":"NaiveDate","id":187,"is_glob":false}}},"1510":{"id":1510,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[2082,0],"end":[2088,1]},"visibility":"default","docs":"The `Display` output of the naive date and time `dt` is the same as\n[`dt.format(\"%Y-%m-%d %H:%M:%S%.f\")`](crate::format::strftime).\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 11, 15).unwrap().and_hms_opt(7, 39, 24).unwrap();\nassert_eq!(format!(\"{}\", dt), \"2016-11-15 07:39:24\");\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveDate;\nlet dt =\n    NaiveDate::from_ymd_opt(2015, 6, 30).unwrap().and_hms_milli_opt(23, 59, 59, 1_500).unwrap();\nassert_eq!(format!(\"{}\", dt), \"2015-06-30 23:59:60.500\");\n```","links":{"crate::format::strftime":315},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1509],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"567":{"id":567,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1813,0],"end":[1819,1]},"visibility":"default","docs":"Accepts a relaxed form of RFC3339.\nA space or a 'T' are accepted as the separator between the date and time\nparts.\n\nAll of these examples are equivalent:\n```\n# use chrono::{DateTime, Utc};\n\"2012-12-12T12:12:12Z\".parse::<DateTime<Utc>>()?;\n\"2012-12-12 12:12:12Z\".parse::<DateTime<Utc>>()?;\n\"2012-12-12 12:12:12+0000\".parse::<DateTime<Utc>>()?;\n\"2012-12-12 12:12:12+00:00\".parse::<DateTime<Utc>>()?;\n# Ok::<(), chrono::ParseError>(())\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FromStr","id":568,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::offset::Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"items":[564,566],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1802":{"id":1802,"crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/local/mod.rs","begin":[173,4],"end":[176,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["local",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"859":{"id":859,"crate_id":0,"name":"InternalNumeric","span":{"filename":"src/format/mod.rs","begin":[159,0],"end":[161,1]},"visibility":"public","docs":"An opaque type representing numeric item types for internal uses only.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[],"where_predicates":[]},"impls":[888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,905,907,908,910,912]}}},"2094":{"id":2094,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[166,0],"end":[186,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2092,2093],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1151":{"id":1151,"crate_id":0,"name":"Impossible","span":{"filename":"src/format/mod.rs","begin":[407,4],"end":[407,14]},"visibility":"default","docs":"There is no possible date and time value with given set of fields.\n\nThis does not include the out-of-range conditions, which are trivially invalid.\nIt includes the case that there are one or more fields that are inconsistent to each other.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"208":{"id":208,"crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1818,4],"end":[1820,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1443":{"id":1443,"crate_id":0,"name":"cmp","span":{"filename":"src/naive/datetime/mod.rs","begin":[67,42],"end":[67,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1735":{"id":1735,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"500":{"id":500,"crate_id":0,"name":"with_ordinal0","span":{"filename":"src/datetime/mod.rs","begin":[1324,4],"end":[1326,5]},"visibility":"default","docs":"Makes a new `DateTime` with the day of year (starting from 0) changed.\n\nSee also the [`NaiveDate::with_ordinal0`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (`with_ordinal0(365)` in a non-leap year).\n- The value for `ordinal0` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_ordinal0`":499},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["ordinal0",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2027":{"id":2027,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"792":{"id":792,"crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[190,9],"end":[190,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[791],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1084":{"id":1084,"crate_id":0,"name":"1","span":{"filename":"src/format/mod.rs","begin":[342,21],"end":[342,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}},"1376":{"id":1376,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2171,0],"end":[2184,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":154,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1373,1374,1375],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1668":{"id":1668,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"433":{"id":433,"crate_id":0,"name":"parse_and_remainder","span":{"filename":"src/naive/datetime/mod.rs","begin":[313,4],"end":[317,5]},"visibility":"public","docs":"Parses a string with the specified format string and returns a new `NaiveDateTime`, and a\nslice with the remaining portion of the string.\nSee the [`format::strftime` module](crate::format::strftime)\non the supported escape sequences.\n\nSimilar to [`parse_from_str`](#method.parse_from_str).\n\n# Example\n\n```rust\n# use chrono::{NaiveDate, NaiveDateTime};\nlet (datetime, remainder) = NaiveDateTime::parse_and_remainder(\n    \"2015-02-18 23:16:09 trailing text\",\n    \"%Y-%m-%d %H:%M:%S\",\n)\n.unwrap();\nassert_eq!(\n    datetime,\n    NaiveDate::from_ymd_opt(2015, 2, 18).unwrap().and_hms_opt(23, 16, 9).unwrap()\n);\nassert_eq!(remainder, \" trailing text\");\n```","links":{"crate::format::strftime":315},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"725":{"id":725,"crate_id":0,"name":"to_fixed_offset","span":{"filename":"src/format/parsed.rs","begin":[860,4],"end":[862,5]},"visibility":"public","docs":"Returns a parsed fixed time zone offset out of given fields.\n\n# Errors\n\nThis method returns:\n- `OUT_OF_RANGE` if the offset is out of range for a `FixedOffset`.\n- `NOT_ENOUGH` if the offset field is not set.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1960":{"id":1960,"crate_id":0,"name":"Fri","span":{"filename":"src/weekday.rs","begin":[51,4],"end":[51,11]},"visibility":"default","docs":"Friday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"4","value":"4"}}}},"1017":{"id":1017,"crate_id":0,"name":"OptionalSeconds","span":{"filename":"src/format/mod.rs","begin":[311,4],"end":[311,19]},"visibility":"default","docs":"Format offset from UTC as hours and minutes, and optionally seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1309":{"id":1309,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"74":{"id":74,"crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"U"},"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}}}}}},"366":{"id":366,"crate_id":0,"name":"sub","span":{"filename":"src/date.rs","begin":[532,4],"end":[534,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1601":{"id":1601,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[212,24],"end":[212,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1600],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1893":{"id":1893,"crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[58,27],"end":[58,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::fmt::Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1892],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2185":{"id":2185,"crate_id":0,"name":"num_seconds_from_midnight","span":{"filename":"src/traits.rs","begin":[325,4],"end":[327,5]},"visibility":"default","docs":"Returns the number of non-leap seconds past the last midnight.\n\nEvery value in 00:00:00-23:59:59 maps to an integer in 0-86399.\n\nThis method is not intended to provide the real number of seconds since midnight on a given\nday. It does not take things like DST transitions into account.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"950":{"id":950,"crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[174,31],"end":[174,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"7":{"id":7,"crate_id":0,"name":"days","span":{"filename":"src/time_delta.rs","begin":[132,4],"end":[134,5]},"visibility":"public","docs":"Makes a new `TimeDelta` with the given number of days.\n\nEquivalent to `TimeDelta::seconds(days * 24 * 60 * 60)` with overflow\nchecks.\n\n# Panics\n\nPanics when the `TimeDelta` would be out of bounds.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["days",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1242":{"id":1242,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"299":{"id":299,"crate_id":0,"name":"pred_opt","span":{"filename":"src/date.rs","begin":[234,4],"end":[236,5]},"visibility":"public","docs":"Makes a new `Date` for the prior date.\n\nReturns `None` when `self` is the first representable date.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1534":{"id":1534,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1826":{"id":1826,"crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,9],"end":[43,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2118":{"id":2118,"crate_id":0,"name":"clone","span":{"filename":"src/month.rs","begin":[225,9],"end":[225,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"883":{"id":883,"crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[102,31],"end":[102,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1175":{"id":1175,"crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[398,16],"end":[398,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1467":{"id":1467,"crate_id":0,"name":"minute","span":{"filename":"src/naive/time/mod.rs","begin":[929,4],"end":[931,5]},"visibility":"default","docs":"Returns the minute number from 0 to 59.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(0, 0, 0).unwrap().minute(), 0);\nassert_eq!(NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().minute(), 56);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"232":{"id":232,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1759":{"id":1759,"crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/fixed.rs","begin":[134,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["_local",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"524":{"id":524,"crate_id":0,"name":"hash","span":{"filename":"src/datetime/mod.rs","begin":[1462,4],"end":[1464,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"816":{"id":816,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2051":{"id":2051,"crate_id":0,"name":"November","span":{"filename":"src/month.rs","begin":[62,4],"end":[62,17]},"visibility":"default","docs":"November","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"10","value":"10"}}}},"1108":{"id":1108,"crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[328,16],"end":[328,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1400":{"id":1400,"crate_id":0,"name":"timestamp_nanos_opt","span":{"filename":"src/naive/datetime/mod.rs","begin":[417,4],"end":[419,5]},"visibility":"public","docs":"Returns the number of non-leap *nanoseconds* since midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\n# Errors\n\nAn `i64` with nanosecond precision can span a range of ~584 years. This function returns\n`None` on an out of range `NaiveDateTime`.\n\nThe dates that can be represented as nanoseconds are between 1677-09-21T00:12:43.145224192\nand 2262-04-11T23:47:16.854775807.","links":{},"attrs":["#[deprecated(since = \"0.4.35\", note =\n\"use `.and_utc().timestamp_nanos_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.35","note":"use `.and_utc().timestamp_nanos_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"i64"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"165":{"id":165,"crate_id":0,"name":"TimeZone","span":{"filename":"src/offset/mod.rs","begin":[279,0],"end":[596,1]},"visibility":"public","docs":"The time zone.\n\nThe methods here are the primary constructors for the [`DateTime`] type.","links":{"`DateTime`":174},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_dyn_compatible":false,"items":[1899,1900,284,1901,1902,1903,1904,1905,1387,385,1906,421,425,423,1907,1908,1909,1910,1911,377,1912,1913,1914,1915],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[1763,1806,1841]}}},"457":{"id":457,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"ToString","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[92],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1692":{"id":1692,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"749":{"id":749,"crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[128,27],"end":[128,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1984":{"id":1984,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1041":{"id":1041,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[296,29],"end":[296,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1040],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"98":{"id":98,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[52,9],"end":[52,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[97],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1333":{"id":1333,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2135,0],"end":[2150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":154,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1330,1331,1332],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1625":{"id":1625,"crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1382,4],"end":[1382,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"390":{"id":390,"crate_id":0,"name":"timestamp_nanos_opt","span":{"filename":"src/datetime/mod.rs","begin":[350,4],"end":[364,5]},"visibility":"public","docs":"Returns the number of non-leap-nanoseconds since January 1, 1970 UTC.\n\n# Errors\n\nAn `i64` with nanosecond precision can span a range of ~584 years. This function returns\n`None` on an out of range `DateTime`.\n\nThe dates that can be represented as nanoseconds are between 1677-09-21T00:12:43.145224192\nand 2262-04-11T23:47:16.854775807.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Utc};\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1)\n    .unwrap()\n    .and_hms_nano_opt(0, 0, 1, 444)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\nassert_eq!(dt.timestamp_nanos_opt(), Some(1_000_000_444));\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9)\n    .unwrap()\n    .and_hms_nano_opt(1, 46, 40, 555)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\nassert_eq!(dt.timestamp_nanos_opt(), Some(1_000_000_000_000_000_555));\n\nlet dt = NaiveDate::from_ymd_opt(1677, 9, 21)\n    .unwrap()\n    .and_hms_nano_opt(0, 12, 43, 145_224_192)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\nassert_eq!(dt.timestamp_nanos_opt(), Some(-9_223_372_036_854_775_808));\n\nlet dt = NaiveDate::from_ymd_opt(2262, 4, 11)\n    .unwrap()\n    .and_hms_nano_opt(23, 47, 16, 854_775_807)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\nassert_eq!(dt.timestamp_nanos_opt(), Some(9_223_372_036_854_775_807));\n\nlet dt = NaiveDate::from_ymd_opt(1677, 9, 21)\n    .unwrap()\n    .and_hms_nano_opt(0, 12, 43, 145_224_191)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\nassert_eq!(dt.timestamp_nanos_opt(), None);\n\nlet dt = NaiveDate::from_ymd_opt(2262, 4, 11)\n    .unwrap()\n    .and_hms_nano_opt(23, 47, 16, 854_775_808)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\nassert_eq!(dt.timestamp_nanos_opt(), None);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"i64"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1917":{"id":1917,"crate_id":0,"name":"round_subsecs","span":{"filename":"src/round.rs","begin":[33,4],"end":[33,48]},"visibility":"default","docs":"Return a copy rounded to the specified number of subsecond digits. With\n9 or more digits, self is returned unmodified. Halfway values are\nrounded up (away from zero).\n\n# Example\n``` rust\n# use chrono::{SubsecRound, Timelike, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 11)\n    .unwrap()\n    .and_hms_milli_opt(12, 0, 0, 154)\n    .unwrap()\n    .and_utc();\nassert_eq!(dt.round_subsecs(2).nanosecond(), 150_000_000);\nassert_eq!(dt.round_subsecs(1).nanosecond(), 200_000_000);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["digits",{"primitive":"u16"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"682":{"id":682,"crate_id":0,"name":"year_div_100","span":{"filename":"src/format/parsed.rs","begin":[981,4],"end":[983,5]},"visibility":"public","docs":"Get the `year_div_100` field if set.\n\nSee also [`set_year_div_100()`](Parsed::set_year_div_100).","links":{"Parsed::set_year_div_100":685},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2209":{"id":2209,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[573,38],"end":[573,46]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"inner":{"use":{"source":"offset::TimeZone","name":"TimeZone","id":165,"is_glob":false}}},"974":{"id":974,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[258,23],"end":[258,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1266":{"id":1266,"crate_id":0,"name":"iso_week","span":{"filename":"src/naive/date/mod.rs","begin":[1623,4],"end":[1625,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"31":{"id":31,"crate_id":0,"name":"checked_div","span":{"filename":"src/time_delta.rs","begin":[392,4],"end":[408,5]},"visibility":"public","docs":"Divide a `TimeDelta` with a i32, returning `None` if dividing by 0.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["rhs",{"primitive":"i32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"323":{"id":323,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"615":{"id":615,"crate_id":0,"name":"fmt","span":{"filename":"src/format/formatting.rs","begin":[322,4],"end":[326,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1850":{"id":1850,"crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[35,0],"end":[35,27]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"use":{"source":"self::local::Local","name":"Local","id":256,"is_glob":false}}},"907":{"id":907,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[158,20],"end":[158,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[906],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2142":{"id":2142,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1199":{"id":1199,"crate_id":0,"name":"parse_from_str","span":{"filename":"src/naive/date/mod.rs","begin":[494,4],"end":[498,5]},"visibility":"public","docs":"Parses a string with the specified format string and returns a new `NaiveDate`.\nSee the [`format::strftime` module](crate::format::strftime)\non the supported escape sequences.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet parse_from_str = NaiveDate::parse_from_str;\n\nassert_eq!(\n    parse_from_str(\"2015-09-05\", \"%Y-%m-%d\"),\n    Ok(NaiveDate::from_ymd_opt(2015, 9, 5).unwrap())\n);\nassert_eq!(\n    parse_from_str(\"5sep2015\", \"%d%b%Y\"),\n    Ok(NaiveDate::from_ymd_opt(2015, 9, 5).unwrap())\n);\n```\n\nTime and offset is ignored for the purpose of parsing.\n\n```\n# use chrono::NaiveDate;\n# let parse_from_str = NaiveDate::parse_from_str;\nassert_eq!(\n    parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),\n    Ok(NaiveDate::from_ymd_opt(2014, 5, 17).unwrap())\n);\n```\n\nOut-of-bound dates or insufficient fields are errors.\n\n```\n# use chrono::NaiveDate;\n# let parse_from_str = NaiveDate::parse_from_str;\nassert!(parse_from_str(\"2015/9\", \"%Y/%m\").is_err());\nassert!(parse_from_str(\"2015/9/31\", \"%Y/%m/%d\").is_err());\n```\n\nAll parsed fields should be consistent to each other, otherwise it's an error.\n\n```\n# use chrono::NaiveDate;\n# let parse_from_str = NaiveDate::parse_from_str;\nassert!(parse_from_str(\"Sat, 09 Aug 2013\", \"%a, %d %b %Y\").is_err());\n```","links":{"crate::format::strftime":315},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1491":{"id":1491,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1873,0],"end":[1878,1]},"visibility":"default","docs":"Subtract-assign `std::time::Duration` from `NaiveDateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDateTime::checked_sub_signed`] to get an `Option` instead.","links":{"`NaiveDateTime::checked_sub_signed`":209},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"SubAssign","id":144,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1490],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"256":{"id":256,"crate_id":0,"name":"Local","span":{"filename":"src/offset/local/mod.rs","begin":[122,0],"end":[122,17]},"visibility":"public","docs":"The local timescale.\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non the Local struct is the preferred way to construct `DateTime<Local>`\ninstances.\n\n# Example\n\n```\nuse chrono::{DateTime, Local, TimeZone};\n\nlet dt1: DateTime<Local> = Local::now();\nlet dt2: DateTime<Local> = Local.timestamp_opt(0, 0).unwrap();\nassert!(dt1 >= dt2);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":[1779,1780,1781,1782,1783,1784,1785,1786,1787,1788,1789,1790,1791,1792,1793,1794,1795,1797,1799,1806]}}},"548":{"id":548,"crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1704,4],"end":[1704,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1783":{"id":1783,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2075":{"id":2075,"crate_id":0,"name":"from_str","span":{"filename":"src/format/mod.rs","begin":[534,4],"end":[554,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"Result","id":39,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":568,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"840":{"id":840,"crate_id":0,"name":"YearMod100","span":{"filename":"src/format/mod.rs","begin":[110,4],"end":[110,14]},"visibility":"default","docs":"Gregorian year modulo 100 (FW=PW=2). Cannot be negative.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1132":{"id":1132,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"189":{"id":189,"crate_id":0,"name":"checked_add_signed","span":{"filename":"src/naive/date/mod.rs","begin":[1043,4],"end":[1049,5]},"visibility":"public","docs":"Adds the number of whole days in the given `TimeDelta` to the current date.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{NaiveDate, TimeDelta};\n\nlet d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(\n    d.checked_add_signed(TimeDelta::try_days(40).unwrap()),\n    Some(NaiveDate::from_ymd_opt(2015, 10, 15).unwrap())\n);\nassert_eq!(\n    d.checked_add_signed(TimeDelta::try_days(-40).unwrap()),\n    Some(NaiveDate::from_ymd_opt(2015, 7, 27).unwrap())\n);\nassert_eq!(d.checked_add_signed(TimeDelta::try_days(1_000_000_000).unwrap()), None);\nassert_eq!(d.checked_add_signed(TimeDelta::try_days(-1_000_000_000).unwrap()), None);\nassert_eq!(NaiveDate::MAX.checked_add_signed(TimeDelta::try_days(1).unwrap()), None);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1424":{"id":1424,"crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[52,0],"end":[80,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Timelike","id":267,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"SubsecRound","id":258,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[445,446],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1716":{"id":1716,"crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/mod.rs","begin":[215,50],"end":[215,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::option::Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"481":{"id":481,"crate_id":0,"name":"day","span":{"filename":"src/datetime/mod.rs","begin":[1186,4],"end":[1188,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2008":{"id":2008,"crate_id":0,"name":"from_i64","span":{"filename":"src/weekday.rs","begin":[211,4],"end":[222,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["n",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"773":{"id":773,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1065":{"id":1065,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[317,16],"end":[317,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1357":{"id":1357,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1649":{"id":1649,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[23,0],"end":[23,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"self::isoweek::IsoWeek","name":"IsoWeek","id":345,"is_glob":false}}},"414":{"id":414,"crate_id":0,"name":"TimezoneOffsetColon","span":{"filename":"src/format/mod.rs","begin":[219,4],"end":[219,23]},"visibility":"default","docs":"Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace.\nThe offset is limited from `-24:00` to `+24:00`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"706":{"id":706,"crate_id":0,"name":"set_day","span":{"filename":"src/format/parsed.rs","begin":[410,4],"end":[415,5]},"visibility":"public","docs":"Set the [`day`](Parsed::day) of the month field to the given value.\n\n# Errors\n\nReturns `OUT_OF_RANGE` if `value` is not in the range 1-31.\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"Parsed::day":705},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1941":{"id":1941,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"ToString","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[92],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"998":{"id":998,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2233":{"id":2233,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"55":{"id":55,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1290":{"id":1290,"crate_id":0,"name":"from_str","span":{"filename":"src/naive/date/mod.rs","begin":[2288,4],"end":[2303,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"347":{"id":347,"crate_id":0,"name":"with_month","span":{"filename":"src/date.rs","begin":[436,4],"end":[438,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["month",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1582":{"id":1582,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"639":{"id":639,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1874":{"id":1874,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2166":{"id":2166,"crate_id":0,"name":"day0","span":{"filename":"src/traits.rs","begin":[65,4],"end":[65,26]},"visibility":"default","docs":"Returns the day of month starting from 0.\n\nThe return value ranges from 0 to 30. (The last day of month differs by months.)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"931":{"id":931,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1223":{"id":1223,"crate_id":0,"name":"NaiveWeek","span":{"filename":"src/naive/mod.rs","begin":[33,0],"end":[36,1]},"visibility":"public","docs":"A week represented by a [`NaiveDate`] and a [`Weekday`] which is the first\nday of the week.","links":{"`NaiveDate`":187,"`Weekday`":269},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[],"where_predicates":[]},"impls":[1660,1661,1662,1663,1664,1665,1666,1667,1668,1669,1670,1671,1672,1673,1674,1675,1677,1678,1680,1681,1683,1684,1686]}}},"1515":{"id":1515,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[2147,0],"end":[2151,1]},"visibility":"default","docs":"The default value for a NaiveDateTime is one with epoch 0\nthat is, 1st of January 1970 at 00:00:00.\n\n# Example\n\n```rust\nuse chrono::NaiveDateTime;\n\nassert_eq!(NaiveDateTime::default(), NaiveDateTime::UNIX_EPOCH);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":103,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1514],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"280":{"id":280,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[538,28],"end":[538,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::TimeZone","name":"TimeZone","id":165,"is_glob":false}}},"572":{"id":572,"crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[1845,4],"end":[1860,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["t",{"resolved_path":{"path":"SystemTime","id":573,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"864":{"id":864,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1156":{"id":1156,"crate_id":0,"name":"BadFormat","span":{"filename":"src/format/mod.rs","begin":[426,4],"end":[426,13]},"visibility":"default","docs":"There was an error on the formatting string, or there were non-supported formatting items.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1448":{"id":1448,"crate_id":0,"name":"year","span":{"filename":"src/naive/datetime/mod.rs","begin":[983,4],"end":[985,5]},"visibility":"default","docs":"Returns the year number in the [calendar date](./struct.NaiveDate.html#calendar-date).\n\nSee also the [`NaiveDate::year`](./struct.NaiveDate.html#method.year) method.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.year(), 2015);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"213":{"id":213,"crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1207,4],"end":[1207,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1740":{"id":1740,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"505":{"id":505,"crate_id":0,"name":"nanosecond","span":{"filename":"src/datetime/mod.rs","begin":[1343,4],"end":[1345,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"797":{"id":797,"crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[390,0],"end":[413,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":154,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[795,796],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2032":{"id":2032,"crate_id":0,"name":"eq","span":{"filename":"src/weekday.rs","begin":[240,16],"end":[240,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1089":{"id":1089,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[369,0],"end":[383,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}},"items":[1088],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"146":{"id":146,"crate_id":0,"name":"mul","span":{"filename":"src/time_delta.rs","begin":[534,4],"end":[536,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"primitive":"i32"}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"438":{"id":438,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1096,0],"end":[1170,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"","id":165,"args":null}}},"bounds":[{"trait_bound":{"trait":{"path":"fmt::Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[436,437],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1673":{"id":1673,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"730":{"id":730,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1965":{"id":1965,"crate_id":0,"name":"number_from_monday","span":{"filename":"src/weekday.rs","begin":[103,4],"end":[105,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)\n\n`w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.number_from_monday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 7","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1022":{"id":1022,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"79":{"id":79,"crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"Infallible","id":80,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1314":{"id":1314,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1606":{"id":1606,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[212,47],"end":[212,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"371":{"id":371,"crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[544,0],"end":[552,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"","id":165,"args":null}}},"bounds":[{"trait_bound":{"trait":{"path":"fmt::Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[370],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1898":{"id":1898,"crate_id":0,"name":"fix","span":{"filename":"src/offset/mod.rs","begin":[273,4],"end":[273,33]},"visibility":"default","docs":"Returns the fixed offset from UTC to the local time stored.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"2190":{"id":2190,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[543,0],"end":[543,19]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"use":{"source":"date::Date","name":"Date","id":162,"is_glob":false}}},"955":{"id":955,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1247":{"id":1247,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[94,9],"end":[94,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1246],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"12":{"id":12,"crate_id":0,"name":"try_minutes","span":{"filename":"src/time_delta.rs","begin":[195,4],"end":[197,5]},"visibility":"public","docs":"Makes a new `TimeDelta` with the given number of minutes.\n\nEquivalent to `TimeDelta::try_seconds(minutes * 60)` with overflow checks.\n\n# Errors\n\nReturns `None` when the `TimeDelta` would be out of bounds.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["minutes",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1539":{"id":1539,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"304":{"id":304,"crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/date.rs","begin":[275,4],"end":[278,5]},"visibility":"public","docs":"Subtracts given `TimeDelta` from the current date.\n\nReturns `None` when it will result in overflow.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"596":{"id":596,"crate_id":0,"name":"new","span":{"filename":"src/format/formatting.rs","begin":[52,4],"end":[54,5]},"visibility":"public","docs":"Makes a new `DelayedFormat` value out of local date and time.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["date",{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}],["time",{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1831":{"id":1831,"crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,22],"end":[43,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1830],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"888":{"id":888,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2123":{"id":2123,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[225,29],"end":[225,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1180":{"id":1180,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[398,34],"end":[398,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"237":{"id":237,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1472":{"id":1472,"crate_id":0,"name":"with_minute","span":{"filename":"src/naive/datetime/mod.rs","begin":[1487,4],"end":[1489,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the minute number changed.\n\nSee also the [`NaiveTime::with_minute`] method.\n\n# Errors\n\nReturns `None` if the value for `minute` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(\n    dt.with_minute(45),\n    Some(\n        NaiveDate::from_ymd_opt(2015, 9, 8)\n            .unwrap()\n            .and_hms_milli_opt(12, 45, 56, 789)\n            .unwrap()\n    )\n);\nassert_eq!(dt.with_minute(60), None);\n```","links":{"`NaiveTime::with_minute`":508},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["min",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"529":{"id":529,"crate_id":0,"name":"add_assign","span":{"filename":"src/datetime/mod.rs","begin":[1539,4],"end":[1543,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1764":{"id":1764,"crate_id":0,"name":"fix","span":{"filename":"src/offset/fixed.rs","begin":[150,4],"end":[152,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2056":{"id":2056,"crate_id":0,"name":"name","span":{"filename":"src/month.rs","begin":[148,4],"end":[163,5]},"visibility":"public","docs":"Get the name of the month\n\n```\nuse chrono::Month;\n\nassert_eq!(Month::January.name(), \"January\")\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'static","is_mutable":false,"type":{"primitive":"str"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"821":{"id":821,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1113":{"id":1113,"crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[328,38],"end":[328,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"170":{"id":170,"crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[512,0],"end":[519,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[168,169],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1405":{"id":1405,"crate_id":0,"name":"checked_add_offset","span":{"filename":"src/naive/datetime/mod.rs","begin":[578,4],"end":[586,5]},"visibility":"public","docs":"Adds given `FixedOffset` to the current datetime.\nReturns `None` if the result would be outside the valid range for [`NaiveDateTime`].\n\nThis method is similar to [`checked_add_signed`](#method.checked_add_offset), but preserves\nleap seconds.","links":{"`NaiveDateTime`":200},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1697":{"id":1697,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"462":{"id":462,"crate_id":0,"name":"default","span":{"filename":"src/datetime/mod.rs","begin":[872,4],"end":[874,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1989":{"id":1989,"crate_id":0,"name":"from_str","span":{"filename":"src/format/mod.rs","begin":[497,4],"end":[503,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"Result","id":39,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":568,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"754":{"id":754,"crate_id":0,"name":"hash","span":{"filename":"src/format/parsed.rs","begin":[128,47],"end":[128,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1046":{"id":1046,"crate_id":0,"name":"Colon","span":{"filename":"src/format/mod.rs","begin":[322,4],"end":[322,9]},"visibility":"default","docs":"Colon (`:`) as separator","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1630":{"id":1630,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1455,0],"end":[1462,1]},"visibility":"default","docs":"Subtracts another `NaiveTime` from the current time.\nReturns a `TimeDelta` within +/- 1 day.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\nThe implementation is a wrapper around\n[`NaiveTime::signed_duration_since`](#method.signed_duration_since).\n\n# Example\n\n```\nuse chrono::{NaiveTime, TimeDelta};\n\nlet from_hmsm = |h, m, s, milli| NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap();\n\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 7, 900), TimeDelta::zero());\nassert_eq!(\n    from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 7, 875),\n    TimeDelta::try_milliseconds(25).unwrap()\n);\nassert_eq!(\n    from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 6, 925),\n    TimeDelta::try_milliseconds(975).unwrap()\n);\nassert_eq!(\n    from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 0, 900),\n    TimeDelta::try_seconds(7).unwrap()\n);\nassert_eq!(\n    from_hmsm(3, 5, 7, 900) - from_hmsm(3, 0, 7, 900),\n    TimeDelta::try_seconds(5 * 60).unwrap()\n);\nassert_eq!(\n    from_hmsm(3, 5, 7, 900) - from_hmsm(0, 5, 7, 900),\n    TimeDelta::try_seconds(3 * 3600).unwrap()\n);\nassert_eq!(\n    from_hmsm(3, 5, 7, 900) - from_hmsm(4, 5, 7, 900),\n    TimeDelta::try_seconds(-3600).unwrap()\n);\nassert_eq!(\n    from_hmsm(3, 5, 7, 900) - from_hmsm(2, 4, 6, 800),\n    TimeDelta::try_seconds(3600 + 60 + 1).unwrap() + TimeDelta::try_milliseconds(100).unwrap()\n);\n```\n\nLeap seconds are handled, but the subtraction assumes that\nthere were no other leap seconds happened.\n\n```\n# use chrono::{TimeDelta, NaiveTime};\n# let from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\nassert_eq!(from_hmsm(3, 0, 59, 1_000) - from_hmsm(3, 0, 59, 0), TimeDelta::try_seconds(1).unwrap());\nassert_eq!(from_hmsm(3, 0, 59, 1_500) - from_hmsm(3, 0, 59, 0),\n           TimeDelta::try_milliseconds(1500).unwrap());\nassert_eq!(from_hmsm(3, 0, 59, 1_000) - from_hmsm(3, 0, 0, 0), TimeDelta::try_seconds(60).unwrap());\nassert_eq!(from_hmsm(3, 0, 0, 0) - from_hmsm(2, 59, 59, 1_000), TimeDelta::try_seconds(1).unwrap());\nassert_eq!(from_hmsm(3, 0, 59, 1_000) - from_hmsm(2, 59, 59, 1_000),\n           TimeDelta::try_seconds(61).unwrap());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1628,1629],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"395":{"id":395,"crate_id":0,"name":"timezone","span":{"filename":"src/datetime/mod.rs","begin":[403,4],"end":[405,5]},"visibility":"public","docs":"Retrieves an associated time zone.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Tz"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"687":{"id":687,"crate_id":0,"name":"isoyear","span":{"filename":"src/format/parsed.rs","begin":[999,4],"end":[1001,5]},"visibility":"public","docs":"Get the `isoyear` field that is part of an [ISO 8601 week date] if set.\n\nSee also [`set_isoyear()`](Parsed::set_isoyear).\n\n[ISO 8601 week date]: crate::NaiveDate#week-date","links":{"crate::NaiveDate#week-date":187,"Parsed::set_isoyear":690},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1922":{"id":1922,"crate_id":0,"name":"duration_trunc","span":{"filename":"src/round.rs","begin":[155,4],"end":[155,76]},"visibility":"default","docs":"Return a copy truncated by TimeDelta.\n\n# Example\n``` rust\n# use chrono::{DurationRound, TimeDelta, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 11)\n    .unwrap()\n    .and_hms_milli_opt(12, 0, 0, 154)\n    .unwrap()\n    .and_utc();\nassert_eq!(\n    dt.duration_trunc(TimeDelta::try_milliseconds(10).unwrap()).unwrap().to_string(),\n    \"2018-01-11 12:00:00.150 UTC\"\n);\nassert_eq!(\n    dt.duration_trunc(TimeDelta::try_days(1).unwrap()).unwrap().to_string(),\n    \"2018-01-11 00:00:00 UTC\"\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["duration",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Result","id":39,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":585,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"979":{"id":979,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[258,38],"end":[258,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[978],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2214":{"id":2214,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[580,0],"end":[580,35]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"use":{"source":"weekday::ParseWeekdayError","name":"ParseWeekdayError","id":1988,"is_glob":false}}},"36":{"id":36,"crate_id":0,"name":"is_zero","span":{"filename":"src/time_delta.rs","begin":[442,4],"end":[444,5]},"visibility":"public","docs":"Returns `true` if the `TimeDelta` equals `TimeDelta::zero()`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1271":{"id":1271,"crate_id":0,"name":"Output","span":{"filename":"src/naive/date/mod.rs","begin":[1985,4],"end":[1985,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"328":{"id":328,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1563":{"id":1563,"crate_id":0,"name":"from_hms_milli","span":{"filename":"src/naive/time/mod.rs","begin":[296,4],"end":[298,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and millisecond.\n\nThe millisecond part can exceed 1,000\nin order to represent the [leap second](#leap-second-handling).\n\n# Panics\n\nPanics on invalid hour, minute, second and/or millisecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_hms_milli_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_hms_milli_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"620":{"id":620,"crate_id":0,"name":"Nanosecond3","span":{"filename":"src/format/mod.rs","begin":[205,4],"end":[205,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1855":{"id":1855,"crate_id":0,"name":"1","span":{"filename":"src/offset/mod.rs","begin":[68,17],"end":[68,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"2147":{"id":2147,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"912":{"id":912,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[163,0],"end":[167,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[911],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1204":{"id":1204,"crate_id":0,"name":"and_hms","span":{"filename":"src/naive/date/mod.rs","begin":[725,4],"end":[727,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute and second.\n\nNo [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;\nuse `NaiveDate::and_hms_*` methods with a subsecond parameter instead.\n\n# Panics\n\nPanics on invalid hour, minute and/or second.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `and_hms_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `and_hms_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1496":{"id":1496,"crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1929,4],"end":[1931,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":138,"args":null}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"261":{"id":261,"crate_id":0,"name":"SecondsFormat","span":{"filename":"src/format/formatting.rs","begin":[460,0],"end":[480,1]},"visibility":"public","docs":"Specific formatting options for seconds. This may be extended in the\nfuture, so exhaustive matching in external code is not recommended.\n\nSee the `TimeZone::to_rfc3339_opts` function for usage.","links":{},"attrs":["#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"has_stripped_variants":true,"variants":[619,621,623,625,627],"impls":[629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,645,646,648,649,650,652,654]}}},"1788":{"id":1788,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"553":{"id":553,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1712,0],"end":[1719,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[551,552],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2080":{"id":2080,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,20],"end":[31,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"845":{"id":845,"crate_id":0,"name":"Day","span":{"filename":"src/format/mod.rs","begin":[121,4],"end":[121,7]},"visibility":"default","docs":"Day of the month (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1137":{"id":1137,"crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[386,16],"end":[386,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1429":{"id":1429,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"194":{"id":194,"crate_id":0,"name":"sub","span":{"filename":"src/naive/date/mod.rs","begin":[2062,4],"end":[2064,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"486":{"id":486,"crate_id":0,"name":"iso_week","span":{"filename":"src/datetime/mod.rs","begin":[1206,4],"end":[1208,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"778":{"id":778,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2013":{"id":2013,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1070":{"id":1070,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[317,29],"end":[317,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1069],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"127":{"id":127,"crate_id":0,"name":"Output","span":{"filename":"src/time_delta.rs","begin":[489,4],"end":[489,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1362":{"id":1362,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2166,22],"end":[2166,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1361],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"419":{"id":419,"crate_id":0,"name":"MAX_UTC","span":{"filename":"src/datetime/mod.rs","begin":[712,4],"end":[712,94]},"visibility":"public","docs":"The maximum possible `DateTime<Utc>`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"value":"_"}}},"1654":{"id":1654,"crate_id":0,"name":"checked_first_day","span":{"filename":"src/naive/mod.rs","begin":[86,4],"end":[94,5]},"visibility":"public","docs":"Returns a date representing the first day of the week or\n`None` if the date is out of `NaiveDate`'s range\n(more than ca. 262,000 years away from common era).\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet date = NaiveDate::MIN;\nlet week = date.week(Weekday::Mon);\nif let Some(first_day) = week.checked_first_day() {\n    assert!(first_day == date);\n} else {\n    // error handling code\n    return;\n};\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1946":{"id":1946,"crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[244,23],"end":[244,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"711":{"id":711,"crate_id":0,"name":"set_hour","span":{"filename":"src/format/parsed.rs","begin":[461,4],"end":[469,5]},"visibility":"public","docs":"Set the [`hour_div_12`](Parsed::hour_div_12) and [`hour_mod_12`](Parsed::hour_mod_12)\nfields to the given value for a 24-hour clock.\n\n# Errors\n\nMay return `OUT_OF_RANGE` if `value` is not in the range 0-23.\nCurrently only checks the value is not out of range for a `u32`.\n\nReturns `IMPOSSIBLE` one of the fields was already set to a different value.","links":{"Parsed::hour_div_12":707,"Parsed::hour_mod_12":709},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2238":{"id":2238,"crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[664,9],"end":[664,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1003":{"id":1003,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[283,9],"end":[283,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1002],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1295":{"id":1295,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[952,0],"end":[966,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1294],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1587":{"id":1587,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"352":{"id":352,"crate_id":0,"name":"with_ordinal0","span":{"filename":"src/date.rs","begin":[461,4],"end":[463,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["ordinal0",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1879":{"id":1879,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"644":{"id":644,"crate_id":0,"name":"clone","span":{"filename":"src/format/formatting.rs","begin":[458,9],"end":[458,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2171":{"id":2171,"crate_id":0,"name":"with_month0","span":{"filename":"src/traits.rs","begin":[178,4],"end":[178,55]},"visibility":"default","docs":"Makes a new value with the month number (starting from 0) changed.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (for example `month0(3)` when day of the month is 31).\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n- The value for `month0` is out of range.\n\n[`DateTime<Tz>`]: crate::DateTime","links":{"crate::DateTime":174},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["month0",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"936":{"id":936,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1228":{"id":1228,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[123,0],"end":[1442,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,399,402,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,189,195,1216,1217,765,1218,1219,1221,1224,1225,1226,1227],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"285":{"id":285,"crate_id":0,"name":"date","span":{"filename":"src/datetime/mod.rs","begin":[149,4],"end":[151,5]},"visibility":"public","docs":"Retrieves the date component with an associated timezone.\n\nUnless you are immediately planning on turning this into a `DateTime`\nwith the same timezone you should use the [`date_naive`](DateTime::date_naive) method.\n\n[`NaiveDate`] is a more well-defined type, and has more traits implemented on it,\nso should be preferred to [`Date`] any time you truly want to operate on dates.\n\n# Panics\n\n[`DateTime`] internally stores the date and time in UTC with a [`NaiveDateTime`]. This\nmethod will panic if the offset from UTC would push the local date outside of the\nrepresentable range of a [`Date`].","links":{"`Date`":162,"`DateTime`":174,"`NaiveDateTime`":200,"`NaiveDate`":187,"DateTime::date_naive":382},"attrs":["#[inline]","#[deprecated(since = \"0.4.23\", note = \"Use `date_naive()` instead\")]","#[allow(deprecated)]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use `date_naive()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"577":{"id":577,"crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[1872,4],"end":[1881,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["dt",{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"SystemTime","id":573,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1812":{"id":1812,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"869":{"id":869,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2104":{"id":2104,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1161":{"id":1161,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"218":{"id":218,"crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1329,4],"end":[1329,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1453":{"id":1453,"crate_id":0,"name":"ordinal","span":{"filename":"src/naive/datetime/mod.rs","begin":[1083,4],"end":[1085,5]},"visibility":"default","docs":"Returns the day of year starting from 1.\n\nThe return value ranges from 1 to 366. (The last day of year differs by years.)\n\nSee also the [`NaiveDate::ordinal`](./struct.NaiveDate.html#method.ordinal) method.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.ordinal(), 268);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"510":{"id":510,"crate_id":0,"name":"with_second","span":{"filename":"src/naive/time/mod.rs","begin":[1067,4],"end":[1073,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with the second number changed.\n\nAs with the [`second`](#method.second) method,\nthe input range is restricted to 0 through 59.\n\n# Errors\n\nReturns `None` if the value for `second` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(\n    dt.with_second(17),\n    Some(NaiveTime::from_hms_nano_opt(23, 56, 17, 12_345_678).unwrap())\n);\nassert_eq!(dt.with_second(60), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1745":{"id":1745,"crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[22,9],"end":[22,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2037":{"id":2037,"crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[248,0],"end":[252,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2036],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"802":{"id":802,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[65,29],"end":[65,40]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[allow(deprecated)]"],"deprecation":null,"inner":{"use":{"source":"formatting::format_item","name":"format_item","id":618,"is_glob":false}}},"1094":{"id":1094,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1386":{"id":1386,"crate_id":0,"name":"new","span":{"filename":"src/naive/datetime/mod.rs","begin":[99,4],"end":[101,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from date and time components.\nEquivalent to [`date.and_time(time)`](./struct.NaiveDate.html#method.and_time)\nand many other helper constructors on `NaiveDate`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, NaiveTime};\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nlet t = NaiveTime::from_hms_milli_opt(12, 34, 56, 789).unwrap();\n\nlet dt = NaiveDateTime::new(d, t);\nassert_eq!(dt.date(), d);\nassert_eq!(dt.time(), t);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["date",{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}],["time",{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"151":{"id":151,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[539,0],"end":[545,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Div","id":152,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[149,150],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1678":{"id":1678,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[32,16],"end":[32,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"443":{"id":443,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1970":{"id":1970,"crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[58,0],"end":[170,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1963,1964,1965,1966,1967,1968,1969],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"735":{"id":735,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1027":{"id":1027,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1319":{"id":1319,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2130,22],"end":[2130,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1318],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1611":{"id":1611,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[902,0],"end":[1137,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hour12","num_seconds_from_midnight"],"trait":{"path":"Timelike","id":267,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1465,1467,1469,1609,506,508,510,513,1610],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1903":{"id":1903,"crate_id":0,"name":"yo_opt","span":{"filename":"src/offset/mod.rs","begin":[363,4],"end":[368,5]},"visibility":"default","docs":"Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date and/or invalid DOY.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_local_datetime()` with a `NaiveDateTime` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` with a `NaiveDateTime` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"960":{"id":960,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2195":{"id":2195,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[552,33],"end":[552,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[doc(no_inline)]"],"deprecation":null,"inner":{"use":{"source":"datetime::MIN_DATETIME","name":"MIN_DATETIME","id":588,"is_glob":false}}},"17":{"id":17,"crate_id":0,"name":"microseconds","span":{"filename":"src/time_delta.rs","begin":[259,4],"end":[263,5]},"visibility":"public","docs":"Makes a new `TimeDelta` with the given number of microseconds.\n\nThe number of microseconds acceptable by this constructor is less than\nthe total number that can actually be stored in a `TimeDelta`, so it is\nnot possible to specify a value that would be out of bounds. This\nfunction is therefore infallible.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["microseconds",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1252":{"id":1252,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[94,30],"end":[94,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","gt","ge"],"trait":{"path":"PartialOrd","id":114,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1251],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"309":{"id":309,"crate_id":0,"name":"MIN_UTC","span":{"filename":"src/date.rs","begin":[316,4],"end":[316,78]},"visibility":"public","docs":"The minimum possible `Date`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"value":"_"}}},"1544":{"id":1544,"crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,9],"end":[19,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1543],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"601":{"id":601,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1836":{"id":1836,"crate_id":0,"name":"from_offset","span":{"filename":"src/offset/utc.rs","begin":[117,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["_state",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2128":{"id":2128,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[225,39],"end":[225,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2127],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"893":{"id":893,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1477":{"id":1477,"crate_id":0,"name":"add","span":{"filename":"src/naive/datetime/mod.rs","begin":[1649,4],"end":[1653,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"242":{"id":242,"crate_id":0,"name":"clone","span":{"filename":"src/time_delta.rs","begin":[602,16],"end":[602,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1769":{"id":1769,"crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[171,0],"end":[175,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1768],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"534":{"id":534,"crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1576,4],"end":[1576,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}}},"2061":{"id":2061,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"826":{"id":826,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1118":{"id":1118,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[389,0],"end":[394,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1116],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1410":{"id":1410,"crate_id":0,"name":"signed_duration_since","span":{"filename":"src/naive/datetime/mod.rs","begin":[818,4],"end":[825,5]},"visibility":"public","docs":"Subtracts another `NaiveDateTime` from the current date and time.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveDateTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\n# Example\n\n```\nuse chrono::{NaiveDate, TimeDelta};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nlet d = from_ymd(2016, 7, 8);\nassert_eq!(\n    d.and_hms_opt(3, 5, 7).unwrap().signed_duration_since(d.and_hms_opt(2, 4, 6).unwrap()),\n    TimeDelta::try_seconds(3600 + 60 + 1).unwrap()\n);\n\n// July 8 is 190th day in the year 2016\nlet d0 = from_ymd(2016, 1, 1);\nassert_eq!(\n    d.and_hms_milli_opt(0, 7, 6, 500)\n        .unwrap()\n        .signed_duration_since(d0.and_hms_opt(0, 0, 0).unwrap()),\n    TimeDelta::try_seconds(189 * 86_400 + 7 * 60 + 6).unwrap()\n        + TimeDelta::try_milliseconds(500).unwrap()\n);\n```\n\nLeap seconds are handled, but the subtraction assumes that\nthere were no other leap seconds happened.\n\n```\n# use chrono::{TimeDelta, NaiveDate};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\nlet leap = from_ymd(2015, 6, 30).and_hms_milli_opt(23, 59, 59, 1_500).unwrap();\nassert_eq!(\n    leap.signed_duration_since(from_ymd(2015, 6, 30).and_hms_opt(23, 0, 0).unwrap()),\n    TimeDelta::try_seconds(3600).unwrap() + TimeDelta::try_milliseconds(500).unwrap()\n);\nassert_eq!(\n    from_ymd(2015, 7, 1).and_hms_opt(1, 0, 0).unwrap().signed_duration_since(leap),\n    TimeDelta::try_seconds(3600).unwrap() - TimeDelta::try_milliseconds(500).unwrap()\n);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"175":{"id":175,"crate_id":0,"name":"add","span":{"filename":"src/datetime/mod.rs","begin":[1481,4],"end":[1483,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"467":{"id":467,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[884,0],"end":[892,1]},"visibility":"default","docs":"Convert a `DateTime<Utc>` instance into a `DateTime<FixedOffset>` instance.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::offset::FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"items":[466],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1702":{"id":1702,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1994":{"id":1994,"crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,20],"end":[32,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1051":{"id":1051,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1343":{"id":1343,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"400":{"id":400,"crate_id":0,"name":"checked_add_months","span":{"filename":"src/datetime/mod.rs","begin":[459,4],"end":[467,5]},"visibility":"public","docs":"Adds given `Months` to the current date and time.\n\nUses the last day of the month if the day does not exist in the resulting month.\n\nSee [`NaiveDate::checked_add_months`] for more details on behavior.\n\n# Errors\n\nReturns `None` if:\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.\n- The resulting UTC datetime would be out of range.\n- The resulting local datetime would be out of range (unless `months` is zero).","links":{"`NaiveDate::checked_add_months`":399},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["months",{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1635":{"id":1635,"crate_id":0,"name":"Err","span":{"filename":"src/naive/time/mod.rs","begin":[1602,4],"end":[1602,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1927":{"id":1927,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"692":{"id":692,"crate_id":0,"name":"set_isoyear_mod_100","span":{"filename":"src/format/parsed.rs","begin":[303,4],"end":[308,5]},"visibility":"public","docs":"Set the [`isoyear_mod_100`](Parsed::isoyear_mod_100) field, that is part of an\n[ISO 8601 week date], to the given value.\n\nWhen set it implies that the year is not negative.\n\nIf this field is set while the [`isoyear_div_100`](Parsed::isoyear_div_100) field is missing\n(and the full [`isoyear`](Parsed::isoyear) field is also not set), it assumes a default\nvalue for the [`isoyear_div_100`](Parsed::isoyear_div_100) field.\nThe default is 19 when `year_mod_100 >= 70` and 20 otherwise.\n\n[ISO 8601 week date]: crate::NaiveDate#week-date\n\n# Errors\n\nReturns `OUT_OF_RANGE` if `value` is negative or if it is greater than 99.\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"Parsed::isoyear_mod_100":689,"crate::NaiveDate#week-date":187,"Parsed::isoyear":687,"Parsed::isoyear_div_100":688},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2219":{"id":2219,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[589,17],"end":[589,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"traits::Datelike","name":"Datelike","id":263,"is_glob":false}}},"984":{"id":984,"crate_id":0,"name":"allow_zulu","span":{"filename":"src/format/mod.rs","begin":[290,4],"end":[290,24]},"visibility":"public","docs":"Represent `+00:00` as `Z`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"41":{"id":41,"crate_id":0,"name":"to_std","span":{"filename":"src/time_delta.rs","begin":[465,4],"end":[470,5]},"visibility":"public","docs":"Creates a `std::time::Duration` object from a `TimeDelta`.\n\nThis function errors when duration is less than zero. As standard\nlibrary implementation is limited to non-negative values.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Result","id":39,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},{"type":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1276":{"id":1276,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[1998,0],"end":[2004,1]},"visibility":"default","docs":"Add `Days` to `NaiveDate`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using `NaiveDate::checked_add_days` to get an `Option` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1274,1275],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1568":{"id":1568,"crate_id":0,"name":"from_hms_nano_opt","span":{"filename":"src/naive/time/mod.rs","begin":[428,4],"end":[437,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and nanosecond.\n\nThe nanosecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute, second and/or nanosecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hmsn_opt = NaiveTime::from_hms_nano_opt;\n\nassert!(from_hmsn_opt(0, 0, 0, 0).is_some());\nassert!(from_hmsn_opt(23, 59, 59, 999_999_999).is_some());\nassert!(from_hmsn_opt(23, 59, 59, 1_999_999_999).is_some()); // a leap second after 23:59:59\nassert!(from_hmsn_opt(24, 0, 0, 0).is_none());\nassert!(from_hmsn_opt(23, 60, 0, 0).is_none());\nassert!(from_hmsn_opt(23, 59, 60, 0).is_none());\nassert!(from_hmsn_opt(23, 59, 59, 2_000_000_000).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"333":{"id":333,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"ToString","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[92],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1860":{"id":1860,"crate_id":0,"name":"latest","span":{"filename":"src/offset/mod.rs","begin":[111,4],"end":[116,5]},"visibility":"public","docs":"Returns the latest possible result of the time zone mapping.\n\n# Errors\n\nReturns `None` if local time falls in a _gap_ in the local time, or if there was an error.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"625":{"id":625,"crate_id":0,"name":"Nanos","span":{"filename":"src/format/formatting.rs","begin":[471,4],"end":[471,9]},"visibility":"default","docs":"Use fixed 9 subsecond digits. This corresponds to [Fixed::Nanosecond9].","links":{"Fixed::Nanosecond9":624},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"917":{"id":917,"crate_id":0,"name":"LowerAmPm","span":{"filename":"src/format/mod.rs","begin":[195,4],"end":[195,13]},"visibility":"default","docs":"AM/PM.\n\nPrints in lower case, reads in any case.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2152":{"id":2152,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[243,16],"end":[243,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1209":{"id":1209,"crate_id":0,"name":"and_hms_micro_opt","span":{"filename":"src/naive/date/mod.rs","begin":[859,4],"end":[868,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.\n\nThe microsecond part is allowed to exceed 1,000,000 in order to represent a [leap second](\n./struct.NaiveTime.html#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute, second and/or microsecond.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nassert!(d.and_hms_micro_opt(12, 34, 56, 789_012).is_some());\nassert!(d.and_hms_micro_opt(12, 34, 59, 1_789_012).is_some()); // leap second\nassert!(d.and_hms_micro_opt(12, 34, 59, 2_789_012).is_none());\nassert!(d.and_hms_micro_opt(12, 34, 60, 789_012).is_none());\nassert!(d.and_hms_micro_opt(12, 60, 56, 789_012).is_none());\nassert!(d.and_hms_micro_opt(24, 34, 56, 789_012).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1501":{"id":1501,"crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1999,4],"end":[1999,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"266":{"id":266,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[535,30],"end":[535,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::Month","name":"Month","id":265,"is_glob":false}}},"558":{"id":558,"crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1752,4],"end":[1754,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":138,"args":null}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1793":{"id":1793,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"850":{"id":850,"crate_id":0,"name":"WeekdayFromMon","span":{"filename":"src/format/mod.rs","begin":[131,4],"end":[131,18]},"visibility":"default","docs":"Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2085":{"id":2085,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,37],"end":[31,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2084],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1142":{"id":1142,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[386,34],"end":[386,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"199":{"id":199,"crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1627,4],"end":[1627,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1434":{"id":1434,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"ToString","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[92],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"491":{"id":491,"crate_id":0,"name":"with_month0","span":{"filename":"src/naive/date/mod.rs","begin":[1748,4],"end":[1751,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the month number (starting from 0) changed.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (for example `month0(3)` when day of the month is 31).\n- The value for `month0` is invalid.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_month0(9),\n    Some(NaiveDate::from_ymd_opt(2015, 10, 8).unwrap())\n);\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_month0(12), None); // No month 12\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().with_month0(1), None); // No Feb 30\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["month0",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1726":{"id":1726,"crate_id":0,"name":"local_minus_utc","span":{"filename":"src/offset/fixed.rs","begin":[107,4],"end":[109,5]},"visibility":"public","docs":"Returns the number of seconds to add to convert from UTC to the local time.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2018":{"id":2018,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"783":{"id":783,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1075":{"id":1075,"crate_id":0,"name":"Literal","span":{"filename":"src/format/mod.rs","begin":[331,4],"end":[331,20]},"visibility":"default","docs":"A literally printed and parsed text.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[1074]},"discriminant":null}}},"1367":{"id":1367,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2166,35],"end":[2166,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1366],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"132":{"id":132,"crate_id":0,"name":"add","span":{"filename":"src/time_delta.rs","begin":[504,4],"end":[506,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1659":{"id":1659,"crate_id":0,"name":"checked_days","span":{"filename":"src/naive/mod.rs","begin":[201,4],"end":[206,5]},"visibility":"public","docs":"Returns an [`Option<RangeInclusive<T>>`] representing the whole week bounded by\n[checked_first_day](NaiveWeek::checked_first_day) and\n[checked_last_day](NaiveWeek::checked_last_day) functions.\n\nReturns `None` if either of the boundaries are out of `NaiveDate`'s range\n(more than ca. 262,000 years away from common era).\n\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet date = NaiveDate::MAX;\nlet week = date.week(Weekday::Mon);\nlet _days = match week.checked_days() {\n    Some(d) => d,\n    None => {\n        // error handling code\n        return;\n    }\n};\n```","links":{"`Option<RangeInclusive<T>>`":4,"NaiveWeek::checked_first_day":1654,"NaiveWeek::checked_last_day":1656},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"RangeInclusive","id":1657,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"424":{"id":424,"crate_id":0,"name":"from_timestamp_micros","span":{"filename":"src/datetime/mod.rs","begin":[819,4],"end":[823,5]},"visibility":"public","docs":"Creates a new `DateTime<Utc>` from the number of non-leap microseconds\nsince January 1, 1970 0:00:00.000 UTC (aka \"UNIX timestamp\").\n\nThis is guaranteed to round-trip with [`timestamp_micros`](DateTime::timestamp_micros).\n\nIf you need to create a `DateTime` with a [`TimeZone`] different from [`Utc`], use\n[`TimeZone::timestamp_micros`] or [`DateTime::with_timezone`].\n\n# Errors\n\nReturns `None` if the number of microseconds would be out of range for a `NaiveDateTime`\n(more than ca. 262,000 years away from common era)\n\n# Example\n\n```\nuse chrono::DateTime;\n\nlet timestamp_micros: i64 = 1662921288000000; // Sun, 11 Sep 2022 18:34:48 UTC\nlet dt = DateTime::from_timestamp_micros(timestamp_micros);\nassert!(dt.is_some());\nassert_eq!(timestamp_micros, dt.expect(\"invalid timestamp\").timestamp_micros());\n\n// Negative timestamps (before the UNIX epoch) are supported as well.\nlet timestamp_micros: i64 = -2208936075000000; // Mon, 1 Jan 1900 14:38:45 UTC\nlet dt = DateTime::from_timestamp_micros(timestamp_micros);\nassert!(dt.is_some());\nassert_eq!(timestamp_micros, dt.expect(\"invalid timestamp\").timestamp_micros());\n```","links":{"DateTime::timestamp_micros":388,"`Utc`":273,"`TimeZone::timestamp_micros`":423,"`DateTime::with_timezone`":396,"`TimeZone`":165},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["micros",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1951":{"id":1951,"crate_id":0,"name":"fmt","span":{"filename":"src/round.rs","begin":[283,4],"end":[295,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"716":{"id":716,"crate_id":0,"name":"nanosecond","span":{"filename":"src/format/parsed.rs","begin":[1118,4],"end":[1120,5]},"visibility":"public","docs":"Get the `nanosecond` field if set.\n\nSee also [`set_nanosecond()`](Parsed::set_nanosecond).","links":{"Parsed::set_nanosecond":717},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1008":{"id":1008,"crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[283,29],"end":[283,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2243":{"id":2243,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[664,28],"end":[664,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1300":{"id":1300,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"65":{"id":65,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"357":{"id":357,"crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[470,0],"end":[474,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[356],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1592":{"id":1592,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"649":{"id":649,"crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[458,29],"end":[458,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1884":{"id":1884,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"941":{"id":941,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2176":{"id":2176,"crate_id":0,"name":"num_days_from_ce","span":{"filename":"src/traits.rs","begin":[248,4],"end":[263,5]},"visibility":"default","docs":"Counts the days in the proleptic Gregorian calendar, with January 1, Year 1 (CE) as day 1.\n\n# Examples\n\n```\nuse chrono::{Datelike, NaiveDate};\n\nassert_eq!(NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().num_days_from_ce(), 719_163);\nassert_eq!(NaiveDate::from_ymd_opt(2, 1, 1).unwrap().num_days_from_ce(), 366);\nassert_eq!(NaiveDate::from_ymd_opt(1, 1, 1).unwrap().num_days_from_ce(), 1);\nassert_eq!(NaiveDate::from_ymd_opt(0, 1, 1).unwrap().num_days_from_ce(), -365);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1233":{"id":1233,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"290":{"id":290,"crate_id":0,"name":"and_hms_milli","span":{"filename":"src/date.rs","begin":[121,4],"end":[123,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute, second and/or millisecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use and_hms_milli_opt() instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use and_hms_milli_opt() instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1525":{"id":1525,"crate_id":0,"name":"week0","span":{"filename":"src/naive/isoweek.rs","begin":[115,4],"end":[117,5]},"visibility":"public","docs":"Returns the ISO week number starting from 0.\n\nThe return value ranges from 0 to 52. (The last week of year differs by years.)\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, Weekday};\n\nlet d = NaiveDate::from_isoywd_opt(2015, 15, Weekday::Mon).unwrap();\nassert_eq!(d.iso_week().week0(), 14);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1817":{"id":1817,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"582":{"id":582,"crate_id":0,"name":"Err","span":{"filename":"src/round.rs","begin":[159,4],"end":[159,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"2109":{"id":2109,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"874":{"id":874,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1166":{"id":1166,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1458":{"id":1458,"crate_id":0,"name":"with_month","span":{"filename":"src/naive/datetime/mod.rs","begin":[1189,4],"end":[1191,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the month number (starting from 1) changed.\n\nDon't combine multiple `Datelike::with_*` methods. The intermediate value may not exist.\n\nSee also the [`NaiveDate::with_month`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (for example `month(4)` when day of the month is 31).\n- The value for `month` is invalid.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(\n    dt.with_month(10),\n    Some(NaiveDate::from_ymd_opt(2015, 10, 30).unwrap().and_hms_opt(12, 34, 56).unwrap())\n);\nassert_eq!(dt.with_month(13), None); // No month 13\nassert_eq!(dt.with_month(2), None); // No February 30\n```","links":{"`NaiveDate::with_month`":489},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["month",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1750":{"id":1750,"crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[22,24],"end":[22,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1749],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"515":{"id":515,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1329,0],"end":[1409,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hour12","num_seconds_from_midnight"],"trait":{"path":"Timelike","id":267,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[502,503,504,505,507,509,511,514],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2042":{"id":2042,"crate_id":0,"name":"February","span":{"filename":"src/month.rs","begin":[44,4],"end":[44,16]},"visibility":"default","docs":"February","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"1","value":"1"}}}},"807":{"id":807,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[71,0],"end":[71,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"strftime::StrftimeItems","name":"StrftimeItems","id":317,"is_glob":false}}},"1099":{"id":1099,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1391":{"id":1391,"crate_id":0,"name":"from_timestamp_nanos","span":{"filename":"src/naive/datetime/mod.rs","begin":[171,4],"end":[175,5]},"visibility":"public","docs":"Creates a new [NaiveDateTime] from nanoseconds since the UNIX epoch.\n\nThe UNIX epoch starts on midnight, January 1, 1970, UTC.\n\n# Errors\n\nReturns `None` if the number of nanoseconds would be out of range for a `NaiveDateTime`\n(more than ca. 262,000 years away from common era)","links":{"NaiveDateTime":200},"attrs":["#[deprecated(since = \"0.4.35\", note =\n\"use `DateTime::from_timestamp_nanos` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.35","note":"use `DateTime::from_timestamp_nanos` instead"},"inner":{"function":{"sig":{"inputs":[["nanos",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"448":{"id":448,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1683":{"id":1683,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[32,33],"end":[32,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1682],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"740":{"id":740,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1975":{"id":1975,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1032":{"id":1032,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"89":{"id":89,"crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1324":{"id":1324,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2130,35],"end":[2130,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1323],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"381":{"id":381,"crate_id":0,"name":"from_local","span":{"filename":"src/datetime/mod.rs","begin":[126,4],"end":[130,5]},"visibility":"public","docs":"Makes a new `DateTime` from a `NaiveDateTime` in *local* time and an `Offset`.\n\n# Panics\n\nPanics if the local datetime can't be converted to UTC because it would be out of range.\n\nThis can happen if `datetime` is near the end of the representable range of `NaiveDateTime`,\nand the offset from UTC pushes it beyond that.","links":{},"attrs":["#[inline]","#[must_use]","#[deprecated(since = \"0.4.27\", note =\n\"Use TimeZone::from_local_datetime() or NaiveDateTime::and_local_timezone instead\")]"],"deprecation":{"since":"0.4.27","note":"Use TimeZone::from_local_datetime() or NaiveDateTime::and_local_timezone instead"},"inner":{"function":{"sig":{"inputs":[["datetime",{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}],["offset",{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"","id":165,"args":null}}}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1616":{"id":1616,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1248,0],"end":[1253,1]},"visibility":"default","docs":"Add-assign `std::time::Duration` to `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the addition ignores integral number of days.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"AddAssign","id":141,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1615],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1908":{"id":1908,"crate_id":0,"name":"from_offset","span":{"filename":"src/offset/mod.rs","begin":[546,4],"end":[546,50]},"visibility":"default","docs":"Reconstructs the time zone from the offset.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["offset",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":165,"args":null}}}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"2200":{"id":2200,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[562,22],"end":[562,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"inner":{"use":{"source":"naive::NaiveDate","name":"NaiveDate","id":187,"is_glob":false}}},"965":{"id":965,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1257":{"id":1257,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[94,53],"end":[94,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1256],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"22":{"id":22,"crate_id":0,"name":"num_minutes","span":{"filename":"src/time_delta.rs","begin":[297,4],"end":[299,5]},"visibility":"public","docs":"Returns the total number of whole minutes in the `TimeDelta`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1549":{"id":1549,"crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,36],"end":[19,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"path":"Ord","id":117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1548],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"314":{"id":314,"crate_id":0,"name":"Item","span":{"filename":"src/format/mod.rs","begin":[329,0],"end":[347,1]},"visibility":"public","docs":"A single formatting item. This is used for both formatting and parsing.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"has_stripped_variants":false,"variants":[1075,1078,1080,1082,1085,1087,762],"impls":[1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1106,1107,1109,1110,1112,1114]}}},"1841":{"id":1841,"crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[114,0],"end":[134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["with_ymd_and_hms","ymd","ymd_opt","yo","yo_opt","isoywd","isoywd_opt","timestamp","timestamp_opt","timestamp_millis","timestamp_millis_opt","timestamp_nanos","timestamp_micros","datetime_from_str","from_local_date","from_local_datetime","from_utc_date","from_utc_datetime"],"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1835,1836,1837,1838,1839,1840],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"606":{"id":606,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"898":{"id":898,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1190":{"id":1190,"crate_id":0,"name":"from_ymd_opt","span":{"filename":"src/naive/date/mod.rs","begin":[196,4],"end":[204,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n(year, month and day).\n\n# Errors\n\nReturns `None` if:\n- The specified calendar day does not exist (for example 2023-04-31).\n- The value for `month` or `day` is invalid.\n- `year` is out of range for `NaiveDate`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet from_ymd_opt = NaiveDate::from_ymd_opt;\n\nassert!(from_ymd_opt(2015, 3, 14).is_some());\nassert!(from_ymd_opt(2015, 0, 14).is_none());\nassert!(from_ymd_opt(2015, 2, 29).is_none());\nassert!(from_ymd_opt(-4, 2, 29).is_some()); // 5 BCE is a leap year\nassert!(from_ymd_opt(400000, 1, 1).is_none());\nassert!(from_ymd_opt(-400000, 1, 1).is_none());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1482":{"id":1482,"crate_id":0,"name":"add","span":{"filename":"src/naive/datetime/mod.rs","begin":[1700,4],"end":[1702,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"247":{"id":247,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[602,29],"end":[602,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[246],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"539":{"id":539,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1614,0],"end":[1623,1]},"visibility":"default","docs":"Subtract `std::time::Duration` from `DateTime`.\n\nAs a part of Chrono's [leap second handling] the subtraction assumes that **there is no leap\nsecond ever**, except when the `DateTime` itself represents a leap second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`DateTime<Tz>::checked_sub_signed`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_sub_signed`":182},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[537,538],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"831":{"id":831,"crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[78,22],"end":[78,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2066":{"id":2066,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1123":{"id":1123,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"180":{"id":180,"crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1596,4],"end":[1596,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}}},"1415":{"id":1415,"crate_id":0,"name":"MAX","span":{"filename":"src/naive/datetime/mod.rs","begin":[945,4],"end":[945,78]},"visibility":"public","docs":"The maximum possible `NaiveDateTime`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"value":"_"}}},"472":{"id":472,"crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[923,4],"end":[925,5]},"visibility":"default","docs":"Convert this `DateTime<FixedOffset>` instance into a `DateTime<Local>` instance.\n\nConversion is performed via [`DateTime::with_timezone`]. Returns the equivalent value in local\ntime.","links":{"`DateTime::with_timezone`":396},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["src",{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1707":{"id":1707,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[215,16],"end":[215,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1999":{"id":1999,"crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,37],"end":[32,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1998],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"764":{"id":764,"crate_id":0,"name":"format_with_items","span":{"filename":"src/naive/datetime/mod.rs","begin":[857,4],"end":[863,5]},"visibility":"public","docs":"Formats the combined date and time with the specified formatting items.\nOtherwise it is the same as the ordinary [`format`](#method.format) method.\n\nThe `Iterator` of items should be `Clone`able,\nsince the resulting `DelayedFormat` value may be formatted multiple times.\n\n# Example\n\n```\nuse chrono::format::strftime::StrftimeItems;\nuse chrono::NaiveDate;\n\nlet fmt = StrftimeItems::new(\"%Y-%m-%d %H:%M:%S\");\nlet dt = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(dt.format_with_items(fmt.clone()).to_string(), \"2015-09-05 23:56:04\");\nassert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2015-09-05 23:56:04\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# use chrono::format::strftime::StrftimeItems;\n# let fmt = StrftimeItems::new(\"%Y-%m-%d %H:%M:%S\").clone();\n# let dt = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(format!(\"{}\", dt.format_with_items(fmt)), \"2015-09-05 23:56:04\");\n```","links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":154,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1056":{"id":1056,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1348":{"id":1348,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"113":{"id":113,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[52,46],"end":[52,56]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","gt","ge"],"trait":{"path":"PartialOrd","id":114,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[111],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"405":{"id":405,"crate_id":0,"name":"checked_add_days","span":{"filename":"src/datetime/mod.rs","begin":[516,4],"end":[527,5]},"visibility":"public","docs":"Add a duration in [`Days`] to the date part of the `DateTime`.\n\n# Errors\n\nReturns `None` if:\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.\n- The resulting UTC datetime would be out of range.\n- The resulting local datetime would be out of range (unless `days` is zero).","links":{"`Days`":404},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1932":{"id":1932,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"697":{"id":697,"crate_id":0,"name":"week_from_mon","span":{"filename":"src/format/parsed.rs","begin":[1043,4],"end":[1045,5]},"visibility":"public","docs":"Get the `week_from_mon` field if set.\n\nSee also [`set_week_from_mon()`](Parsed::set_week_from_mon).","links":{"Parsed::set_week_from_mon":698},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"989":{"id":989,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2224":{"id":2224,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1281":{"id":1281,"crate_id":0,"name":"sub","span":{"filename":"src/naive/date/mod.rs","begin":[2118,4],"end":[2120,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"338":{"id":338,"crate_id":0,"name":"month0","span":{"filename":"src/date.rs","begin":[402,4],"end":[404,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1573":{"id":1573,"crate_id":0,"name":"overflowing_add_signed","span":{"filename":"src/naive/time/mod.rs","begin":[605,4],"end":[641,5]},"visibility":"public","docs":"Adds given `TimeDelta` to the current time, and also returns the number of *seconds*\nin the integral number of days ignored from the addition.\n\n# Example\n\n```\nuse chrono::{NaiveTime, TimeDelta};\n\nlet from_hms = |h, m, s| NaiveTime::from_hms_opt(h, m, s).unwrap();\n\nassert_eq!(\n    from_hms(3, 4, 5).overflowing_add_signed(TimeDelta::try_hours(11).unwrap()),\n    (from_hms(14, 4, 5), 0)\n);\nassert_eq!(\n    from_hms(3, 4, 5).overflowing_add_signed(TimeDelta::try_hours(23).unwrap()),\n    (from_hms(2, 4, 5), 86_400)\n);\nassert_eq!(\n    from_hms(3, 4, 5).overflowing_add_signed(TimeDelta::try_hours(-7).unwrap()),\n    (from_hms(20, 4, 5), -86_400)\n);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"tuple":[{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},{"primitive":"i64"}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"630":{"id":630,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1865":{"id":1865,"crate_id":0,"name":"and_hms_opt","span":{"filename":"src/offset/mod.rs","begin":[170,4],"end":[177,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"922":{"id":922,"crate_id":0,"name":"TimezoneOffset","span":{"filename":"src/format/mod.rs","begin":[241,4],"end":[241,18]},"visibility":"default","docs":"Same as [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.\nParsing allows an optional colon.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2157":{"id":2157,"crate_id":0,"name":"fmt","span":{"filename":"src/month.rs","begin":[252,4],"end":[254,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1214":{"id":1214,"crate_id":0,"name":"pred","span":{"filename":"src/naive/date/mod.rs","begin":[987,4],"end":[989,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the previous calendar date.\n\n# Panics\n\nPanics when `self` is the first representable date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `pred_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `pred_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1506":{"id":1506,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[2012,0],"end":[2018,1]},"visibility":"default","docs":"Subtract `Days` from `NaiveDateTime`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using `checked_sub_days` to get an `Option` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1504,1505],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"271":{"id":271,"crate_id":0,"name":"FixedOffset","span":{"filename":"src/offset/fixed.rs","begin":[30,0],"end":[32,1]},"visibility":"public","docs":"The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non a `FixedOffset` struct is the preferred way to construct\n`DateTime<FixedOffset>` instances. See the [`east_opt`](#method.east_opt) and\n[`west_opt`](#method.west_opt) methods for examples.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[],"where_predicates":[]},"impls":[1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740,1741,1742,1743,1744,533,544,1483,1494,1619,1627,1745,1747,1748,1750,1751,1753,1756,1763,1765,1767,1769]}}},"1798":{"id":1798,"crate_id":0,"name":"fmt","span":{"filename":"src/offset/local/mod.rs","begin":[113,22],"end":[113,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"563":{"id":563,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1789,0],"end":[1798,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"","id":165,"args":null}}},"bounds":[{"trait_bound":{"trait":{"path":"fmt::Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[562],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2090":{"id":2090,"crate_id":0,"name":"cmp","span":{"filename":"src/month.rs","begin":[31,62],"end":[31,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"855":{"id":855,"crate_id":0,"name":"Second","span":{"filename":"src/format/mod.rs","begin":[141,4],"end":[141,10]},"visibility":"default","docs":"The number of seconds since the last whole minute (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1147":{"id":1147,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[436,0],"end":[449,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1146],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1439":{"id":1439,"crate_id":0,"name":"hash","span":{"filename":"src/naive/datetime/mod.rs","begin":[67,24],"end":[67,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"204":{"id":204,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1626,0],"end":[1633,1]},"visibility":"default","docs":"Add `TimeDelta` to `NaiveDateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDateTime::checked_add_signed`] to get an `Option` instead.\n\n# Example\n\n```\nuse chrono::{NaiveDate, TimeDelta};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7) + TimeDelta::zero(), hms(3, 5, 7));\nassert_eq!(hms(3, 5, 7) + TimeDelta::try_seconds(1).unwrap(), hms(3, 5, 8));\nassert_eq!(hms(3, 5, 7) + TimeDelta::try_seconds(-1).unwrap(), hms(3, 5, 6));\nassert_eq!(hms(3, 5, 7) + TimeDelta::try_seconds(3600 + 60).unwrap(), hms(4, 6, 7));\nassert_eq!(\n    hms(3, 5, 7) + TimeDelta::try_seconds(86_400).unwrap(),\n    from_ymd(2016, 7, 9).and_hms_opt(3, 5, 7).unwrap()\n);\nassert_eq!(\n    hms(3, 5, 7) + TimeDelta::try_days(365).unwrap(),\n    from_ymd(2017, 7, 8).and_hms_opt(3, 5, 7).unwrap()\n);\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli_opt(h, m, s, milli).unwrap();\nassert_eq!(hmsm(3, 5, 7, 980) + TimeDelta::try_milliseconds(450).unwrap(), hmsm(3, 5, 8, 430));\n```\n\nLeap seconds are handled,\nbut the addition assumes that it is the only leap second happened.\n\n```\n# use chrono::{TimeDelta, NaiveDate};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli_opt(h, m, s, milli).unwrap();\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap + TimeDelta::zero(), hmsm(3, 5, 59, 1_300));\nassert_eq!(leap + TimeDelta::try_milliseconds(-500).unwrap(), hmsm(3, 5, 59, 800));\nassert_eq!(leap + TimeDelta::try_milliseconds(500).unwrap(), hmsm(3, 5, 59, 1_800));\nassert_eq!(leap + TimeDelta::try_milliseconds(800).unwrap(), hmsm(3, 6, 0, 100));\nassert_eq!(leap + TimeDelta::try_seconds(10).unwrap(), hmsm(3, 6, 9, 300));\nassert_eq!(leap + TimeDelta::try_seconds(-10).unwrap(), hmsm(3, 5, 50, 300));\nassert_eq!(leap + TimeDelta::try_days(1).unwrap(),\n           from_ymd(2016, 7, 9).and_hms_milli_opt(3, 5, 59, 300).unwrap());\n```\n\n[leap second handling]: crate::NaiveTime#leap-second-handling","links":{"`NaiveDateTime::checked_add_signed`":203,"crate::NaiveTime#leap-second-handling":202},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[199,201],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1731":{"id":1731,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"496":{"id":496,"crate_id":0,"name":"with_day0","span":{"filename":"src/datetime/mod.rs","begin":[1292,4],"end":[1294,5]},"visibility":"default","docs":"Makes a new `DateTime` with the day of month (starting from 0) changed.\n\nSee also the [`NaiveDate::with_day0`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (for example `day(30)` in April).\n- The value for `day0` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_day0`":495},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["day0",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"788":{"id":788,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":154,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":789,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[785,786,787],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"2023":{"id":2023,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1080":{"id":1080,"crate_id":0,"name":"Space","span":{"filename":"src/format/mod.rs","begin":[336,4],"end":[336,18]},"visibility":"default","docs":"Whitespace. Prints literally but reads zero or more whitespace.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[1079]},"discriminant":null}}},"1372":{"id":1372,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2166,62],"end":[2166,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"path":"Ord","id":117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1371],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"137":{"id":137,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[509,0],"end":[515,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[135,136],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"429":{"id":429,"crate_id":0,"name":"parse_from_rfc2822","span":{"filename":"src/datetime/mod.rs","begin":[994,4],"end":[999,5]},"visibility":"public","docs":"Parses an RFC 2822 date-and-time string into a `DateTime<FixedOffset>` value.\n\nThis parses valid RFC 2822 datetime strings (such as `Tue, 1 Jul 2003 10:52:37 +0200`)\nand returns a new [`DateTime`] instance with the parsed timezone as the [`FixedOffset`].\n\nRFC 2822 is the internet message standard that specifies the representation of times in HTTP\nand email headers. It is the 2001 revision of RFC 822, and is itself revised as RFC 5322 in\n2008.\n\n# Support for the obsolete date format\n\n- A 2-digit year is interpreted to be a year in 1950-2049.\n- The standard allows comments and whitespace between many of the tokens. See [4.3] and\n  [Appendix A.5]\n- Single letter 'military' time zone names are parsed as a `-0000` offset.\n  They were defined with the wrong sign in RFC 822 and corrected in RFC 2822. But because\n  the meaning is now ambiguous, the standard says they should be be considered as `-0000`\n  unless there is out-of-band information confirming their meaning.\n  The exception is `Z`, which remains identical to `+0000`.\n\n[4.3]: https://www.rfc-editor.org/rfc/rfc2822#section-4.3\n[Appendix A.5]: https://www.rfc-editor.org/rfc/rfc2822#appendix-A.5\n\n# Example\n\n```\n# use chrono::{DateTime, FixedOffset, TimeZone};\nassert_eq!(\n    DateTime::parse_from_rfc2822(\"Wed, 18 Feb 2015 23:16:09 GMT\").unwrap(),\n    FixedOffset::east_opt(0).unwrap().with_ymd_and_hms(2015, 2, 18, 23, 16, 9).unwrap()\n);\n```","links":{"`DateTime`":174,"`FixedOffset`":271},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1664":{"id":1664,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"721":{"id":721,"crate_id":0,"name":"set_offset","span":{"filename":"src/format/parsed.rs","begin":[543,4],"end":[545,5]},"visibility":"public","docs":"Set the [`offset`](Parsed::offset) field to the given value.\n\nThe offset is in seconds from local time to UTC.\n\n# Errors\n\nReturns `OUT_OF_RANGE` if `value` is outside the range of an `i32`.\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"Parsed::offset":720},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1956":{"id":1956,"crate_id":0,"name":"Mon","span":{"filename":"src/weekday.rs","begin":[43,4],"end":[43,11]},"visibility":"default","docs":"Monday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"0","value":"0"}}}},"2248":{"id":2248,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[675,0],"end":[679,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2247],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1013":{"id":1013,"crate_id":0,"name":"Hours","span":{"filename":"src/format/mod.rs","begin":[301,4],"end":[301,9]},"visibility":"default","docs":"Format offset from UTC as only hours. Not recommended, it is not uncommon for timezones to\nhave an offset of 30 minutes, 15 minutes, etc.\nAny minutes and seconds get truncated.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"70":{"id":70,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1305":{"id":1305,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"362":{"id":362,"crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[484,0],"end":[488,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"path":"Ord","id":117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[361],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1597":{"id":1597,"crate_id":0,"name":"eq","span":{"filename":"src/naive/time/mod.rs","begin":[212,9],"end":[212,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1889":{"id":1889,"crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[58,16],"end":[58,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"654":{"id":654,"crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[458,44],"end":[458,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[653],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2181":{"id":2181,"crate_id":0,"name":"nanosecond","span":{"filename":"src/traits.rs","begin":[292,4],"end":[292,32]},"visibility":"default","docs":"Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./naive/struct.NaiveTime.html#leap-second-handling).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"946":{"id":946,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[174,16],"end":[174,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1238":{"id":1238,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"3":{"id":3,"crate_id":0,"name":"new","span":{"filename":"src/time_delta.rs","begin":[83,4],"end":[93,5]},"visibility":"public","docs":"Makes a new `TimeDelta` with given number of seconds and nanoseconds.\n\n# Errors\n\nReturns `None` when the duration is out of bounds, or if `nanos` ≥ 1,000,000,000.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["secs",{"primitive":"i64"}],["nanos",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1530":{"id":1530,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"295":{"id":295,"crate_id":0,"name":"and_hms_nano_opt","span":{"filename":"src/date.rs","begin":[190,4],"end":[198,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute, second and/or nanosecond.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1822":{"id":1822,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"587":{"id":587,"crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[158,0],"end":[168,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"DurationRound","id":585,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"crate::DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[582,584,586],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"879":{"id":879,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[102,16],"end":[102,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2114":{"id":2114,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1171":{"id":1171,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"228":{"id":228,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1463":{"id":1463,"crate_id":0,"name":"with_ordinal0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1352,4],"end":[1354,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of year (starting from 0) changed.\n\nSee also the [`NaiveDate::with_ordinal0`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (`with_ordinal0(365)` in a non-leap year).\n- The value for `ordinal0` is invalid.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(\n    dt.with_ordinal0(59),\n    Some(NaiveDate::from_ymd_opt(2015, 3, 1).unwrap().and_hms_opt(12, 34, 56).unwrap())\n);\nassert_eq!(dt.with_ordinal0(365), None); // 2015 had only 365 days\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2016, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(\n    dt.with_ordinal0(59),\n    Some(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap().and_hms_opt(12, 34, 56).unwrap())\n);\nassert_eq!(\n    dt.with_ordinal0(365),\n    Some(NaiveDate::from_ymd_opt(2016, 12, 31).unwrap().and_hms_opt(12, 34, 56).unwrap())\n);\n```","links":{"`NaiveDate::with_ordinal0`":499},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["ordinal0",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"520":{"id":520,"crate_id":0,"name":"partial_cmp","span":{"filename":"src/datetime/mod.rs","begin":[1450,4],"end":[1452,5]},"visibility":"default","docs":"Compare two DateTimes based on their true time, ignoring time zones\n\n# Example\n\n```\nuse chrono::prelude::*;\n\nlet earlier = Utc\n    .with_ymd_and_hms(2015, 5, 15, 2, 0, 0)\n    .unwrap()\n    .with_timezone(&FixedOffset::west_opt(1 * 3600).unwrap());\nlet later = Utc\n    .with_ymd_and_hms(2015, 5, 15, 3, 0, 0)\n    .unwrap()\n    .with_timezone(&FixedOffset::west_opt(5 * 3600).unwrap());\n\nassert_eq!(earlier.to_string(), \"2015-05-15 01:00:00 -01:00\");\nassert_eq!(later.to_string(), \"2015-05-14 22:00:00 -05:00\");\n\nassert!(later > earlier);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1755":{"id":1755,"crate_id":0,"name":"from_str","span":{"filename":"src/offset/fixed.rs","begin":[121,4],"end":[124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"Result","id":39,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":568,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"812":{"id":812,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2047":{"id":2047,"crate_id":0,"name":"July","span":{"filename":"src/month.rs","begin":[54,4],"end":[54,12]},"visibility":"default","docs":"July","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"6","value":"6"}}}},"1104":{"id":1104,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"161":{"id":161,"crate_id":0,"name":"Output","span":{"filename":"src/date.rs","begin":[497,4],"end":[497,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}}},"1396":{"id":1396,"crate_id":0,"name":"timestamp","span":{"filename":"src/naive/datetime/mod.rs","begin":[356,4],"end":[358,5]},"visibility":"public","docs":"Returns the number of non-leap seconds since the midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","links":{},"attrs":["#[deprecated(since = \"0.4.35\", note = \"use `.and_utc().timestamp()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.35","note":"use `.and_utc().timestamp()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1688":{"id":1688,"crate_id":0,"name":"new","span":{"filename":"src/naive/mod.rs","begin":[220,4],"end":[222,5]},"visibility":"public","docs":"Construct a new `Days` from a number of days","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["num",{"primitive":"u64"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"453":{"id":453,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1980":{"id":1980,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"745":{"id":745,"crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[128,9],"end":[128,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[744],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1037":{"id":1037,"crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[296,22],"end":[296,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1329":{"id":1329,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2130,62],"end":[2130,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"path":"Ord","id":117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1328],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"94":{"id":94,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"ToString","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[92],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1621":{"id":1621,"crate_id":0,"name":"sub","span":{"filename":"src/naive/time/mod.rs","begin":[1356,4],"end":[1363,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"386":{"id":386,"crate_id":0,"name":"timestamp","span":{"filename":"src/datetime/mod.rs","begin":[200,4],"end":[204,5]},"visibility":"public","docs":"Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC\n(aka \"UNIX timestamp\").\n\nThe reverse operation of creating a [`DateTime`] from a timestamp can be performed\nusing [`from_timestamp`](DateTime::from_timestamp) or [`TimeZone::timestamp_opt`].\n\n```\nuse chrono::{DateTime, TimeZone, Utc};\n\nlet dt: DateTime<Utc> = Utc.with_ymd_and_hms(2015, 5, 15, 0, 0, 0).unwrap();\nassert_eq!(dt.timestamp(), 1431648000);\n\nassert_eq!(DateTime::from_timestamp(dt.timestamp(), dt.timestamp_subsec_nanos()).unwrap(), dt);\n```","links":{"`DateTime`":174,"DateTime::from_timestamp":384,"`TimeZone::timestamp_opt`":385},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1913":{"id":1913,"crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/mod.rs","begin":[579,4],"end":[579,76]},"visibility":"default","docs":"Creates the offset for given UTC `NaiveDateTime`. This cannot fail.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["utc",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":165,"args":null}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"678":{"id":678,"crate_id":0,"name":"parse","span":{"filename":"src/format/parse.rs","begin":[244,0],"end":[254,1]},"visibility":"public","docs":"Tries to parse given string into `parsed` with given formatting items.\nReturns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).\nThere should be no trailing string after parsing;\nuse a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.\n\nThis particular date and time parser is:\n\n- Greedy. It will consume the longest possible prefix.\n  For example, `April` is always consumed entirely when the long month name is requested;\n  it equally accepts `Apr`, but prefers the longer prefix in this case.\n\n- Padding-agnostic (for numeric items).\n  The [`Pad`](./enum.Pad.html) field is completely ignored,\n  so one can prepend any number of whitespace then any number of zeroes before numbers.\n\n- (Still) obeying the intrinsic parsing width. This allows, for example, parsing `HHMMSS`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["parsed",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"super::Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}],["s",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"path":"super::ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":154,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"super::Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"970":{"id":970,"crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[258,9],"end":[258,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2205":{"id":2205,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[568,0],"end":[568,22]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]","#[doc(inline)]"],"deprecation":null,"inner":{"use":{"source":"offset::Local","name":"Local","id":256,"is_glob":false}}},"1262":{"id":1262,"crate_id":0,"name":"day0","span":{"filename":"src/naive/date/mod.rs","begin":[1547,4],"end":[1549,5]},"visibility":"default","docs":"Returns the day of month starting from 0.\n\nThe return value ranges from 0 to 30. (The last day of month differs by months.)\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().day0(), 7);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().day0(), 13);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"27":{"id":27,"crate_id":0,"name":"num_nanoseconds","span":{"filename":"src/time_delta.rs","begin":[342,4],"end":[346,5]},"visibility":"public","docs":"Returns the total number of whole nanoseconds in the `TimeDelta`,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"i64"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"319":{"id":319,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1554":{"id":1554,"crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,54],"end":[19,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1553],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"611":{"id":611,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1846":{"id":1846,"crate_id":0,"name":"fmt","span":{"filename":"src/offset/utc.rs","begin":[149,4],"end":[151,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2138":{"id":2138,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"903":{"id":903,"crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[158,9],"end":[158,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1195":{"id":1195,"crate_id":0,"name":"from_num_days_from_ce","span":{"filename":"src/naive/date/mod.rs","begin":[351,4],"end":[353,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\nJanuary 1, 1 being day 1.\n\n# Panics\n\nPanics if the date is out of range.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_num_days_from_ce_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_num_days_from_ce_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["days",{"primitive":"i32"}]],"output":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"252":{"id":252,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[612,0],"end":[617,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","description","cause","provide"],"trait":{"path":"Error","id":253,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[251],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1487":{"id":1487,"crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1834,4],"end":[1834,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1779":{"id":1779,"crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[124,0],"end":[163,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1776,1778],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"544":{"id":544,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1671,0],"end":[1680,1]},"visibility":"default","docs":"Subtract `FixedOffset` from the datetime value of `DateTime` (offset remains unchanged).\n\n# Panics\n\nPanics if the resulting date would be out of range.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[542,543],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2071":{"id":2071,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"836":{"id":836,"crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[78,44],"end":[78,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1128":{"id":1128,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1420":{"id":1420,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"185":{"id":185,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1637,0],"end":[1645,1]},"visibility":"default","docs":"Subtract-assign `TimeDelta` from `DateTime`.\n\nThis is the same as the addition with a negated `TimeDelta`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `DateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`DateTime<Tz>::checked_sub_signed`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_sub_signed`":182},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"SubAssign","id":144,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[184],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1712":{"id":1712,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[215,33],"end":[215,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1711],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"477":{"id":477,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[942,0],"end":[949,1]},"visibility":"default","docs":"Convert a `DateTime<Local>` instance into a `DateTime<FixedOffset>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::offset::FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"items":[476],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"769":{"id":769,"crate_id":0,"name":"parse_to_owned","span":{"filename":"src/format/strftime.rs","begin":[378,4],"end":[385,5]},"visibility":"public","docs":"Parse format string into a `Vec` of [`Item`]'s that contain no references to slices of the\nformat string.\n\nA `Vec` created with [`StrftimeItems::parse`] contains references to the format string,\nbinding the lifetime of the `Vec` to that string. [`StrftimeItems::parse_to_owned`] will\nconvert the references to owned types.\n\n# Errors\n\nReturns an error if the format string contains an invalid or unrecognized formatting\nspecifier.\n\n# Example\n\n```\nuse chrono::format::{Item, ParseError, StrftimeItems};\nuse chrono::NaiveDate;\n\nfn format_items(date_fmt: &str, time_fmt: &str) -> Result<Vec<Item<'static>>, ParseError> {\n    // `fmt_string` is dropped at the end of this function.\n    let fmt_string = format!(\"{} {}\", date_fmt, time_fmt);\n    StrftimeItems::new(&fmt_string).parse_to_owned()\n}\n\nlet fmt_items = format_items(\"%e %b %Y\", \"%k.%M\")?;\nlet datetime = NaiveDate::from_ymd_opt(2023, 7, 11).unwrap().and_hms_opt(9, 0, 0).unwrap();\n\nassert_eq!(\n    datetime.format_with_items(fmt_items.as_slice().iter()).to_string(),\n    \"11 Jul 2023  9.00\"\n);\n# Ok::<(), ParseError>(())\n```","links":{"`StrftimeItems::parse`":767,"`StrftimeItems::parse_to_owned`":769,"`Item`":314},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"Result","id":39,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Vec","id":768,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"constraints":[]}}}}}],"constraints":[]}}}}},{"type":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2004":{"id":2004,"crate_id":0,"name":"Error","span":{"filename":"src/weekday.rs","begin":[190,4],"end":[190,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1061":{"id":1061,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1353":{"id":1353,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"118":{"id":118,"crate_id":0,"name":"fmt","span":{"filename":"src/time_delta.rs","begin":[52,63],"end":[52,68]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"410":{"id":410,"crate_id":0,"name":"years_since","span":{"filename":"src/datetime/mod.rs","begin":[599,4],"end":[613,5]},"visibility":"public","docs":"Retrieve the elapsed years from now to the given [`DateTime`].\n\n# Errors\n\nReturns `None` if `base > self`.","links":{"`DateTime`":174},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["base",{"generic":"Self"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1645":{"id":1645,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[20,31],"end":[20,39]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"use":{"source":"self::date::MIN_DATE","name":"MIN_DATE","id":1296,"is_glob":false}}},"702":{"id":702,"crate_id":0,"name":"set_weekday","span":{"filename":"src/format/parsed.rs","begin":[383,4],"end":[385,5]},"visibility":"public","docs":"Set the [`weekday`](Parsed::weekday) field to the given value.\n\n# Errors\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"Parsed::weekday":701},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1937":{"id":1937,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2229":{"id":2229,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"994":{"id":994,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"51":{"id":51,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1286":{"id":1286,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2220,0],"end":[2239,1]},"visibility":"default","docs":"The `Debug` output of the naive date `d` is the same as\n[`d.format(\"%Y-%m-%d\")`](crate::format::strftime).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(2015, 9, 5).unwrap()), \"2015-09-05\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(0, 1, 1).unwrap()), \"0000-01-01\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(9999, 12, 31).unwrap()), \"9999-12-31\");\n```\n\nISO 8601 requires an explicit sign for years before 1 BCE or after 9999 CE.\n\n```\n# use chrono::NaiveDate;\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(-1, 1, 1).unwrap()), \"-0001-01-01\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(10000, 12, 31).unwrap()), \"+10000-12-31\");\n```","links":{"crate::format::strftime":315},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1285],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"343":{"id":343,"crate_id":0,"name":"weekday","span":{"filename":"src/date.rs","begin":[422,4],"end":[424,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1578":{"id":1578,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[241,0],"end":[900,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1561,1562,1563,1564,1565,1566,1567,1568,1569,1570,1571,1572,1573,1574,1575,766,1576,1577],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1870":{"id":1870,"crate_id":0,"name":"unwrap","span":{"filename":"src/offset/mod.rs","begin":[259,4],"end":[267,5]},"visibility":"public","docs":"Returns a single unique conversion result or panics.\n\n`unwrap()` is best combined with time zone types where the mapping can never fail like\n[`Utc`] and [`FixedOffset`]. Note that for [`FixedOffset`] there is a rare case where a\nresulting [`DateTime`] can be out of range.\n\n# Panics\n\nPanics if the local time falls within a _fold_ or a _gap_ in the local time, and on any\nerror that may have been returned by the type implementing [`TimeZone`].","links":{"`DateTime`":174,"`Utc`":273,"`FixedOffset`":271,"`TimeZone`":165},"attrs":["#[must_use]","#[track_caller]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"635":{"id":635,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2162":{"id":2162,"crate_id":0,"name":"year","span":{"filename":"src/traits.rs","begin":[33,4],"end":[33,26]},"visibility":"default","docs":"Returns the year number in the [calendar date](./naive/struct.NaiveDate.html#calendar-date).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"927":{"id":927,"crate_id":0,"name":"Internal","span":{"filename":"src/format/mod.rs","begin":[254,4],"end":[254,27]},"visibility":"default","docs":"Internal uses only.\n\nThis item exists so that one can add additional internal-only formatting\nwithout breaking major compatibility (as enum variants cannot be selectively private).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[925]},"discriminant":null}}},"1219":{"id":1219,"crate_id":0,"name":"iter_days","span":{"filename":"src/naive/date/mod.rs","begin":[1292,4],"end":[1294,5]},"visibility":"public","docs":"Returns an iterator that steps by days across all representable dates.\n\n# Example\n\n```\n# use chrono::NaiveDate;\n\nlet expected = [\n    NaiveDate::from_ymd_opt(2016, 2, 27).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 2, 28).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 2, 29).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 3, 1).unwrap(),\n];\n\nlet mut count = 0;\nfor (idx, d) in NaiveDate::from_ymd_opt(2016, 2, 27).unwrap().iter_days().take(4).enumerate() {\n    assert_eq!(d, expected[idx]);\n    count += 1;\n}\nassert_eq!(count, 4);\n\nfor d in NaiveDate::from_ymd_opt(2016, 3, 1).unwrap().iter_days().rev().take(4) {\n    count -= 1;\n    assert_eq!(d, expected[count]);\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1511":{"id":1511,"crate_id":0,"name":"Err","span":{"filename":"src/naive/datetime/mod.rs","begin":[2107,4],"end":[2107,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"276":{"id":276,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[537,31],"end":[537,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::NaiveDateTime","name":"NaiveDateTime","id":200,"is_glob":false}}},"1803":{"id":1803,"crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/local/mod.rs","begin":[178,4],"end":[180,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["local",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"860":{"id":860,"crate_id":0,"name":"Internal","span":{"filename":"src/format/mod.rs","begin":[154,4],"end":[154,29]},"visibility":"default","docs":"Internal uses only.\n\nThis item exists so that one can add additional internal-only formatting\nwithout breaking major compatibility (as enum variants cannot be selectively private).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[858]},"discriminant":null}}},"2095":{"id":2095,"crate_id":0,"name":"from_u64","span":{"filename":"src/month.rs","begin":[195,4],"end":[197,5]},"visibility":"default","docs":"Returns an `Option<Month>` from a i64, assuming a 1-index, January = 1.\n\n`Month::from_i64(n: i64)`: | `1`                  | `2`                   | ... | `12`\n---------------------------| -------------------- | --------------------- | ... | -----\n``:                        | Some(Month::January) | Some(Month::February) | ... | Some(Month::December)","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["n",{"primitive":"u64"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1152":{"id":1152,"crate_id":0,"name":"NotEnough","span":{"filename":"src/format/mod.rs","begin":[414,4],"end":[414,13]},"visibility":"default","docs":"Given set of fields is not enough to make a requested date and time value.\n\nNote that there *may* be a case that given fields constrain the possible values so much\nthat there is a unique possible value. Chrono only tries to be correct for\nmost useful sets of fields however, as such constraint solving can be expensive.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"209":{"id":209,"crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/naive/datetime/mod.rs","begin":[709,4],"end":[714,5]},"visibility":"public","docs":"Subtracts given `TimeDelta` from the current date and time.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when the `NaiveDateTime` itself represents a leap second\nin which case the assumption becomes that **there is exactly a single leap second ever**.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{NaiveDate, TimeDelta};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7).checked_sub_signed(TimeDelta::zero()), Some(hms(3, 5, 7)));\nassert_eq!(\n    hms(3, 5, 7).checked_sub_signed(TimeDelta::try_seconds(1).unwrap()),\n    Some(hms(3, 5, 6))\n);\nassert_eq!(\n    hms(3, 5, 7).checked_sub_signed(TimeDelta::try_seconds(-1).unwrap()),\n    Some(hms(3, 5, 8))\n);\nassert_eq!(\n    hms(3, 5, 7).checked_sub_signed(TimeDelta::try_seconds(3600 + 60).unwrap()),\n    Some(hms(2, 4, 7))\n);\nassert_eq!(\n    hms(3, 5, 7).checked_sub_signed(TimeDelta::try_seconds(86_400).unwrap()),\n    Some(from_ymd(2016, 7, 7).and_hms_opt(3, 5, 7).unwrap())\n);\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli_opt(h, m, s, milli).unwrap();\nassert_eq!(\n    hmsm(3, 5, 7, 450).checked_sub_signed(TimeDelta::try_milliseconds(670).unwrap()),\n    Some(hmsm(3, 5, 6, 780))\n);\n```\n\nOverflow returns `None`.\n\n```\n# use chrono::{TimeDelta, NaiveDate};\n# let hms = |h, m, s| NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7).checked_sub_signed(TimeDelta::try_days(1_000_000_000).unwrap()), None);\n```\n\nLeap seconds are handled,\nbut the subtraction assumes that it is the only leap second happened.\n\n```\n# use chrono::{TimeDelta, NaiveDate};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli_opt(h, m, s, milli).unwrap();\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap.checked_sub_signed(TimeDelta::zero()),\n           Some(hmsm(3, 5, 59, 1_300)));\nassert_eq!(leap.checked_sub_signed(TimeDelta::try_milliseconds(200).unwrap()),\n           Some(hmsm(3, 5, 59, 1_100)));\nassert_eq!(leap.checked_sub_signed(TimeDelta::try_milliseconds(500).unwrap()),\n           Some(hmsm(3, 5, 59, 800)));\nassert_eq!(leap.checked_sub_signed(TimeDelta::try_seconds(60).unwrap()),\n           Some(hmsm(3, 5, 0, 300)));\nassert_eq!(leap.checked_sub_signed(TimeDelta::try_days(1).unwrap()),\n           Some(from_ymd(2016, 7, 7).and_hms_milli_opt(3, 6, 0, 300).unwrap()));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1444":{"id":1444,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[67,42],"end":[67,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"path":"Ord","id":117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1443],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"501":{"id":501,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1172,0],"end":[1327,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["year_ce","num_days_from_ce"],"trait":{"path":"Datelike","id":263,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[478,479,480,481,482,483,484,485,486,488,490,492,494,496,498,500],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1736":{"id":1736,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"793":{"id":793,"crate_id":0,"name":"fmt","span":{"filename":"src/format/strftime.rs","begin":[190,16],"end":[190,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2028":{"id":2028,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"ToString","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[92],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1085":{"id":1085,"crate_id":0,"name":"Numeric","span":{"filename":"src/format/mod.rs","begin":[342,4],"end":[342,25]},"visibility":"default","docs":"Numeric item. Can be optionally padded to the maximal length (if any) when formatting;\nthe parser simply ignores any padded whitespace and zeroes.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[1083,1084]},"discriminant":null}}},"142":{"id":142,"crate_id":0,"name":"sub_assign","span":{"filename":"src/time_delta.rs","begin":[525,4],"end":[528,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1377":{"id":1377,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2186,0],"end":[2186,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"path":"ExactSizeIterator","id":1335,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1669":{"id":1669,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"434":{"id":434,"crate_id":0,"name":"parse_and_remainder","span":{"filename":"src/datetime/mod.rs","begin":[1086,4],"end":[1093,5]},"visibility":"public","docs":"Parses a string from a user-specified format into a `DateTime<FixedOffset>` value, and a\nslice with the remaining portion of the string.\n\nNote that this method *requires a timezone* in the input string. See\n[`NaiveDateTime::parse_and_remainder`] for a version that does not\nrequire a timezone in `s`. The returned [`DateTime`] value will have a [`FixedOffset`]\nreflecting the parsed timezone.\n\nSee the [`format::strftime` module](./format/strftime/index.html) for supported format\nsequences.\n\nSimilar to [`parse_from_str`](#method.parse_from_str).\n\n# Example\n\n```rust\n# use chrono::{DateTime, FixedOffset, TimeZone};\nlet (datetime, remainder) = DateTime::parse_and_remainder(\n    \"2015-02-18 23:16:09 +0200 trailing text\",\n    \"%Y-%m-%d %H:%M:%S %z\",\n)\n.unwrap();\nassert_eq!(\n    datetime,\n    FixedOffset::east_opt(2 * 3600).unwrap().with_ymd_and_hms(2015, 2, 18, 23, 16, 9).unwrap()\n);\nassert_eq!(remainder, \" trailing text\");\n```","links":{"`DateTime`":174,"`NaiveDateTime::parse_and_remainder`":433,"`FixedOffset`":271},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1961":{"id":1961,"crate_id":0,"name":"Sat","span":{"filename":"src/weekday.rs","begin":[53,4],"end":[53,11]},"visibility":"default","docs":"Saturday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"5","value":"5"}}}},"726":{"id":726,"crate_id":0,"name":"to_datetime","span":{"filename":"src/format/parsed.rs","begin":[882,4],"end":[897,5]},"visibility":"public","docs":"Returns a parsed timezone-aware date and time out of given fields.\n\nThis method is able to determine the combined date and time from date, time and offset\nfields, and/or from a single timestamp field. It checks all fields are consistent with each\nother.\n\n# Errors\n\nThis method returns:\n- `IMPOSSIBLE`  if any of the date fields conflict, or if a timestamp conflicts with any of\n  the other fields.\n- `NOT_ENOUGH` if there are not enough fields set in `Parsed` for a complete datetime\n  including offset from UTC.\n- `OUT_OF_RANGE`\n  - if any of the fields of `Parsed` are set to a value beyond their acceptable\n    range.\n  - if the value would be outside the range of a [`NaiveDateTime`] or [`FixedOffset`].\n  - if the date does not exist.","links":{"`NaiveDateTime`":200,"`FixedOffset`":271},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1018":{"id":1018,"crate_id":0,"name":"OptionalMinutesAndSeconds","span":{"filename":"src/format/mod.rs","begin":[313,4],"end":[313,29]},"visibility":"default","docs":"Format offset from UTC as hours and optionally minutes and seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1310":{"id":1310,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1602":{"id":1602,"crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/time/mod.rs","begin":[212,30],"end":[212,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::option::Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"367":{"id":367,"crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[528,0],"end":[535,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[365,366],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1894":{"id":1894,"crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[58,34],"end":[58,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::marker::Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"951":{"id":951,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[174,31],"end":[174,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[950],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1243":{"id":1243,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"8":{"id":8,"crate_id":0,"name":"try_days","span":{"filename":"src/time_delta.rs","begin":[145,4],"end":[147,5]},"visibility":"public","docs":"Makes a new `TimeDelta` with the given number of days.\n\nEquivalent to `TimeDelta::try_seconds(days * 24 * 60 * 60)` with overflow\nchecks.\n\n# Errors\n\nReturns `None` when the `TimeDelta` would be out of bounds.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["days",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"300":{"id":300,"crate_id":0,"name":"offset","span":{"filename":"src/date.rs","begin":[241,4],"end":[243,5]},"visibility":"public","docs":"Retrieves an associated offset from UTC.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"","id":165,"args":null}}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1535":{"id":1535,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1827":{"id":1827,"crate_id":0,"name":"clone","span":{"filename":"src/offset/utc.rs","begin":[43,15],"end":[43,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2119":{"id":2119,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[225,9],"end":[225,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2118],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"884":{"id":884,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[102,31],"end":[102,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[883],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1176":{"id":1176,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[398,16],"end":[398,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1175],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"233":{"id":233,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1468":{"id":1468,"crate_id":0,"name":"minute","span":{"filename":"src/naive/datetime/mod.rs","begin":[1390,4],"end":[1392,5]},"visibility":"default","docs":"Returns the minute number from 0 to 59.\n\nSee also the [`NaiveTime::minute`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.minute(), 34);\n```","links":{"`NaiveTime::minute`":1467},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1760":{"id":1760,"crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/fixed.rs","begin":[137,4],"end":[139,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["_local",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"525":{"id":525,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1461,0],"end":[1465,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[524],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2052":{"id":2052,"crate_id":0,"name":"December","span":{"filename":"src/month.rs","begin":[64,4],"end":[64,17]},"visibility":"default","docs":"December","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"11","value":"11"}}}},"817":{"id":817,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1109":{"id":1109,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[328,16],"end":[328,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[1108],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1401":{"id":1401,"crate_id":0,"name":"timestamp_subsec_millis","span":{"filename":"src/naive/datetime/mod.rs","begin":[428,4],"end":[430,5]},"visibility":"public","docs":"Returns the number of milliseconds since the last whole non-leap second.\n\nThe return value ranges from 0 to 999,\nor for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999.","links":{},"attrs":["#[deprecated(since = \"0.4.35\", note =\n\"use `.and_utc().timestamp_subsec_millis()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.35","note":"use `.and_utc().timestamp_subsec_millis()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"166":{"id":166,"crate_id":0,"name":"add_assign","span":{"filename":"src/date.rs","begin":[507,4],"end":[509,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1693":{"id":1693,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"458":{"id":458,"crate_id":0,"name":"clone","span":{"filename":"src/datetime/mod.rs","begin":[49,9],"end":[49,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"750":{"id":750,"crate_id":0,"name":"fmt","span":{"filename":"src/format/parsed.rs","begin":[128,31],"end":[128,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1985":{"id":1985,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1042":{"id":1042,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[296,40],"end":[296,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"99":{"id":99,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[52,16],"end":[52,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1334":{"id":1334,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2152,0],"end":[2152,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"path":"ExactSizeIterator","id":1335,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"391":{"id":391,"crate_id":0,"name":"timestamp_subsec_millis","span":{"filename":"src/datetime/mod.rs","begin":[371,4],"end":[373,5]},"visibility":"public","docs":"Returns the number of milliseconds since the last second boundary.\n\nIn event of a leap second this may exceed 999.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1626":{"id":1626,"crate_id":0,"name":"sub","span":{"filename":"src/naive/time/mod.rs","begin":[1385,4],"end":[1387,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"683":{"id":683,"crate_id":0,"name":"year_mod_100","span":{"filename":"src/format/parsed.rs","begin":[989,4],"end":[991,5]},"visibility":"public","docs":"Get the `year_mod_100` field if set.\n\nSee also [`set_year_mod_100()`](Parsed::set_year_mod_100).","links":{"Parsed::set_year_mod_100":686},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1918":{"id":1918,"crate_id":0,"name":"trunc_subsecs","span":{"filename":"src/round.rs","begin":[49,4],"end":[49,48]},"visibility":"default","docs":"Return a copy truncated to the specified number of subsecond\ndigits. With 9 or more digits, self is returned unmodified.\n\n# Example\n``` rust\n# use chrono::{SubsecRound, Timelike, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 11)\n    .unwrap()\n    .and_hms_milli_opt(12, 0, 0, 154)\n    .unwrap()\n    .and_utc();\nassert_eq!(dt.trunc_subsecs(2).nanosecond(), 150_000_000);\nassert_eq!(dt.trunc_subsecs(1).nanosecond(), 100_000_000);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["digits",{"primitive":"u16"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"2210":{"id":2210,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[573,48],"end":[573,51]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"inner":{"use":{"source":"offset::Utc","name":"Utc","id":273,"is_glob":false}}},"975":{"id":975,"crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[258,23],"end":[258,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"32":{"id":32,"crate_id":0,"name":"abs","span":{"filename":"src/time_delta.rs","begin":[412,4],"end":[418,5]},"visibility":"public","docs":"Returns the `TimeDelta` as an absolute (non-negative) value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1267":{"id":1267,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[1444,0],"end":[1867,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["year_ce","num_days_from_ce"],"trait":{"path":"Datelike","id":263,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1258,1259,1260,1261,1262,1263,1264,1265,1266,487,489,491,493,495,497,499],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"324":{"id":324,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1851":{"id":1851,"crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[38,0],"end":[38,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"self::utc::Utc","name":"Utc","id":273,"is_glob":false}}},"616":{"id":616,"crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[321,0],"end":[327,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":154,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"super::Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"items":[615],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2143":{"id":2143,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"908":{"id":908,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[158,26],"end":[158,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1200":{"id":1200,"crate_id":0,"name":"parse_and_remainder","span":{"filename":"src/naive/date/mod.rs","begin":[516,4],"end":[520,5]},"visibility":"public","docs":"Parses a string from a user-specified format into a new `NaiveDate` value, and a slice with\nthe remaining portion of the string.\nSee the [`format::strftime` module](crate::format::strftime)\non the supported escape sequences.\n\nSimilar to [`parse_from_str`](#method.parse_from_str).\n\n# Example\n\n```rust\n# use chrono::{NaiveDate};\nlet (date, remainder) =\n    NaiveDate::parse_and_remainder(\"2015-02-18 trailing text\", \"%Y-%m-%d\").unwrap();\nassert_eq!(date, NaiveDate::from_ymd_opt(2015, 2, 18).unwrap());\nassert_eq!(remainder, \" trailing text\");\n```","links":{"crate::format::strftime":315},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1492":{"id":1492,"crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1887,4],"end":[1887,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"257":{"id":257,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[530,4],"end":[530,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"use":{"source":"crate::Local","name":"Local","id":256,"is_glob":false}}},"1784":{"id":1784,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"549":{"id":549,"crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1707,4],"end":[1709,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"841":{"id":841,"crate_id":0,"name":"IsoYear","span":{"filename":"src/format/mod.rs","begin":[113,4],"end":[113,11]},"visibility":"default","docs":"Year in the ISO week date (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2076":{"id":2076,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[531,0],"end":[555,1]},"visibility":"default","docs":"Parsing a `str` into a `Month` uses the format [`%B`](./format/strftime/index.html).\n\n# Example\n\n```\nuse chrono::Month;\n\nassert_eq!(\"January\".parse::<Month>(), Ok(Month::January));\nassert!(\"any day\".parse::<Month>().is_err());\n```\n\nThe parsing is case-insensitive.\n\n```\n# use chrono::Month;\nassert_eq!(\"fEbruARy\".parse::<Month>(), Ok(Month::February));\n```\n\nOnly the shortest form (e.g. `jan`) and the longest form (e.g. `january`) is accepted.\n\n```\n# use chrono::Month;\nassert!(\"septem\".parse::<Month>().is_err());\nassert!(\"Augustin\".parse::<Month>().is_err());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FromStr","id":568,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"crate::Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2073,2075],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1133":{"id":1133,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"190":{"id":190,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[1906,0],"end":[1913,1]},"visibility":"default","docs":"Add `TimeDelta` to `NaiveDate`.\n\nThis discards the fractional days in `TimeDelta`, rounding to the closest integral number of\ndays towards `TimeDelta::zero()`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDate::checked_add_signed`] to get an `Option` instead.\n\n# Example\n\n```\nuse chrono::{NaiveDate, TimeDelta};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nassert_eq!(from_ymd(2014, 1, 1) + TimeDelta::zero(), from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + TimeDelta::try_seconds(86399).unwrap(), from_ymd(2014, 1, 1));\nassert_eq!(\n    from_ymd(2014, 1, 1) + TimeDelta::try_seconds(-86399).unwrap(),\n    from_ymd(2014, 1, 1)\n);\nassert_eq!(from_ymd(2014, 1, 1) + TimeDelta::try_days(1).unwrap(), from_ymd(2014, 1, 2));\nassert_eq!(from_ymd(2014, 1, 1) + TimeDelta::try_days(-1).unwrap(), from_ymd(2013, 12, 31));\nassert_eq!(from_ymd(2014, 1, 1) + TimeDelta::try_days(364).unwrap(), from_ymd(2014, 12, 31));\nassert_eq!(\n    from_ymd(2014, 1, 1) + TimeDelta::try_days(365 * 4 + 1).unwrap(),\n    from_ymd(2018, 1, 1)\n);\nassert_eq!(\n    from_ymd(2014, 1, 1) + TimeDelta::try_days(365 * 400 + 97).unwrap(),\n    from_ymd(2414, 1, 1)\n);\n```\n\n[`NaiveDate::checked_add_signed`]: crate::NaiveDate::checked_add_signed","links":{"crate::NaiveDate::checked_add_signed":189},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[186,188],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1425":{"id":1425,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"482":{"id":482,"crate_id":0,"name":"day0","span":{"filename":"src/datetime/mod.rs","begin":[1190,4],"end":[1192,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1717":{"id":1717,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[215,50],"end":[215,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","gt","ge"],"trait":{"path":"PartialOrd","id":114,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1716],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2009":{"id":2009,"crate_id":0,"name":"from_u64","span":{"filename":"src/weekday.rs","begin":[225,4],"end":[236,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["n",{"primitive":"u64"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"774":{"id":774,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1066":{"id":1066,"crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[317,22],"end":[317,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"123":{"id":123,"crate_id":0,"name":"hash","span":{"filename":"src/time_delta.rs","begin":[52,70],"end":[52,74]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1358":{"id":1358,"crate_id":0,"name":"fmt","span":{"filename":"src/naive/date/mod.rs","begin":[2166,9],"end":[2166,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1650":{"id":1650,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[24,0],"end":[24,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"self::time::NaiveTime","name":"NaiveTime","id":202,"is_glob":false}}},"415":{"id":415,"crate_id":0,"name":"to_rfc3339_opts","span":{"filename":"src/datetime/mod.rs","begin":[676,4],"end":[681,5]},"visibility":"public","docs":"Return an RFC 3339 and ISO 8601 date and time string with subseconds\nformatted as per `SecondsFormat`.\n\nIf `use_z` is true and the timezone is UTC (offset 0), uses `Z` as\nper [`Fixed::TimezoneOffsetColonZ`]. If `use_z` is false, uses\n[`Fixed::TimezoneOffsetColon`]\n\n# Examples\n\n```rust\n# use chrono::{FixedOffset, SecondsFormat, TimeZone, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 26)\n    .unwrap()\n    .and_hms_micro_opt(18, 30, 9, 453_829)\n    .unwrap()\n    .and_utc();\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Millis, false), \"2018-01-26T18:30:09.453+00:00\");\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Millis, true), \"2018-01-26T18:30:09.453Z\");\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Secs, true), \"2018-01-26T18:30:09Z\");\n\nlet pst = FixedOffset::east_opt(8 * 60 * 60).unwrap();\nlet dt = pst\n    .from_local_datetime(\n        &NaiveDate::from_ymd_opt(2018, 1, 26)\n            .unwrap()\n            .and_hms_micro_opt(10, 30, 9, 453_829)\n            .unwrap(),\n    )\n    .unwrap();\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Secs, true), \"2018-01-26T10:30:09+08:00\");\n```","links":{"`Fixed::TimezoneOffsetColon`":414,"`Fixed::TimezoneOffsetColonZ`":413},"attrs":["#[cfg(feature = \"alloc\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["secform",{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}],["use_z",{"primitive":"bool"}]],"output":{"resolved_path":{"path":"String","id":93,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1942":{"id":1942,"crate_id":0,"name":"fmt","span":{"filename":"src/round.rs","begin":[244,9],"end":[244,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"707":{"id":707,"crate_id":0,"name":"hour_div_12","span":{"filename":"src/format/parsed.rs","begin":[1087,4],"end":[1089,5]},"visibility":"public","docs":"Get the `hour_div_12` field (am/pm) if set.\n\n0 indicates AM and 1 indicates PM.\n\nSee also [`set_ampm()`](Parsed::set_ampm) and [`set_hour()`](Parsed::set_hour).","links":{"Parsed::set_hour":711,"Parsed::set_ampm":708},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2234":{"id":2234,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"999":{"id":999,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1291":{"id":1291,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2285,0],"end":[2304,1]},"visibility":"default","docs":"Parsing a `str` into a `NaiveDate` uses the same format,\n[`%Y-%m-%d`](crate::format::strftime), as in `Debug` and `Display`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 9, 18).unwrap();\nassert_eq!(\"2015-09-18\".parse::<NaiveDate>(), Ok(d));\n\nlet d = NaiveDate::from_ymd_opt(12345, 6, 7).unwrap();\nassert_eq!(\"+12345-6-7\".parse::<NaiveDate>(), Ok(d));\n\nassert!(\"foo\".parse::<NaiveDate>().is_err());\n```","links":{"crate::format::strftime":315},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FromStr","id":568,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1289,1290],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1583":{"id":1583,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"348":{"id":348,"crate_id":0,"name":"with_month0","span":{"filename":"src/date.rs","begin":[441,4],"end":[443,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["month0",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"640":{"id":640,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1875":{"id":1875,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"932":{"id":932,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2167":{"id":2167,"crate_id":0,"name":"ordinal","span":{"filename":"src/traits.rs","begin":[70,4],"end":[70,29]},"visibility":"default","docs":"Returns the day of year starting from 1.\n\nThe return value ranges from 1 to 366. (The last day of year differs by years.)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"1224":{"id":1224,"crate_id":0,"name":"week","span":{"filename":"src/naive/date/mod.rs","begin":[1330,4],"end":[1332,5]},"visibility":"public","docs":"Returns the [`NaiveWeek`] that the date belongs to, starting with the [`Weekday`]\nspecified.","links":{"`NaiveWeek`":1223,"`Weekday`":269},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["start",{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"281":{"id":281,"crate_id":0,"name":"prelude","span":{"filename":"src/lib.rs","begin":[526,0],"end":[526,15]},"visibility":"public","docs":"A convenience module appropriate for glob imports (`use chrono::prelude::*;`).","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[255,257,259,260,262,264,266,268,270,272,274,275,276,277,279,280],"is_stripped":false}}},"1516":{"id":1516,"crate_id":0,"name":"Err","span":{"filename":"src/round.rs","begin":[171,4],"end":[171,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1808":{"id":1808,"crate_id":0,"name":"today","span":{"filename":"src/offset/utc.rs","begin":[63,4],"end":[65,5]},"visibility":"public","docs":"Returns a `Date` which corresponds to the current date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `Utc::now()` instead, potentially with `.date_naive()`\")]","#[allow(deprecated)]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `Utc::now()` instead, potentially with `.date_naive()`"},"inner":{"function":{"sig":{"inputs":[],"output":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2100":{"id":2100,"crate_id":0,"name":"new","span":{"filename":"src/month.rs","begin":[231,4],"end":[233,5]},"visibility":"public","docs":"Construct a new `Months` from a number of months","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["num",{"primitive":"u32"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"865":{"id":865,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"214":{"id":214,"crate_id":0,"name":"add","span":{"filename":"src/naive/time/mod.rs","begin":[1210,4],"end":[1212,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1449":{"id":1449,"crate_id":0,"name":"month","span":{"filename":"src/naive/datetime/mod.rs","begin":[1003,4],"end":[1005,5]},"visibility":"default","docs":"Returns the month number starting from 1.\n\nThe return value ranges from 1 to 12.\n\nSee also the [`NaiveDate::month`](./struct.NaiveDate.html#method.month) method.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.month(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1741":{"id":1741,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"506":{"id":506,"crate_id":0,"name":"with_hour","span":{"filename":"src/naive/time/mod.rs","begin":[1010,4],"end":[1016,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with the hour number changed.\n\n# Errors\n\nReturns `None` if the value for `hour` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(dt.with_hour(7), Some(NaiveTime::from_hms_nano_opt(7, 56, 4, 12_345_678).unwrap()));\nassert_eq!(dt.with_hour(24), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2033":{"id":2033,"crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[240,16],"end":[240,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2032],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1090":{"id":1090,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1382":{"id":1382,"crate_id":0,"name":"MIN_DATETIME","span":{"filename":"src/naive/datetime/mod.rs","begin":[37,0],"end":[37,59]},"visibility":"public","docs":"The minimum possible `NaiveDateTime`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDateTime::MIN instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDateTime::MIN instead"},"inner":{"constant":{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"const":{"expr":"NaiveDateTime::MIN","value":null,"is_literal":false}}}},"147":{"id":147,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[531,0],"end":[537,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Mul","id":148,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[145,146],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1674":{"id":1674,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"439":{"id":439,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"731":{"id":731,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1966":{"id":1966,"crate_id":0,"name":"number_from_sunday","span":{"filename":"src/weekday.rs","begin":[113,4],"end":[115,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Sunday = 1.\n\n`w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.number_from_sunday()`: | 2     | 3     | 4     | 5     | 6     | 7     | 1","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1023":{"id":1023,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1315":{"id":1315,"crate_id":0,"name":"fmt","span":{"filename":"src/naive/date/mod.rs","begin":[2130,9],"end":[2130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"372":{"id":372,"crate_id":0,"name":"MIN_DATE","span":{"filename":"src/date.rs","begin":[66,0],"end":[66,53]},"visibility":"public","docs":"The minimum possible `Date`.","links":{},"attrs":["#[allow(deprecated)]","#[deprecated(since = \"0.4.20\", note = \"Use Date::MIN_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use Date::MIN_UTC instead"},"inner":{"constant":{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::offset::Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"const":{"expr":"Date<Utc>::MIN_UTC","value":null,"is_literal":false}}}},"1607":{"id":1607,"crate_id":0,"name":"clone","span":{"filename":"src/naive/time/mod.rs","begin":[212,53],"end":[212,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1899":{"id":1899,"crate_id":0,"name":"Offset","span":{"filename":"src/offset/mod.rs","begin":[283,4],"end":[283,24]},"visibility":"default","docs":"An associated offset type.\nThis type is used to store the actual offset in date and time types.\nThe original `TimeZone` value can be recovered via `TimeZone::from_offset`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"path":"Offset","id":278,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"type":null}}},"2191":{"id":2191,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[546,15],"end":[546,23]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]","#[allow(deprecated)]"],"deprecation":null,"inner":{"use":{"source":"date::MAX_DATE","name":"MAX_DATE","id":373,"is_glob":false}}},"956":{"id":956,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"13":{"id":13,"crate_id":0,"name":"seconds","span":{"filename":"src/time_delta.rs","begin":[207,4],"end":[209,5]},"visibility":"public","docs":"Makes a new `TimeDelta` with the given number of seconds.\n\n# Panics\n\nPanics when `seconds` is more than `i64::MAX / 1_000` or less than `-i64::MAX / 1_000`\n(in this context, this is the same as `i64::MIN / 1_000` due to rounding).","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["seconds",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1248":{"id":1248,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[94,20],"end":[94,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1540":{"id":1540,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"305":{"id":305,"crate_id":0,"name":"signed_duration_since","span":{"filename":"src/date.rs","begin":[287,4],"end":[289,5]},"visibility":"public","docs":"Subtracts another `Date` from the current date.\nReturns a `TimeDelta` of integral numbers.\n\nThis does not overflow or underflow at all,\nas all possible output fits in the range of `TimeDelta`.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1832":{"id":1832,"crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,33],"end":[43,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"597":{"id":597,"crate_id":0,"name":"new_with_offset","span":{"filename":"src/format/formatting.rs","begin":[58,4],"end":[69,5]},"visibility":"public","docs":"Makes a new `DelayedFormat` value out of local date and time and UTC offset.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["date",{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}],["time",{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}],["offset",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Off"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"Off","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Off"},"bounds":[{"trait_bound":{"trait":{"path":"Offset","id":278,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2124":{"id":2124,"crate_id":0,"name":"hash","span":{"filename":"src/month.rs","begin":[225,33],"end":[225,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"889":{"id":889,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1181":{"id":1181,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[398,38],"end":[398,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1473":{"id":1473,"crate_id":0,"name":"with_second","span":{"filename":"src/naive/datetime/mod.rs","begin":[1521,4],"end":[1523,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the second number changed.\n\nAs with the [`second`](#method.second) method,\nthe input range is restricted to 0 through 59.\n\nSee also the [`NaiveTime::with_second`] method.\n\n# Errors\n\nReturns `None` if the value for `second` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(\n    dt.with_second(17),\n    Some(\n        NaiveDate::from_ymd_opt(2015, 9, 8)\n            .unwrap()\n            .and_hms_milli_opt(12, 34, 17, 789)\n            .unwrap()\n    )\n);\nassert_eq!(dt.with_second(60), None);\n```","links":{"`NaiveTime::with_second`":510},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"238":{"id":238,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"530":{"id":530,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1537,0],"end":[1544,1]},"visibility":"default","docs":"Add-assign `std::time::Duration` to `DateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`DateTime<Tz>::checked_add_signed`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_add_signed`":176},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"AddAssign","id":141,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[529],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1765":{"id":1765,"crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[149,0],"end":[153,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Offset","id":278,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1764],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"822":{"id":822,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2057":{"id":2057,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[67,0],"end":[164,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2053,2054,2055,2056],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1114":{"id":1114,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[328,38],"end":[328,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[1113],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"171":{"id":171,"crate_id":0,"name":"sub_assign","span":{"filename":"src/date.rs","begin":[523,4],"end":[525,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1406":{"id":1406,"crate_id":0,"name":"checked_sub_offset","span":{"filename":"src/naive/datetime/mod.rs","begin":[593,4],"end":[601,5]},"visibility":"public","docs":"Subtracts given `FixedOffset` from the current datetime.\nReturns `None` if the result would be outside the valid range for [`NaiveDateTime`].\n\nThis method is similar to [`checked_sub_signed`](#method.checked_sub_signed), but preserves\nleap seconds.","links":{"`NaiveDateTime`":200},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"463":{"id":463,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[871,0],"end":[875,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":103,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::offset::Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"items":[462],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1698":{"id":1698,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1990":{"id":1990,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[494,0],"end":[504,1]},"visibility":"default","docs":"Parsing a `str` into a `Weekday` uses the format [`%A`](./format/strftime/index.html).\n\n# Example\n\n```\nuse chrono::Weekday;\n\nassert_eq!(\"Sunday\".parse::<Weekday>(), Ok(Weekday::Sun));\nassert!(\"any day\".parse::<Weekday>().is_err());\n```\n\nThe parsing is case-insensitive.\n\n```\n# use chrono::Weekday;\nassert_eq!(\"mON\".parse::<Weekday>(), Ok(Weekday::Mon));\n```\n\nOnly the shortest form (e.g. `sun`) and the longest form (e.g. `sunday`) is accepted.\n\n```\n# use chrono::Weekday;\nassert!(\"thurs\".parse::<Weekday>().is_err());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FromStr","id":568,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"crate::Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1987,1989],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"755":{"id":755,"crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[128,47],"end":[128,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[754],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1047":{"id":1047,"crate_id":0,"name":"Maybe","span":{"filename":"src/format/mod.rs","begin":[324,4],"end":[324,9]},"visibility":"default","docs":"No separator when formatting, colon allowed when parsing.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"104":{"id":104,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[52,31],"end":[52,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1339":{"id":1339,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2163,0],"end":[2163,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":1340,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1631":{"id":1631,"crate_id":0,"name":"fmt","span":{"filename":"src/naive/time/mod.rs","begin":[1505,4],"end":[1529,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"396":{"id":396,"crate_id":0,"name":"with_timezone","span":{"filename":"src/datetime/mod.rs","begin":[412,4],"end":[414,5]},"visibility":"public","docs":"Changes the associated time zone.\nThe returned `DateTime` references the same instant of time from the perspective of the\nprovided time zone.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["tz",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Tz2"}}}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1923":{"id":1923,"crate_id":0,"name":"DurationExceedsTimestamp","span":{"filename":"src/round.rs","begin":[249,4],"end":[249,28]},"visibility":"default","docs":"Error when the TimeDelta exceeds the TimeDelta from or until the Unix epoch.\n\nNote: this error is not produced anymore.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"688":{"id":688,"crate_id":0,"name":"isoyear_div_100","span":{"filename":"src/format/parsed.rs","begin":[1009,4],"end":[1011,5]},"visibility":"public","docs":"Get the `isoyear_div_100` field that is part of an [ISO 8601 week date] if set.\n\nSee also [`set_isoyear_div_100()`](Parsed::set_isoyear_div_100).\n\n[ISO 8601 week date]: crate::NaiveDate#week-date","links":{"crate::NaiveDate#week-date":187,"Parsed::set_isoyear_div_100":691},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"980":{"id":980,"crate_id":0,"name":"precision","span":{"filename":"src/format/mod.rs","begin":[286,4],"end":[286,34]},"visibility":"public","docs":"See `OffsetPrecision`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}},"2215":{"id":2215,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[581,0],"end":[581,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"weekday::Weekday","name":"Weekday","id":269,"is_glob":false}}},"1272":{"id":1272,"crate_id":0,"name":"sub","span":{"filename":"src/naive/date/mod.rs","begin":[1987,4],"end":[1989,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["months",{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":138,"args":null}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"37":{"id":37,"crate_id":0,"name":"from_std","span":{"filename":"src/time_delta.rs","begin":[450,4],"end":[459,5]},"visibility":"public","docs":"Creates a `TimeDelta` object from `std::time::Duration`\n\nThis function errors when original duration is larger than the maximum\nvalue supported for this type.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["duration",{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Result","id":39,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},{"type":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1564":{"id":1564,"crate_id":0,"name":"from_hms_milli_opt","span":{"filename":"src/naive/time/mod.rs","begin":[326,4],"end":[334,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and millisecond.\n\nThe millisecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute, second and/or millisecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hmsm_opt = NaiveTime::from_hms_milli_opt;\n\nassert!(from_hmsm_opt(0, 0, 0, 0).is_some());\nassert!(from_hmsm_opt(23, 59, 59, 999).is_some());\nassert!(from_hmsm_opt(23, 59, 59, 1_999).is_some()); // a leap second after 23:59:59\nassert!(from_hmsm_opt(24, 0, 0, 0).is_none());\nassert!(from_hmsm_opt(23, 60, 0, 0).is_none());\nassert!(from_hmsm_opt(23, 59, 60, 0).is_none());\nassert!(from_hmsm_opt(23, 59, 59, 2_000).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"329":{"id":329,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"621":{"id":621,"crate_id":0,"name":"Millis","span":{"filename":"src/format/formatting.rs","begin":[465,4],"end":[465,10]},"visibility":"default","docs":"Use fixed 3 subsecond digits. This corresponds to [Fixed::Nanosecond3].","links":{"Fixed::Nanosecond3":620},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1856":{"id":1856,"crate_id":0,"name":"Ambiguous","span":{"filename":"src/offset/mod.rs","begin":[68,4],"end":[68,19]},"visibility":"default","docs":"The local time is _ambiguous_ because there is a _fold_ in the local time.\n\nThis variant contains the two possible results, in the order `(earliest, latest)`.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[1854,1855]},"discriminant":null}}},"913":{"id":913,"crate_id":0,"name":"ShortMonthName","span":{"filename":"src/format/mod.rs","begin":[179,4],"end":[179,18]},"visibility":"default","docs":"Abbreviated month names.\n\nPrints a three-letter-long name in the title case, reads the same name in any case.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2148":{"id":2148,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1205":{"id":1205,"crate_id":0,"name":"and_hms_opt","span":{"filename":"src/naive/date/mod.rs","begin":[751,4],"end":[754,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute and second.\n\nNo [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;\nuse `NaiveDate::and_hms_*_opt` methods with a subsecond parameter instead.\n\n# Errors\n\nReturns `None` on invalid hour, minute and/or second.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nassert!(d.and_hms_opt(12, 34, 56).is_some());\nassert!(d.and_hms_opt(12, 34, 60).is_none()); // use `and_hms_milli_opt` instead\nassert!(d.and_hms_opt(12, 60, 56).is_none());\nassert!(d.and_hms_opt(24, 34, 56).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"262":{"id":262,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[534,30],"end":[534,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::SecondsFormat","name":"SecondsFormat","id":261,"is_glob":false}}},"1497":{"id":1497,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1926,0],"end":[1932,1]},"visibility":"default","docs":"Subtract `Months` from `NaiveDateTime`.\n\nThe result will be clamped to valid days in the resulting month, see\n[`NaiveDateTime::checked_sub_months`] for details.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDateTime::checked_sub_months`] to get an `Option` instead.\n\n# Example\n\n```\nuse chrono::{Months, NaiveDate};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 01, 01).unwrap().and_hms_opt(01, 00, 00).unwrap()\n        - Months::new(11),\n    NaiveDate::from_ymd_opt(2013, 02, 01).unwrap().and_hms_opt(01, 00, 00).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 01, 01).unwrap().and_hms_opt(00, 02, 00).unwrap()\n        - Months::new(12),\n    NaiveDate::from_ymd_opt(2013, 01, 01).unwrap().and_hms_opt(00, 02, 00).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 01, 01).unwrap().and_hms_opt(00, 00, 03).unwrap()\n        - Months::new(13),\n    NaiveDate::from_ymd_opt(2012, 12, 01).unwrap().and_hms_opt(00, 00, 03).unwrap()\n);\n```","links":{"`NaiveDateTime::checked_sub_months`":1407},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1495,1496],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"554":{"id":554,"crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1732,4],"end":[1732,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}}},"1789":{"id":1789,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2081":{"id":2081,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,24],"end":[31,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"846":{"id":846,"crate_id":0,"name":"WeekFromSun","span":{"filename":"src/format/mod.rs","begin":[123,4],"end":[123,15]},"visibility":"default","docs":"Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1138":{"id":1138,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[386,16],"end":[386,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1137],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1430":{"id":1430,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"195":{"id":195,"crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/naive/date/mod.rs","begin":[1076,4],"end":[1082,5]},"visibility":"public","docs":"Subtracts the number of whole days in the given `TimeDelta` from the current date.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{NaiveDate, TimeDelta};\n\nlet d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(\n    d.checked_sub_signed(TimeDelta::try_days(40).unwrap()),\n    Some(NaiveDate::from_ymd_opt(2015, 7, 27).unwrap())\n);\nassert_eq!(\n    d.checked_sub_signed(TimeDelta::try_days(-40).unwrap()),\n    Some(NaiveDate::from_ymd_opt(2015, 10, 15).unwrap())\n);\nassert_eq!(d.checked_sub_signed(TimeDelta::try_days(1_000_000_000).unwrap()), None);\nassert_eq!(d.checked_sub_signed(TimeDelta::try_days(-1_000_000_000).unwrap()), None);\nassert_eq!(NaiveDate::MIN.checked_sub_signed(TimeDelta::try_days(1).unwrap()), None);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1722":{"id":1722,"crate_id":0,"name":"east","span":{"filename":"src/offset/fixed.rs","begin":[41,4],"end":[43,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.\n\nPanics on the out-of-bound `secs`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `east_opt()` instead\")]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `east_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["secs",{"primitive":"i32"}]],"output":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"487":{"id":487,"crate_id":0,"name":"with_year","span":{"filename":"src/naive/date/mod.rs","begin":[1672,4],"end":[1681,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the year number changed, while keeping the same month and day.\n\nThis method assumes you want to work on the date as a year-month-day value. Don't use it if\nyou want the ordinal to stay the same after changing the year, of if you want the week and\nweekday values to stay the same.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (February 29 in a non-leap year).\n- The year is out of range for a `NaiveDate`.\n\n# Examples\n\n```\nuse chrono::{Datelike, NaiveDate};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_year(2016),\n    Some(NaiveDate::from_ymd_opt(2016, 9, 8).unwrap())\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_year(-308),\n    Some(NaiveDate::from_ymd_opt(-308, 9, 8).unwrap())\n);\n```\n\nA leap day (February 29) is a case where this method can return `None`.\n\n```\n# use chrono::{NaiveDate, Datelike};\nassert!(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap().with_year(2015).is_none());\nassert!(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap().with_year(2020).is_some());\n```\n\nDon't use `with_year` if you want the ordinal date to stay the same:\n\n```\n# use chrono::{Datelike, NaiveDate};\nassert_ne!(\n    NaiveDate::from_yo_opt(2020, 100).unwrap().with_year(2023).unwrap(),\n    NaiveDate::from_yo_opt(2023, 100).unwrap() // result is 2023-101\n);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2014":{"id":2014,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"779":{"id":779,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1071":{"id":1071,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[317,40],"end":[317,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1363":{"id":1363,"crate_id":0,"name":"hash","span":{"filename":"src/naive/date/mod.rs","begin":[2166,29],"end":[2166,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"128":{"id":128,"crate_id":0,"name":"neg","span":{"filename":"src/time_delta.rs","begin":[492,4],"end":[498,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1655":{"id":1655,"crate_id":0,"name":"last_day","span":{"filename":"src/naive/mod.rs","begin":[114,4],"end":[116,5]},"visibility":"public","docs":"Returns a date representing the last day of the week.\n\n# Panics\n\nPanics if the last day of the week happens to fall just out of range of `NaiveDate`\n(more than ca. 262,000 years away from common era).\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet date = NaiveDate::from_ymd_opt(2022, 4, 18).unwrap();\nlet week = date.week(Weekday::Mon);\nassert!(week.last_day() >= date);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"420":{"id":420,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[68,0],"end":[713,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[379,380,381,285,382,383,386,387,388,389,390,391,392,393,394,395,396,397,398,176,400,182,403,405,406,407,408,409,410,411,412,415,416,418,419],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"712":{"id":712,"crate_id":0,"name":"minute","span":{"filename":"src/format/parsed.rs","begin":[1102,4],"end":[1104,5]},"visibility":"public","docs":"Get the `minute` field if set.\n\nSee also [`set_minute()`](Parsed::set_minute).","links":{"Parsed::set_minute":713},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1947":{"id":1947,"crate_id":0,"name":"eq","span":{"filename":"src/round.rs","begin":[244,23],"end":[244,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1004":{"id":1004,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[283,16],"end":[283,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2239":{"id":2239,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[664,9],"end":[664,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2238],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"61":{"id":61,"crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1296":{"id":1296,"crate_id":0,"name":"MIN_DATE","span":{"filename":"src/naive/date/mod.rs","begin":[108,0],"end":[108,47]},"visibility":"public","docs":"The minimum possible `NaiveDate` (January 1, 262145 BCE).","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDate::MIN instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDate::MIN instead"},"inner":{"constant":{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"const":{"expr":"NaiveDate::MIN","value":null,"is_literal":false}}}},"353":{"id":353,"crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[392,0],"end":[464,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["year_ce","num_days_from_ce"],"trait":{"path":"Datelike","id":263,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1588":{"id":1588,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1880":{"id":1880,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"645":{"id":645,"crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[458,9],"end":[458,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[644],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2172":{"id":2172,"crate_id":0,"name":"with_day","span":{"filename":"src/traits.rs","begin":[192,4],"end":[192,49]},"visibility":"default","docs":"Makes a new value with the day of month (starting from 1) changed.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (for example `day(31)` in April).\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n- The value for `day` is out of range.\n\n[`DateTime<Tz>`]: crate::DateTime","links":{"crate::DateTime":174},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"937":{"id":937,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1229":{"id":1229,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"286":{"id":286,"crate_id":0,"name":"from_utc","span":{"filename":"src/date.rs","begin":[77,4],"end":[79,5]},"visibility":"public","docs":"Makes a new `Date` with given *UTC* date and offset.\nThe local date should be constructed via the `TimeZone` trait.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["date",{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}],["offset",{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"","id":165,"args":null}}}]],"output":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1813":{"id":1813,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"578":{"id":578,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1871,0],"end":[1882,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"std::time::SystemTime","id":573,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[577],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2105":{"id":2105,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"870":{"id":870,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1162":{"id":1162,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1454":{"id":1454,"crate_id":0,"name":"ordinal0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1103,4],"end":[1105,5]},"visibility":"default","docs":"Returns the day of year starting from 0.\n\nThe return value ranges from 0 to 365. (The last day of year differs by years.)\n\nSee also the [`NaiveDate::ordinal0`] method.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.ordinal0(), 267);\n```","links":{"`NaiveDate::ordinal0`":1264},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"219":{"id":219,"crate_id":0,"name":"sub","span":{"filename":"src/naive/time/mod.rs","begin":[1332,4],"end":[1334,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"511":{"id":511,"crate_id":0,"name":"with_second","span":{"filename":"src/datetime/mod.rs","begin":[1390,4],"end":[1392,5]},"visibility":"default","docs":"Makes a new `DateTime` with the second number changed.\n\nAs with the [`second`](#method.second) method,\nthe input range is restricted to 0 through 59.\n\nSee also the [`NaiveTime::with_second`] method.\n\n# Errors\n\nReturns `None` if:\n- The value for `second` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveTime::with_second`":510},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1746":{"id":1746,"crate_id":0,"name":"eq","span":{"filename":"src/offset/fixed.rs","begin":[22,9],"end":[22,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"803":{"id":803,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[65,42],"end":[65,55]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[allow(deprecated)]"],"deprecation":null,"inner":{"use":{"source":"formatting::DelayedFormat","name":"DelayedFormat","id":313,"is_glob":false}}},"2038":{"id":2038,"crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[255,4],"end":[257,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1095":{"id":1095,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1387":{"id":1387,"crate_id":0,"name":"timestamp","span":{"filename":"src/offset/mod.rs","begin":[422,4],"end":[424,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nThe nanosecond part can exceed 1,000,000,000 in order to represent a\n[leap second](crate::NaiveTime#leap-second-handling), but only when `secs % 60 == 59`.\n(The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)\n\n# Panics\n\nPanics on the out-of-range number of seconds and/or invalid nanosecond,\nfor a non-panicking version see [`timestamp_opt`](#method.timestamp_opt).","links":{"crate::NaiveTime#leap-second-handling":202},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `timestamp_opt()` instead\")]"],"deprecation":{"since":"0.4.23","note":"use `timestamp_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["secs",{"primitive":"i64"}],["nsecs",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"444":{"id":444,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1679":{"id":1679,"crate_id":0,"name":"fmt","span":{"filename":"src/naive/mod.rs","begin":[32,22],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1971":{"id":1971,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"736":{"id":736,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1028":{"id":1028,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"85":{"id":85,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1320":{"id":1320,"crate_id":0,"name":"hash","span":{"filename":"src/naive/date/mod.rs","begin":[2130,29],"end":[2130,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1612":{"id":1612,"crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1231,4],"end":[1231,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"377":{"id":377,"crate_id":0,"name":"from_local_datetime","span":{"filename":"src/offset/mod.rs","begin":[567,4],"end":[573,5]},"visibility":"default","docs":"Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.","links":{},"attrs":["#[allow(clippy::wrong_self_convention)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["local",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1904":{"id":1904,"crate_id":0,"name":"isoywd","span":{"filename":"src/offset/mod.rs","begin":[384,4],"end":[386,5]},"visibility":"default","docs":"Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date and/or invalid week number.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_local_datetime()` with a `NaiveDateTime` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` with a `NaiveDateTime` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["week",{"primitive":"u32"}],["weekday",{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"961":{"id":961,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2196":{"id":2196,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[558,17],"end":[558,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"format::ParseError","name":"ParseError","id":565,"is_glob":false}}},"1253":{"id":1253,"crate_id":0,"name":"cmp","span":{"filename":"src/naive/date/mod.rs","begin":[94,42],"end":[94,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"18":{"id":18,"crate_id":0,"name":"nanoseconds","span":{"filename":"src/time_delta.rs","begin":[272,4],"end":[275,5]},"visibility":"public","docs":"Makes a new `TimeDelta` with the given number of nanoseconds.\n\nThe number of nanoseconds acceptable by this constructor is less than\nthe total number that can actually be stored in a `TimeDelta`, so it is\nnot possible to specify a value that would be out of bounds. This\nfunction is therefore infallible.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["nanos",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1545":{"id":1545,"crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,20],"end":[19,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"310":{"id":310,"crate_id":0,"name":"MAX_UTC","span":{"filename":"src/date.rs","begin":[318,4],"end":[318,78]},"visibility":"public","docs":"The maximum possible `Date`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"value":"_"}}},"602":{"id":602,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1837":{"id":1837,"crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/utc.rs","begin":[121,4],"end":[123,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["_local",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"894":{"id":894,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2129":{"id":2129,"crate_id":0,"name":"partial_cmp","span":{"filename":"src/month.rs","begin":[225,50],"end":[225,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::option::Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1186":{"id":1186,"crate_id":0,"name":"year_ce","span":{"filename":"src/traits.rs","begin":[38,4],"end":[45,5]},"visibility":"default","docs":"Returns the absolute year number starting from 1 with a boolean flag,\nwhich is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"bool"},{"primitive":"u32"}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"243":{"id":243,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[602,16],"end":[602,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[242],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1478":{"id":1478,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1645,0],"end":[1654,1]},"visibility":"default","docs":"Add `std::time::Duration` to `NaiveDateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDateTime::checked_add_signed`] to get an `Option` instead.","links":{"`NaiveDateTime::checked_add_signed`":203},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1476,1477],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"535":{"id":535,"crate_id":0,"name":"add","span":{"filename":"src/datetime/mod.rs","begin":[1578,4],"end":[1580,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":134,"args":null}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2062":{"id":2062,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"827":{"id":827,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[78,9],"end":[78,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1119":{"id":1119,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1411":{"id":1411,"crate_id":0,"name":"format","span":{"filename":"src/naive/datetime/mod.rs","begin":[900,4],"end":[902,5]},"visibility":"public","docs":"Formats the combined date and time with the specified format string.\nSee the [`format::strftime` module](crate::format::strftime)\non the supported escape sequences.\n\nThis returns a `DelayedFormat`,\nwhich gets converted to a string only when actual formatting happens.\nYou may use the `to_string` method to get a `String`,\nor just feed it into `print!` and other formatting macros.\n(In this way it avoids the redundant memory allocation.)\n\nA wrong format string does *not* issue an error immediately.\nRather, converting or formatting the `DelayedFormat` fails.\nYou are recommended to immediately use `DelayedFormat` for this reason.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2015-09-05 23:56:04\");\nassert_eq!(dt.format(\"around %l %p on %b %-d\").to_string(), \"around 11 PM on Sep 5\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# let dt = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(format!(\"{}\", dt.format(\"%Y-%m-%d %H:%M:%S\")), \"2015-09-05 23:56:04\");\nassert_eq!(format!(\"{}\", dt.format(\"around %l %p on %b %-d\")), \"around 11 PM on Sep 5\");\n```","links":{"crate::format::strftime":315},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"176":{"id":176,"crate_id":0,"name":"checked_add_signed","span":{"filename":"src/datetime/mod.rs","begin":[439,4],"end":[443,5]},"visibility":"public","docs":"Adds given `TimeDelta` to the current date and time.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1703":{"id":1703,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"468":{"id":468,"crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[900,4],"end":[902,5]},"visibility":"default","docs":"Convert this `DateTime<Utc>` instance into a `DateTime<Local>` instance.\n\nConversion is performed via [`DateTime::with_timezone`], accounting for the difference in timezones.","links":{"`DateTime::with_timezone`":396},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["src",{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1995":{"id":1995,"crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,24],"end":[32,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1052":{"id":1052,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1344":{"id":1344,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"109":{"id":109,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[52,42],"end":[52,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1636":{"id":1636,"crate_id":0,"name":"from_str","span":{"filename":"src/naive/time/mod.rs","begin":[1604,4],"end":[1626,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"401":{"id":401,"crate_id":0,"name":"Months","span":{"filename":"src/month.rs","begin":[227,0],"end":[227,34]},"visibility":"public","docs":"A duration in calendar months","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":[2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,536,547,1270,1273,1486,1497,2119,2120,2122,2123,2125,2126,2128,2130,2132]}}},"693":{"id":693,"crate_id":0,"name":"month","span":{"filename":"src/format/parsed.rs","begin":[1027,4],"end":[1029,5]},"visibility":"public","docs":"Get the `month` field if set.\n\nSee also [`set_month()`](Parsed::set_month).","links":{"Parsed::set_month":694},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1928":{"id":1928,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"985":{"id":985,"crate_id":0,"name":"padding","span":{"filename":"src/format/mod.rs","begin":[292,4],"end":[292,20]},"visibility":"public","docs":"Pad the hour value to two digits.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}},"2220":{"id":2220,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[589,27],"end":[589,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"traits::Timelike","name":"Timelike","id":267,"is_glob":false}}},"42":{"id":42,"crate_id":0,"name":"MIN","span":{"filename":"src/time_delta.rs","begin":[482,4],"end":[482,30]},"visibility":"public","docs":"The minimum possible `TimeDelta`: `-i64::MAX` milliseconds.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"value":"MIN"}}},"1277":{"id":1277,"crate_id":0,"name":"Output","span":{"filename":"src/naive/date/mod.rs","begin":[2013,4],"end":[2013,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"334":{"id":334,"crate_id":0,"name":"clone","span":{"filename":"src/date.rs","begin":[56,9],"end":[56,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1569":{"id":1569,"crate_id":0,"name":"from_num_seconds_from_midnight","span":{"filename":"src/naive/time/mod.rs","begin":[450,4],"end":[452,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.\n\nThe nanosecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `secs % 60 == 59`.\n\n# Panics\n\nPanics on invalid number of seconds and/or nanosecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_num_seconds_from_midnight_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_num_seconds_from_midnight_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["secs",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1861":{"id":1861,"crate_id":0,"name":"map","span":{"filename":"src/offset/mod.rs","begin":[120,4],"end":[126,5]},"visibility":"public","docs":"Maps a `MappedLocalTime<T>` into `MappedLocalTime<U>` with given function.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":1862,"args":{"parenthesized":{"inputs":[{"generic":"T"}],"output":{"generic":"U"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"626":{"id":626,"crate_id":0,"name":"Nanosecond","span":{"filename":"src/format/mod.rs","begin":[203,4],"end":[203,14]},"visibility":"default","docs":"An optional dot plus one or more digits for left-aligned nanoseconds.\nMay print nothing, 3, 6 or 9 digits according to the available accuracy.\nSee also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2153":{"id":2153,"crate_id":0,"name":"eq","span":{"filename":"src/month.rs","begin":[243,16],"end":[243,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"918":{"id":918,"crate_id":0,"name":"UpperAmPm","span":{"filename":"src/format/mod.rs","begin":[199,4],"end":[199,13]},"visibility":"default","docs":"AM/PM.\n\nPrints in upper case, reads in any case.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1210":{"id":1210,"crate_id":0,"name":"and_hms_nano","span":{"filename":"src/naive/date/mod.rs","begin":[881,4],"end":[883,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.\n\nThe nanosecond part is allowed to exceed 1,000,000,000 in order to represent a [leap second](\n./struct.NaiveTime.html#leap-second-handling), but only when `sec == 59`.\n\n# Panics\n\nPanics on invalid hour, minute, second and/or nanosecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `and_hms_nano_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `and_hms_nano_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1502":{"id":1502,"crate_id":0,"name":"add","span":{"filename":"src/naive/datetime/mod.rs","begin":[2001,4],"end":[2003,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":134,"args":null}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"267":{"id":267,"crate_id":0,"name":"Timelike","span":{"filename":"src/traits.rs","begin":[267,0],"end":[328,1]},"visibility":"public","docs":"The common set of methods for time component.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_dyn_compatible":false,"items":[2177,2178,2179,2180,2181,2182,2183,2184,1560,2185],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[515,1475,1611]}}},"1794":{"id":1794,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"559":{"id":559,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1749,0],"end":[1755,1]},"visibility":"default","docs":"Subtract `Days` from `DateTime`.\n\n# Panics\n\nPanics if:\n- The resulting date would be out of range.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.\n\nStrongly consider using `DateTime<Tz>::checked_sub_days` to get an `Option` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[557,558],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"851":{"id":851,"crate_id":0,"name":"Ordinal","span":{"filename":"src/format/mod.rs","begin":[133,4],"end":[133,11]},"visibility":"default","docs":"Day of the year (FW=PW=3).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2086":{"id":2086,"crate_id":0,"name":"hash","span":{"filename":"src/month.rs","begin":[31,44],"end":[31,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1143":{"id":1143,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[386,38],"end":[386,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1435":{"id":1435,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[67,9],"end":[67,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"200":{"id":200,"crate_id":0,"name":"NaiveDateTime","span":{"filename":"src/naive/datetime/mod.rs","begin":[76,0],"end":[79,1]},"visibility":"public","docs":"ISO 8601 combined date and time without timezone.\n\n# Example\n\n`NaiveDateTime` is commonly created from [`NaiveDate`].\n\n```\nuse chrono::{NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(9, 10, 11).unwrap();\n# let _ = dt;\n```\n\nYou can use typical [date-like](Datelike) and [time-like](Timelike) methods,\nprovided that relevant traits are in the scope.\n\n```\n# use chrono::{NaiveDate, NaiveDateTime};\n# let dt: NaiveDateTime = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(9, 10, 11).unwrap();\nuse chrono::{Datelike, Timelike, Weekday};\n\nassert_eq!(dt.weekday(), Weekday::Fri);\nassert_eq!(dt.num_seconds_from_midnight(), 33011);\n```","links":{"`NaiveDate`":187,"Datelike":263,"Timelike":267},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[],"where_predicates":[]},"impls":[1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,1434,1284,1435,1437,1438,1440,1442,1444,1445,1447,1295,1464,1475,204,1478,206,1480,1483,1486,210,1489,212,1491,1494,1497,1500,1503,1506,1508,1510,1513,1515,1519]}}},"492":{"id":492,"crate_id":0,"name":"with_month0","span":{"filename":"src/datetime/mod.rs","begin":[1260,4],"end":[1262,5]},"visibility":"default","docs":"Makes a new `DateTime` with the month number (starting from 0) changed.\n\nSee also the [`NaiveDate::with_month0`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (for example `month0(3)` when day of the month is 31).\n- The value for `month0` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_month0`":491},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["month0",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1727":{"id":1727,"crate_id":0,"name":"utc_minus_local","span":{"filename":"src/offset/fixed.rs","begin":[113,4],"end":[115,5]},"visibility":"public","docs":"Returns the number of seconds to add to convert from the local time to UTC.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"784":{"id":784,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2019":{"id":2019,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1076":{"id":1076,"crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[334,17],"end":[334,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"Box","id":1077,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"constraints":[]}}}}}},"133":{"id":133,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[501,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[131,132],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1368":{"id":1368,"crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/date/mod.rs","begin":[2166,46],"end":[2166,56]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::option::Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1660":{"id":1660,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[38,0],"end":[207,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1653,1654,1655,1656,1658,1659],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"425":{"id":425,"crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/offset/mod.rs","begin":[499,4],"end":[501,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap nanoseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\nUnlike [`timestamp_millis_opt`](#method.timestamp_millis_opt), this never fails.\n\n# Example\n\n```\nuse chrono::{TimeZone, Utc};\n\nassert_eq!(Utc.timestamp_nanos(1431648000000000).timestamp(), 1431648);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["nanos",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1952":{"id":1952,"crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[282,0],"end":[296,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1951],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"717":{"id":717,"crate_id":0,"name":"set_nanosecond","span":{"filename":"src/format/parsed.rs","begin":[513,4],"end":[518,5]},"visibility":"public","docs":"Set the [`nanosecond`](Parsed::nanosecond) field to the given value.\n\nThis is the number of nanoseconds since the whole second.\n\n# Errors\n\nReturns `OUT_OF_RANGE` if `value` is not in the range 0-999,999,999.\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"Parsed::nanosecond":716},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2244":{"id":2244,"crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[664,28],"end":[664,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1009":{"id":1009,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[283,29],"end":[283,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1008],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1301":{"id":1301,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1593":{"id":1593,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"358":{"id":358,"crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[476,0],"end":[476,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1885":{"id":1885,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"650":{"id":650,"crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[458,33],"end":[458,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"942":{"id":942,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2177":{"id":2177,"crate_id":0,"name":"hour","span":{"filename":"src/traits.rs","begin":[269,4],"end":[269,26]},"visibility":"default","docs":"Returns the hour number from 0 to 23.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"1234":{"id":1234,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1526":{"id":1526,"crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[34,0],"end":[118,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1523,1524,1525],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"291":{"id":291,"crate_id":0,"name":"and_hms_milli_opt","span":{"filename":"src/date.rs","begin":[132,4],"end":[140,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute, second and/or millisecond.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1818":{"id":1818,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"583":{"id":583,"crate_id":0,"name":"RoundingError","span":{"filename":"src/round.rs","begin":[245,0],"end":[280,1]},"visibility":"public","docs":"An error from rounding by `TimeDelta`\n\nSee: [`DurationRound`]","links":{"`DurationRound`":585},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"has_stripped_variants":false,"variants":[1923,1924,1925],"impls":[1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1943,1945,1946,1948,1949,1950,1952,1954]}}},"875":{"id":875,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2110":{"id":2110,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1167":{"id":1167,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"224":{"id":224,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1459":{"id":1459,"crate_id":0,"name":"with_month0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1218,4],"end":[1220,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the month number (starting from 0) changed.\n\nSee also the [`NaiveDate::with_month0`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (for example `month0(3)` when day of the month is 31).\n- The value for `month0` is invalid.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(\n    dt.with_month0(9),\n    Some(NaiveDate::from_ymd_opt(2015, 10, 30).unwrap().and_hms_opt(12, 34, 56).unwrap())\n);\nassert_eq!(dt.with_month0(12), None); // No month 13\nassert_eq!(dt.with_month0(1), None); // No February 30\n```","links":{"`NaiveDate::with_month0`":491},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["month0",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1751":{"id":1751,"crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[22,30],"end":[22,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"516":{"id":516,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1413,0],"end":[1418,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"resolved_path":{"path":"crate::naive::NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"bounds":[{"trait_bound":{"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2043":{"id":2043,"crate_id":0,"name":"March","span":{"filename":"src/month.rs","begin":[46,4],"end":[46,13]},"visibility":"default","docs":"March","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"2","value":"2"}}}},"808":{"id":808,"crate_id":0,"name":"None","span":{"filename":"src/format/mod.rs","begin":[81,4],"end":[81,8]},"visibility":"default","docs":"No padding.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1100":{"id":1100,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1392":{"id":1392,"crate_id":0,"name":"from_timestamp_opt","span":{"filename":"src/naive/datetime/mod.rs","begin":[194,4],"end":[196,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` corresponding to a UTC date and time,\nfrom the number of non-leap seconds\nsince the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nThe nanosecond part can exceed 1,000,000,000 in order to represent a\n[leap second](NaiveTime#leap-second-handling), but only when `secs % 60 == 59`.\n(The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)\n\n# Errors\n\nReturns `None` if the number of seconds would be out of range for a `NaiveDateTime` (more\nthan ca. 262,000 years away from common era), and panics on an invalid nanosecond\n(2 seconds or more).","links":{"NaiveTime#leap-second-handling":202},"attrs":["#[deprecated(since = \"0.4.35\", note =\n\"use `DateTime::from_timestamp` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.35","note":"use `DateTime::from_timestamp` instead"},"inner":{"function":{"sig":{"inputs":[["secs",{"primitive":"i64"}],["nsecs",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"157":{"id":157,"crate_id":0,"name":"sum","span":{"filename":"src/time_delta.rs","begin":[554,4],"end":[556,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["iter",{"generic":"I"}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":154,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1684":{"id":1684,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[32,39],"end":[32,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"449":{"id":449,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1976":{"id":1976,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"741":{"id":741,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1033":{"id":1033,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1325":{"id":1325,"crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/date/mod.rs","begin":[2130,46],"end":[2130,56]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::option::Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"90":{"id":90,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"382":{"id":382,"crate_id":0,"name":"date_naive","span":{"filename":"src/datetime/mod.rs","begin":[173,4],"end":[175,5]},"visibility":"public","docs":"Retrieves the date component.\n\n# Panics\n\n[`DateTime`] internally stores the date and time in UTC with a [`NaiveDateTime`]. This\nmethod will panic if the offset from UTC would push the local date outside of the\nrepresentable range of a [`NaiveDate`].\n\n# Example\n\n```\nuse chrono::prelude::*;\n\nlet date: DateTime<Utc> = Utc.with_ymd_and_hms(2020, 1, 1, 0, 0, 0).unwrap();\nlet other: DateTime<FixedOffset> =\n    FixedOffset::east_opt(23).unwrap().with_ymd_and_hms(2020, 1, 1, 0, 0, 0).unwrap();\nassert_eq!(date.date_naive(), other.date_naive());\n```","links":{"`DateTime`":174,"`NaiveDateTime`":200,"`NaiveDate`":187},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1617":{"id":1617,"crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1260,4],"end":[1260,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1909":{"id":1909,"crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/mod.rs","begin":[549,4],"end":[549,89]},"visibility":"default","docs":"Creates the offset(s) for given local `NaiveDate` if possible.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["local",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":165,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"966":{"id":966,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2201":{"id":2201,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[562,33],"end":[562,46]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"inner":{"use":{"source":"naive::NaiveDateTime","name":"NaiveDateTime","id":200,"is_glob":false}}},"23":{"id":23,"crate_id":0,"name":"num_seconds","span":{"filename":"src/time_delta.rs","begin":[302,4],"end":[309,5]},"visibility":"public","docs":"Returns the total number of whole seconds in the `TimeDelta`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1258":{"id":1258,"crate_id":0,"name":"year","span":{"filename":"src/naive/date/mod.rs","begin":[1456,4],"end":[1458,5]},"visibility":"default","docs":"Returns the year number in the [calendar date](#calendar-date).\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().year(), 2015);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().year(), -308); // 309 BCE\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"315":{"id":315,"crate_id":0,"name":"strftime","span":{"filename":"src/format/strftime.rs","begin":[4,0],"end":[1137,1]},"visibility":"public","docs":"`strftime`/`strptime`-inspired date and time formatting syntax.\n\n## Specifiers\n\nThe following specifiers are available both to formatting and parsing.\n\n| Spec. | Example  | Description                                                                |\n|-------|----------|----------------------------------------------------------------------------|\n|       |          | **DATE SPECIFIERS:**                                                       |\n| `%Y`  | `2001`   | The full proleptic Gregorian year, zero-padded to 4 digits. chrono supports years from -262144 to 262143. Note: years before 1 BCE or after 9999 CE, require an initial sign (+/-).|\n| `%C`  | `20`     | The proleptic Gregorian year divided by 100, zero-padded to 2 digits. [^1] |\n| `%y`  | `01`     | The proleptic Gregorian year modulo 100, zero-padded to 2 digits. [^1]     |\n|       |          |                                                                            |\n| `%m`  | `07`     | Month number (01--12), zero-padded to 2 digits.                            |\n| `%b`  | `Jul`    | Abbreviated month name. Always 3 letters.                                  |\n| `%B`  | `July`   | Full month name. Also accepts corresponding abbreviation in parsing.       |\n| `%h`  | `Jul`    | Same as `%b`.                                                              |\n|       |          |                                                                            |\n| `%d`  | `08`     | Day number (01--31), zero-padded to 2 digits.                              |\n| `%e`  | ` 8`     | Same as `%d` but space-padded. Same as `%_d`.                              |\n|       |          |                                                                            |\n| `%a`  | `Sun`    | Abbreviated weekday name. Always 3 letters.                                |\n| `%A`  | `Sunday` | Full weekday name. Also accepts corresponding abbreviation in parsing.     |\n| `%w`  | `0`      | Sunday = 0, Monday = 1, ..., Saturday = 6.                                 |\n| `%u`  | `7`      | Monday = 1, Tuesday = 2, ..., Sunday = 7. (ISO 8601)                       |\n|       |          |                                                                            |\n| `%U`  | `28`     | Week number starting with Sunday (00--53), zero-padded to 2 digits. [^2]   |\n| `%W`  | `27`     | Same as `%U`, but week 1 starts with the first Monday in that year instead.|\n|       |          |                                                                            |\n| `%G`  | `2001`   | Same as `%Y` but uses the year number in ISO 8601 week date. [^3]          |\n| `%g`  | `01`     | Same as `%y` but uses the year number in ISO 8601 week date. [^3]          |\n| `%V`  | `27`     | Same as `%U` but uses the week number in ISO 8601 week date (01--53). [^3] |\n|       |          |                                                                            |\n| `%j`  | `189`    | Day of the year (001--366), zero-padded to 3 digits.                       |\n|       |          |                                                                            |\n| `%D`  | `07/08/01`    | Month-day-year format. Same as `%m/%d/%y`.                            |\n| `%x`  | `07/08/01`    | Locale's date representation (e.g., 12/31/99).                        |\n| `%F`  | `2001-07-08`  | Year-month-day format (ISO 8601). Same as `%Y-%m-%d`.                 |\n| `%v`  | ` 8-Jul-2001` | Day-month-year format. Same as `%e-%b-%Y`.                            |\n|       |          |                                                                            |\n|       |          | **TIME SPECIFIERS:**                                                       |\n| `%H`  | `00`     | Hour number (00--23), zero-padded to 2 digits.                             |\n| `%k`  | ` 0`     | Same as `%H` but space-padded. Same as `%_H`.                              |\n| `%I`  | `12`     | Hour number in 12-hour clocks (01--12), zero-padded to 2 digits.           |\n| `%l`  | `12`     | Same as `%I` but space-padded. Same as `%_I`.                              |\n|       |          |                                                                            |\n| `%P`  | `am`     | `am` or `pm` in 12-hour clocks.                                            |\n| `%p`  | `AM`     | `AM` or `PM` in 12-hour clocks.                                            |\n|       |          |                                                                            |\n| `%M`  | `34`     | Minute number (00--59), zero-padded to 2 digits.                           |\n| `%S`  | `60`     | Second number (00--60), zero-padded to 2 digits. [^4]                      |\n| `%f`  | `26490000`    | Number of nanoseconds since last whole second. [^7]                   |\n| `%.f` | `.026490`| Decimal fraction of a second. Consumes the leading dot. [^7]               |\n| `%.3f`| `.026`        | Decimal fraction of a second with a fixed length of 3.                |\n| `%.6f`| `.026490`     | Decimal fraction of a second with a fixed length of 6.                |\n| `%.9f`| `.026490000`  | Decimal fraction of a second with a fixed length of 9.                |\n| `%3f` | `026`         | Decimal fraction of a second like `%.3f` but without the leading dot. |\n| `%6f` | `026490`      | Decimal fraction of a second like `%.6f` but without the leading dot. |\n| `%9f` | `026490000`   | Decimal fraction of a second like `%.9f` but without the leading dot. |\n|       |               |                                                                       |\n| `%R`  | `00:34`       | Hour-minute format. Same as `%H:%M`.                                  |\n| `%T`  | `00:34:60`    | Hour-minute-second format. Same as `%H:%M:%S`.                        |\n| `%X`  | `00:34:60`    | Locale's time representation (e.g., 23:13:48).                        |\n| `%r`  | `12:34:60 AM` | Locale's 12 hour clock time. (e.g., 11:11:04 PM). Falls back to `%X` if the locale does not have a 12 hour clock format. |\n|       |          |                                                                            |\n|       |          | **TIME ZONE SPECIFIERS:**                                                  |\n| `%Z`  | `ACST`   | Local time zone name. Skips all non-whitespace characters during parsing. Identical to `%:z` when formatting. [^8] |\n| `%z`  | `+0930`  | Offset from the local time to UTC (with UTC being `+0000`).                |\n| `%:z` | `+09:30` | Same as `%z` but with a colon.                                             |\n|`%::z`|`+09:30:00`| Offset from the local time to UTC with seconds.                            |\n|`%:::z`| `+09`    | Offset from the local time to UTC without minutes.                         |\n| `%#z` | `+09`    | *Parsing only:* Same as `%z` but allows minutes to be missing or present.  |\n|       |          |                                                                            |\n|       |          | **DATE & TIME SPECIFIERS:**                                                |\n|`%c`|`Sun Jul  8 00:34:60 2001`|Locale's date and time (e.g., Thu Mar  3 23:05:25 2005).       |\n| `%+`  | `2001-07-08T00:34:60.026490+09:30` | ISO 8601 / RFC 3339 date & time format. [^5]     |\n|       |               |                                                                       |\n| `%s`  | `994518299`   | UNIX timestamp, the number of seconds since 1970-01-01 00:00 UTC. [^6]|\n|       |          |                                                                            |\n|       |          | **SPECIAL SPECIFIERS:**                                                    |\n| `%t`  |          | Literal tab (`\\t`).                                                        |\n| `%n`  |          | Literal newline (`\\n`).                                                    |\n| `%%`  |          | Literal percent sign.                                                      |\n\nIt is possible to override the default padding behavior of numeric specifiers `%?`.\nThis is not allowed for other specifiers and will result in the `BAD_FORMAT` error.\n\nModifier | Description\n-------- | -----------\n`%-?`    | Suppresses any padding including spaces and zeroes. (e.g. `%j` = `012`, `%-j` = `12`)\n`%_?`    | Uses spaces as a padding. (e.g. `%j` = `012`, `%_j` = ` 12`)\n`%0?`    | Uses zeroes as a padding. (e.g. `%e` = ` 9`, `%0e` = `09`)\n\nNotes:\n\n[^1]: `%C`, `%y`:\n   This is floor division, so 100 BCE (year number -99) will print `-1` and `99` respectively.\n   For `%y`, values greater or equal to 70 are interpreted as being in the 20th century,\n   values smaller than 70 in the 21st century.\n\n[^2]: `%U`:\n   Week 1 starts with the first Sunday in that year.\n   It is possible to have week 0 for days before the first Sunday.\n\n[^3]: `%G`, `%g`, `%V`:\n   Week 1 is the first week with at least 4 days in that year.\n   Week 0 does not exist, so this should be used with `%G` or `%g`.\n\n[^4]: `%S`:\n   It accounts for leap seconds, so `60` is possible.\n\n[^5]: `%+`: Same as `%Y-%m-%dT%H:%M:%S%.f%:z`, i.e. 0, 3, 6 or 9 fractional\n   digits for seconds and colons in the time zone offset.\n   <br>\n   <br>\n   This format also supports having a `Z` or `UTC` in place of `%:z`. They\n   are equivalent to `+00:00`.\n   <br>\n   <br>\n   Note that all `T`, `Z`, and `UTC` are parsed case-insensitively.\n   <br>\n   <br>\n   The typical `strftime` implementations have different (and locale-dependent)\n   formats for this specifier. While Chrono's format for `%+` is far more\n   stable, it is best to avoid this specifier if you want to control the exact\n   output.\n\n[^6]: `%s`:\n   This is not padded and can be negative.\n   For the purpose of Chrono, it only accounts for non-leap seconds\n   so it slightly differs from ISO C `strftime` behavior.\n\n[^7]: `%f`, `%.f`:\n   <br>\n   `%f` and `%.f` are notably different formatting specifiers.<br>\n   `%f` counts the number of nanoseconds since the last whole second, while `%.f` is a fraction of a\n   second.<br>\n   Example: 7μs is formatted as `7000` with `%f`, and formatted as `.000007` with `%.f`.\n\n[^8]: `%Z`:\n   Since `chrono` is not aware of timezones beyond their offsets, this specifier\n   **only prints the offset** when used for formatting. The timezone abbreviation\n   will NOT be printed. See [this issue](https://github.com/chronotope/chrono/issues/960)\n   for more information.\n   <br>\n   <br>\n   Offset will not be populated from the parsed data, nor will it be validated.\n   Timezone is completely ignored. Similar to the glibc `strptime` treatment of\n   this format code.\n   <br>\n   <br>\n   It is not possible to reliably convert from an abbreviation to an offset,\n   for example CDT can mean either Central Daylight Time (North America) or\n   China Daylight Time.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[317],"is_stripped":false}}},"1550":{"id":1550,"crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,41],"end":[19,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1842":{"id":1842,"crate_id":0,"name":"fix","span":{"filename":"src/offset/utc.rs","begin":[137,4],"end":[139,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"607":{"id":607,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2134":{"id":2134,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"899":{"id":899,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1191":{"id":1191,"crate_id":0,"name":"from_yo","span":{"filename":"src/naive/date/mod.rs","begin":[215,4],"end":[217,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n(year and day of the year).\n\n# Panics\n\nPanics if the specified ordinal day does not exist, on invalid values for `ordinal`, or if\n`year` is out of range for `NaiveDate`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_yo_opt()` instead\")]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_yo_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["year",{"primitive":"i32"}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1483":{"id":1483,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1696,0],"end":[1703,1]},"visibility":"default","docs":"Add `FixedOffset` to `NaiveDateTime`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using `checked_add_offset` to get an `Option` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1481,1482],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"248":{"id":248,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[602,40],"end":[602,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"540":{"id":540,"crate_id":0,"name":"sub_assign","span":{"filename":"src/datetime/mod.rs","begin":[1659,4],"end":[1663,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"832":{"id":832,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[78,22],"end":[78,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[831],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2067":{"id":2067,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1124":{"id":1124,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1416":{"id":1416,"crate_id":0,"name":"UNIX_EPOCH","span":{"filename":"src/naive/datetime/mod.rs","begin":[948,4],"end":[949,81]},"visibility":"public","docs":"The Unix Epoch, 1970-01-01 00:00:00.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"value":"_"}}},"181":{"id":181,"crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1599,4],"end":[1601,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"473":{"id":473,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[918,0],"end":[926,1]},"visibility":"default","docs":"Convert a `DateTime<FixedOffset>` instance into a `DateTime<Local>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::offset::Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"items":[472],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1708":{"id":1708,"crate_id":0,"name":"fmt","span":{"filename":"src/naive/mod.rs","begin":[215,22],"end":[215,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"765":{"id":765,"crate_id":0,"name":"format_with_items","span":{"filename":"src/naive/date/mod.rs","begin":[1185,4],"end":[1191,5]},"visibility":"public","docs":"Formats the date with the specified formatting items.\nOtherwise it is the same as the ordinary `format` method.\n\nThe `Iterator` of items should be `Clone`able,\nsince the resulting `DelayedFormat` value may be formatted multiple times.\n\n# Example\n\n```\nuse chrono::format::strftime::StrftimeItems;\nuse chrono::NaiveDate;\n\nlet fmt = StrftimeItems::new(\"%Y-%m-%d\");\nlet d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(d.format_with_items(fmt.clone()).to_string(), \"2015-09-05\");\nassert_eq!(d.format(\"%Y-%m-%d\").to_string(), \"2015-09-05\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# use chrono::format::strftime::StrftimeItems;\n# let fmt = StrftimeItems::new(\"%Y-%m-%d\").clone();\n# let d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(format!(\"{}\", d.format_with_items(fmt)), \"2015-09-05\");\n```","links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":154,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2000":{"id":2000,"crate_id":0,"name":"hash","span":{"filename":"src/weekday.rs","begin":[32,44],"end":[32,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1057":{"id":1057,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1349":{"id":1349,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"406":{"id":406,"crate_id":0,"name":"checked_sub_days","span":{"filename":"src/datetime/mod.rs","begin":[539,4],"end":[547,5]},"visibility":"public","docs":"Subtract a duration in [`Days`] from the date part of the `DateTime`.\n\n# Errors\n\nReturns `None` if:\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.\n- The resulting UTC datetime would be out of range.\n- The resulting local datetime would be out of range (unless `days` is zero).","links":{"`Days`":404},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1641":{"id":1641,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[18,21],"end":[18,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"self::date::NaiveDate","name":"NaiveDate","id":187,"is_glob":false}}},"1933":{"id":1933,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"698":{"id":698,"crate_id":0,"name":"set_week_from_mon","span":{"filename":"src/format/parsed.rs","begin":[353,4],"end":[358,5]},"visibility":"public","docs":"Set the [`week_from_mon`](Parsed::week_from_mon) week number field to the given value.\nSet the 'week number starting with Monday' field to the given value.\n\nWeek 1 starts at the first Monday of January.\n\n# Errors\n\nReturns `OUT_OF_RANGE` if `value` is not in the range 0-53.\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"Parsed::week_from_mon":697},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2225":{"id":2225,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"990":{"id":990,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1282":{"id":1282,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2114,0],"end":[2121,1]},"visibility":"default","docs":"Subtracts another `NaiveDate` from the current date.\nReturns a `TimeDelta` of integral numbers.\n\nThis does not overflow or underflow at all,\nas all possible output fits in the range of `TimeDelta`.\n\nThe implementation is a wrapper around\n[`NaiveDate::signed_duration_since`](#method.signed_duration_since).\n\n# Example\n\n```\nuse chrono::{NaiveDate, TimeDelta};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2014, 1, 1), TimeDelta::zero());\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2013, 12, 31), TimeDelta::try_days(1).unwrap());\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2014, 1, 2), TimeDelta::try_days(-1).unwrap());\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2013, 9, 23), TimeDelta::try_days(100).unwrap());\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2013, 1, 1), TimeDelta::try_days(365).unwrap());\nassert_eq!(\n    from_ymd(2014, 1, 1) - from_ymd(2010, 1, 1),\n    TimeDelta::try_days(365 * 4 + 1).unwrap()\n);\nassert_eq!(\n    from_ymd(2014, 1, 1) - from_ymd(1614, 1, 1),\n    TimeDelta::try_days(365 * 400 + 97).unwrap()\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1280,1281],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"47":{"id":47,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1574":{"id":1574,"crate_id":0,"name":"overflowing_sub_signed","span":{"filename":"src/naive/time/mod.rs","begin":[668,4],"end":[671,5]},"visibility":"public","docs":"Subtracts given `TimeDelta` from the current time, and also returns the number of *seconds*\nin the integral number of days ignored from the subtraction.\n\n# Example\n\n```\nuse chrono::{NaiveTime, TimeDelta};\n\nlet from_hms = |h, m, s| NaiveTime::from_hms_opt(h, m, s).unwrap();\n\nassert_eq!(\n    from_hms(3, 4, 5).overflowing_sub_signed(TimeDelta::try_hours(2).unwrap()),\n    (from_hms(1, 4, 5), 0)\n);\nassert_eq!(\n    from_hms(3, 4, 5).overflowing_sub_signed(TimeDelta::try_hours(17).unwrap()),\n    (from_hms(10, 4, 5), 86_400)\n);\nassert_eq!(\n    from_hms(3, 4, 5).overflowing_sub_signed(TimeDelta::try_hours(-22).unwrap()),\n    (from_hms(1, 4, 5), -86_400)\n);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"tuple":[{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},{"primitive":"i64"}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"339":{"id":339,"crate_id":0,"name":"day","span":{"filename":"src/date.rs","begin":[406,4],"end":[408,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1866":{"id":1866,"crate_id":0,"name":"and_hms_milli_opt","span":{"filename":"src/offset/mod.rs","begin":[186,4],"end":[199,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"631":{"id":631,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"923":{"id":923,"crate_id":0,"name":"TimezoneOffsetZ","span":{"filename":"src/format/mod.rs","begin":[244,4],"end":[244,19]},"visibility":"default","docs":"Same as [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.\nParsing allows an optional colon.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2158":{"id":2158,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[251,0],"end":[255,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2157],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1215":{"id":1215,"crate_id":0,"name":"pred_opt","span":{"filename":"src/naive/date/mod.rs","begin":[1010,4],"end":[1016,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the previous calendar date.\n\n# Errors\n\nReturns `None` when `self` is the first representable date.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2015, 6, 3).unwrap().pred_opt(),\n    Some(NaiveDate::from_ymd_opt(2015, 6, 2).unwrap())\n);\nassert_eq!(NaiveDate::MIN.pred_opt(), None);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"272":{"id":272,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[536,20],"end":[536,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::FixedOffset","name":"FixedOffset","id":271,"is_glob":false}}},"1507":{"id":1507,"crate_id":0,"name":"fmt","span":{"filename":"src/naive/datetime/mod.rs","begin":[2049,4],"end":[2053,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"564":{"id":564,"crate_id":0,"name":"Err","span":{"filename":"src/datetime/mod.rs","begin":[1814,4],"end":[1814,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1799":{"id":1799,"crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[113,22],"end":[113,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1798],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"856":{"id":856,"crate_id":0,"name":"Nanosecond","span":{"filename":"src/format/mod.rs","begin":[145,4],"end":[145,14]},"visibility":"default","docs":"The number of nanoseconds since the last whole second (FW=PW=9).\nNote that this is *not* left-aligned;\nsee also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2091":{"id":2091,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,62],"end":[31,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"path":"Ord","id":117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2090],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1148":{"id":1148,"crate_id":0,"name":"description","span":{"filename":"src/format/mod.rs","begin":[454,4],"end":[456,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"205":{"id":205,"crate_id":0,"name":"add_assign","span":{"filename":"src/naive/datetime/mod.rs","begin":[1668,4],"end":[1670,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1440":{"id":1440,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[67,24],"end":[67,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1439],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1732":{"id":1732,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"497":{"id":497,"crate_id":0,"name":"with_ordinal","span":{"filename":"src/naive/date/mod.rs","begin":[1828,4],"end":[1837,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of year (starting from 1) changed.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (`with_ordinal(366)` in a non-leap year).\n- The value for `ordinal` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().with_ordinal(60),\n           Some(NaiveDate::from_ymd_opt(2015, 3, 1).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().with_ordinal(366),\n           None); // 2015 had only 365 days\n\nassert_eq!(NaiveDate::from_ymd_opt(2016, 1, 1).unwrap().with_ordinal(60),\n           Some(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2016, 1, 1).unwrap().with_ordinal(366),\n           Some(NaiveDate::from_ymd_opt(2016, 12, 31).unwrap()));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2024":{"id":2024,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1081":{"id":1081,"crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[339,15],"end":[339,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"Box","id":1077,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"constraints":[]}}}}}},"1373":{"id":1373,"crate_id":0,"name":"Item","span":{"filename":"src/naive/date/mod.rs","begin":[2172,4],"end":[2172,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1665":{"id":1665,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"430":{"id":430,"crate_id":0,"name":"ParseResult","span":{"filename":"src/format/mod.rs","begin":[434,0],"end":[434,48]},"visibility":"public","docs":"Same as `Result<T, ParseError>`.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"path":"Result","id":39,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]}}}},"722":{"id":722,"crate_id":0,"name":"to_naive_date","span":{"filename":"src/format/parsed.rs","begin":[570,4],"end":[709,5]},"visibility":"public","docs":"Returns a parsed naive date out of given fields.\n\nThis method is able to determine the date from given subset of fields:\n\n- Year, month, day.\n- Year, day of the year (ordinal).\n- Year, week number counted from Sunday or Monday, day of the week.\n- ISO week date.\n\nGregorian year and ISO week date year can have their century number (`*_div_100`) omitted,\nthe two-digit year is used to guess the century number then.\n\nIt checks all given date fields are consistent with each other.\n\n# Errors\n\nThis method returns:\n- `IMPOSSIBLE` if any of the date fields conflict.\n- `NOT_ENOUGH` if there are not enough fields set in `Parsed` for a complete date.\n- `OUT_OF_RANGE`\n  - if any of the date fields of `Parsed` are set to a value beyond their acceptable range.\n  - if the value would be outside the range of a [`NaiveDate`].\n  - if the date does not exist.","links":{"`NaiveDate`":187},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1957":{"id":1957,"crate_id":0,"name":"Tue","span":{"filename":"src/weekday.rs","begin":[45,4],"end":[45,11]},"visibility":"default","docs":"Tuesday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"1","value":"1"}}}},"1014":{"id":1014,"crate_id":0,"name":"Minutes","span":{"filename":"src/format/mod.rs","begin":[304,4],"end":[304,11]},"visibility":"default","docs":"Format offset from UTC as hours and minutes.\nAny seconds will be rounded to the nearest minute.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2249":{"id":2249,"crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[682,4],"end":[684,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1306":{"id":1306,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"363":{"id":363,"crate_id":0,"name":"hash","span":{"filename":"src/date.rs","begin":[491,4],"end":[493,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1598":{"id":1598,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[212,9],"end":[212,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1597],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1890":{"id":1890,"crate_id":0,"name":"eq","span":{"filename":"src/offset/mod.rs","begin":[58,16],"end":[58,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2182":{"id":2182,"crate_id":0,"name":"with_hour","span":{"filename":"src/traits.rs","begin":[297,4],"end":[297,51]},"visibility":"default","docs":"Makes a new value with the hour number changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"947":{"id":947,"crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[174,16],"end":[174,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1239":{"id":1239,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"296":{"id":296,"crate_id":0,"name":"succ","span":{"filename":"src/date.rs","begin":[206,4],"end":[208,5]},"visibility":"public","docs":"Makes a new `Date` for the next date.\n\nPanics when `self` is the last representable date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use succ_opt() instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use succ_opt() instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1531":{"id":1531,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1823":{"id":1823,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"588":{"id":588,"crate_id":0,"name":"MIN_DATETIME","span":{"filename":"src/datetime/mod.rs","begin":[63,0],"end":[63,65]},"visibility":"public","docs":"The minimum possible `DateTime<Utc>`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use DateTime::MIN_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use DateTime::MIN_UTC instead"},"inner":{"constant":{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::offset::Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"const":{"expr":"DateTime<Utc>::MIN_UTC","value":null,"is_literal":false}}}},"2115":{"id":2115,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"880":{"id":880,"crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[102,16],"end":[102,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1172":{"id":1172,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1464":{"id":1464,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[968,0],"end":[1355,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["year_ce","num_days_from_ce"],"trait":{"path":"Datelike","id":263,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1448,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458,1459,1460,1461,1462,1463],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"229":{"id":229,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1756":{"id":1756,"crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[119,0],"end":[125,1]},"visibility":"default","docs":"Parsing a `str` into a `FixedOffset` uses the format [`%z`](crate::format::strftime).","links":{"crate::format::strftime":315},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FromStr","id":568,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1754,1755],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"521":{"id":521,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1428,0],"end":[1453,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["lt","le","gt","ge"],"trait":{"path":"PartialOrd","id":114,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[520],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"813":{"id":813,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2048":{"id":2048,"crate_id":0,"name":"August","span":{"filename":"src/month.rs","begin":[56,4],"end":[56,14]},"visibility":"default","docs":"August","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"7","value":"7"}}}},"1105":{"id":1105,"crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[328,9],"end":[328,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1397":{"id":1397,"crate_id":0,"name":"timestamp_millis","span":{"filename":"src/naive/datetime/mod.rs","begin":[367,4],"end":[369,5]},"visibility":"public","docs":"Returns the number of non-leap *milliseconds* since midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","links":{},"attrs":["#[deprecated(since = \"0.4.35\", note =\n\"use `.and_utc().timestamp_millis()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.35","note":"use `.and_utc().timestamp_millis()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"162":{"id":162,"crate_id":0,"name":"Date","span":{"filename":"src/date.rs","begin":[58,0],"end":[61,1]},"visibility":"public","docs":"ISO 8601 calendar date with time zone.\n\nYou almost certainly want to be using a [`NaiveDate`] instead of this type.\n\nThis type primarily exists to aid in the construction of DateTimes that\nhave a timezone by way of the [`TimeZone`] datelike constructors (e.g.\n[`TimeZone::ymd`]).\n\nThis type should be considered ambiguous at best, due to the inherent lack\nof precision required for the time zone resolution.\n\nThere are some guarantees on the usage of `Date<Tz>`:\n\n- If properly constructed via [`TimeZone::ymd`] and others without an error,\n  the corresponding local date should exist for at least a moment.\n  (It may still have a gap from the offset changes.)\n\n- The `TimeZone` is free to assign *any* [`Offset`](crate::offset::Offset) to the\n  local date, as long as that offset did occur in given day.\n\n  For example, if `2015-03-08T01:59-08:00` is followed by `2015-03-08T03:00-07:00`,\n  it may produce either `2015-03-08-08:00` or `2015-03-08-07:00`\n  but *not* `2015-03-08+00:00` and others.\n\n- Once constructed as a full `DateTime`, [`DateTime::date`] and other associated\n  methods should return those for the original `Date`. For example, if `dt =\n  tz.ymd_opt(y,m,d).unwrap().hms(h,n,s)` were valid, `dt.date() == tz.ymd_opt(y,m,d).unwrap()`.\n\n- The date is timezone-agnostic up to one day (i.e. practically always),\n  so the local date and UTC date should be equal for most cases\n  even though the raw calculation between `NaiveDate` and `TimeDelta` may not.","links":{"`TimeZone`":165,"`DateTime::date`":285,"`NaiveDate`":187,"crate::offset::Offset":278,"`TimeZone::ymd`":284},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"Use `NaiveDate` or `DateTime<Tz>` instead\")]"],"deprecation":{"since":"0.4.23","note":"Use `NaiveDate` or `DateTime<Tz>` instead"},"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"impls":[311,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,353,354,355,357,358,360,362,364,164,167,170,172,367,369,371]}}},"454":{"id":454,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1689":{"id":1689,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[218,0],"end":[223,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1688],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"746":{"id":746,"crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[128,16],"end":[128,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1981":{"id":1981,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1038":{"id":1038,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[296,22],"end":[296,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1037],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1330":{"id":1330,"crate_id":0,"name":"Item","span":{"filename":"src/naive/date/mod.rs","begin":[2136,4],"end":[2136,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1622":{"id":1622,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1352,0],"end":[1364,1]},"visibility":"default","docs":"Subtract `std::time::Duration` from `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the subtraction ignores integral number of days.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1620,1621],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"387":{"id":387,"crate_id":0,"name":"timestamp_millis","span":{"filename":"src/datetime/mod.rs","begin":[231,4],"end":[234,5]},"visibility":"public","docs":"Returns the number of non-leap-milliseconds since January 1, 1970 UTC.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Utc};\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1)\n    .unwrap()\n    .and_hms_milli_opt(0, 0, 1, 444)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\nassert_eq!(dt.timestamp_millis(), 1_444);\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9)\n    .unwrap()\n    .and_hms_milli_opt(1, 46, 40, 555)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\nassert_eq!(dt.timestamp_millis(), 1_000_000_000_555);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1914":{"id":1914,"crate_id":0,"name":"from_utc_date","span":{"filename":"src/offset/mod.rs","begin":[586,4],"end":[588,5]},"visibility":"default","docs":"Converts the UTC `NaiveDate` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).","links":{},"attrs":["#[allow(clippy::wrong_self_convention)]","#[deprecated(since = \"0.4.23\", note = \"use `from_utc_datetime()` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_utc_datetime()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["utc",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"679":{"id":679,"crate_id":0,"name":"Parsed","span":{"filename":"src/format/parsed.rs","begin":[129,0],"end":[172,1]},"visibility":"public","docs":"A type to hold parsed fields of date and time that can check all fields are consistent.\n\nThere are three classes of methods:\n\n- `set_*` methods to set fields you have available. They do a basic range check, and if the\n  same field is set more than once it is checked for consistency.\n\n- `to_*` methods try to make a concrete date and time value out of set fields.\n  They fully check that all fields are consistent and whether the date/datetime exists.\n\n- Methods to inspect the parsed fields.\n\n`Parsed` is used internally by all parsing functions in chrono. It is a public type so that it\ncan be used to write custom parsers that reuse the resolving algorithm, or to inspect the\nresults of a string parsed with chrono without converting it to concrete types.\n\n# Resolving algorithm\n\nResolving date/time parts is littered with lots of corner cases, which is why common date/time\nparsers do not implement it correctly.\n\nChrono provides a complete resolution algorithm that checks all fields for consistency via the\n`Parsed` type.\n\nAs an easy example, consider RFC 2822. The [RFC 2822 date and time format] has a day of the week\npart, which should be consistent with the other date parts. But a `strptime`-based parse would\nhappily accept inconsistent input:\n\n```python\n>>> import time\n>>> time.strptime('Wed, 31 Dec 2014 04:26:40 +0000',\n                  '%a, %d %b %Y %H:%M:%S +0000')\ntime.struct_time(tm_year=2014, tm_mon=12, tm_mday=31,\n                 tm_hour=4, tm_min=26, tm_sec=40,\n                 tm_wday=2, tm_yday=365, tm_isdst=-1)\n>>> time.strptime('Thu, 31 Dec 2014 04:26:40 +0000',\n                  '%a, %d %b %Y %H:%M:%S +0000')\ntime.struct_time(tm_year=2014, tm_mon=12, tm_mday=31,\n                 tm_hour=4, tm_min=26, tm_sec=40,\n                 tm_wday=3, tm_yday=365, tm_isdst=-1)\n```\n\n[RFC 2822 date and time format]: https://tools.ietf.org/html/rfc2822#section-3.3\n\n# Example\n\nLet's see how `Parsed` correctly detects the second RFC 2822 string from before is inconsistent.\n\n```\n# #[cfg(feature = \"alloc\")] {\nuse chrono::format::{ParseErrorKind, Parsed};\nuse chrono::Weekday;\n\nlet mut parsed = Parsed::new();\nparsed.set_weekday(Weekday::Wed)?;\nparsed.set_day(31)?;\nparsed.set_month(12)?;\nparsed.set_year(2014)?;\nparsed.set_hour(4)?;\nparsed.set_minute(26)?;\nparsed.set_second(40)?;\nparsed.set_offset(0)?;\nlet dt = parsed.to_datetime()?;\nassert_eq!(dt.to_rfc2822(), \"Wed, 31 Dec 2014 04:26:40 +0000\");\n\nlet mut parsed = Parsed::new();\nparsed.set_weekday(Weekday::Thu)?; // changed to the wrong day\nparsed.set_day(31)?;\nparsed.set_month(12)?;\nparsed.set_year(2014)?;\nparsed.set_hour(4)?;\nparsed.set_minute(26)?;\nparsed.set_second(40)?;\nparsed.set_offset(0)?;\nlet result = parsed.to_datetime();\n\nassert!(result.is_err());\nif let Err(error) = result {\n    assert_eq!(error.kind(), ParseErrorKind::Impossible);\n}\n# }\n# Ok::<(), chrono::ParseError>(())\n```\n\nThe same using chrono's build-in parser for RFC 2822 (the [RFC2822 formatting item]) and\n[`format::parse()`] showing how to inspect a field on failure.\n\n[RFC2822 formatting item]: crate::format::Fixed::RFC2822\n[`format::parse()`]: crate::format::parse()\n\n```\n# #[cfg(feature = \"alloc\")] {\nuse chrono::format::{parse, Fixed, Item, Parsed};\nuse chrono::Weekday;\n\nlet rfc_2822 = [Item::Fixed(Fixed::RFC2822)];\n\nlet mut parsed = Parsed::new();\nparse(&mut parsed, \"Wed, 31 Dec 2014 04:26:40 +0000\", rfc_2822.iter())?;\nlet dt = parsed.to_datetime()?;\n\nassert_eq!(dt.to_rfc2822(), \"Wed, 31 Dec 2014 04:26:40 +0000\");\n\nlet mut parsed = Parsed::new();\nparse(&mut parsed, \"Thu, 31 Dec 2014 04:26:40 +0000\", rfc_2822.iter())?;\nlet result = parsed.to_datetime();\n\nassert!(result.is_err());\nif result.is_err() {\n    // What is the weekday?\n    assert_eq!(parsed.weekday(), Some(Weekday::Thu));\n}\n# }\n# Ok::<(), chrono::ParseError>(())\n```","links":{"crate::format::parse()":678,"crate::format::Fixed::RFC2822":677},"attrs":["#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[],"where_predicates":[]},"impls":[728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,745,746,748,749,751,753,755]}}},"2206":{"id":2206,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[571,0],"end":[571,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"offset::MappedLocalTime","name":"MappedLocalTime","id":1412,"is_glob":false}}},"971":{"id":971,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[258,9],"end":[258,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[970],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1263":{"id":1263,"crate_id":0,"name":"ordinal","span":{"filename":"src/naive/date/mod.rs","begin":[1586,4],"end":[1588,5]},"visibility":"default","docs":"Returns the day of year starting from 1.\n\nThe return value ranges from 1 to 366. (The last day of year differs by years.)\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().ordinal(), 251);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().ordinal(), 74);\n```\n\nCombined with [`NaiveDate::pred_opt`](#method.pred_opt),\none can determine the number of days in a particular year.\n(Note that this panics when `year` is out of range.)\n\n```\nuse chrono::{Datelike, NaiveDate};\n\nfn ndays_in_year(year: i32) -> u32 {\n    // the first day of the next year...\n    let d = NaiveDate::from_ymd_opt(year + 1, 1, 1).unwrap();\n\n    // ...is preceded by the last day of the original year\n    d.pred_opt().unwrap().ordinal()\n}\n\nassert_eq!(ndays_in_year(2015), 365);\nassert_eq!(ndays_in_year(2016), 366);\nassert_eq!(ndays_in_year(2017), 365);\nassert_eq!(ndays_in_year(2000), 366);\nassert_eq!(ndays_in_year(2100), 365);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"28":{"id":28,"crate_id":0,"name":"checked_add","span":{"filename":"src/time_delta.rs","begin":[350,4],"end":[360,5]},"visibility":"public","docs":"Add two `TimeDelta`s, returning `None` if overflow occurred.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1555":{"id":1555,"crate_id":0,"name":"fmt","span":{"filename":"src/naive/isoweek.rs","begin":[151,4],"end":[160,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"320":{"id":320,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1847":{"id":1847,"crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[148,0],"end":[152,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1846],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"612":{"id":612,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"ToString","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"items":[92],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"904":{"id":904,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[158,9],"end":[158,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[903],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2139":{"id":2139,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1196":{"id":1196,"crate_id":0,"name":"from_num_days_from_ce_opt","span":{"filename":"src/naive/date/mod.rs","begin":[378,4],"end":[385,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\nJanuary 1, 1 being day 1.\n\n# Errors\n\nReturns `None` if the date is out of range.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet from_ndays_opt = NaiveDate::from_num_days_from_ce_opt;\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nassert_eq!(from_ndays_opt(730_000), Some(from_ymd(1999, 9, 3)));\nassert_eq!(from_ndays_opt(1), Some(from_ymd(1, 1, 1)));\nassert_eq!(from_ndays_opt(0), Some(from_ymd(0, 12, 31)));\nassert_eq!(from_ndays_opt(-1), Some(from_ymd(0, 12, 30)));\nassert_eq!(from_ndays_opt(100_000_000), None);\nassert_eq!(from_ndays_opt(-100_000_000), None);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["days",{"primitive":"i32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1488":{"id":1488,"crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1837,4],"end":[1841,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"545":{"id":545,"crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1696,4],"end":[1696,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}}},"1780":{"id":1780,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"837":{"id":837,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[78,44],"end":[78,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[836],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2072":{"id":2072,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1129":{"id":1129,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"186":{"id":186,"crate_id":0,"name":"Output","span":{"filename":"src/naive/date/mod.rs","begin":[1907,4],"end":[1907,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1421":{"id":1421,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1713":{"id":1713,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[215,39],"end":[215,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"478":{"id":478,"crate_id":0,"name":"year","span":{"filename":"src/datetime/mod.rs","begin":[1174,4],"end":[1176,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2005":{"id":2005,"crate_id":0,"name":"OutOfRange","span":{"filename":"src/lib.rs","begin":[665,0],"end":[667,1]},"visibility":"public","docs":"Out of range error type used in various converting APIs","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[],"where_predicates":[]},"impls":[2222,2223,2224,2225,2226,2227,2228,2229,2230,2231,2232,2233,2234,2235,2236,2237,2239,2240,2242,2243,2245,2246,2248,2250,2251]}}},"770":{"id":770,"crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[203,0],"end":[386,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[763,767,769],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1062":{"id":1062,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1354":{"id":1354,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1646":{"id":1646,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[22,25],"end":[22,38]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"use":{"source":"self::datetime::NaiveDateTime","name":"NaiveDateTime","id":200,"is_glob":false}}},"411":{"id":411,"crate_id":0,"name":"to_rfc2822","span":{"filename":"src/datetime/mod.rs","begin":[623,4],"end":[628,5]},"visibility":"public","docs":"Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.\n\n# Panics\n\nPanics if the date can not be represented in this format: the year may not be negative and\ncan not have more than 4 digits.","links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"String","id":93,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"703":{"id":703,"crate_id":0,"name":"ordinal","span":{"filename":"src/format/parsed.rs","begin":[1069,4],"end":[1071,5]},"visibility":"public","docs":"Get the `ordinal` (day of the year) field if set.\n\nSee also [`set_ordinal()`](Parsed::set_ordinal).","links":{"Parsed::set_ordinal":704},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1938":{"id":1938,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"995":{"id":995,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2230":{"id":2230,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1287":{"id":1287,"crate_id":0,"name":"fmt","span":{"filename":"src/naive/date/mod.rs","begin":[2264,4],"end":[2266,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"344":{"id":344,"crate_id":0,"name":"iso_week","span":{"filename":"src/date.rs","begin":[426,4],"end":[428,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1579":{"id":1579,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"636":{"id":636,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1871":{"id":1871,"crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[246,0],"end":[268,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1870],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2163":{"id":2163,"crate_id":0,"name":"month","span":{"filename":"src/traits.rs","begin":[50,4],"end":[50,27]},"visibility":"default","docs":"Returns the month number starting from 1.\n\nThe return value ranges from 1 to 12.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"928":{"id":928,"crate_id":0,"name":"Fixed","span":{"filename":"src/format/mod.rs","begin":[175,0],"end":[255,1]},"visibility":"public","docs":"Fixed-format item types.\n\nThey have their own rules of formatting and parsing.\nOtherwise noted, they print in the specified cases but parse case-insensitively.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"has_stripped_variants":false,"variants":[913,914,915,916,917,918,626,620,622,624,919,414,920,921,413,922,923,677,924,927],"impls":[929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,945,946,948,949,951,953]}}},"1220":{"id":1220,"crate_id":0,"name":"NaiveDateDaysIterator","span":{"filename":"src/naive/date/mod.rs","begin":[2131,0],"end":[2133,1]},"visibility":"public","docs":"Iterator over `NaiveDate` with a step size of one day.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[],"where_predicates":[]},"impls":[1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1316,1317,1319,1321,1322,1324,1326,1327,1329,1333,1334,1337,1339]}}},"277":{"id":277,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[537,46],"end":[537,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::NaiveTime","name":"NaiveTime","id":202,"is_glob":false}}},"1512":{"id":1512,"crate_id":0,"name":"from_str","span":{"filename":"src/naive/datetime/mod.rs","begin":[2109,4],"end":[2134,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1804":{"id":1804,"crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/local/mod.rs","begin":[183,4],"end":[186,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["utc",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"569":{"id":569,"crate_id":0,"name":"Err","span":{"filename":"src/datetime/mod.rs","begin":[1836,4],"end":[1836,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"2096":{"id":2096,"crate_id":0,"name":"from_i64","span":{"filename":"src/month.rs","begin":[200,4],"end":[202,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["n",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"861":{"id":861,"crate_id":0,"name":"Numeric","span":{"filename":"src/format/mod.rs","begin":[103,0],"end":[155,1]},"visibility":"public","docs":"Numeric item types.\nThey have associated formatting width (FW) and parsing width (PW).\n\nThe **formatting width** is the minimal width to be formatted.\nIf the number is too short, and the padding is not [`Pad::None`](./enum.Pad.html#variant.None),\nthen it is left-padded.\nIf the number is too long or (in some cases) negative, it is printed as is.\n\nThe **parsing width** is the maximal width to be scanned.\nThe parser only tries to consume from one to given number of digits (greedily).\nIt also trims the preceding whitespace if any.\nIt cannot parse the negative number, so some date and time cannot be formatted then\nparsed with the same formatting items.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"has_stripped_variants":false,"variants":[838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,860],"impls":[862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,878,879,881,882,884,886]}}},"1153":{"id":1153,"crate_id":0,"name":"Invalid","span":{"filename":"src/format/mod.rs","begin":[417,4],"end":[417,11]},"visibility":"default","docs":"The input string has some invalid character sequence for given formatting items.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1445":{"id":1445,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[67,47],"end":[67,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"210":{"id":210,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1814,0],"end":[1821,1]},"visibility":"default","docs":"Subtract `TimeDelta` from `NaiveDateTime`.\n\nThis is the same as the addition with a negated `TimeDelta`.\n\nAs a part of Chrono's [leap second handling] the subtraction assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDateTime::checked_sub_signed`] to get an `Option` instead.\n\n# Example\n\n```\nuse chrono::{NaiveDate, TimeDelta};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7) - TimeDelta::zero(), hms(3, 5, 7));\nassert_eq!(hms(3, 5, 7) - TimeDelta::try_seconds(1).unwrap(), hms(3, 5, 6));\nassert_eq!(hms(3, 5, 7) - TimeDelta::try_seconds(-1).unwrap(), hms(3, 5, 8));\nassert_eq!(hms(3, 5, 7) - TimeDelta::try_seconds(3600 + 60).unwrap(), hms(2, 4, 7));\nassert_eq!(\n    hms(3, 5, 7) - TimeDelta::try_seconds(86_400).unwrap(),\n    from_ymd(2016, 7, 7).and_hms_opt(3, 5, 7).unwrap()\n);\nassert_eq!(\n    hms(3, 5, 7) - TimeDelta::try_days(365).unwrap(),\n    from_ymd(2015, 7, 9).and_hms_opt(3, 5, 7).unwrap()\n);\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli_opt(h, m, s, milli).unwrap();\nassert_eq!(hmsm(3, 5, 7, 450) - TimeDelta::try_milliseconds(670).unwrap(), hmsm(3, 5, 6, 780));\n```\n\nLeap seconds are handled,\nbut the subtraction assumes that it is the only leap second happened.\n\n```\n# use chrono::{TimeDelta, NaiveDate};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli_opt(h, m, s, milli).unwrap();\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap - TimeDelta::zero(), hmsm(3, 5, 59, 1_300));\nassert_eq!(leap - TimeDelta::try_milliseconds(200).unwrap(), hmsm(3, 5, 59, 1_100));\nassert_eq!(leap - TimeDelta::try_milliseconds(500).unwrap(), hmsm(3, 5, 59, 800));\nassert_eq!(leap - TimeDelta::try_seconds(60).unwrap(), hmsm(3, 5, 0, 300));\nassert_eq!(leap - TimeDelta::try_days(1).unwrap(),\n           from_ymd(2016, 7, 7).and_hms_milli_opt(3, 6, 0, 300).unwrap());\n```\n\n[leap second handling]: crate::NaiveTime#leap-second-handling","links":{"`NaiveDateTime::checked_sub_signed`":209,"crate::NaiveTime#leap-second-handling":202},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[207,208],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1737":{"id":1737,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"502":{"id":502,"crate_id":0,"name":"hour","span":{"filename":"src/datetime/mod.rs","begin":[1331,4],"end":[1333,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"794":{"id":794,"crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[190,16],"end":[190,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[793],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2029":{"id":2029,"crate_id":0,"name":"clone","span":{"filename":"src/weekday.rs","begin":[240,9],"end":[240,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1086":{"id":1086,"crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[344,10],"end":[344,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}},"143":{"id":143,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[524,0],"end":[529,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"SubAssign","id":144,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[142],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1378":{"id":1378,"crate_id":0,"name":"next_back","span":{"filename":"src/naive/date/mod.rs","begin":[2189,4],"end":[2193,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":154,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"435":{"id":435,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[961,0],"end":[1094,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::offset::FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"items":[429,431,432,434],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1670":{"id":1670,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"727":{"id":727,"crate_id":0,"name":"to_datetime_with_timezone","span":{"filename":"src/format/parsed.rs","begin":[924,4],"end":[967,5]},"visibility":"public","docs":"Returns a parsed timezone-aware date and time out of given fields,\nwith an additional [`TimeZone`] used to interpret and validate the local date.\n\nThis method is able to determine the combined date and time from date and time, and/or from\na single timestamp field. It checks all fields are consistent with each other.\n\nIf the parsed fields include an UTC offset, it also has to be consistent with the offset in\nthe provided `tz` time zone for that datetime.\n\n# Errors\n\nThis method returns:\n- `IMPOSSIBLE`\n  - if any of the date fields conflict, if a timestamp conflicts with any of the other\n    fields, or if the offset field is set but differs from the offset at that time in the\n    `tz` time zone.\n  - if the local datetime does not exists in the provided time zone (because it falls in a\n    transition due to for example DST).\n- `NOT_ENOUGH` if there are not enough fields set in `Parsed` for a complete datetime, or if\n  the local time in the provided time zone is ambiguous (because it falls in a transition\n  due to for example DST) while there is no offset field or timestamp field set.\n- `OUT_OF_RANGE`\n  - if the value would be outside the range of a [`NaiveDateTime`] or [`FixedOffset`].\n  - if any of the fields of `Parsed` are set to a value beyond their acceptable range.\n  - if the date does not exist.","links":{"`NaiveDateTime`":200,"`FixedOffset`":271,"`TimeZone`":165},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["tz",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Tz"}}}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1962":{"id":1962,"crate_id":0,"name":"Sun","span":{"filename":"src/weekday.rs","begin":[55,4],"end":[55,11]},"visibility":"default","docs":"Sunday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"6","value":"6"}}}},"2254":{"id":2254,"crate_id":0,"name":"chrono","span":{"filename":"src/lib.rs","begin":[1,0],"end":[732,1]},"visibility":"public","docs":"# Chrono: Date and Time for Rust\n\nChrono aims to provide all functionality needed to do correct operations on dates and times in\nthe [proleptic Gregorian calendar]:\n\n* The [`DateTime`] type is timezone-aware by default, with separate timezone-naive types.\n* Operations that may produce an invalid or ambiguous date and time return `Option` or\n  [`MappedLocalTime`].\n* Configurable parsing and formatting with a `strftime` inspired date and time formatting\n  syntax.\n* The [`Local`] timezone works with the current timezone of the OS.\n* Types and operations are implemented to be reasonably efficient.\n\nTimezone data is not shipped with chrono by default to limit binary sizes. Use the companion\ncrate [Chrono-TZ] or [`tzfile`] for full timezone support.\n\n[proleptic Gregorian calendar]: https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar\n[Chrono-TZ]: https://crates.io/crates/chrono-tz\n[`tzfile`]: https://crates.io/crates/tzfile\n\n### Features\n\nChrono supports various runtime environments and operating systems, and has several features\nthat may be enabled or disabled.\n\nDefault features:\n\n- `alloc`: Enable features that depend on allocation (primarily string formatting).\n- `std`: Enables functionality that depends on the standard library. This is a superset of\n  `alloc` and adds interoperation with standard library types and traits.\n- `clock`: Enables reading the local timezone (`Local`). This is a superset of `now`.\n- `now`: Enables reading the system time (`now`).\n- `wasmbind`: Interface with the JS Date API for the `wasm32` target.\n\nOptional features:\n\n- `serde`: Enable serialization/deserialization via [serde].\n- `rkyv`: Deprecated, use the `rkyv-*` features.\n- `rkyv-16`: Enable serialization/deserialization via [rkyv],\n   using 16-bit integers for integral `*size` types.\n- `rkyv-32`: Enable serialization/deserialization via [rkyv],\n   using 32-bit integers for integral `*size` types.\n- `rkyv-64`: Enable serialization/deserialization via [rkyv],\n   using 64-bit integers for integral `*size` types.\n- `rkyv-validation`: Enable rkyv validation support using `bytecheck`.\n- `arbitrary`: Construct arbitrary instances of a type with the Arbitrary crate.\n- `unstable-locales`: Enable localization. This adds various methods with a `_localized` suffix.\n  The implementation and API may change or even be removed in a patch release. Feedback welcome.\n- `oldtime`: This feature no longer has any effect; it used to offer compatibility with the\n  `time` 0.1 crate.\n\nNote: The `rkyv{,-16,-32,-64}` features are mutually exclusive.\n\nSee the [cargo docs] for examples of specifying features.\n\n[serde]: https://github.com/serde-rs/serde\n[rkyv]: https://github.com/rkyv/rkyv\n[cargo docs]: https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#choosing-features\n\n## Overview\n\n### Time delta / Duration\n\nChrono has a [`TimeDelta`] type to represent the magnitude of a time span. This is an \"accurate\"\nduration represented as seconds and nanoseconds, and does not represent \"nominal\" components\nsuch as days or months.\n\nThe [`TimeDelta`] type was previously named `Duration` (and is still available as a type alias\nwith that name). A notable difference with the similar [`core::time::Duration`] is that it is a\nsigned value instead of unsigned.\n\nChrono currently only supports a small number of operations with [`core::time::Duration`].\nYou can convert between both types with the [`TimeDelta::from_std`] and [`TimeDelta::to_std`]\nmethods.\n\n### Date and Time\n\nChrono provides a [`DateTime`] type to represent a date and a time in a timezone.\n\nFor more abstract moment-in-time tracking such as internal timekeeping that is unconcerned with\ntimezones, consider [`std::time::SystemTime`], which tracks your system clock, or\n[`std::time::Instant`], which is an opaque but monotonically-increasing representation of a\nmoment in time.\n\n[`DateTime`] is timezone-aware and must be constructed from a [`TimeZone`] object, which defines\nhow the local date is converted to and back from the UTC date.\nThere are three well-known [`TimeZone`] implementations:\n\n* [`Utc`] specifies the UTC time zone. It is most efficient.\n\n* [`Local`] specifies the system local time zone.\n\n* [`FixedOffset`] specifies an arbitrary, fixed time zone such as UTC+09:00 or UTC-10:30.\n  This often results from the parsed textual date and time. Since it stores the most information\n  and does not depend on the system environment, you would want to normalize other `TimeZone`s\n  into this type.\n\n[`DateTime`]s with different [`TimeZone`] types are distinct and do not mix, but can be\nconverted to each other using the [`DateTime::with_timezone`] method.\n\nYou can get the current date and time in the UTC time zone ([`Utc::now()`]) or in the local time\nzone ([`Local::now()`]).\n\n```\n# #[cfg(feature = \"now\")] {\nuse chrono::prelude::*;\n\nlet utc: DateTime<Utc> = Utc::now(); // e.g. `2014-11-28T12:45:59.324310806Z`\n# let _ = utc;\n# }\n```\n\n```\n# #[cfg(feature = \"clock\")] {\nuse chrono::prelude::*;\n\nlet local: DateTime<Local> = Local::now(); // e.g. `2014-11-28T21:45:59.324310806+09:00`\n# let _ = local;\n# }\n```\n\nAlternatively, you can create your own date and time. This is a bit verbose due to Rust's lack\nof function and method overloading, but in turn we get a rich combination of initialization\nmethods.\n\n```\nuse chrono::offset::MappedLocalTime;\nuse chrono::prelude::*;\n\n# fn doctest() -> Option<()> {\n\nlet dt = Utc.with_ymd_and_hms(2014, 7, 8, 9, 10, 11).unwrap(); // `2014-07-08T09:10:11Z`\nassert_eq!(\n    dt,\n    NaiveDate::from_ymd_opt(2014, 7, 8)?\n        .and_hms_opt(9, 10, 11)?\n        .and_utc()\n);\n\n// July 8 is 188th day of the year 2014 (`o` for \"ordinal\")\nassert_eq!(dt, NaiveDate::from_yo_opt(2014, 189)?.and_hms_opt(9, 10, 11)?.and_utc());\n// July 8 is Tuesday in ISO week 28 of the year 2014.\nassert_eq!(\n    dt,\n    NaiveDate::from_isoywd_opt(2014, 28, Weekday::Tue)?.and_hms_opt(9, 10, 11)?.and_utc()\n);\n\nlet dt = NaiveDate::from_ymd_opt(2014, 7, 8)?\n    .and_hms_milli_opt(9, 10, 11, 12)?\n    .and_utc(); // `2014-07-08T09:10:11.012Z`\nassert_eq!(\n    dt,\n    NaiveDate::from_ymd_opt(2014, 7, 8)?\n        .and_hms_micro_opt(9, 10, 11, 12_000)?\n        .and_utc()\n);\nassert_eq!(\n    dt,\n    NaiveDate::from_ymd_opt(2014, 7, 8)?\n        .and_hms_nano_opt(9, 10, 11, 12_000_000)?\n        .and_utc()\n);\n\n// dynamic verification\nassert_eq!(\n    Utc.with_ymd_and_hms(2014, 7, 8, 21, 15, 33),\n    MappedLocalTime::Single(\n        NaiveDate::from_ymd_opt(2014, 7, 8)?.and_hms_opt(21, 15, 33)?.and_utc()\n    )\n);\nassert_eq!(Utc.with_ymd_and_hms(2014, 7, 8, 80, 15, 33), MappedLocalTime::None);\nassert_eq!(Utc.with_ymd_and_hms(2014, 7, 38, 21, 15, 33), MappedLocalTime::None);\n\n# #[cfg(feature = \"clock\")] {\n// other time zone objects can be used to construct a local datetime.\n// obviously, `local_dt` is normally different from `dt`, but `fixed_dt` should be identical.\nlet local_dt = Local\n    .from_local_datetime(\n        &NaiveDate::from_ymd_opt(2014, 7, 8).unwrap().and_hms_milli_opt(9, 10, 11, 12).unwrap(),\n    )\n    .unwrap();\nlet fixed_dt = FixedOffset::east_opt(9 * 3600)\n    .unwrap()\n    .from_local_datetime(\n        &NaiveDate::from_ymd_opt(2014, 7, 8)\n            .unwrap()\n            .and_hms_milli_opt(18, 10, 11, 12)\n            .unwrap(),\n    )\n    .unwrap();\nassert_eq!(dt, fixed_dt);\n# let _ = local_dt;\n# }\n# Some(())\n# }\n# doctest().unwrap();\n```\n\nVarious properties are available to the date and time, and can be altered individually. Most of\nthem are defined in the traits [`Datelike`] and [`Timelike`] which you should `use` before.\nAddition and subtraction is also supported.\nThe following illustrates most supported operations to the date and time:\n\n```rust\nuse chrono::prelude::*;\nuse chrono::TimeDelta;\n\n// assume this returned `2014-11-28T21:45:59.324310806+09:00`:\nlet dt = FixedOffset::east_opt(9 * 3600)\n    .unwrap()\n    .from_local_datetime(\n        &NaiveDate::from_ymd_opt(2014, 11, 28)\n            .unwrap()\n            .and_hms_nano_opt(21, 45, 59, 324310806)\n            .unwrap(),\n    )\n    .unwrap();\n\n// property accessors\nassert_eq!((dt.year(), dt.month(), dt.day()), (2014, 11, 28));\nassert_eq!((dt.month0(), dt.day0()), (10, 27)); // for unfortunate souls\nassert_eq!((dt.hour(), dt.minute(), dt.second()), (21, 45, 59));\nassert_eq!(dt.weekday(), Weekday::Fri);\nassert_eq!(dt.weekday().number_from_monday(), 5); // Mon=1, ..., Sun=7\nassert_eq!(dt.ordinal(), 332); // the day of year\nassert_eq!(dt.num_days_from_ce(), 735565); // the number of days from and including Jan 1, 1\n\n// time zone accessor and manipulation\nassert_eq!(dt.offset().fix().local_minus_utc(), 9 * 3600);\nassert_eq!(dt.timezone(), FixedOffset::east_opt(9 * 3600).unwrap());\nassert_eq!(\n    dt.with_timezone(&Utc),\n    NaiveDate::from_ymd_opt(2014, 11, 28)\n        .unwrap()\n        .and_hms_nano_opt(12, 45, 59, 324310806)\n        .unwrap()\n        .and_utc()\n);\n\n// a sample of property manipulations (validates dynamically)\nassert_eq!(dt.with_day(29).unwrap().weekday(), Weekday::Sat); // 2014-11-29 is Saturday\nassert_eq!(dt.with_day(32), None);\nassert_eq!(dt.with_year(-300).unwrap().num_days_from_ce(), -109606); // November 29, 301 BCE\n\n// arithmetic operations\nlet dt1 = Utc.with_ymd_and_hms(2014, 11, 14, 8, 9, 10).unwrap();\nlet dt2 = Utc.with_ymd_and_hms(2014, 11, 14, 10, 9, 8).unwrap();\nassert_eq!(dt1.signed_duration_since(dt2), TimeDelta::try_seconds(-2 * 3600 + 2).unwrap());\nassert_eq!(dt2.signed_duration_since(dt1), TimeDelta::try_seconds(2 * 3600 - 2).unwrap());\nassert_eq!(\n    Utc.with_ymd_and_hms(1970, 1, 1, 0, 0, 0).unwrap()\n        + TimeDelta::try_seconds(1_000_000_000).unwrap(),\n    Utc.with_ymd_and_hms(2001, 9, 9, 1, 46, 40).unwrap()\n);\nassert_eq!(\n    Utc.with_ymd_and_hms(1970, 1, 1, 0, 0, 0).unwrap()\n        - TimeDelta::try_seconds(1_000_000_000).unwrap(),\n    Utc.with_ymd_and_hms(1938, 4, 24, 22, 13, 20).unwrap()\n);\n```\n\n### Formatting and Parsing\n\nFormatting is done via the [`format`](DateTime::format()) method, which format is equivalent to\nthe familiar `strftime` format.\n\nSee [`format::strftime`](format::strftime#specifiers) documentation for full syntax and list of\nspecifiers.\n\nThe default `to_string` method and `{:?}` specifier also give a reasonable representation.\nChrono also provides [`to_rfc2822`](DateTime::to_rfc2822) and\n[`to_rfc3339`](DateTime::to_rfc3339) methods for well-known formats.\n\nChrono now also provides date formatting in almost any language without the help of an\nadditional C library. This functionality is under the feature `unstable-locales`:\n\n```toml\nchrono = { version = \"0.4\", features = [\"unstable-locales\"] }\n```\n\nThe `unstable-locales` feature requires and implies at least the `alloc` feature.\n\n```rust\n# #[allow(unused_imports)]\nuse chrono::prelude::*;\n\n# #[cfg(all(feature = \"unstable-locales\", feature = \"alloc\"))]\n# fn test() {\nlet dt = Utc.with_ymd_and_hms(2014, 11, 28, 12, 0, 9).unwrap();\nassert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2014-11-28 12:00:09\");\nassert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), \"Fri Nov 28 12:00:09 2014\");\nassert_eq!(\n    dt.format_localized(\"%A %e %B %Y, %T\", Locale::fr_BE).to_string(),\n    \"vendredi 28 novembre 2014, 12:00:09\"\n);\n\nassert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), dt.format(\"%c\").to_string());\nassert_eq!(dt.to_string(), \"2014-11-28 12:00:09 UTC\");\nassert_eq!(dt.to_rfc2822(), \"Fri, 28 Nov 2014 12:00:09 +0000\");\nassert_eq!(dt.to_rfc3339(), \"2014-11-28T12:00:09+00:00\");\nassert_eq!(format!(\"{:?}\", dt), \"2014-11-28T12:00:09Z\");\n\n// Note that milli/nanoseconds are only printed if they are non-zero\nlet dt_nano = NaiveDate::from_ymd_opt(2014, 11, 28)\n    .unwrap()\n    .and_hms_nano_opt(12, 0, 9, 1)\n    .unwrap()\n    .and_utc();\nassert_eq!(format!(\"{:?}\", dt_nano), \"2014-11-28T12:00:09.000000001Z\");\n# }\n# #[cfg(not(all(feature = \"unstable-locales\", feature = \"alloc\")))]\n# fn test() {}\n# if cfg!(all(feature = \"unstable-locales\", feature = \"alloc\")) {\n#    test();\n# }\n```\n\nParsing can be done with two methods:\n\n1. The standard [`FromStr`](std::str::FromStr) trait (and [`parse`](str::parse) method on a\n   string) can be used for parsing `DateTime<FixedOffset>`, `DateTime<Utc>` and\n   `DateTime<Local>` values. This parses what the `{:?}` ([`std::fmt::Debug`] format specifier\n   prints, and requires the offset to be present.\n\n2. [`DateTime::parse_from_str`] parses a date and time with offsets and returns\n   `DateTime<FixedOffset>`. This should be used when the offset is a part of input and the\n   caller cannot guess that. It *cannot* be used when the offset can be missing.\n   [`DateTime::parse_from_rfc2822`] and [`DateTime::parse_from_rfc3339`] are similar but for\n   well-known formats.\n\nMore detailed control over the parsing process is available via [`format`](mod@format) module.\n\n```rust\nuse chrono::prelude::*;\n\nlet dt = Utc.with_ymd_and_hms(2014, 11, 28, 12, 0, 9).unwrap();\nlet fixed_dt = dt.with_timezone(&FixedOffset::east_opt(9 * 3600).unwrap());\n\n// method 1\nassert_eq!(\"2014-11-28T12:00:09Z\".parse::<DateTime<Utc>>(), Ok(dt.clone()));\nassert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<Utc>>(), Ok(dt.clone()));\nassert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<FixedOffset>>(), Ok(fixed_dt.clone()));\n\n// method 2\nassert_eq!(\n    DateTime::parse_from_str(\"2014-11-28 21:00:09 +09:00\", \"%Y-%m-%d %H:%M:%S %z\"),\n    Ok(fixed_dt.clone())\n);\nassert_eq!(\n    DateTime::parse_from_rfc2822(\"Fri, 28 Nov 2014 21:00:09 +0900\"),\n    Ok(fixed_dt.clone())\n);\nassert_eq!(DateTime::parse_from_rfc3339(\"2014-11-28T21:00:09+09:00\"), Ok(fixed_dt.clone()));\n\n// oops, the year is missing!\nassert!(DateTime::parse_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T %Y\").is_err());\n// oops, the format string does not include the year at all!\nassert!(DateTime::parse_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T\").is_err());\n// oops, the weekday is incorrect!\nassert!(DateTime::parse_from_str(\"Sat Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\").is_err());\n```\n\nAgain: See [`format::strftime`](format::strftime#specifiers) documentation for full syntax and\nlist of specifiers.\n\n### Conversion from and to EPOCH timestamps\n\nUse [`DateTime::from_timestamp(seconds, nanoseconds)`](DateTime::from_timestamp)\nto construct a [`DateTime<Utc>`] from a UNIX timestamp\n(seconds, nanoseconds that passed since January 1st 1970).\n\nUse [`DateTime.timestamp`](DateTime::timestamp) to get the timestamp (in seconds)\nfrom a [`DateTime`]. Additionally, you can use\n[`DateTime.timestamp_subsec_nanos`](DateTime::timestamp_subsec_nanos)\nto get the number of additional number of nanoseconds.\n\n```\n# #[cfg(feature = \"alloc\")] {\n// We need the trait in scope to use Utc::timestamp().\nuse chrono::{DateTime, Utc};\n\n// Construct a datetime from epoch:\nlet dt: DateTime<Utc> = DateTime::from_timestamp(1_500_000_000, 0).unwrap();\nassert_eq!(dt.to_rfc2822(), \"Fri, 14 Jul 2017 02:40:00 +0000\");\n\n// Get epoch value from a datetime:\nlet dt = DateTime::parse_from_rfc2822(\"Fri, 14 Jul 2017 02:40:00 +0000\").unwrap();\nassert_eq!(dt.timestamp(), 1_500_000_000);\n# }\n```\n\n### Naive date and time\n\nChrono provides naive counterparts to `Date`, (non-existent) `Time` and `DateTime` as\n[`NaiveDate`], [`NaiveTime`] and [`NaiveDateTime`] respectively.\n\nThey have almost equivalent interfaces as their timezone-aware twins, but are not associated to\ntime zones obviously and can be quite low-level. They are mostly useful for building blocks for\nhigher-level types.\n\nTimezone-aware `DateTime` and `Date` types have two methods returning naive versions:\n[`naive_local`](DateTime::naive_local) returns a view to the naive local time,\nand [`naive_utc`](DateTime::naive_utc) returns a view to the naive UTC time.\n\n## Limitations\n\n* Only the proleptic Gregorian calendar (i.e. extended to support older dates) is supported.\n* Date types are limited to about +/- 262,000 years from the common epoch.\n* Time types are limited to nanosecond accuracy.\n* Leap seconds can be represented, but Chrono does not fully support them.\n  See [Leap Second Handling](NaiveTime#leap-second-handling).\n\n## Rust version requirements\n\nThe Minimum Supported Rust Version (MSRV) is currently **Rust 1.61.0**.\n\nThe MSRV is explicitly tested in CI. It may be bumped in minor releases, but this is not done\nlightly.\n\n## Relation between chrono and time 0.1\n\nRust first had a `time` module added to `std` in its 0.7 release. It later moved to\n`libextra`, and then to a `libtime` library shipped alongside the standard library. In 2014\nwork on chrono started in order to provide a full-featured date and time library in Rust.\nSome improvements from chrono made it into the standard library; notably, `chrono::Duration`\nwas included as `std::time::Duration` ([rust#15934]) in 2014.\n\nIn preparation of Rust 1.0 at the end of 2014 `libtime` was moved out of the Rust distro and\ninto the `time` crate to eventually be redesigned ([rust#18832], [rust#18858]), like the\n`num` and `rand` crates. Of course chrono kept its dependency on this `time` crate. `time`\nstarted re-exporting `std::time::Duration` during this period. Later, the standard library was\nchanged to have a more limited unsigned `Duration` type ([rust#24920], [RFC 1040]), while the\n`time` crate kept the full functionality with `time::Duration`. `time::Duration` had been a\npart of chrono's public API.\n\nBy 2016 `time` 0.1 lived under the `rust-lang-deprecated` organisation and was not actively\nmaintained ([time#136]). chrono absorbed the platform functionality and `Duration` type of the\n`time` crate in [chrono#478] (the work started in [chrono#286]). In order to preserve\ncompatibility with downstream crates depending on `time` and `chrono` sharing a `Duration`\ntype, chrono kept depending on time 0.1. chrono offered the option to opt out of the `time`\ndependency by disabling the `oldtime` feature (swapping it out for an effectively similar\nchrono type). In 2019, @jhpratt took over maintenance on the `time` crate and released what\namounts to a new crate as `time` 0.2.\n\n[rust#15934]: https://github.com/rust-lang/rust/pull/15934\n[rust#18832]: https://github.com/rust-lang/rust/pull/18832#issuecomment-62448221\n[rust#18858]: https://github.com/rust-lang/rust/pull/18858\n[rust#24920]: https://github.com/rust-lang/rust/pull/24920\n[RFC 1040]: https://rust-lang.github.io/rfcs/1040-duration-reform.html\n[time#136]: https://github.com/time-rs/time/issues/136\n[chrono#286]: https://github.com/chronotope/chrono/pull/286\n[chrono#478]: https://github.com/chronotope/chrono/pull/478\n\n## Security advisories\n\nIn November of 2020 [CVE-2020-26235] and [RUSTSEC-2020-0071] were opened against the `time` crate.\n@quininer had found that calls to `localtime_r` may be unsound ([chrono#499]). Eventually, almost\na year later, this was also made into a security advisory against chrono as [RUSTSEC-2020-0159],\nwhich had platform code similar to `time`.\n\nOn Unix-like systems a process is given a timezone id or description via the `TZ` environment\nvariable. We need this timezone data to calculate the current local time from a value that is\nin UTC, such as the time from the system clock. `time` 0.1 and chrono used the POSIX function\n`localtime_r` to do the conversion to local time, which reads the `TZ` variable.\n\nRust assumes the environment to be writable and uses locks to access it from multiple threads.\nSome other programming languages and libraries use similar locking strategies, but these are\ntypically not shared across languages. More importantly, POSIX declares modifying the\nenvironment in a multi-threaded process as unsafe, and `getenv` in libc can't be changed to\ntake a lock because it returns a pointer to the data (see [rust#27970] for more discussion).\n\nSince version 4.20 chrono no longer uses `localtime_r`, instead using Rust code to query the\ntimezone (from the `TZ` variable or via `iana-time-zone` as a fallback) and work with data\nfrom the system timezone database directly. The code for this was forked from the [tz-rs crate]\nby @x-hgg-x. As such, chrono now respects the Rust lock when reading the `TZ` environment\nvariable. In general, code should avoid modifying the environment.\n\n[CVE-2020-26235]: https://nvd.nist.gov/vuln/detail/CVE-2020-26235\n[RUSTSEC-2020-0071]: https://rustsec.org/advisories/RUSTSEC-2020-0071\n[chrono#499]: https://github.com/chronotope/chrono/pull/499\n[RUSTSEC-2020-0159]: https://rustsec.org/advisories/RUSTSEC-2020-0159.html\n[rust#27970]: https://github.com/rust-lang/rust/issues/27970\n[chrono#677]: https://github.com/chronotope/chrono/pull/677\n[tz-rs crate]: https://crates.io/crates/tz-rs\n\n## Removing time 0.1\n\nBecause time 0.1 has been unmaintained for years, however, the security advisory mentioned\nabove has not been addressed. While chrono maintainers were careful not to break backwards\ncompatibility with the `time::Duration` type, there has been a long stream of issues from\nusers inquiring about the time 0.1 dependency with the vulnerability. We investigated the\npotential breakage of removing the time 0.1 dependency in [chrono#1095] using a crater-like\nexperiment and determined that the potential for breaking (public) dependencies is very low.\nWe reached out to those few crates that did still depend on compatibility with time 0.1.\n\nAs such, for chrono 0.4.30 we have decided to swap out the time 0.1 `Duration` implementation\nfor a local one that will offer a strict superset of the existing API going forward. This\nwill prevent most downstream users from being affected by the security vulnerability in time\n0.1 while minimizing the ecosystem impact of semver-incompatible version churn.\n\n[chrono#1095]: https://github.com/chronotope/chrono/pull/1095","links":{"DateTime::naive_utc":408,"`Utc::now()`":1777,"DateTime::timestamp_subsec_nanos":393,"`Local`":256,"`std::fmt::Debug`":122,"`Utc`":273,"`MappedLocalTime`":1412,"`DateTime::parse_from_rfc3339`":431,"format::strftime#specifiers":315,"DateTime::format()":437,"`core::time::Duration`":38,"`TimeDelta::to_std`":41,"`NaiveDate`":187,"std::str::FromStr":568,"DateTime::to_rfc2822":411,"`DateTime::parse_from_rfc2822`":429,"`TimeDelta`":2,"DateTime::timestamp":386,"`DateTime<Utc>`":174,"`std::time::Instant`":2252,"`DateTime::with_timezone`":396,"`TimeDelta::from_std`":37,"`TimeZone`":165,"`FixedOffset`":271,"`Timelike`":267,"NaiveTime#leap-second-handling":202,"`Local::now()`":1778,"`NaiveDateTime`":200,"`DateTime::parse_from_str`":432,"DateTime::to_rfc3339":412,"`DateTime`":174,"mod@format":1184,"`Datelike`":263,"str::parse":2253,"DateTime::from_timestamp":384,"`NaiveTime`":202,"DateTime::naive_local":409,"`std::time::SystemTime`":573},"attrs":["#![doc(html_root_url = \"https://docs.rs/chrono/latest/\",\ntest(attr(deny(warnings))))]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![warn(unreachable_pub)]","#![deny(clippy::tests_outside_test_module)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":[281,1184,1720,1916,1955,2187,2188,2189,2190,2191,2192,2193,2194,2195,2196,2197,2198,2199,2200,2201,2202,2203,2204,2205,2206,2207,2208,2209,2210,2211,2212,2213,2214,2215,2216,2217,2218,2219,2220,2005],"is_stripped":false}}},"1019":{"id":1019,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"76":{"id":76,"crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"Result","id":39,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"U"},"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1311":{"id":1311,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1603":{"id":1603,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[212,30],"end":[212,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","gt","ge"],"trait":{"path":"PartialOrd","id":114,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1602],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"368":{"id":368,"crate_id":0,"name":"fmt","span":{"filename":"src/date.rs","begin":[538,4],"end":[541,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1895":{"id":1895,"crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[58,40],"end":[58,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::cmp::Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2187":{"id":2187,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[517,0],"end":[517,36]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]","#[doc(no_inline)]"],"deprecation":null,"inner":{"use":{"source":"time_delta::OutOfRangeError","name":"OutOfRangeError","id":40,"is_glob":false}}},"952":{"id":952,"crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[174,38],"end":[174,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1244":{"id":1244,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"ToString","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[92],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"9":{"id":9,"crate_id":0,"name":"hours","span":{"filename":"src/time_delta.rs","begin":[158,4],"end":[160,5]},"visibility":"public","docs":"Makes a new `TimeDelta` with the given number of hours.\n\nEquivalent to `TimeDelta::seconds(hours * 60 * 60)` with overflow checks.\n\n# Panics\n\nPanics when the `TimeDelta` would be out of bounds.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["hours",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1536":{"id":1536,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"301":{"id":301,"crate_id":0,"name":"timezone","span":{"filename":"src/date.rs","begin":[248,4],"end":[250,5]},"visibility":"public","docs":"Retrieves an associated time zone.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Tz"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1828":{"id":1828,"crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,15],"end":[43,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1827],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"885":{"id":885,"crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[102,38],"end":[102,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2120":{"id":2120,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[225,16],"end":[225,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1177":{"id":1177,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[398,23],"end":[398,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"234":{"id":234,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1469":{"id":1469,"crate_id":0,"name":"second","span":{"filename":"src/naive/time/mod.rs","begin":[957,4],"end":[959,5]},"visibility":"default","docs":"Returns the second number from 0 to 59.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(0, 0, 0).unwrap().second(), 0);\nassert_eq!(NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().second(), 4);\n```\n\nThis method never returns 60 even when it is a leap second.\n([Why?](#leap-second-handling))\nUse the proper [formatting method](#method.format) to get a human-readable representation.\n\n```\n# #[cfg(feature = \"alloc\")] {\n# use chrono::{NaiveTime, Timelike};\nlet leap = NaiveTime::from_hms_milli_opt(23, 59, 59, 1_000).unwrap();\nassert_eq!(leap.second(), 59);\nassert_eq!(leap.format(\"%H:%M:%S\").to_string(), \"23:59:60\");\n# }\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"526":{"id":526,"crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1497,4],"end":[1497,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}}},"1761":{"id":1761,"crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/fixed.rs","begin":[141,4],"end":[143,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["_utc",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2053":{"id":2053,"crate_id":0,"name":"succ","span":{"filename":"src/month.rs","begin":[75,4],"end":[90,5]},"visibility":"public","docs":"The next month.\n\n`m`:        | `January`  | `February` | `...` | `December`\n----------- | ---------  | ---------- | --- | ---------\n`m.succ()`: | `February` | `March`    | `...` | `January`","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"818":{"id":818,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1110":{"id":1110,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[328,27],"end":[328,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"167":{"id":167,"crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[505,0],"end":[510,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"AddAssign","id":141,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[166],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1402":{"id":1402,"crate_id":0,"name":"timestamp_subsec_micros","span":{"filename":"src/naive/datetime/mod.rs","begin":[439,4],"end":[441,5]},"visibility":"public","docs":"Returns the number of microseconds since the last whole non-leap second.\n\nThe return value ranges from 0 to 999,999,\nor for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999.","links":{},"attrs":["#[deprecated(since = \"0.4.35\", note =\n\"use `.and_utc().timestamp_subsec_micros()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.35","note":"use `.and_utc().timestamp_subsec_micros()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1694":{"id":1694,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"459":{"id":459,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[49,9],"end":[49,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::clone::Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"","id":165,"args":null}}},"bounds":[{"trait_bound":{"trait":{"path":"$crate::clone::Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[458],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1986":{"id":1986,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"ToString","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[92],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"751":{"id":751,"crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[128,31],"end":[128,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[750],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1043":{"id":1043,"crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[296,44],"end":[296,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1627":{"id":1627,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1381,0],"end":[1388,1]},"visibility":"default","docs":"Subtract `FixedOffset` from `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the subtraction ignores integral number of days.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1625,1626],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"392":{"id":392,"crate_id":0,"name":"timestamp_subsec_micros","span":{"filename":"src/datetime/mod.rs","begin":[380,4],"end":[382,5]},"visibility":"public","docs":"Returns the number of microseconds since the last second boundary.\n\nIn event of a leap second this may exceed 999,999.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"684":{"id":684,"crate_id":0,"name":"set_year","span":{"filename":"src/format/parsed.rs","begin":[208,4],"end":[210,5]},"visibility":"public","docs":"Set the [`year`](Parsed::year) field to the given value.\n\nThe value can be negative, unlike the [`year_div_100`](Parsed::year_div_100) and\n[`year_mod_100`](Parsed::year_mod_100) fields.\n\n# Errors\n\nReturns `OUT_OF_RANGE` if `value` is outside the range of an `i32`.\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"Parsed::year_div_100":682,"Parsed::year":681,"Parsed::year_mod_100":683},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1919":{"id":1919,"crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[52,0],"end":[80,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Timelike","id":267,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"SubsecRound","id":258,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"generic":"T"},"items":[445,446],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"976":{"id":976,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[258,23],"end":[258,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[975],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2211":{"id":2211,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[576,16],"end":[576,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"round::DurationRound","name":"DurationRound","id":585,"is_glob":false}}},"1268":{"id":1268,"crate_id":0,"name":"Output","span":{"filename":"src/naive/date/mod.rs","begin":[1956,4],"end":[1956,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"33":{"id":33,"crate_id":0,"name":"min_value","span":{"filename":"src/time_delta.rs","begin":[423,4],"end":[425,5]},"visibility":"public","docs":"The minimum possible `TimeDelta`: `-i64::MAX` milliseconds.","links":{},"attrs":["#[deprecated(since = \"0.4.39\", note = \"Use `TimeDelta::MIN` instead\")]","#[inline]"],"deprecation":{"since":"0.4.39","note":"Use `TimeDelta::MIN` instead"},"inner":{"function":{"sig":{"inputs":[],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"325":{"id":325,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1560":{"id":1560,"crate_id":0,"name":"with_nanosecond","span":{"filename":"src/traits.rs","begin":[316,4],"end":[316,57]},"visibility":"default","docs":"Makes a new value with nanoseconds since the whole non-leap second changed.\n\nReturns `None` when the resulting value would be invalid.\nAs with the [`nanosecond`](#tymethod.nanosecond) method,\nthe input range can exceed 1,000,000,000 for leap seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"617":{"id":617,"crate_id":0,"name":"format","span":{"filename":"src/format/formatting.rs","begin":[333,0],"end":[352,1]},"visibility":"public","docs":"Tries to format given arguments with given formatting items.\nInternally used by `DelayedFormat`.","links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[deprecated(since = \"0.4.32\", note = \"Use DelayedFormat::fmt instead\")]"],"deprecation":{"since":"0.4.32","note":"Use DelayedFormat::fmt instead"},"inner":{"function":{"sig":{"inputs":[["w",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}],["date",{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"crate::NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}}],"constraints":[]}}}}],["time",{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"crate::NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}}],"constraints":[]}}}}],["off",{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"tuple":[{"resolved_path":{"path":"String","id":93,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},{"resolved_path":{"path":"crate::FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]}}}}],"constraints":[]}}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":154,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"super::Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1852":{"id":1852,"crate_id":0,"name":"0","span":{"filename":"src/offset/mod.rs","begin":[63,11],"end":[63,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"2144":{"id":2144,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"909":{"id":909,"crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[158,26],"end":[158,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1201":{"id":1201,"crate_id":0,"name":"checked_add_days","span":{"filename":"src/naive/date/mod.rs","begin":[633,4],"end":[638,5]},"visibility":"public","docs":"Add a duration in [`Days`] to the date\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\n# use chrono::{NaiveDate, Days};\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_add_days(Days::new(9)),\n    Some(NaiveDate::from_ymd_opt(2022, 3, 1).unwrap())\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 7, 31).unwrap().checked_add_days(Days::new(2)),\n    Some(NaiveDate::from_ymd_opt(2022, 8, 2).unwrap())\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 7, 31).unwrap().checked_add_days(Days::new(1000000000000)),\n    None\n);\n```","links":{"`Days`":404},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1493":{"id":1493,"crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1890,4],"end":[1892,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"258":{"id":258,"crate_id":0,"name":"SubsecRound","span":{"filename":"src/round.rs","begin":[17,0],"end":[50,1]},"visibility":"public","docs":"Extension trait for subsecond rounding or truncation to a maximum number\nof digits. Rounding can be used to decrease the error variance when\nserializing/persisting to lower precision. Truncation is the default\nbehavior in Chrono display formatting.  Either can be used to guarantee\nequality (e.g. for testing) when round-tripping through a lower precision\nformat.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_dyn_compatible":false,"items":[1917,1918],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[1919]}}},"1785":{"id":1785,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"550":{"id":550,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1703,0],"end":[1710,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[548,549],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2077":{"id":2077,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,9],"end":[31,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"842":{"id":842,"crate_id":0,"name":"IsoYearDiv100","span":{"filename":"src/format/mod.rs","begin":[115,4],"end":[115,17]},"visibility":"default","docs":"Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1134":{"id":1134,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"ToString","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[92],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1426":{"id":1426,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"191":{"id":191,"crate_id":0,"name":"add_assign","span":{"filename":"src/naive/date/mod.rs","begin":[1926,4],"end":[1928,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1718":{"id":1718,"crate_id":0,"name":"cmp","span":{"filename":"src/naive/mod.rs","begin":[215,62],"end":[215,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"483":{"id":483,"crate_id":0,"name":"ordinal","span":{"filename":"src/datetime/mod.rs","begin":[1194,4],"end":[1196,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"775":{"id":775,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2010":{"id":2010,"crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[209,0],"end":[237,1]},"visibility":"default","docs":"Any weekday can be represented as an integer from 0 to 6, which equals to\n[`Weekday::num_days_from_monday`](#method.num_days_from_monday) in this implementation.\nDo not heavily depend on this though; use explicit methods whenever possible.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_isize","from_i8","from_i16","from_i32","from_i128","from_usize","from_u8","from_u16","from_u32","from_u128","from_f32","from_f64"],"trait":{"path":"FromPrimitive","id":2011,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2008,2009],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1067":{"id":1067,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[317,22],"end":[317,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1066],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1359":{"id":1359,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2166,9],"end":[2166,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1358],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"416":{"id":416,"crate_id":0,"name":"with_time","span":{"filename":"src/datetime/mod.rs","begin":[705,4],"end":[707,5]},"visibility":"public","docs":"Set the time to a new fixed time on the existing date.\n\n# Errors\n\nReturns `LocalResult::None` if the datetime is at the edge of the representable range for a\n`DateTime`, and `with_time` would push the value in UTC out of range.\n\n# Example\n\n```\n# #[cfg(feature = \"clock\")] {\nuse chrono::{Local, NaiveTime};\n\nlet noon = NaiveTime::from_hms_opt(12, 0, 0).unwrap();\nlet today_noon = Local::now().with_time(noon);\nlet today_midnight = Local::now().with_time(NaiveTime::MIN);\n\nassert_eq!(today_noon.single().unwrap().time(), noon);\nassert_eq!(today_midnight.single().unwrap().time(), NaiveTime::MIN);\n# }\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["time",{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"708":{"id":708,"crate_id":0,"name":"set_ampm","span":{"filename":"src/format/parsed.rs","begin":[425,4],"end":[427,5]},"visibility":"public","docs":"Set the [`hour_div_12`](Parsed::hour_div_12) am/pm field to the given value.\n\n`false` indicates AM and `true` indicates PM.\n\n# Errors\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"Parsed::hour_div_12":707},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"bool"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1943":{"id":1943,"crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[244,9],"end":[244,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1942],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2235":{"id":2235,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1000":{"id":1000,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"57":{"id":57,"crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1292":{"id":1292,"crate_id":0,"name":"default","span":{"filename":"src/naive/date/mod.rs","begin":[2317,4],"end":[2319,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1584":{"id":1584,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"349":{"id":349,"crate_id":0,"name":"with_day","span":{"filename":"src/date.rs","begin":[446,4],"end":[448,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1876":{"id":1876,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"641":{"id":641,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2168":{"id":2168,"crate_id":0,"name":"ordinal0","span":{"filename":"src/traits.rs","begin":[75,4],"end":[75,30]},"visibility":"default","docs":"Returns the day of year starting from 0.\n\nThe return value ranges from 0 to 365. (The last day of year differs by years.)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"933":{"id":933,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1225":{"id":1225,"crate_id":0,"name":"leap_year","span":{"filename":"src/naive/date/mod.rs","begin":[1345,4],"end":[1347,5]},"visibility":"public","docs":"Returns `true` if this is a leap year.\n\n```\n# use chrono::NaiveDate;\nassert_eq!(NaiveDate::from_ymd_opt(2000, 1, 1).unwrap().leap_year(), true);\nassert_eq!(NaiveDate::from_ymd_opt(2001, 1, 1).unwrap().leap_year(), false);\nassert_eq!(NaiveDate::from_ymd_opt(2002, 1, 1).unwrap().leap_year(), false);\nassert_eq!(NaiveDate::from_ymd_opt(2003, 1, 1).unwrap().leap_year(), false);\nassert_eq!(NaiveDate::from_ymd_opt(2004, 1, 1).unwrap().leap_year(), true);\nassert_eq!(NaiveDate::from_ymd_opt(2100, 1, 1).unwrap().leap_year(), false);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1517":{"id":1517,"crate_id":0,"name":"duration_round","span":{"filename":"src/round.rs","begin":[173,4],"end":[175,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["duration",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Result","id":39,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":585,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"574":{"id":574,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1844,0],"end":[1861,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"SystemTime","id":573,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::offset::Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"items":[572],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1809":{"id":1809,"crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[55,0],"end":[112,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"now\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1808,1777],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"866":{"id":866,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2101":{"id":2101,"crate_id":0,"name":"as_u32","span":{"filename":"src/month.rs","begin":[237,4],"end":[239,5]},"visibility":"public","docs":"Returns the total number of months in the `Months` instance.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1158":{"id":1158,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"215":{"id":215,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1206,0],"end":[1213,1]},"visibility":"default","docs":"Add `TimeDelta` to `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the addition ignores integral number of days.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveTime` itself represents a leap second in which case the\nassumption becomes that **there is exactly a single leap second ever**.\n\n# Example\n\n```\nuse chrono::{NaiveTime, TimeDelta};\n\nlet from_hmsm = |h, m, s, milli| NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap();\n\nassert_eq!(from_hmsm(3, 5, 7, 0) + TimeDelta::zero(), from_hmsm(3, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + TimeDelta::try_seconds(1).unwrap(), from_hmsm(3, 5, 8, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + TimeDelta::try_seconds(-1).unwrap(), from_hmsm(3, 5, 6, 0));\nassert_eq!(\n    from_hmsm(3, 5, 7, 0) + TimeDelta::try_seconds(60 + 4).unwrap(),\n    from_hmsm(3, 6, 11, 0)\n);\nassert_eq!(\n    from_hmsm(3, 5, 7, 0) + TimeDelta::try_seconds(7 * 60 * 60 - 6 * 60).unwrap(),\n    from_hmsm(9, 59, 7, 0)\n);\nassert_eq!(\n    from_hmsm(3, 5, 7, 0) + TimeDelta::try_milliseconds(80).unwrap(),\n    from_hmsm(3, 5, 7, 80)\n);\nassert_eq!(\n    from_hmsm(3, 5, 7, 950) + TimeDelta::try_milliseconds(280).unwrap(),\n    from_hmsm(3, 5, 8, 230)\n);\nassert_eq!(\n    from_hmsm(3, 5, 7, 950) + TimeDelta::try_milliseconds(-980).unwrap(),\n    from_hmsm(3, 5, 6, 970)\n);\n```\n\nThe addition wraps around.\n\n```\n# use chrono::{TimeDelta, NaiveTime};\n# let from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\nassert_eq!(from_hmsm(3, 5, 7, 0) + TimeDelta::try_seconds(22*60*60).unwrap(), from_hmsm(1, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + TimeDelta::try_seconds(-8*60*60).unwrap(), from_hmsm(19, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + TimeDelta::try_days(800).unwrap(), from_hmsm(3, 5, 7, 0));\n```\n\nLeap seconds are handled, but the addition assumes that it is the only leap second happened.\n\n```\n# use chrono::{TimeDelta, NaiveTime};\n# let from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\nlet leap = from_hmsm(3, 5, 59, 1_300);\nassert_eq!(leap + TimeDelta::zero(), from_hmsm(3, 5, 59, 1_300));\nassert_eq!(leap + TimeDelta::try_milliseconds(-500).unwrap(), from_hmsm(3, 5, 59, 800));\nassert_eq!(leap + TimeDelta::try_milliseconds(500).unwrap(), from_hmsm(3, 5, 59, 1_800));\nassert_eq!(leap + TimeDelta::try_milliseconds(800).unwrap(), from_hmsm(3, 6, 0, 100));\nassert_eq!(leap + TimeDelta::try_seconds(10).unwrap(), from_hmsm(3, 6, 9, 300));\nassert_eq!(leap + TimeDelta::try_seconds(-10).unwrap(), from_hmsm(3, 5, 50, 300));\nassert_eq!(leap + TimeDelta::try_days(1).unwrap(), from_hmsm(3, 5, 59, 300));\n```\n\n[leap second handling]: crate::NaiveTime#leap-second-handling","links":{"crate::NaiveTime#leap-second-handling":202},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[213,214],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1450":{"id":1450,"crate_id":0,"name":"month0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1023,4],"end":[1025,5]},"visibility":"default","docs":"Returns the month number starting from 0.\n\nThe return value ranges from 0 to 11.\n\nSee also the [`NaiveDate::month0`] method.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.month0(), 8);\n```","links":{"`NaiveDate::month0`":1260},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"507":{"id":507,"crate_id":0,"name":"with_hour","span":{"filename":"src/datetime/mod.rs","begin":[1358,4],"end":[1360,5]},"visibility":"default","docs":"Makes a new `DateTime` with the hour number changed.\n\nSee also the [`NaiveTime::with_hour`] method.\n\n# Errors\n\nReturns `None` if:\n- The value for `hour` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveTime::with_hour`":506},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1742":{"id":1742,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":86,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[83],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2034":{"id":2034,"crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[240,27],"end":[240,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1091":{"id":1091,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1383":{"id":1383,"crate_id":0,"name":"MAX_DATETIME","span":{"filename":"src/naive/datetime/mod.rs","begin":[40,0],"end":[40,59]},"visibility":"public","docs":"The maximum possible `NaiveDateTime`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDateTime::MAX instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDateTime::MAX instead"},"inner":{"constant":{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"const":{"expr":"NaiveDateTime::MAX","value":null,"is_literal":false}}}},"1675":{"id":1675,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"440":{"id":440,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1967":{"id":1967,"crate_id":0,"name":"num_days_from_monday","span":{"filename":"src/weekday.rs","begin":[137,4],"end":[139,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Monday = 0.\n\n`w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n--------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.num_days_from_monday()`: | 0     | 1     | 2     | 3     | 4     | 5     | 6\n\n# Example\n\n```\n# #[cfg(feature = \"clock\")] {\n# use chrono::{Local, Datelike};\n// MTWRFSU is occasionally used as a single-letter abbreviation of the weekdays.\n// Use `num_days_from_monday` to index into the array.\nconst MTWRFSU: [char; 7] = ['M', 'T', 'W', 'R', 'F', 'S', 'U'];\n\nlet today = Local::now().weekday();\nprintln!(\"{}\", MTWRFSU[today.num_days_from_monday() as usize]);\n# }\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"732":{"id":732,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1024":{"id":1024,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1316":{"id":1316,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2130,9],"end":[2130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1315],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"81":{"id":81,"crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"path":"Result","id":39,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"T"},"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1608":{"id":1608,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[212,53],"end":[212,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1607],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"373":{"id":373,"crate_id":0,"name":"MAX_DATE","span":{"filename":"src/date.rs","begin":[70,0],"end":[70,53]},"visibility":"public","docs":"The maximum possible `Date`.","links":{},"attrs":["#[allow(deprecated)]","#[deprecated(since = \"0.4.20\", note = \"Use Date::MAX_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use Date::MAX_UTC instead"},"inner":{"constant":{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::offset::Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"const":{"expr":"Date<Utc>::MAX_UTC","value":null,"is_literal":false}}}},"1900":{"id":1900,"crate_id":0,"name":"with_ymd_and_hms","span":{"filename":"src/offset/mod.rs","begin":[290,4],"end":[304,5]},"visibility":"default","docs":"Make a new `DateTime` from year, month, day, time components and current time zone.\n\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nReturns `MappedLocalTime::None` on invalid input data.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["day",{"primitive":"u32"}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"957":{"id":957,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2192":{"id":2192,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[546,25],"end":[546,33]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]","#[allow(deprecated)]"],"deprecation":null,"inner":{"use":{"source":"date::MIN_DATE","name":"MIN_DATE","id":372,"is_glob":false}}},"14":{"id":14,"crate_id":0,"name":"try_seconds","span":{"filename":"src/time_delta.rs","begin":[219,4],"end":[221,5]},"visibility":"public","docs":"Makes a new `TimeDelta` with the given number of seconds.\n\n# Errors\n\nReturns `None` when `seconds` is more than `i64::MAX / 1_000` or less than\n`-i64::MAX / 1_000` (in this context, this is the same as `i64::MIN / 1_000` due to\nrounding).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["seconds",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1249":{"id":1249,"crate_id":0,"name":"hash","span":{"filename":"src/naive/date/mod.rs","begin":[94,24],"end":[94,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"306":{"id":306,"crate_id":0,"name":"naive_utc","span":{"filename":"src/date.rs","begin":[294,4],"end":[296,5]},"visibility":"public","docs":"Returns a view to the naive UTC date.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1541":{"id":1541,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"598":{"id":598,"crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[49,0],"end":[318,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":154,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"super::Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"items":[596,597],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1833":{"id":1833,"crate_id":0,"name":"hash","span":{"filename":"src/offset/utc.rs","begin":[43,37],"end":[43,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2125":{"id":2125,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[225,33],"end":[225,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2124],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"890":{"id":890,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1182":{"id":1182,"crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[398,44],"end":[398,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1474":{"id":1474,"crate_id":0,"name":"with_nanosecond","span":{"filename":"src/naive/datetime/mod.rs","begin":[1565,4],"end":[1567,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with nanoseconds since the whole non-leap second changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\nAs with the [`NaiveDateTime::nanosecond`] method,\nthe input range can exceed 1,000,000,000 for leap seconds.\n\nSee also the [`NaiveTime::with_nanosecond`] method.\n\n# Errors\n\nReturns `None` if `nanosecond >= 2,000,000,000`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 59, 789).unwrap();\nassert_eq!(\n    dt.with_nanosecond(333_333_333),\n    Some(\n        NaiveDate::from_ymd_opt(2015, 9, 8)\n            .unwrap()\n            .and_hms_nano_opt(12, 34, 59, 333_333_333)\n            .unwrap()\n    )\n);\nassert_eq!(\n    dt.with_nanosecond(1_333_333_333), // leap second\n    Some(\n        NaiveDate::from_ymd_opt(2015, 9, 8)\n            .unwrap()\n            .and_hms_nano_opt(12, 34, 59, 1_333_333_333)\n            .unwrap()\n    )\n);\nassert_eq!(dt.with_nanosecond(2_000_000_000), None);\n```","links":{"`NaiveDateTime::nanosecond`":512,"`NaiveTime::with_nanosecond`":513},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"239":{"id":239,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"ToString","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[92],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1766":{"id":1766,"crate_id":0,"name":"fmt","span":{"filename":"src/offset/fixed.rs","begin":[156,4],"end":[168,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"531":{"id":531,"crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1552,4],"end":[1552,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}}},"2058":{"id":2058,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"823":{"id":823,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":78,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[74,76],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1407":{"id":1407,"crate_id":0,"name":"checked_sub_months","span":{"filename":"src/naive/datetime/mod.rs","begin":[748,4],"end":[750,5]},"visibility":"public","docs":"Subtracts given `Months` from the current date and time.\n\nUses the last day of the month if the day does not exist in the resulting month.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Months, NaiveDate};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1)\n        .unwrap()\n        .and_hms_opt(1, 0, 0)\n        .unwrap()\n        .checked_sub_months(Months::new(1)),\n    Some(NaiveDate::from_ymd_opt(2013, 12, 1).unwrap().and_hms_opt(1, 0, 0).unwrap())\n);\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1)\n        .unwrap()\n        .and_hms_opt(1, 0, 0)\n        .unwrap()\n        .checked_sub_months(Months::new(core::i32::MAX as u32 + 1)),\n    None\n);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"172":{"id":172,"crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[521,0],"end":[526,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"SubAssign","id":144,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[171],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"464":{"id":464,"crate_id":0,"name":"default","span":{"filename":"src/datetime/mod.rs","begin":[878,4],"end":[880,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1699":{"id":1699,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1991":{"id":1991,"crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,9],"end":[32,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1048":{"id":1048,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"397":{"id":397,"crate_id":0,"name":"fixed_offset","span":{"filename":"src/datetime/mod.rs","begin":[420,4],"end":[422,5]},"visibility":"public","docs":"Fix the offset from UTC to its current value, dropping the associated timezone information.\nThis it useful for converting a generic `DateTime<Tz: Timezone>` to `DateTime<FixedOffset>`.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1632":{"id":1632,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1504,0],"end":[1530,1]},"visibility":"default","docs":"The `Debug` output of the naive time `t` is the same as\n[`t.format(\"%H:%M:%S%.f\")`](crate::format::strftime).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_opt(23, 56, 4).unwrap()), \"23:56:04\");\nassert_eq!(\n    format!(\"{:?}\", NaiveTime::from_hms_milli_opt(23, 56, 4, 12).unwrap()),\n    \"23:56:04.012\"\n);\nassert_eq!(\n    format!(\"{:?}\", NaiveTime::from_hms_micro_opt(23, 56, 4, 1234).unwrap()),\n    \"23:56:04.001234\"\n);\nassert_eq!(\n    format!(\"{:?}\", NaiveTime::from_hms_nano_opt(23, 56, 4, 123456).unwrap()),\n    \"23:56:04.000123456\"\n);\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveTime;\nassert_eq!(\n    format!(\"{:?}\", NaiveTime::from_hms_milli_opt(6, 59, 59, 1_500).unwrap()),\n    \"06:59:60.500\"\n);\n```","links":{"crate::format::strftime":315},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1631],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1924":{"id":1924,"crate_id":0,"name":"DurationExceedsLimit","span":{"filename":"src/round.rs","begin":[266,4],"end":[266,24]},"visibility":"default","docs":"Error when `TimeDelta.num_nanoseconds` exceeds the limit.\n\n``` rust\n# use chrono::{DurationRound, TimeDelta, RoundingError, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2260, 12, 31)\n    .unwrap()\n    .and_hms_nano_opt(23, 59, 59, 1_75_500_000)\n    .unwrap()\n    .and_utc();\n\nassert_eq!(\n    dt.duration_round(TimeDelta::try_days(300 * 365).unwrap()),\n    Err(RoundingError::DurationExceedsLimit)\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"689":{"id":689,"crate_id":0,"name":"isoyear_mod_100","span":{"filename":"src/format/parsed.rs","begin":[1019,4],"end":[1021,5]},"visibility":"public","docs":"Get the `isoyear_mod_100` field that is part of an [ISO 8601 week date] if set.\n\nSee also [`set_isoyear_mod_100()`](Parsed::set_isoyear_mod_100).\n\n[ISO 8601 week date]: crate::NaiveDate#week-date","links":{"crate::NaiveDate#week-date":187,"Parsed::set_isoyear_mod_100":692},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2216":{"id":2216,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[585,0],"end":[585,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"use":{"source":"month::ParseMonthError","name":"ParseMonthError","id":2074,"is_glob":false}}},"981":{"id":981,"crate_id":0,"name":"OffsetPrecision","span":{"filename":"src/format/mod.rs","begin":[297,0],"end":[314,1]},"visibility":"public","docs":"The precision of an offset from UTC formatting item.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"has_stripped_variants":false,"variants":[1013,1014,1015,1016,1017,1018],"impls":[1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1035,1036,1038,1039,1041,1042,1044]}}},"1273":{"id":1273,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[1984,0],"end":[1990,1]},"visibility":"default","docs":"Subtract `Months` from `NaiveDate`.\n\nThe result will be clamped to valid days in the resulting month, see `checked_sub_months` for\ndetails.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using `NaiveDate::checked_sub_months` to get an `Option` instead.\n\n# Example\n\n```\nuse chrono::{Months, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nassert_eq!(from_ymd(2014, 1, 1) - Months::new(11), from_ymd(2013, 2, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Months::new(12), from_ymd(2013, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Months::new(13), from_ymd(2012, 12, 1));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1271,1272],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1565":{"id":1565,"crate_id":0,"name":"from_hms_micro","span":{"filename":"src/naive/time/mod.rs","begin":[347,4],"end":[349,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and microsecond.\n\nThe microsecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `sec == 59`.\n\n# Panics\n\nPanics on invalid hour, minute, second and/or microsecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_hms_micro_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_hms_micro_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"330":{"id":330,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1857":{"id":1857,"crate_id":0,"name":"None","span":{"filename":"src/offset/mod.rs","begin":[74,4],"end":[74,8]},"visibility":"default","docs":"The local time does not exist because there is a _gap_ in the local time.\n\nThis variant may also be returned if there was an error while resolving the local time,\ncaused by for example missing time zone data files, an error in an OS API, or overflow.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"622":{"id":622,"crate_id":0,"name":"Nanosecond6","span":{"filename":"src/format/mod.rs","begin":[207,4],"end":[207,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2149":{"id":2149,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Display","id":95,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"ToString","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[92],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"914":{"id":914,"crate_id":0,"name":"LongMonthName","span":{"filename":"src/format/mod.rs","begin":[183,4],"end":[183,17]},"visibility":"default","docs":"Full month names.\n\nPrints a full name in the title case, reads either a short or full name in any case.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1206":{"id":1206,"crate_id":0,"name":"and_hms_milli","span":{"filename":"src/naive/date/mod.rs","begin":[767,4],"end":[769,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.\n\nThe millisecond part is allowed to exceed 1,000,000,000 in order to represent a [leap second](\n./struct.NaiveTime.html#leap-second-handling), but only when `sec == 59`.\n\n# Panics\n\nPanics on invalid hour, minute, second and/or millisecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `and_hms_milli_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `and_hms_milli_opt()` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1498":{"id":1498,"crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1984,4],"end":[1984,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"263":{"id":263,"crate_id":0,"name":"Datelike","span":{"filename":"src/traits.rs","begin":[31,0],"end":[264,1]},"visibility":"public","docs":"The common set of methods for date component.\n\nMethods such as [`year`], [`month`], [`day`] and [`weekday`] can be used to get basic\ninformation about the date.\n\nThe `with_*` methods can change the date.\n\n# Warning\n\nThe `with_*` methods can be convenient to change a single component of a date, but they must be\nused with some care. Examples to watch out for:\n\n- [`with_year`] changes the year component of a year-month-day value. Don't use this method if\n  you want the ordinal to stay the same after changing the year, of if you want the week and\n  weekday values to stay the same.\n- Don't combine two `with_*` methods to change two components of the date. For example to\n  change both the year and month components of a date. This could fail because an intermediate\n  value does not exist, while the final date would be valid.\n\nFor more complex changes to a date, it is best to use the methods on [`NaiveDate`] to create a\nnew value instead of altering an existing date.\n\n[`year`]: Datelike::year\n[`month`]: Datelike::month\n[`day`]: Datelike::day\n[`weekday`]: Datelike::weekday\n[`with_year`]: Datelike::with_year\n[`NaiveDate`]: crate::NaiveDate","links":{"crate::NaiveDate":187,"Datelike::weekday":1188,"Datelike::year":2162,"Datelike::day":2165,"Datelike::month":2163,"Datelike::with_year":2169},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_dyn_compatible":false,"items":[2162,1186,2163,2164,2165,2166,2167,2168,1188,1187,2169,2170,2171,2172,2173,2174,2175,2176],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[353,501,1267,1464]}}},"555":{"id":555,"crate_id":0,"name":"add","span":{"filename":"src/datetime/mod.rs","begin":[1734,4],"end":[1736,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":134,"args":null}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1790":{"id":1790,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"847":{"id":847,"crate_id":0,"name":"WeekFromMon","span":{"filename":"src/format/mod.rs","begin":[125,4],"end":[125,15]},"visibility":"default","docs":"Week number, where the week 1 starts at the first Monday of January (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2082":{"id":2082,"crate_id":0,"name":"clone","span":{"filename":"src/month.rs","begin":[31,30],"end":[31,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1139":{"id":1139,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[386,23],"end":[386,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":105,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"196":{"id":196,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2058,0],"end":[2065,1]},"visibility":"default","docs":"Subtract `TimeDelta` from `NaiveDate`.\n\nThis discards the fractional days in `TimeDelta`, rounding to the closest integral number of\ndays towards `TimeDelta::zero()`.\nIt is the same as the addition with a negated `TimeDelta`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDate::checked_sub_signed`] to get an `Option` instead.\n\n# Example\n\n```\nuse chrono::{NaiveDate, TimeDelta};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nassert_eq!(from_ymd(2014, 1, 1) - TimeDelta::zero(), from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - TimeDelta::try_seconds(86399).unwrap(), from_ymd(2014, 1, 1));\nassert_eq!(\n    from_ymd(2014, 1, 1) - TimeDelta::try_seconds(-86399).unwrap(),\n    from_ymd(2014, 1, 1)\n);\nassert_eq!(from_ymd(2014, 1, 1) - TimeDelta::try_days(1).unwrap(), from_ymd(2013, 12, 31));\nassert_eq!(from_ymd(2014, 1, 1) - TimeDelta::try_days(-1).unwrap(), from_ymd(2014, 1, 2));\nassert_eq!(from_ymd(2014, 1, 1) - TimeDelta::try_days(364).unwrap(), from_ymd(2013, 1, 2));\nassert_eq!(\n    from_ymd(2014, 1, 1) - TimeDelta::try_days(365 * 4 + 1).unwrap(),\n    from_ymd(2010, 1, 1)\n);\nassert_eq!(\n    from_ymd(2014, 1, 1) - TimeDelta::try_days(365 * 400 + 97).unwrap(),\n    from_ymd(1614, 1, 1)\n);\n```\n\n[`NaiveDate::checked_sub_signed`]: crate::NaiveDate::checked_sub_signed","links":{"crate::NaiveDate::checked_sub_signed":195},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[193,194],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1431":{"id":1431,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":75,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[79,81],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"488":{"id":488,"crate_id":0,"name":"with_year","span":{"filename":"src/datetime/mod.rs","begin":[1223,4],"end":[1228,5]},"visibility":"default","docs":"Makes a new `DateTime` with the year number changed, while keeping the same month and day.\n\nSee also the [`NaiveDate::with_year`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (February 29 in a non-leap year).\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.\n- The resulting UTC datetime would be out of range.\n- The resulting local datetime would be out of range (unless the year remains the same).","links":{"`NaiveDate::with_year`":487},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1723":{"id":1723,"crate_id":0,"name":"east_opt","span":{"filename":"src/offset/fixed.rs","begin":[62,4],"end":[68,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.\n\nReturns `None` on the out-of-bound `secs`.\n\n# Example\n\n```\n# #[cfg(feature = \"alloc\")] {\nuse chrono::{FixedOffset, TimeZone};\nlet hour = 3600;\nlet datetime =\n    FixedOffset::east_opt(5 * hour).unwrap().with_ymd_and_hms(2016, 11, 08, 0, 0, 0).unwrap();\nassert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00+05:00\")\n# }\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["secs",{"primitive":"i32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2015":{"id":2015,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":50,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"780":{"id":780,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"StrftimeItems","id":317,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1072":{"id":1072,"crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[317,44],"end":[317,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1364":{"id":1364,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2166,29],"end":[2166,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1363],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"129":{"id":129,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[488,0],"end":[499,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Neg","id":130,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[127,128],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1656":{"id":1656,"crate_id":0,"name":"checked_last_day","span":{"filename":"src/naive/mod.rs","begin":[138,4],"end":[146,5]},"visibility":"public","docs":"Returns a date representing the last day of the week or\n`None` if the date is out of `NaiveDate`'s range\n(more than ca. 262,000 years away from common era).\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet date = NaiveDate::MAX;\nlet week = date.week(Weekday::Mon);\nif let Some(last_day) = week.checked_last_day() {\n    assert!(last_day == date);\n} else {\n    // error handling code\n    return;\n};\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"421":{"id":421,"crate_id":0,"name":"timestamp_millis_opt","span":{"filename":"src/offset/mod.rs","begin":[480,4],"end":[485,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap milliseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\n\nReturns `MappedLocalTime::None` on out-of-range number of milliseconds\nand/or invalid nanosecond, otherwise always returns\n`MappedLocalTime::Single`.\n\n# Example\n\n```\nuse chrono::{MappedLocalTime, TimeZone, Utc};\nmatch Utc.timestamp_millis_opt(1431648000) {\n    MappedLocalTime::Single(dt) => assert_eq!(dt.timestamp(), 1431648),\n    _ => panic!(\"Incorrect timestamp_millis\"),\n};\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["millis",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1948":{"id":1948,"crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[244,23],"end":[244,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1947],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"713":{"id":713,"crate_id":0,"name":"set_minute","span":{"filename":"src/format/parsed.rs","begin":[479,4],"end":[484,5]},"visibility":"public","docs":"Set the [`minute`](Parsed::minute) field to the given value.\n\n# Errors\n\nReturns `OUT_OF_RANGE` if `value` is not in the range 0-59.\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"Parsed::minute":712},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1005":{"id":1005,"crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[283,22],"end":[283,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2240":{"id":2240,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[664,16],"end":[664,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1297":{"id":1297,"crate_id":0,"name":"MAX_DATE","span":{"filename":"src/naive/date/mod.rs","begin":[111,0],"end":[111,47]},"visibility":"public","docs":"The maximum possible `NaiveDate` (December 31, 262143 CE).","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDate::MAX instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDate::MAX instead"},"inner":{"constant":{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"const":{"expr":"NaiveDate::MAX","value":null,"is_literal":false}}}},"62":{"id":62,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1589":{"id":1589,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"354":{"id":354,"crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[467,0],"end":[467,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"646":{"id":646,"crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[458,16],"end":[458,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1881":{"id":1881,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"938":{"id":938,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2173":{"id":2173,"crate_id":0,"name":"with_day0","span":{"filename":"src/traits.rs","begin":[206,4],"end":[206,51]},"visibility":"default","docs":"Makes a new value with the day of month (starting from 0) changed.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (for example `day0(30)` in April).\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n- The value for `day0` is out of range.\n\n[`DateTime<Tz>`]: crate::DateTime","links":{"crate::DateTime":174},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["day0",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"1230":{"id":1230,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"287":{"id":287,"crate_id":0,"name":"and_time","span":{"filename":"src/date.rs","begin":[87,4],"end":[90,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid datetime.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["time",{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"579":{"id":579,"crate_id":0,"name":"Err","span":{"filename":"src/format/parse.rs","begin":[523,4],"end":[523,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"1814":{"id":1814,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"2106":{"id":2106,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"871":{"id":871,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":71,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Numeric","id":861,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[69],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1163":{"id":1163,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseErrorKind","id":1117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1455":{"id":1455,"crate_id":0,"name":"weekday","span":{"filename":"src/naive/datetime/mod.rs","begin":[1121,4],"end":[1123,5]},"visibility":"default","docs":"Returns the day of week.\n\nSee also the [`NaiveDate::weekday`](./struct.NaiveDate.html#method.weekday) method.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate, NaiveDateTime, Weekday};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.weekday(), Weekday::Fri);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"220":{"id":220,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1328,0],"end":[1335,1]},"visibility":"default","docs":"Subtract `TimeDelta` from `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the subtraction ignores integral number of days.\nThis is the same as addition with a negated `TimeDelta`.\n\nAs a part of Chrono's [leap second handling], the subtraction assumes that **there is no leap\nsecond ever**, except when the `NaiveTime` itself represents a leap second in which case the\nassumption becomes that **there is exactly a single leap second ever**.\n\n# Example\n\n```\nuse chrono::{NaiveTime, TimeDelta};\n\nlet from_hmsm = |h, m, s, milli| NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap();\n\nassert_eq!(from_hmsm(3, 5, 7, 0) - TimeDelta::zero(), from_hmsm(3, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - TimeDelta::try_seconds(1).unwrap(), from_hmsm(3, 5, 6, 0));\nassert_eq!(\n    from_hmsm(3, 5, 7, 0) - TimeDelta::try_seconds(60 + 5).unwrap(),\n    from_hmsm(3, 4, 2, 0)\n);\nassert_eq!(\n    from_hmsm(3, 5, 7, 0) - TimeDelta::try_seconds(2 * 60 * 60 + 6 * 60).unwrap(),\n    from_hmsm(0, 59, 7, 0)\n);\nassert_eq!(\n    from_hmsm(3, 5, 7, 0) - TimeDelta::try_milliseconds(80).unwrap(),\n    from_hmsm(3, 5, 6, 920)\n);\nassert_eq!(\n    from_hmsm(3, 5, 7, 950) - TimeDelta::try_milliseconds(280).unwrap(),\n    from_hmsm(3, 5, 7, 670)\n);\n```\n\nThe subtraction wraps around.\n\n```\n# use chrono::{TimeDelta, NaiveTime};\n# let from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\nassert_eq!(from_hmsm(3, 5, 7, 0) - TimeDelta::try_seconds(8*60*60).unwrap(), from_hmsm(19, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - TimeDelta::try_days(800).unwrap(), from_hmsm(3, 5, 7, 0));\n```\n\nLeap seconds are handled, but the subtraction assumes that it is the only leap second happened.\n\n```\n# use chrono::{TimeDelta, NaiveTime};\n# let from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\nlet leap = from_hmsm(3, 5, 59, 1_300);\nassert_eq!(leap - TimeDelta::zero(), from_hmsm(3, 5, 59, 1_300));\nassert_eq!(leap - TimeDelta::try_milliseconds(200).unwrap(), from_hmsm(3, 5, 59, 1_100));\nassert_eq!(leap - TimeDelta::try_milliseconds(500).unwrap(), from_hmsm(3, 5, 59, 800));\nassert_eq!(leap - TimeDelta::try_seconds(60).unwrap(), from_hmsm(3, 5, 0, 300));\nassert_eq!(leap - TimeDelta::try_days(1).unwrap(), from_hmsm(3, 6, 0, 300));\n```\n\n[leap second handling]: crate::NaiveTime#leap-second-handling","links":{"crate::NaiveTime#leap-second-handling":202},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sub","id":138,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[218,219],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1747":{"id":1747,"crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[22,9],"end":[22,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1746],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"512":{"id":512,"crate_id":0,"name":"nanosecond","span":{"filename":"src/naive/datetime/mod.rs","begin":[1428,4],"end":[1430,5]},"visibility":"default","docs":"Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./struct.NaiveTime.html#leap-second-handling).\n\nSee also the [`NaiveTime#method.nanosecond`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime =\n    NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.nanosecond(), 789_000_000);\n```","links":{"`NaiveTime#method.nanosecond`":202},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2039":{"id":2039,"crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[254,0],"end":[258,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2038],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"804":{"id":804,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[69,16],"end":[69,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"parse::parse","name":"parse","id":678,"is_glob":false}}},"1096":{"id":1096,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Item","id":314,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1388":{"id":1388,"crate_id":0,"name":"from_timestamp","span":{"filename":"src/naive/datetime/mod.rs","begin":[122,4],"end":[126,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` corresponding to a UTC date and time,\nfrom the number of non-leap seconds\nsince the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nFor a non-naive version of this function see [`TimeZone::timestamp`].\n\nThe nanosecond part can exceed 1,000,000,000 in order to represent a\n[leap second](NaiveTime#leap-second-handling), but only when `secs % 60 == 59`.\n(The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)\n\n# Panics\n\nPanics if the number of seconds would be out of range for a `NaiveDateTime` (more than\nca. 262,000 years away from common era), and panics on an invalid nanosecond (2 seconds or\nmore).","links":{"NaiveTime#leap-second-handling":202,"`TimeZone::timestamp`":1387},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `DateTime::from_timestamp` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `DateTime::from_timestamp` instead"},"inner":{"function":{"sig":{"inputs":[["secs",{"primitive":"i64"}],["nsecs",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"153":{"id":153,"crate_id":0,"name":"sum","span":{"filename":"src/time_delta.rs","begin":[548,4],"end":[550,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["iter",{"generic":"I"}]],"output":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":154,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"445":{"id":445,"crate_id":0,"name":"round_subsecs","span":{"filename":"src/round.rs","begin":[56,4],"end":[69,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["digits",{"primitive":"u16"}]],"output":{"generic":"T"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1680":{"id":1680,"crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[32,22],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":122,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1679],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"737":{"id":737,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":67,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Parsed","id":679,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[64],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1972":{"id":1972,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1029":{"id":1029,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetPrecision","id":981,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1321":{"id":1321,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2130,29],"end":[2130,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1320],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"378":{"id":378,"crate_id":0,"name":"and_local_timezone","span":{"filename":"src/naive/datetime/mod.rs","begin":[922,4],"end":[924,5]},"visibility":"public","docs":"Converts the `NaiveDateTime` into a timezone-aware `DateTime<Tz>` with the provided\ntime zone.\n\n# Example\n\n```\nuse chrono::{FixedOffset, NaiveDate};\nlet hour = 3600;\nlet tz = FixedOffset::east_opt(5 * hour).unwrap();\nlet dt = NaiveDate::from_ymd_opt(2015, 9, 5)\n    .unwrap()\n    .and_hms_opt(23, 56, 4)\n    .unwrap()\n    .and_local_timezone(tz)\n    .unwrap();\nassert_eq!(dt.timezone(), tz);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["tz",{"generic":"Tz"}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1613":{"id":1613,"crate_id":0,"name":"add","span":{"filename":"src/naive/time/mod.rs","begin":[1234,4],"end":[1241,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1905":{"id":1905,"crate_id":0,"name":"isoywd_opt","span":{"filename":"src/offset/mod.rs","begin":[402,4],"end":[407,5]},"visibility":"default","docs":"Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date and/or invalid week number.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_local_datetime()` with a `NaiveDateTime` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` with a `NaiveDateTime` instead"},"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["week",{"primitive":"u32"}],["weekday",{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2197":{"id":2197,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[558,29],"end":[558,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"format::ParseResult","name":"ParseResult","id":430,"is_glob":false}}},"962":{"id":962,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalFixed","id":926,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"19":{"id":19,"crate_id":0,"name":"num_weeks","span":{"filename":"src/time_delta.rs","begin":[279,4],"end":[281,5]},"visibility":"public","docs":"Returns the total number of whole weeks in the `TimeDelta`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1254":{"id":1254,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[94,42],"end":[94,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"path":"Ord","id":117,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1253],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1546":{"id":1546,"crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/isoweek.rs","begin":[19,24],"end":[19,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::option::Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"$crate::cmp::Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"311":{"id":311,"crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[72,0],"end":[319,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1838":{"id":1838,"crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/utc.rs","begin":[124,4],"end":[126,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["_local",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"MappedLocalTime","id":1412,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"603":{"id":603,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":54,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"DelayedFormat","id":313,"args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"895":{"id":895,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"InternalNumeric","id":859,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"2130":{"id":2130,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[225,50],"end":[225,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","gt","ge"],"trait":{"path":"PartialOrd","id":114,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2129],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1187":{"id":1187,"crate_id":0,"name":"iso_week","span":{"filename":"src/traits.rs","begin":[81,4],"end":[81,34]},"visibility":"default","docs":"Returns the ISO week.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"IsoWeek","id":345,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"1479":{"id":1479,"crate_id":0,"name":"add_assign","span":{"filename":"src/naive/datetime/mod.rs","begin":[1685,4],"end":[1687,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"path":"Duration","id":38,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"244":{"id":244,"crate_id":0,"name":null,"span":{"filename":"src/time_delta.rs","begin":[602,23],"end":[602,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRangeError","id":40,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"536":{"id":536,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1575,0],"end":[1581,1]},"visibility":"default","docs":"Add `Months` to `DateTime`.\n\nThe result will be clamped to valid days in the resulting month, see `checked_add_months` for\ndetails.\n\n# Panics\n\nPanics if:\n- The resulting date would be out of range.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.\n\nStrongly consider using [`DateTime<Tz>::checked_add_months`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_add_months`":400},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[534,535],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"828":{"id":828,"crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[78,15],"end":[78,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Pad","id":811,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2063":{"id":2063,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1120":{"id":1120,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseError","id":565,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"177":{"id":177,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1477,0],"end":[1484,1]},"visibility":"default","docs":"Add `TimeDelta` to `DateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`DateTime<Tz>::checked_add_signed`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_add_signed`":176},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[173,175],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1412":{"id":1412,"crate_id":0,"name":"MappedLocalTime","span":{"filename":"src/offset/mod.rs","begin":[57,0],"end":[57,45]},"visibility":"public","docs":"The result of mapping a local time to a concrete instant in a given time zone.\n\nThe calculation to go from a local time (wall clock time) to an instant in UTC can end up in\nthree cases:\n* A single, simple result.\n* An ambiguous result when the clock is turned backwards during a transition due to for example\n  DST.\n* No result when the clock is turned forwards during a transition due to for example DST.\n\nWhen the clock is turned backwards it creates a _fold_ in local time, during which the local\ntime is _ambiguous_. When the clock is turned forwards it creates a _gap_ in local time, during\nwhich the local time is _missing_, or does not exist.\n\nChrono does not return a default choice or invalid data during time zone transitions, but has\nthe `MappedLocalTime` type to help deal with the result correctly.\n\nThe type of `T` is usually a [`DateTime`] but may also be only an offset.","links":{"`DateTime`":174},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]}}}},"469":{"id":469,"crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[896,0],"end":[903,1]},"visibility":"default","docs":"Convert a `DateTime<Utc>` instance into a `DateTime<Local>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":68,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Utc","id":273,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DateTime","id":174,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"crate::offset::Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"items":[468],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1704":{"id":1704,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1996":{"id":1996,"crate_id":0,"name":"clone","span":{"filename":"src/weekday.rs","begin":[32,30],"end":[32,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Weekday","id":269,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1053":{"id":1053,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":56,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Colons","id":983,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1345":{"id":1345,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1637":{"id":1637,"crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1601,0],"end":[1627,1]},"visibility":"default","docs":"Parsing a `str` into a `NaiveTime` uses the same format,\n[`%H:%M:%S%.f`](crate::format::strftime), as in `Debug` and `Display`.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet t = NaiveTime::from_hms_opt(23, 56, 4).unwrap();\nassert_eq!(\"23:56:04\".parse::<NaiveTime>(), Ok(t));\n\nlet t = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(\"23:56:4.012345678\".parse::<NaiveTime>(), Ok(t));\n\nlet t = NaiveTime::from_hms_nano_opt(23, 59, 59, 1_234_567_890).unwrap(); // leap second\nassert_eq!(\"23:59:60.23456789\".parse::<NaiveTime>(), Ok(t));\n\n// Seconds are optional\nlet t = NaiveTime::from_hms_opt(23, 56, 0).unwrap();\nassert_eq!(\"23:56\".parse::<NaiveTime>(), Ok(t));\n\nassert!(\"foo\".parse::<NaiveTime>().is_err());\n```","links":{"crate::format::strftime":315},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FromStr","id":568,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1635,1636],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"402":{"id":402,"crate_id":0,"name":"checked_sub_months","span":{"filename":"src/naive/date/mod.rs","begin":[580,4],"end":[589,5]},"visibility":"public","docs":"Subtract a duration in [`Months`] from the date\n\nUses the last day of the month if the day does not exist in the resulting month.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\n# use chrono::{NaiveDate, Months};\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_sub_months(Months::new(6)),\n    Some(NaiveDate::from_ymd_opt(2021, 8, 20).unwrap())\n);\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1)\n        .unwrap()\n        .checked_sub_months(Months::new(core::i32::MAX as u32 + 1)),\n    None\n);\n```","links":{"`Months`":401},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["months",{"resolved_path":{"path":"Months","id":401,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1929":{"id":1929,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"RoundingError","id":583,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"694":{"id":694,"crate_id":0,"name":"set_month","span":{"filename":"src/format/parsed.rs","begin":[318,4],"end":[323,5]},"visibility":"public","docs":"Set the [`month`](Parsed::month) field to the given value.\n\n# Errors\n\nReturns `OUT_OF_RANGE` if `value` is not in the range 1-12.\n\nReturns `IMPOSSIBLE` if this field was already set to a different value.","links":{"Parsed::month":693},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"path":"ParseResult","id":430,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"986":{"id":986,"crate_id":0,"name":"OffsetFormat","span":{"filename":"src/format/mod.rs","begin":[284,0],"end":[293,1]},"visibility":"public","docs":"Type for specifying the format of UTC offsets.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[980,982,984,985],"has_stripped_fields":false}},"generics":{"params":[],"where_predicates":[]},"impls":[987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1003,1004,1006,1007,1009,1010,1012]}}},"1278":{"id":1278,"crate_id":0,"name":"sub","span":{"filename":"src/naive/date/mod.rs","begin":[2015,4],"end":[2017,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"path":"","id":138,"args":null}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"43":{"id":43,"crate_id":0,"name":"MAX","span":{"filename":"src/time_delta.rs","begin":[485,4],"end":[485,30]},"visibility":"public","docs":"The maximum possible `TimeDelta`: `i64::MAX` milliseconds.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"value":"MAX"}}},"335":{"id":335,"crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[56,9],"end":[56,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::clone::Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"TimeZone","id":165,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Tz"},"trait":{"path":"","id":165,"args":null}}},"bounds":[{"trait_bound":{"trait":{"path":"$crate::clone::Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}},"items":[334],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1570":{"id":1570,"crate_id":0,"name":"from_num_seconds_from_midnight_opt","span":{"filename":"src/naive/time/mod.rs","begin":[478,4],"end":[483,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.\n\nThe nanosecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `secs % 60 == 59`.\n\n# Errors\n\nReturns `None` on invalid number of seconds and/or nanosecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_nsecs_opt = NaiveTime::from_num_seconds_from_midnight_opt;\n\nassert!(from_nsecs_opt(0, 0).is_some());\nassert!(from_nsecs_opt(86399, 999_999_999).is_some());\nassert!(from_nsecs_opt(86399, 1_999_999_999).is_some()); // a leap second after 23:59:59\nassert!(from_nsecs_opt(86_400, 0).is_none());\nassert!(from_nsecs_opt(86399, 2_000_000_000).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["secs",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"627":{"id":627,"crate_id":0,"name":"AutoSi","span":{"filename":"src/format/formatting.rs","begin":[475,4],"end":[475,10]},"visibility":"default","docs":"Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to display all available\nnon-zero sub-second digits.  This corresponds to [Fixed::Nanosecond].","links":{"Fixed::Nanosecond":626},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"919":{"id":919,"crate_id":0,"name":"TimezoneName","span":{"filename":"src/format/mod.rs","begin":[213,4],"end":[213,16]},"visibility":"default","docs":"Timezone name.\n\nIt does not support parsing, its use in the parser is an immediate failure.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2154":{"id":2154,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[243,16],"end":[243,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseMonthError","id":2074,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2153],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1211":{"id":1211,"crate_id":0,"name":"and_hms_nano_opt","span":{"filename":"src/naive/date/mod.rs","begin":[909,4],"end":[918,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.\n\nThe nanosecond part is allowed to exceed 1,000,000,000 in order to represent a [leap second](\n./struct.NaiveTime.html#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute, second and/or nanosecond.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nassert!(d.and_hms_nano_opt(12, 34, 56, 789_012_345).is_some());\nassert!(d.and_hms_nano_opt(12, 34, 59, 1_789_012_345).is_some()); // leap second\nassert!(d.and_hms_nano_opt(12, 34, 59, 2_789_012_345).is_none());\nassert!(d.and_hms_nano_opt(12, 34, 60, 789_012_345).is_none());\nassert!(d.and_hms_nano_opt(12, 60, 56, 789_012_345).is_none());\nassert!(d.and_hms_nano_opt(24, 34, 56, 789_012_345).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"268":{"id":268,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[535,37],"end":[535,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::Timelike","name":"Timelike","id":267,"is_glob":false}}},"1503":{"id":1503,"crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1998,0],"end":[2004,1]},"visibility":"default","docs":"Add `Days` to `NaiveDateTime`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using `checked_add_days` to get an `Option` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Add","id":134,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Days","id":404,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1501,1502],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1795":{"id":1795,"crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[113,9],"end":[113,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Copy","id":100,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Local","id":256,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"560":{"id":560,"crate_id":0,"name":"fmt","span":{"filename":"src/datetime/mod.rs","begin":[1758,4],"end":[1761,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":119,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":120,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2087":{"id":2087,"crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,44],"end":[31,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"path":"Hash","id":126,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Month","id":265,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2086],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"852":{"id":852,"crate_id":0,"name":"Hour","span":{"filename":"src/format/mod.rs","begin":[135,4],"end":[135,8]},"visibility":"default","docs":"Hour number in the 24-hour clocks (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1144":{"id":1144,"crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[386,44],"end":[386,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"$crate::hash::Hasher","id":124,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1436":{"id":1436,"crate_id":0,"name":"eq","span":{"filename":"src/naive/datetime/mod.rs","begin":[67,9],"end":[67,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"201":{"id":201,"crate_id":0,"name":"add","span":{"filename":"src/naive/datetime/mod.rs","begin":[1630,4],"end":[1632,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"path":"TimeDelta","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"path":"NaiveDateTime","id":200,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1728":{"id":1728,"crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[34,0],"end":[116,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"FixedOffset","id":271,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1722,1723,1724,1725,1726,1727],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"493":{"id":493,"crate_id":0,"name":"with_day","span":{"filename":"src/naive/date/mod.rs","begin":[1774,4],"end":[1776,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of month (starting from 1) changed.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist (for example `day(31)` in April).\n- The value for `day` is invalid.\n\n# Example\n\n```\nuse chrono::{Datelike, NaiveDate};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_day(30),\n    Some(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap())\n);\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_day(31), None);\n// no September 31\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2020":{"id":2020,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":63,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ParseWeekdayError","id":1988,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[61],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"785":{"id":785,"crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"I"},"trait":{"path":"Iterator","id":154,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}}},"1369":{"id":1369,"crate_id":0,"name":null,"span":{"filename":"src/naive/date/mod.rs","begin":[2166,46],"end":[2166,56]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","gt","ge"],"trait":{"path":"PartialOrd","id":114,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateWeeksIterator","id":1222,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[1368],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"426":{"id":426,"crate_id":0,"name":"from_timestamp_nanos","span":{"filename":"src/datetime/mod.rs","begin":[854,4],"end":[858,5]},"visibility":"public","docs":"Creates a new [`DateTime<Utc>`] from the number of non-leap nanoseconds\nsince January 1, 1970 0:00:00.000 UTC (aka \"UNIX timestamp\").\n\nThis is guaranteed to round-trip with [`timestamp_nanos`](DateTime::timestamp_nanos).\n\nIf you need to create a `DateTime` with a [`TimeZone`] different from [`Utc`], use\n[`TimeZone::timestamp_nanos`] or [`DateTime::with_timezone`].\n\nThe UNIX epoch starts on midnight, January 1, 1970, UTC.\n\nAn `i64` with nanosecond precision can span a range of ~584 years. Because all values can\nbe represented as a `DateTime` this method never fails.\n\n# Example\n\n```\nuse chrono::DateTime;\n\nlet timestamp_nanos: i64 = 1662921288_000_000_000; // Sun, 11 Sep 2022 18:34:48 UTC\nlet dt = DateTime::from_timestamp_nanos(timestamp_nanos);\nassert_eq!(timestamp_nanos, dt.timestamp_nanos_opt().unwrap());\n\n// Negative timestamps (before the UNIX epoch) are supported as well.\nlet timestamp_nanos: i64 = -2208936075_000_000_000; // Mon, 1 Jan 1900 14:38:45 UTC\nlet dt = DateTime::from_timestamp_nanos(timestamp_nanos);\nassert_eq!(timestamp_nanos, dt.timestamp_nanos_opt().unwrap());\n```","links":{"`DateTime<Utc>`":174,"`TimeZone::timestamp_nanos`":425,"`Utc`":273,"`DateTime::with_timezone`":396,"DateTime::timestamp_nanos":389,"`TimeZone`":165},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["nanos",{"primitive":"i64"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1661":{"id":1661,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveWeek","id":1223,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"718":{"id":718,"crate_id":0,"name":"timestamp","span":{"filename":"src/format/parsed.rs","begin":[1126,4],"end":[1128,5]},"visibility":"public","docs":"Get the `timestamp` field if set.\n\nSee also [`set_timestamp()`](Parsed::set_timestamp).","links":{"Parsed::set_timestamp":719},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"i64"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1953":{"id":1953,"crate_id":0,"name":"description","span":{"filename":"src/round.rs","begin":[301,4],"end":[303,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1010":{"id":1010,"crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[283,40],"end":[283,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":110,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OffsetFormat","id":986,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2245":{"id":2245,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[664,28],"end":[664,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":108,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"OutOfRange","id":2005,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[2244],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1302":{"id":1302,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":52,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDateDaysIterator","id":1220,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"359":{"id":359,"crate_id":0,"name":"partial_cmp","span":{"filename":"src/date.rs","begin":[479,4],"end":[481,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"Date","id":162,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"Option","id":4,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"Ordering","id":112,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1594":{"id":1594,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveTime","id":202,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1886":{"id":1886,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"LocalResult","id":417,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"651":{"id":651,"crate_id":0,"name":"eq","span":{"filename":"src/format/formatting.rs","begin":[458,33],"end":[458,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"SecondsFormat","id":261,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2178":{"id":2178,"crate_id":0,"name":"hour12","span":{"filename":"src/traits.rs","begin":[274,4],"end":[281,5]},"visibility":"default","docs":"Returns the hour number from 1 to 12 with a boolean flag,\nwhich is false for AM and true for PM.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"bool"},{"primitive":"u32"}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"943":{"id":943,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":66,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":91,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"path":"Fixed","id":928,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[87,88,89],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1235":{"id":1235,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":59,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":60,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"NaiveDate","id":187,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[57],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}}},"paths":{"3997":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2762":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"4289":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_elf32_rela"],"kind":"struct"},"3054":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"3346":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"3638":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2403":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"3930":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2695":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2987":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"4222":{"crate_id":2,"path":["core","pin","PinCoerceUnsized"],"kind":"trait"},"3279":{"crate_id":18,"path":["memchr","arch","generic","memchr","Iter"],"kind":"struct"},"809":{"crate_id":0,"path":["chrono","format","Pad","Zero"],"kind":"variant"},"2044":{"crate_id":0,"path":["chrono","month","Month","April"],"kind":"variant"},"4514":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2336":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"3571":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"2628":{"crate_id":16,"path":["gimli"],"kind":"module"},"3863":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2920":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"4155":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"4447":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3212":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2269":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"3504":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"3796":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2561":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"91":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"4088":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2853":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"4380":{"crate_id":9,"path":["miniz_oxide","inflate","core","HuffmanTable"],"kind":"struct"},"3145":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"3437":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"3729":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2494":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2786":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"4021":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"3078":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"4313":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"3370":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2427":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"3662":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2719":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"3954":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"4246":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"3011":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"4538":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"3303":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2360":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3595":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"3887":{"crate_id":2,"path":["core","marker","PointerLike"],"kind":"trait"},"2652":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"4179":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2944":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"4471":{"crate_id":21,"path":["num_traits","ops","wrapping","WrappingShr"],"kind":"trait"},"3236":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"3528":{"crate_id":18,"path":["memchr","memmem","searcher","PrefilterKind"],"kind":"union"},"2293":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"3820":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2585":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2877":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"4112":{"crate_id":21,"path":["num_traits","float","FloatCore"],"kind":"trait"},"3169":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"4404":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"3461":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2518":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"48":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"3753":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2810":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"4045":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"4337":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"3102":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"3394":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"924":{"crate_id":0,"path":["chrono","format","Fixed","RFC3339"],"kind":"variant"},"3686":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2451":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"3978":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2743":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"273":{"crate_id":0,"path":["chrono","offset","utc","Utc"],"kind":"struct"},"4270":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"3035":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"565":{"crate_id":0,"path":["chrono","format","ParseError"],"kind":"struct"},"3327":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"857":{"crate_id":0,"path":["chrono","format","Numeric","Timestamp"],"kind":"variant"},"3619":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"2384":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"3911":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2676":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2968":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"4203":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"3260":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"4495":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2317":{"crate_id":5,"path":["alloc","collections","btree","set","entry","VacantEntry"],"kind":"struct"},"1082":{"crate_id":0,"path":["chrono","format","Item","OwnedSpace"],"kind":"variant"},"3552":{"crate_id":2,"path":["core","num","niche_types","I32NotAllOnes"],"kind":"struct"},"2609":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"3844":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2901":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"4136":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"4428":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1958":{"crate_id":0,"path":["chrono","weekday","Weekday","Wed"],"kind":"variant"},"3193":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"3485":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"1015":{"crate_id":0,"path":["chrono","format","OffsetPrecision","Seconds"],"kind":"variant"},"3777":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2542":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"4069":{"crate_id":11,"path":["hashbrown","raw_entry","RawVacantEntryMut"],"kind":"struct"},"2834":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"4361":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"3126":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"3418":{"crate_id":2,"path":["core","num","niche_types","UsizeNoHighBit"],"kind":"struct"},"3710":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2475":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2767":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"4002":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"3059":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"589":{"crate_id":0,"path":["chrono","datetime","MAX_DATETIME"],"kind":"constant"},"4294":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"3351":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2408":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"3643":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2700":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"3935":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"4227":{"crate_id":6,"path":["libc","unix","linux_like","statx_timestamp"],"kind":"struct"},"2992":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"4519":{"crate_id":21,"path":["num_traits","bounds","LowerBounded"],"kind":"trait"},"2049":{"crate_id":0,"path":["chrono","month","Month","September"],"kind":"variant"},"3284":{"crate_id":1,"path":["std","sync","poison","mutex","Mutex"],"kind":"struct"},"2341":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"3576":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"3868":{"crate_id":21,"path":["num_traits","ops","checked","CheckedNeg"],"kind":"trait"},"2633":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"4160":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2925":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"3217":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"4452":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"3509":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2274":{"crate_id":6,"path":["libc","unix","linux_like","linux","ptp_extts_event"],"kind":"struct"},"3801":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2566":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"96":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2858":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"4093":{"crate_id":2,"path":["core","num","niche_types","NonZeroI128Inner"],"kind":"struct"},"3150":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"4385":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"3442":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2499":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"3734":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"2791":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"4026":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"4318":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"3083":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"3375":{"crate_id":18,"path":["memchr","arch","x86_64","sse2","memchr","Three"],"kind":"struct"},"3667":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2432":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"3959":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2724":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"4251":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"3016":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"3308":{"crate_id":2,"path":["core","num","niche_types","NonZeroI32Inner"],"kind":"struct"},"838":{"crate_id":0,"path":["chrono","format","Numeric","Year"],"kind":"variant"},"4543":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"3600":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2365":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2657":{"crate_id":21,"path":["num_traits","ops","checked","CheckedAdd"],"kind":"trait"},"187":{"crate_id":0,"path":["chrono","naive","date","NaiveDate"],"kind":"struct"},"3892":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2949":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"4184":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"3241":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"4476":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2298":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"3533":{"crate_id":6,"path":["libc","unix","linux_like","linux","iw_mlme"],"kind":"struct"},"2590":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"120":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"3825":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"4117":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"2882":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"4409":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"3174":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"3466":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"3758":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2523":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"4050":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2815":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"345":{"crate_id":0,"path":["chrono","naive","isoweek","IsoWeek"],"kind":"struct"},"4342":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"3107":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"3399":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"3691":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2456":{"crate_id":2,"path":["core","range","iter","IterRangeFrom"],"kind":"struct"},"2748":{"crate_id":5,"path":["alloc","collections","btree","set","entry","Entry"],"kind":"enum"},"278":{"crate_id":0,"path":["chrono","offset","Offset"],"kind":"trait"},"3983":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"3040":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"4275":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3332":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2389":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1154":{"crate_id":0,"path":["chrono","format","ParseErrorKind","TooShort"],"kind":"variant"},"3624":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"2681":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"3916":{"crate_id":2,"path":["core","iter"],"kind":"module"},"4208":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2973":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"4500":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"3265":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"3557":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"1087":{"crate_id":0,"path":["chrono","format","Item","Fixed"],"kind":"variant"},"2322":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"3849":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"2614":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"144":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"4141":{"crate_id":5,"path":["alloc","collections","btree","set","Cursor"],"kind":"struct"},"2906":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"3198":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"4433":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"3490":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"2255":{"crate_id":2,"path":["chrono","format","ParseResult","Ok"],"kind":"variant"},"3782":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2547":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2839":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"4074":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"3131":{"crate_id":2,"path":["core","mem","forget"],"kind":"function"},"4366":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"3423":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"2480":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"3715":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2772":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"4007":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"4299":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"3064":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"3356":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"3648":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"2413":{"crate_id":2,"path":["core","core_arch","x86","bf16"],"kind":"struct"},"3940":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2705":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"4232":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2997":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"3289":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"4524":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"3581":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2346":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2638":{"crate_id":18,"path":["memchr","arch","generic","memchr","Two"],"kind":"struct"},"3873":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2930":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"4165":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"3222":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"4457":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2279":{"crate_id":1,"path":["std","sync","poison","rwlock","RwLockReadGuard"],"kind":"struct"},"3514":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2571":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"3806":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"4098":{"crate_id":2,"path":["core","core_arch","x86","__m128h"],"kind":"struct"},"2863":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"4390":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"3155":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"3447":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"3739":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2504":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"4031":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"2796":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"3088":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"618":{"crate_id":0,"path":["chrono","format","formatting","format_item"],"kind":"function"},"1853":{"crate_id":0,"path":["chrono","offset","MappedLocalTime","Single"],"kind":"variant"},"3380":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"4323":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"3672":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2437":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2729":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"3964":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"3021":{"crate_id":6,"path":["libc","unix","linux_like","linux","iw_freq"],"kind":"struct"},"4256":{"crate_id":6,"path":["libc","unix","linux_like","linux","iw_thrspy"],"kind":"struct"},"4548":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"3313":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"843":{"crate_id":0,"path":["chrono","format","Numeric","IsoYearMod100"],"kind":"variant"},"2370":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"3605":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2662":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"3897":{"crate_id":1,"path":["std","collections","hash_map"],"kind":"module"},"4189":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2954":{"crate_id":18,"path":["memchr","arch","all","packedpair","Pair"],"kind":"struct"},"4481":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2011":{"crate_id":21,"path":["num_traits","cast","FromPrimitive"],"kind":"trait"},"3246":{"crate_id":1,"path":["std","sys","sync","once_box","OnceBox"],"kind":"struct"},"3538":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2303":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"3830":{"crate_id":18,"path":["memchr","memmem","searcher","Pre"],"kind":"struct"},"2595":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"4122":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2887":{"crate_id":1,"path":["std","sync","poison","rwlock","RwLock"],"kind":"struct"},"417":{"crate_id":0,"path":["chrono","offset","LocalResult"],"kind":"enum"},"3179":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"4414":{"crate_id":5,"path":["alloc","string","IntoChars"],"kind":"struct"},"3471":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2528":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"3763":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2820":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"4055":{"crate_id":2,"path":["core","fmt","FormattingOptions"],"kind":"struct"},"3112":{"crate_id":2,"path":["core","slice","private_get_many_mut_index","Sealed"],"kind":"trait"},"4347":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"3404":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_elf32_rel"],"kind":"struct"},"2461":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"3696":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"3988":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2753":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"4280":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"3045":{"crate_id":18,"path":["memchr","arch","all","twoway","Suffix"],"kind":"struct"},"3337":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"3629":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2394":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"3921":{"crate_id":5,"path":["alloc","alloc","alloc"],"kind":"function"},"2686":{"crate_id":21,"path":["num_traits","ops","overflowing","OverflowingSub"],"kind":"trait"},"4213":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2978":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"3270":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"4505":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"3562":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2327":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2619":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"3854":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2911":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"4146":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"4438":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"3203":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2260":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"3495":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2552":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"3787":{"crate_id":2,"path":["core","num","niche_types","Nanoseconds"],"kind":"struct"},"4079":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2844":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"4371":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"3136":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"3428":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"3720":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"2485":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"4012":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2777":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"3069":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"4304":{"crate_id":2,"path":["core","num","niche_types","I64NotAllOnes"],"kind":"struct"},"3361":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"3653":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2418":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2710":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"3945":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"3002":{"crate_id":2,"path":["core","range","iter","IterRangeInclusive"],"kind":"struct"},"4237":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"4529":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"3294":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2351":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"3586":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2643":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"3878":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"4170":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2935":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"4462":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"3227":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"757":{"crate_id":0,"path":["chrono","format","parse","parse_and_remainder"],"kind":"function"},"3519":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2284":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"3811":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2576":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"4103":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2868":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"3160":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1925":{"crate_id":0,"path":["chrono","round","RoundingError","TimestampExceedsLimit"],"kind":"variant"},"4395":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"3452":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_iwreq"],"kind":"union"},"2509":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"3744":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"39":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2801":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"4036":{"crate_id":11,"path":["hashbrown","control","bitmask","BitMask"],"kind":"struct"},"3093":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"623":{"crate_id":0,"path":["chrono","format","formatting","SecondsFormat","Micros"],"kind":"variant"},"4328":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"3385":{"crate_id":5,"path":["alloc","collections","btree","set","CursorMut"],"kind":"struct"},"915":{"crate_id":0,"path":["chrono","format","Fixed","ShortWeekdayName"],"kind":"variant"},"2442":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"3677":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"3969":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2734":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"4261":{"crate_id":1,"path":["std","sys","pal","unix","linux","pidfd","PidFd"],"kind":"struct"},"3026":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"4553":{"crate_id":6,"path":["libc","unix","linux_like","linux","tpacket_rollover_stats"],"kind":"struct"},"3318":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"848":{"crate_id":0,"path":["chrono","format","Numeric","IsoWeek"],"kind":"variant"},"3610":{"crate_id":6,"path":["libc","unix","in6_addr"],"kind":"struct"},"2375":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"3902":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2667":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2959":{"crate_id":18,"path":["memchr","arch","x86_64","avx2","memchr","ThreeIter"],"kind":"struct"},"4194":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"3251":{"crate_id":1,"path":["std","fs"],"kind":"module"},"4486":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"3543":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"2308":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"2600":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"130":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"3835":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2892":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"4127":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1657":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"4419":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"3184":{"crate_id":21,"path":["num_traits","pow","Pow"],"kind":"trait"},"3476":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2533":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"3768":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"63":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"4060":{"crate_id":18,"path":["memchr","memmem","searcher","PrefilterConfig"],"kind":"enum"},"2825":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"4352":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"3117":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"3409":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"3701":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2466":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"3993":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2758":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"3050":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"4285":{"crate_id":2,"path":["core","ptr","metadata","metadata"],"kind":"function"},"3342":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2399":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"3634":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2691":{"crate_id":2,"path":["core","clone","uninit","InitializingSlice"],"kind":"struct"},"3926":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2983":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"4218":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"4510":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"3275":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"2332":{"crate_id":18,"path":["memchr","arch","x86_64","avx2","packedpair","Finder"],"kind":"struct"},"3567":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"3859":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2624":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"154":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"4151":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2916":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"4443":{"crate_id":1,"path":["std","io","PipeReader"],"kind":"struct"},"3208":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"3500":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2265":{"crate_id":11,"path":["hashbrown","control","tag","Tag"],"kind":"struct"},"3792":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2557":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"4084":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2849":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"3141":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"4376":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"3433":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2490":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"3725":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2782":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"4017":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"4309":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3074":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"3366":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2423":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"3658":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"3950":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"2715":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"4242":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"3007":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"4534":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"3299":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"3591":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2356":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"3883":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2648":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2940":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"4175":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"3232":{"crate_id":1,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"762":{"crate_id":0,"path":["chrono","format","Item","Error"],"kind":"variant"},"4467":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"3524":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2289":{"crate_id":1,"path":["std","sync","mpmc","IntoIter"],"kind":"struct"},"2581":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"3816":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2873":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"4108":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"4400":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"3165":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"3457":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"2514":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"3749":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"4041":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2806":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"4333":{"crate_id":6,"path":["libc","unix","linux_like","linux","xsk_tx_metadata_completion"],"kind":"struct"},"3098":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"3390":{"crate_id":2,"path":["core","core_arch","simd","i32x32"],"kind":"struct"},"920":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetDoubleColon"],"kind":"variant"},"3682":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"2447":{"crate_id":2,"path":["core","num","niche_types","NonZeroU32Inner"],"kind":"struct"},"3974":{"crate_id":2,"path":["core","bstr","ByteStr"],"kind":"struct"},"2739":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"269":{"crate_id":0,"path":["chrono","weekday","Weekday"],"kind":"enum"},"3031":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"4266":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"3323":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"853":{"crate_id":0,"path":["chrono","format","Numeric","Hour12"],"kind":"variant"},"4558":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2380":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"3615":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2672":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"202":{"crate_id":0,"path":["chrono","naive","time","NaiveTime"],"kind":"struct"},"3907":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2964":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"4199":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"4491":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"3256":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2313":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1078":{"crate_id":0,"path":["chrono","format","Item","OwnedLiteral"],"kind":"variant"},"3548":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"3840":{"crate_id":21,"path":["num_traits","RefNum"],"kind":"trait"},"2605":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"4132":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2897":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"4424":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"3189":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"3481":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"3773":{"crate_id":2,"path":["core","mem","replace"],"kind":"function"},"2538":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"68":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2830":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"4065":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3122":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"4357":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"3414":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2471":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"3706":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2763":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"3998":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"4290":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"3055":{"crate_id":21,"path":["num_traits","float","FloatConst"],"kind":"trait"},"585":{"crate_id":0,"path":["chrono","round","DurationRound"],"kind":"trait"},"3347":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2404":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"3639":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"3931":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2696":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"4223":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2988":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"3280":{"crate_id":21,"path":["num_traits","int","PrimInt"],"kind":"trait"},"810":{"crate_id":0,"path":["chrono","format","Pad","Space"],"kind":"variant"},"2045":{"crate_id":0,"path":["chrono","month","Month","May"],"kind":"variant"},"3572":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2337":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"4515":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"3864":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2629":{"crate_id":1,"path":["std","collections","hash","set","OccupiedEntry"],"kind":"struct"},"2921":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"4156":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"3213":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"4448":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2270":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"3505":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"2562":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"3797":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2854":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"4089":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"4381":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"3146":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"3438":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"3730":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2495":{"crate_id":18,"path":["memchr","memchr","Memchr"],"kind":"struct"},"4022":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2787":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"317":{"crate_id":0,"path":["chrono","format","strftime","StrftimeItems"],"kind":"struct"},"4314":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"3079":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"3371":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"3663":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2428":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"3955":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2720":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"3012":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"4247":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"3304":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"4539":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"2361":{"crate_id":10,"path":["adler2","Adler32"],"kind":"struct"},"3596":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2653":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"3888":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2945":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"4180":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"4472":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"3237":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","lru","Lru"],"kind":"struct"},"2294":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ptp_perout_request_1"],"kind":"union"},"3529":{"crate_id":21,"path":["num_traits","ops","inv","Inv"],"kind":"trait"},"3821":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2586":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"4113":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2878":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"4405":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"3170":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"3462":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"3754":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2519":{"crate_id":2,"path":["core","num","niche_types","NonZeroI64Inner"],"kind":"struct"},"2811":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"4046":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"3103":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"4338":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"3395":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2452":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"3687":{"crate_id":21,"path":["num_traits","ops","overflowing","OverflowingMul"],"kind":"trait"},"2744":{"crate_id":5,"path":["alloc","bstr","ByteString"],"kind":"struct"},"3979":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"4271":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","fanotify_event_info_pidfd"],"kind":"struct"},"3036":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"3328":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2385":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"1150":{"crate_id":0,"path":["chrono","format","ParseErrorKind","OutOfRange"],"kind":"variant"},"3620":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"3912":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2677":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"4204":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2969":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"3261":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"4496":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"3553":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2318":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"3845":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2610":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","max_align_t"],"kind":"struct"},"2902":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"4137":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"3194":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1959":{"crate_id":0,"path":["chrono","weekday","Weekday","Thu"],"kind":"variant"},"4429":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"3486":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"1016":{"crate_id":0,"path":["chrono","format","OffsetPrecision","OptionalMinutes"],"kind":"variant"},"2543":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","clone_args"],"kind":"struct"},"3778":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2835":{"crate_id":18,"path":["memchr","arch","x86_64","avx2","memchr","Two"],"kind":"struct"},"4070":{"crate_id":15,"path":["addr2line"],"kind":"module"},"4362":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"3127":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"3419":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3711":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2476":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"4003":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2768":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"4295":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"3060":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"3352":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"3644":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2409":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2701":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"3936":{"crate_id":6,"path":["libc","unix","linux_like","linux","epoll_params"],"kind":"struct"},"2993":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"4228":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"3285":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"2050":{"crate_id":0,"path":["chrono","month","Month","October"],"kind":"variant"},"4520":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2342":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"3577":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2634":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"3869":{"crate_id":5,"path":["alloc","boxed","convert","from","StringError"],"kind":"struct"},"4161":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2926":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"4453":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"3218":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2275":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"3510":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"3802":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2567":{"crate_id":21,"path":["num_traits","NumAssignOps"],"kind":"trait"},"4094":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2859":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"3151":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1916":{"crate_id":0,"path":["chrono","offset"],"kind":"module"},"4386":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"3443":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"3735":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"2500":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2792":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"4027":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"3084":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"4319":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"3376":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"2433":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"3668":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"2725":{"crate_id":6,"path":["libc","unix","linux_like","linux","iw_param"],"kind":"struct"},"3960":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"4252":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"3017":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"4544":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous__kernel_fsid_t"],"kind":"struct"},"2074":{"crate_id":0,"path":["chrono","month","ParseMonthError"],"kind":"struct"},"839":{"crate_id":0,"path":["chrono","format","Numeric","YearDiv100"],"kind":"variant"},"3309":{"crate_id":1,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"3601":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2366":{"crate_id":1,"path":["std","collections","hash","set","VacantEntry"],"kind":"struct"},"3893":{"crate_id":18,"path":["memchr","arch","x86_64","sse2","memchr","One"],"kind":"struct"},"2658":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"4185":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2950":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"3242":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"4477":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"3534":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"2299":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"3826":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2591":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2883":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"enum"},"413":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetColonZ"],"kind":"variant"},"4118":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"3175":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"4410":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"3467":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2524":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"54":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"3759":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2816":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"4051":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"4343":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"3108":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"3400":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"3692":{"crate_id":6,"path":["libc","unix","linux_like","linux","xsk_tx_metadata"],"kind":"struct"},"1222":{"crate_id":0,"path":["chrono","naive","date","NaiveDateWeeksIterator"],"kind":"struct"},"2457":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"3984":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2749":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"4276":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"3041":{"crate_id":2,"path":["core","ffi","va_list","VaList"],"kind":"struct"},"3333":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"3625":{"crate_id":1,"path":["std","sync","poison","condvar","WaitTimeoutResult"],"kind":"struct"},"1155":{"crate_id":0,"path":["chrono","format","ParseErrorKind","TooLong"],"kind":"variant"},"2390":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2682":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"3917":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2974":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"4209":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"3266":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"4501":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2323":{"crate_id":6,"path":["libc","unix","linux_like","linux","tpacket_req"],"kind":"struct"},"3558":{"crate_id":21,"path":["num_traits","ops","wrapping","WrappingShl"],"kind":"trait"},"2615":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"3850":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"4142":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2907":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"4434":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"3199":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2256":{"crate_id":2,"path":["chrono","format","ParseResult","Err"],"kind":"variant"},"3491":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"3783":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2548":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"78":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"4075":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2840":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"3132":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"4367":{"crate_id":2,"path":["core","core_arch","simd","f16x8"],"kind":"struct"},"3424":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2189":{"crate_id":0,"path":["chrono","Duration"],"kind":"type_alias"},"3716":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"2481":{"crate_id":2,"path":["core","num","niche_types","NonZeroI8Inner"],"kind":"struct"},"2773":{"crate_id":2,"path":["core","mem","take"],"kind":"function"},"4008":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"3065":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"4300":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"3357":{"crate_id":9,"path":["miniz_oxide","inflate","output_buffer","InputWrapper"],"kind":"struct"},"2414":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"3649":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2706":{"crate_id":2,"path":["core","range","RangeInclusive"],"kind":"struct"},"3941":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"4233":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2998":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"4525":{"crate_id":2,"path":["core","random","RandomSource"],"kind":"trait"},"3290":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"3582":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"2347":{"crate_id":2,"path":["core","fmt","builders","FromFn"],"kind":"struct"},"3874":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2639":{"crate_id":21,"path":["num_traits","NumOps"],"kind":"trait"},"4166":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2931":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"3223":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1988":{"crate_id":0,"path":["chrono","weekday","ParseWeekdayError"],"kind":"struct"},"4458":{"crate_id":1,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"3515":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1045":{"crate_id":0,"path":["chrono","format","Colons","None"],"kind":"variant"},"2280":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2572":{"crate_id":1,"path":["std","sync","poison","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"3807":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2864":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ptp_perout_request_2"],"kind":"union"},"4099":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"3156":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"4391":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"3448":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2505":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"3740":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"4032":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2797":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"4324":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"3089":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"619":{"crate_id":0,"path":["chrono","format","formatting","SecondsFormat","Secs"],"kind":"variant"},"3381":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"3673":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2438":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"3965":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2730":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"3022":{"crate_id":1,"path":["std","sync","mpmc","TryIter"],"kind":"struct"},"4257":{"crate_id":18,"path":["memchr","memmem","searcher","Prefilter"],"kind":"struct"},"3314":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"844":{"crate_id":0,"path":["chrono","format","Numeric","Month"],"kind":"variant"},"4549":{"crate_id":2,"path":["core","env"],"kind":"macro"},"3606":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2371":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2663":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"3898":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2955":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1720":{"crate_id":0,"path":["chrono","naive"],"kind":"module"},"4190":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"4482":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"3247":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2304":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"3539":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2596":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"126":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"3831":{"crate_id":1,"path":["std","sync","mpmc","Iter"],"kind":"struct"},"4123":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"2888":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"4415":{"crate_id":18,"path":["memchr"],"kind":"module"},"3180":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"3472":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"3764":{"crate_id":18,"path":["memchr","arch","x86_64","avx2","memchr","Three"],"kind":"struct"},"2529":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","fanotify_event_info_error"],"kind":"struct"},"59":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"4056":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2821":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"3113":{"crate_id":10,"path":["adler2","algo","U32X4"],"kind":"struct"},"4348":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"3405":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"3697":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2462":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2754":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"3989":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"3046":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"4281":{"crate_id":21,"path":["num_traits","ops","wrapping","WrappingSub"],"kind":"trait"},"3338":{"crate_id":21,"path":["num_traits","ops","wrapping","WrappingAdd"],"kind":"trait"},"2395":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"3630":{"crate_id":11,"path":["hashbrown","table","IterHashMut"],"kind":"struct"},"2687":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"3922":{"crate_id":6,"path":["libc","unix","linux_like","linux","iw_pmksa"],"kind":"struct"},"4214":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2979":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"4506":{"crate_id":2,"path":["core","range","iter","IterRange"],"kind":"struct"},"3271":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"3563":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2328":{"crate_id":21,"path":["num_traits","bounds","UpperBounded"],"kind":"trait"},"3855":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2620":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"4147":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2912":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"3204":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"4439":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"3496":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2261":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2553":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"3788":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2845":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"4080":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"3137":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"4372":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"3429":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2486":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"3721":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"4013":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2778":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"4305":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3070":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"3362":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"3654":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1184":{"crate_id":0,"path":["chrono","format"],"kind":"module"},"2419":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"3946":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2711":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"3003":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"4238":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"3295":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"4530":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"3587":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1117":{"crate_id":0,"path":["chrono","format","ParseErrorKind"],"kind":"enum"},"2352":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2644":{"crate_id":6,"path":["libc","unix","linux_like","linux","tpacket3_hdr"],"kind":"struct"},"174":{"crate_id":0,"path":["chrono","datetime","DateTime"],"kind":"struct"},"3879":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"2936":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"4171":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"4463":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_info_header"],"kind":"struct"},"3228":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2285":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"3520":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2577":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"3812":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"4104":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2869":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"4396":{"crate_id":18,"path":["memchr","arch","x86_64","avx2","memchr","TwoIter"],"kind":"struct"},"3161":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"3453":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"983":{"crate_id":0,"path":["chrono","format","Colons"],"kind":"enum"},"3745":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2510":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"40":{"crate_id":0,"path":["chrono","time_delta","OutOfRangeError"],"kind":"struct"},"4037":{"crate_id":1,"path":["std","random","DefaultRandomSource"],"kind":"struct"},"2802":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"3094":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"624":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond9"],"kind":"variant"},"4329":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"3386":{"crate_id":18,"path":["memchr","memmem","searcher","SearcherRevKind"],"kind":"enum"},"916":{"crate_id":0,"path":["chrono","format","Fixed","LongWeekdayName"],"kind":"variant"},"2443":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"3678":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2735":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"265":{"crate_id":0,"path":["chrono","month","Month"],"kind":"enum"},"3970":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"3027":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"4262":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"4554":{"crate_id":18,"path":["memchr","arch","all","twoway","ApproximateByteSet"],"kind":"struct"},"3319":{"crate_id":20,"path":["iana_time_zone","GetTimezoneError"],"kind":"enum"},"849":{"crate_id":0,"path":["chrono","format","Numeric","NumDaysFromSun"],"kind":"variant"},"2376":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"3611":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"3903":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2668":{"crate_id":2,"path":["core","range","Range"],"kind":"struct"},"4195":{"crate_id":6,"path":["libc","unix","linux_like","linux","ptp_pin_desc"],"kind":"struct"},"2960":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"4487":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"3252":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"3544":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2309":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"3836":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2601":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2893":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"4128":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"3185":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"4420":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"3477":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"2534":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"3769":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2826":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"4061":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"4353":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"3118":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"3410":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2467":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"3702":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"3994":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2759":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"4286":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"3051":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"3343":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"3635":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2400":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"3927":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"2692":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2984":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"4219":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"3276":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2041":{"crate_id":0,"path":["chrono","month","Month","January"],"kind":"variant"},"4511":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"3568":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"2333":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2625":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"3860":{"crate_id":6,"path":["libc","unix","linux_like","linux","iw_discarded"],"kind":"struct"},"2917":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"4152":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"4444":{"crate_id":21,"path":["num_traits","float","TotalOrder"],"kind":"trait"},"3209":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2266":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"3501":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2558":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"3793":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"4085":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2850":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"4377":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"3142":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"3434":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"3726":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2491":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"4018":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"2783":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"313":{"crate_id":0,"path":["chrono","format","formatting","DelayedFormat"],"kind":"struct"},"3075":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"4310":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"3367":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2424":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"3659":{"crate_id":6,"path":["libc","unix","linux_like","linux","iw_pmkid_cand"],"kind":"struct"},"2716":{"crate_id":18,"path":["memchr","arch","all","memchr","Three"],"kind":"struct"},"3951":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"3008":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"4243":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"4535":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"3300":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2357":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"3592":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","tcp_info"],"kind":"struct"},"3884":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"2649":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"4176":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"2941":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"4468":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"3233":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"3525":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2290":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"3817":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2582":{"crate_id":11,"path":["hashbrown","table","IterHash"],"kind":"struct"},"112":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2874":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"404":{"crate_id":0,"path":["chrono","naive","Days"],"kind":"struct"},"4109":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3166":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"4401":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"3458":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2515":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"3750":{"crate_id":6,"path":["libc","unix","linux_like","linux","iw_priv_args"],"kind":"struct"},"2807":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"4042":{"crate_id":2,"path":["core"],"kind":"module"},"4334":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"3099":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"3391":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"921":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetTripleColon"],"kind":"variant"},"2448":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3683":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"3975":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2740":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"4267":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"3032":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"3324":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"854":{"crate_id":0,"path":["chrono","format","Numeric","Minute"],"kind":"variant"},"4559":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"3616":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"2381":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"3908":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2673":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2965":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"4200":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"3257":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"4492":{"crate_id":11,"path":["hashbrown","raw","ProbeSeq"],"kind":"struct"},"2314":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"3549":{"crate_id":21,"path":["num_traits","Num"],"kind":"trait"},"2606":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"3841":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2898":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"4133":{"crate_id":11,"path":["hashbrown","raw_entry","RawOccupiedEntryMut"],"kind":"struct"},"4425":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1955":{"crate_id":0,"path":["chrono","round"],"kind":"module"},"3190":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3482":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"3774":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2539":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"4066":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2831":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"4358":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"3123":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"3415":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"3707":{"crate_id":21,"path":["num_traits","identities","Zero"],"kind":"trait"},"2472":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2":{"crate_id":0,"path":["chrono","time_delta","TimeDelta"],"kind":"struct"},"2764":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"3999":{"crate_id":11,"path":["hashbrown","control","group","sse2","Group"],"kind":"struct"},"3056":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"4291":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"3348":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2405":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"3640":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2697":{"crate_id":6,"path":["libc","unix","linux_like","linux","mount_attr"],"kind":"struct"},"3932":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"4224":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2989":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"4516":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"2046":{"crate_id":0,"path":["chrono","month","Month","June"],"kind":"variant"},"811":{"crate_id":0,"path":["chrono","format","Pad"],"kind":"enum"},"3281":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2338":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"3573":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3865":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2630":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"4157":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"2922":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"4449":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"3214":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"3506":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2271":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"3798":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2563":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"93":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2855":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"4090":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"3147":{"crate_id":1,"path":["std"],"kind":"module"},"677":{"crate_id":0,"path":["chrono","format","Fixed","RFC2822"],"kind":"variant"},"4382":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"3439":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2496":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"3731":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2788":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"4023":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"4315":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"3080":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"3372":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2429":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"3664":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"3956":{"crate_id":21,"path":["num_traits","ops","checked","CheckedShr"],"kind":"trait"},"2721":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"4248":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_xsk_tx_metadata_union"],"kind":"union"},"3013":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"3305":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"4540":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"3597":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2362":{"crate_id":6,"path":["libc","unix","linux_like","linux","iw_event"],"kind":"struct"},"3889":{"crate_id":6,"path":["libc","unix","linux_like","linux","tpacket_req3"],"kind":"struct"},"2654":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2946":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"4181":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3238":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_info_fid"],"kind":"struct"},"768":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"4473":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2295":{"crate_id":18,"path":["memchr","arch","all","memchr","One"],"kind":"struct"},"3530":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2587":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"117":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"3822":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2879":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"4114":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"4406":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"3171":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"3463":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"3755":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"2520":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"50":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"4047":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2812":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"4339":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"3104":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"3396":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"926":{"crate_id":0,"path":["chrono","format","InternalFixed"],"kind":"struct"},"3688":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2453":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2745":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"3980":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"3037":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"4272":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"3329":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"859":{"crate_id":0,"path":["chrono","format","InternalNumeric"],"kind":"struct"},"2386":{"crate_id":17,"path":["object","elf","Relr32"],"kind":"struct"},"1151":{"crate_id":0,"path":["chrono","format","ParseErrorKind","Impossible"],"kind":"variant"},"3621":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2678":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3913":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"4205":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2970":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"4497":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"3262":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"2319":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"3554":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"3846":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2611":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"141":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"4138":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2903":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"3195":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1960":{"crate_id":0,"path":["chrono","weekday","Weekday","Fri"],"kind":"variant"},"4430":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"3487":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1017":{"crate_id":0,"path":["chrono","format","OffsetPrecision","OptionalSeconds"],"kind":"variant"},"2252":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"3779":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2544":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2836":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"4071":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"3128":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"4363":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"3420":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2477":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"3712":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2769":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"4004":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"4296":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"3061":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"3353":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"3645":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sem_t"],"kind":"struct"},"2410":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"3937":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"2702":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"4229":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2994":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"3286":{"crate_id":6,"path":["libc","unix","linux_like","linux","tpacket_block_desc"],"kind":"struct"},"2051":{"crate_id":0,"path":["chrono","month","Month","November"],"kind":"variant"},"4521":{"crate_id":21,"path":["num_traits","ops","euclid","Euclid"],"kind":"trait"},"3578":{"crate_id":2,"path":["core","core_arch","x86","__m256h"],"kind":"struct"},"2343":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2635":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"165":{"crate_id":0,"path":["chrono","offset","TimeZone"],"kind":"trait"},"3870":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2927":{"crate_id":21,"path":["num_traits","ops","mul_add","MulAdd"],"kind":"trait"},"4162":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"3219":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"4454":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2276":{"crate_id":18,"path":["memchr","memmem","searcher","Searcher"],"kind":"struct"},"3511":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2568":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"3803":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"4095":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2860":{"crate_id":1,"path":["std","sync","lazy_lock","force_mut","really_init_mut","PoisonOnPanic"],"kind":"struct"},"4387":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"3152":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"3444":{"crate_id":16,"path":["gimli","read","dwarf","UnitRef"],"kind":"struct"},"3736":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2501":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"4028":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2793":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"4320":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"3085":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"3377":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"3669":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2434":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"2726":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"256":{"crate_id":0,"path":["chrono","offset","local","Local"],"kind":"struct"},"3961":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"3018":{"crate_id":21,"path":["num_traits","ops","mul_add","MulAddAssign"],"kind":"trait"},"4253":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"3310":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"4545":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"840":{"crate_id":0,"path":["chrono","format","Numeric","YearMod100"],"kind":"variant"},"2367":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"3602":{"crate_id":17,"path":["object","elf","Relr64"],"kind":"struct"},"2659":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"3894":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"4186":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2951":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"4478":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"3243":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2300":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"3535":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"3827":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2592":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"122":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"4119":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"2884":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"414":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetColon"],"kind":"variant"},"3176":{"crate_id":18,"path":["memchr","arch","all","twoway","SuffixKind"],"kind":"enum"},"4411":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"3468":{"crate_id":6,"path":["libc","unix","linux_like","linux","tpacket_bd_ts"],"kind":"struct"},"3760":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2525":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2817":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"4052":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"3109":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"4344":{"crate_id":2,"path":["core","write"],"kind":"macro"},"3401":{"crate_id":18,"path":["memchr","arch","all","twoway","SuffixOrdering"],"kind":"enum"},"2458":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1223":{"crate_id":0,"path":["chrono","naive","NaiveWeek"],"kind":"struct"},"3693":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2750":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"3985":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"4277":{"crate_id":2,"path":["core","num","niche_types","U32NotAllOnes"],"kind":"struct"},"3042":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"3334":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"3626":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1156":{"crate_id":0,"path":["chrono","format","ParseErrorKind","BadFormat"],"kind":"variant"},"2391":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"3918":{"crate_id":18,"path":["memchr","arch","all","twoway","FinderRev"],"kind":"struct"},"2683":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"4210":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2975":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"3267":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"4502":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"3559":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2324":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2616":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"3851":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2908":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"4143":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"3200":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"4435":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2257":{"crate_id":6,"path":["libc","unix","linux_like","linux","iw_michaelmicfailure"],"kind":"struct"},"3492":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2549":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"3784":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"4076":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2841":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"4368":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"3133":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3425":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"3717":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2482":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"4009":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"2774":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"3066":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"4301":{"crate_id":17,"path":["object","read","elf","relocation","RelrIterator"],"kind":"struct"},"3358":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"3650":{"crate_id":21,"path":["num_traits","identities","ConstOne"],"kind":"trait"},"2415":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2707":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"3942":{"crate_id":6,"path":["libc","unix","linux_like","linux","iw_range"],"kind":"struct"},"2999":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"4234":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"4526":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"3291":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2348":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"3583":{"crate_id":6,"path":["libc","unix","linux_like","linux","ptp_clock_caps"],"kind":"struct"},"2640":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"3875":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"4167":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2932":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"4459":{"crate_id":1,"path":["std","env"],"kind":"module"},"3224":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"3516":{"crate_id":1,"path":["std","sys","exit_guard","PThread"],"kind":"struct"},"1046":{"crate_id":0,"path":["chrono","format","Colons","Colon"],"kind":"variant"},"2281":{"crate_id":13,"path":["std_detect"],"kind":"module"},"3808":{"crate_id":18,"path":["memchr","arch","generic","memchr","One"],"kind":"struct"},"2573":{"crate_id":6,"path":["libc","unix","linux_like","linux","tpacket_req_u"],"kind":"union"},"103":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1338":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2865":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"4100":{"crate_id":21,"path":["num_traits","ops","bytes","ToBytes"],"kind":"trait"},"3157":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"4392":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"3449":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2506":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"3741":{"crate_id":2,"path":["core","core_arch","simd","u16x64"],"kind":"struct"},"2798":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"4033":{"crate_id":20,"path":["iana_time_zone","platform","openwrt","IterWords"],"kind":"struct"},"3090":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"620":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond3"],"kind":"variant"},"4325":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"3382":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2439":{"crate_id":18,"path":["memchr","arch","x86_64","sse2","memchr","Two"],"kind":"struct"},"3674":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"3966":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2731":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"261":{"crate_id":0,"path":["chrono","format","formatting","SecondsFormat"],"kind":"enum"},"4258":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"3023":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"4550":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"3315":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"845":{"crate_id":0,"path":["chrono","format","Numeric","Day"],"kind":"variant"},"3607":{"crate_id":6,"path":["libc","unix","linux_like","linux","iw_missed"],"kind":"struct"},"2372":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"3899":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2664":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"4191":{"crate_id":21,"path":["num_traits","ops","bytes","FromBytes"],"kind":"trait"},"2956":{"crate_id":6,"path":["libc"],"kind":"module"},"3248":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"4483":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"3540":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2305":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2597":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3832":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"2889":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"4124":{"crate_id":21,"path":["num_traits","ops","checked","CheckedSub"],"kind":"trait"},"3181":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"4416":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"3473":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2530":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"60":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"3765":{"crate_id":2,"path":["core","fmt","DebugAsHex"],"kind":"enum"},"4057":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2822":{"crate_id":21,"path":["num_traits","cast","AsPrimitive"],"kind":"trait"},"4349":{"crate_id":18,"path":["memchr","arch","all","rabinkarp","Hash"],"kind":"struct"},"3114":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"3406":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"3698":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2463":{"crate_id":1,"path":["std","sync","poison","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"3990":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2755":{"crate_id":1,"path":["std","sys","pal","unix","fs","cfm","CachedFileMetadata"],"kind":"struct"},"3047":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"4282":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"3339":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"3631":{"crate_id":3,"path":["compiler_builtins","int","big","i256"],"kind":"struct"},"2396":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"2688":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"3923":{"crate_id":6,"path":["libc","unix","linux_like","linux","tpacket_hdr"],"kind":"struct"},"2980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"4215":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"4507":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"3272":{"crate_id":2,"path":["core","num","niche_types","NonZeroU128Inner"],"kind":"struct"},"2329":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"3564":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2621":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"3856":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"4148":{"crate_id":2,"path":["core","core_arch","simd","f16x16"],"kind":"struct"},"2913":{"crate_id":1,"path":["std","sync","poison","mutex","MutexGuard"],"kind":"struct"},"4440":{"crate_id":18,"path":["memchr","arch","generic","packedpair","Finder"],"kind":"struct"},"3205":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"3497":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2262":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3789":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2554":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"84":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"4081":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2846":{"crate_id":2,"path":["core","ffi","va_list","VaListImpl"],"kind":"struct"},"3138":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"4373":{"crate_id":6,"path":["libc","unix","linux_like","linux","ptp_sys_offset_precise"],"kind":"struct"},"3430":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2487":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"3722":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2779":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"4014":{"crate_id":15,"path":["addr2line","unit","LocationRangeIter"],"kind":"struct"},"3071":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"4306":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"3363":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2420":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"3655":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"3947":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2712":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"4239":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"3004":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"4531":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"3296":{"crate_id":18,"path":["memchr","arch","all","rabinkarp","FinderRev"],"kind":"struct"},"3588":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2353":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"3880":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2645":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"2937":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"4172":{"crate_id":1,"path":["std","sync","poison","condvar","Condvar"],"kind":"struct"},"3229":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"4464":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"3521":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2286":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2578":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"108":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"3813":{"crate_id":2,"path":["core","ops","deref","Receiver"],"kind":"trait"},"2870":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"4105":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"4397":{"crate_id":5,"path":["alloc"],"kind":"module"},"3162":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"3454":{"crate_id":2,"path":["core","fmt","Sign"],"kind":"enum"},"2511":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"3746":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"4038":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2803":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"4330":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"3095":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"625":{"crate_id":0,"path":["chrono","format","formatting","SecondsFormat","Nanos"],"kind":"variant"},"3387":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"917":{"crate_id":0,"path":["chrono","format","Fixed","LowerAmPm"],"kind":"variant"},"3679":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2444":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"3971":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2736":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"3028":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"4263":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"3320":{"crate_id":11,"path":["hashbrown","raw_entry","RawEntryBuilder"],"kind":"struct"},"850":{"crate_id":0,"path":["chrono","format","Numeric","WeekdayFromMon"],"kind":"variant"},"4555":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2377":{"crate_id":1,"path":["std","sync","poison","rwlock","RwLockWriteGuard"],"kind":"struct"},"3612":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2669":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"3904":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2961":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"4196":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"4488":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"3253":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2310":{"crate_id":18,"path":["memchr","memmem","searcher","SearcherRev"],"kind":"struct"},"1075":{"crate_id":0,"path":["chrono","format","Item","Literal"],"kind":"variant"},"3545":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"3837":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2602":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"4129":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2894":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"4421":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"3186":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"3478":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"3770":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2535":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"4062":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2827":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"3119":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"4354":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"3411":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2468":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3703":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2760":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"3995":{"crate_id":2,"path":["core","num","niche_types","NonZeroU8Inner"],"kind":"struct"},"3052":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"4287":{"crate_id":6,"path":["libc","unix","linux_like","linux","iw_point"],"kind":"struct"},"3344":{"crate_id":1,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"2401":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"3636":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"3928":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2693":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"4220":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2985":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"4512":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2042":{"crate_id":0,"path":["chrono","month","Month","February"],"kind":"variant"},"3277":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"3569":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2334":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"3861":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2626":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"156":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2918":{"crate_id":21,"path":["num_traits","ops","wrapping","WrappingMul"],"kind":"trait"},"4153":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"3210":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"4445":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"3502":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2267":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2559":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"3794":{"crate_id":2,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"2851":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"4086":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"4378":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"3143":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"3435":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"2492":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"3727":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"4019":{"crate_id":6,"path":["libc","unix","linux_like","linux","iwreq"],"kind":"struct"},"2784":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"314":{"crate_id":0,"path":["chrono","format","Item"],"kind":"enum"},"4311":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"3076":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"3368":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"3660":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2425":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"3952":{"crate_id":6,"path":["libc","unix","linux_like","linux","ptp_perout_request"],"kind":"struct"},"2717":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"3009":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"4244":{"crate_id":18,"path":["memchr","arch","x86_64","sse2","packedpair","Finder"],"kind":"struct"},"3301":{"crate_id":3,"path":["compiler_builtins","int","big","u256"],"kind":"struct"},"4536":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2358":{"crate_id":1,"path":["std","sync","poison","once","OnceState"],"kind":"struct"},"3593":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"2650":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"3885":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2942":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"4177":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"4469":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"3234":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2291":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"3526":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"3818":{"crate_id":5,"path":["alloc","rc","UniqueRcUninit"],"kind":"struct"},"2583":{"crate_id":16,"path":["gimli","read","index","IndexSectionId"],"kind":"enum"},"4110":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2875":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"4402":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"3167":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"3459":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"3751":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2516":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"46":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2808":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"4043":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"3100":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"4335":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"3392":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"922":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffset"],"kind":"variant"},"2449":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"3684":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"2741":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"271":{"crate_id":0,"path":["chrono","offset","fixed","FixedOffset"],"kind":"struct"},"3976":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"4268":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"3033":{"crate_id":18,"path":["memchr","memmem","searcher","TwoWayWithPrefilter"],"kind":"struct"},"4560":{"crate_id":18,"path":["memchr","memmem","searcher","PrefilterState"],"kind":"struct"},"3325":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"855":{"crate_id":0,"path":["chrono","format","Numeric","Second"],"kind":"variant"},"2382":{"crate_id":6,"path":["libc","unix","linux_like","linux","iw_statistics"],"kind":"struct"},"3617":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"3909":{"crate_id":21,"path":["num_traits","sign","Unsigned"],"kind":"trait"},"2674":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"4201":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2966":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"3258":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"4493":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"3550":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1080":{"crate_id":0,"path":["chrono","format","Item","Space"],"kind":"variant"},"2315":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"3842":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2607":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2899":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"4134":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"3191":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1956":{"crate_id":0,"path":["chrono","weekday","Weekday","Mon"],"kind":"variant"},"4426":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"3483":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1013":{"crate_id":0,"path":["chrono","format","OffsetPrecision","Hours"],"kind":"variant"},"2540":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"3775":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2832":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"4067":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"4359":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"3124":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"3416":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"3708":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"2473":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"4000":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2765":{"crate_id":21,"path":["num_traits","ops","checked","CheckedMul"],"kind":"trait"},"4292":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"3057":{"crate_id":21,"path":["num_traits","bounds","Bounded"],"kind":"trait"},"3349":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"3641":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2406":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"3933":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"2698":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2990":{"crate_id":2,"path":["core","core_arch","simd","u32x32"],"kind":"struct"},"4225":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"3282":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2047":{"crate_id":0,"path":["chrono","month","Month","July"],"kind":"variant"},"4517":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2339":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"3574":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2631":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"3866":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2923":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"4158":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"4450":{"crate_id":1,"path":["std","io"],"kind":"module"},"3215":{"crate_id":2,"path":["core","marker","ConstParamTy_"],"kind":"trait"},"2272":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"3507":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"3799":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2564":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"4091":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2856":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"4383":{"crate_id":21,"path":["num_traits","cast","ToPrimitive"],"kind":"trait"},"3148":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"678":{"crate_id":0,"path":["chrono","format","parse","parse"],"kind":"function"},"3440":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"3732":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2497":{"crate_id":21,"path":["num_traits","ops","checked","CheckedShl"],"kind":"trait"},"2789":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"4024":{"crate_id":2,"path":["core","num","niche_types","NonZeroU64Inner"],"kind":"struct"},"3081":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"4316":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"3373":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2430":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"3665":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2722":{"crate_id":1,"path":["std","sync","poison","once","Once"],"kind":"struct"},"3957":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"4249":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"3014":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"4541":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"3306":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2363":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"3598":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"3890":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2655":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"4182":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2947":{"crate_id":11,"path":["hashbrown","raw_entry","RawEntryMut"],"kind":"enum"},"3239":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"4474":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"3531":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2296":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"3823":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2588":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2880":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"4115":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"3172":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"4407":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"3464":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2521":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"3756":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2813":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"4048":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"4340":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"3105":{"crate_id":18,"path":["memchr","arch","x86_64","sse2","memchr","OneIter"],"kind":"struct"},"3397":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"927":{"crate_id":0,"path":["chrono","format","Fixed","Internal"],"kind":"variant"},"3689":{"crate_id":6,"path":["libc","unix","linux_like","linux","iw_scan_req"],"kind":"struct"},"2454":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"3981":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2746":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"4273":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"3038":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"568":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"3330":{"crate_id":21,"path":["num_traits","identities","ConstZero"],"kind":"trait"},"860":{"crate_id":0,"path":["chrono","format","Numeric","Internal"],"kind":"variant"},"3622":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1152":{"crate_id":0,"path":["chrono","format","ParseErrorKind","NotEnough"],"kind":"variant"},"2387":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2679":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"3914":{"crate_id":6,"path":["libc","unix","linux_like","linux","tpacket_stats_v3"],"kind":"struct"},"2971":{"crate_id":21,"path":["num_traits","sign","Signed"],"kind":"trait"},"4206":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"3263":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"4498":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2320":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"1085":{"crate_id":0,"path":["chrono","format","Item","Numeric"],"kind":"variant"},"3555":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2612":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"3847":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"4139":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2904":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"4431":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1961":{"crate_id":0,"path":["chrono","weekday","Weekday","Sat"],"kind":"variant"},"3196":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"3488":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1018":{"crate_id":0,"path":["chrono","format","OffsetPrecision","OptionalMinutesAndSeconds"],"kind":"variant"},"3780":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2545":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"75":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"4072":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2837":{"crate_id":18,"path":["memchr","memmem","searcher","SearcherKind"],"kind":"union"},"3129":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"4364":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"3421":{"crate_id":18,"path":["memchr","arch","all","memchr","TwoIter"],"kind":"struct"},"3713":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2478":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2770":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"4005":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"3062":{"crate_id":5,"path":["alloc","collections","btree","set","CursorMutKey"],"kind":"struct"},"4297":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"3354":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2411":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"3646":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2703":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"3938":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"4230":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2995":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"4522":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2052":{"crate_id":0,"path":["chrono","month","Month","December"],"kind":"variant"},"3287":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"3579":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2344":{"crate_id":18,"path":["memchr","arch","all","twoway","Finder"],"kind":"struct"},"3871":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2636":{"crate_id":6,"path":["libc","unix","linux_like","statx"],"kind":"struct"},"4163":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2928":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"3220":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"4455":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"3512":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2277":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"3804":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2569":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2861":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"4096":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"3153":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"4388":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"3445":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2502":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"3737":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2794":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"4029":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"4321":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"3086":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"3378":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"3670":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2435":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"3962":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2727":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"4254":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"3019":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"3311":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"841":{"crate_id":0,"path":["chrono","format","Numeric","IsoYear"],"kind":"variant"},"4546":{"crate_id":6,"path":["libc","unix","linux_like","linux","ptp_sys_offset_extended"],"kind":"struct"},"3603":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"2368":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2660":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"3895":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"2952":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"4187":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3244":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"4479":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2301":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"3536":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2593":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"3828":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"4120":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2885":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"4412":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"3177":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"3469":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"3761":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2526":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"56":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"4053":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2818":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"3110":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"4345":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"3402":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"3694":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2459":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2751":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"281":{"crate_id":0,"path":["chrono","prelude"],"kind":"module"},"3986":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"3043":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"573":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"4278":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"3335":{"crate_id":6,"path":["libc","unix","linux_like","linux","tpacket_stats"],"kind":"struct"},"2392":{"crate_id":21,"path":["num_traits","ops","checked","CheckedRem"],"kind":"trait"},"3627":{"crate_id":21,"path":["num_traits","cast","NumCast"],"kind":"trait"},"2684":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"3919":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"4211":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2976":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"4503":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"3268":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"3560":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"2325":{"crate_id":2,"path":["core","str","pattern","Utf8Pattern"],"kind":"enum"},"3852":{"crate_id":6,"path":["libc","unix","linux_like","linux","tpacket2_hdr"],"kind":"struct"},"1382":{"crate_id":0,"path":["chrono","naive","datetime","MIN_DATETIME"],"kind":"constant"},"2617":{"crate_id":2,"path":["core","num","niche_types","NonZeroUsizeInner"],"kind":"struct"},"4144":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"2909":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"3201":{"crate_id":2,"path":["core","random","Random"],"kind":"trait"},"4436":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"3493":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2258":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2550":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"80":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"3785":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"2842":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"372":{"crate_id":0,"path":["chrono","date","MIN_DATE"],"kind":"constant"},"4077":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"3134":{"crate_id":18,"path":["memchr","arch","all","twoway","TwoWay"],"kind":"struct"},"4369":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"3426":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2483":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"3718":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"4010":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2775":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"4302":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"3067":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"3359":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"3651":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2416":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"3943":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2708":{"crate_id":18,"path":["memchr","memchr","Memchr2"],"kind":"struct"},"3000":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"4235":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"3292":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"4527":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"3584":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2349":{"crate_id":18,"path":["memchr","vector","SensibleMoveMask"],"kind":"struct"},"2641":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"3876":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2933":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"4168":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"4460":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"3225":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2282":{"crate_id":6,"path":["libc","unix","linux_like","linux","tpacket_hdr_variant1"],"kind":"struct"},"1047":{"crate_id":0,"path":["chrono","format","Colons","Maybe"],"kind":"variant"},"3517":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2574":{"crate_id":5,"path":["alloc","collections","btree","set","entry","OccupiedEntry"],"kind":"struct"},"3809":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"4101":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"2866":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"4393":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1923":{"crate_id":0,"path":["chrono","round","RoundingError","DurationExceedsTimestamp"],"kind":"variant"},"3158":{"crate_id":2,"path":["core","str"],"kind":"module"},"3450":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"3742":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2507":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"4034":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"2799":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"3091":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"621":{"crate_id":0,"path":["chrono","format","formatting","SecondsFormat","Millis"],"kind":"variant"},"1856":{"crate_id":0,"path":["chrono","offset","MappedLocalTime","Ambiguous"],"kind":"variant"},"3383":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"913":{"crate_id":0,"path":["chrono","format","Fixed","ShortMonthName"],"kind":"variant"},"4326":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"3675":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2440":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2732":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"3967":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3024":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_elf64_rela"],"kind":"struct"},"4259":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"4551":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"3316":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"846":{"crate_id":0,"path":["chrono","format","Numeric","WeekFromSun"],"kind":"variant"},"2373":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"3608":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2665":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"3900":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"4192":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2957":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"4484":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"3249":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"3541":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2306":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"3833":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"2598":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"4125":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2890":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"3182":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"4417":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"3474":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2531":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1296":{"crate_id":0,"path":["chrono","naive","date","MIN_DATE"],"kind":"constant"},"3766":{"crate_id":21,"path":["num_traits","ops","checked","CheckedDiv"],"kind":"trait"},"2823":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"4058":{"crate_id":2,"path":["core","num","niche_types","NonZeroI16Inner"],"kind":"struct"},"3115":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"4350":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"3407":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2464":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"3699":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"3991":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2756":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"4283":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"3048":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"3340":{"crate_id":15,"path":["addr2line","unit","SupUnits"],"kind":"struct"},"3632":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2397":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"3924":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"2689":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2981":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"4216":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"3273":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"4508":{"crate_id":18,"path":["memchr","arch","all","rabinkarp","Finder"],"kind":"struct"},"3565":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2330":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2622":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"152":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"3857":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"2914":{"crate_id":2,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"4149":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"4441":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"3206":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2263":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"3498":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2555":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"3790":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"4082":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2847":{"crate_id":18,"path":["memchr","arch","all","twoway","Shift"],"kind":"enum"},"4374":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"3139":{"crate_id":2,"path":["core","core_arch","simd","f16x32"],"kind":"struct"},"3431":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"3723":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2488":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"4015":{"crate_id":18,"path":["memchr","arch","x86_64","sse2","memchr","TwoIter"],"kind":"struct"},"2780":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"3072":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"4307":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"3364":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2421":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"3656":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2713":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"3948":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"3005":{"crate_id":1,"path":["std","sys","thread_local","native","eager","State"],"kind":"enum"},"4240":{"crate_id":5,"path":["alloc","collections","btree","node","drop_key_val","Dropper"],"kind":"struct"},"4532":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"3297":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2354":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"3589":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"3881":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2646":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"4173":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2938":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"4465":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"3230":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"3522":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_pkt"],"kind":"struct"},"2287":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"3814":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2579":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2871":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"401":{"crate_id":0,"path":["chrono","month","Months"],"kind":"struct"},"4106":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"3163":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"4398":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"3455":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2512":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"3747":{"crate_id":21,"path":["num_traits","NumRef"],"kind":"trait"},"2804":{"crate_id":1,"path":["std","collections","hash","set","Entry"],"kind":"enum"},"4039":{"crate_id":6,"path":["libc","unix","linux_like","linux","tpacket_hdr_v1"],"kind":"struct"},"4331":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"3096":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"626":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond"],"kind":"variant"},"3388":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"918":{"crate_id":0,"path":["chrono","format","Fixed","UpperAmPm"],"kind":"variant"},"2445":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"3680":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"3972":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_elf64_rel"],"kind":"struct"},"2737":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"267":{"crate_id":0,"path":["chrono","traits","Timelike"],"kind":"trait"},"4264":{"crate_id":18,"path":["memchr","arch","x86_64","avx2","memchr","One"],"kind":"struct"},"3029":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"4556":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"3321":{"crate_id":1,"path":["std","thread","spawnhook","ChildSpawnHooks"],"kind":"struct"},"851":{"crate_id":0,"path":["chrono","format","Numeric","Ordinal"],"kind":"variant"},"3613":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2378":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"3905":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"2670":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"200":{"crate_id":0,"path":["chrono","naive","datetime","NaiveDateTime"],"kind":"struct"},"2962":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"4197":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"3254":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"4489":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"3546":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2311":{"crate_id":11,"path":["hashbrown","control","bitmask","BitMaskIter"],"kind":"struct"},"2603":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"3838":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2895":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"4130":{"crate_id":21,"path":["num_traits","NumAssignRef"],"kind":"trait"},"4422":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"3187":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"3479":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2536":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"3771":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"66":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"4063":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2828":{"crate_id":5,"path":["alloc","sync","UniqueArcUninit"],"kind":"struct"},"4355":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"3120":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"3412":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"3704":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2469":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"3996":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"2761":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"3053":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"583":{"crate_id":0,"path":["chrono","round","RoundingError"],"kind":"enum"},"4288":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"3345":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2402":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"3637":{"crate_id":2,"path":["core","range","RangeFrom"],"kind":"struct"},"2694":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"3929":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2986":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"4221":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"4513":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2043":{"crate_id":0,"path":["chrono","month","Month","March"],"kind":"variant"},"808":{"crate_id":0,"path":["chrono","format","Pad","None"],"kind":"variant"},"3278":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2335":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"3570":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"3862":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2627":{"crate_id":21,"path":["num_traits","ops","bytes","NumBytes"],"kind":"trait"},"4154":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2919":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"4446":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"3211":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"3503":{"crate_id":20,"path":["iana_time_zone","platform","openwrt","BrokenQuote"],"kind":"struct"},"2268":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"3795":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"2560":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2852":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"4087":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"3144":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"4379":{"crate_id":21,"path":["num_traits","ops","wrapping","WrappingNeg"],"kind":"trait"},"3436":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"2493":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"3728":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2785":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"315":{"crate_id":0,"path":["chrono","format","strftime"],"kind":"module"},"4020":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"4312":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"3077":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"3369":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"2426":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3661":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"3953":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"2718":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"4245":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"3010":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"3302":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"4537":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"3594":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2359":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"3886":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2651":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2943":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"4178":{"crate_id":2,"path":["core","num","niche_types","NonZeroIsizeInner"],"kind":"struct"},"3235":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"4470":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2292":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"3527":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2584":{"crate_id":18,"path":["memchr","arch","x86_64","sse2","memchr","ThreeIter"],"kind":"struct"},"3819":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"114":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2876":{"crate_id":2,"path":["core","hash"],"kind":"module"},"4111":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"4403":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"3168":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"3460":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"3752":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"2517":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"4044":{"crate_id":21,"path":["num_traits","ops","overflowing","OverflowingAdd"],"kind":"trait"},"2809":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"4336":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"3101":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"3393":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"923":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetZ"],"kind":"variant"},"3685":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2450":{"crate_id":21,"path":["num_traits"],"kind":"module"},"2742":{"crate_id":2,"path":["core","num","niche_types","U64NotAllOnes"],"kind":"struct"},"3977":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"3034":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"4269":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"3326":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"type_alias"},"856":{"crate_id":0,"path":["chrono","format","Numeric","Nanosecond"],"kind":"variant"},"4561":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2383":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"3618":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2675":{"crate_id":6,"path":["libc","unix","linux_like","linux","open_how"],"kind":"struct"},"3910":{"crate_id":20,"path":["iana_time_zone"],"kind":"module"},"4202":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2967":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"4494":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"3259":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"789":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2316":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"3551":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"3843":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2608":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"138":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"4135":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"2900":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"430":{"crate_id":0,"path":["chrono","format","ParseResult"],"kind":"type_alias"},"4427":{"crate_id":6,"path":["libc","unix","linux_like","linux","xsk_tx_metadata_request"],"kind":"struct"},"3192":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1957":{"crate_id":0,"path":["chrono","weekday","Weekday","Tue"],"kind":"variant"},"3484":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1014":{"crate_id":0,"path":["chrono","format","OffsetPrecision","Minutes"],"kind":"variant"},"3776":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2541":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"71":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2833":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"4068":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"3125":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"4360":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"3417":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2474":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"4":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"3709":{"crate_id":2,"path":["core","marker","UnsizedConstParamTy"],"kind":"trait"},"2766":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"4001":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"4293":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"3058":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"588":{"crate_id":0,"path":["chrono","datetime","MIN_DATETIME"],"kind":"constant"},"3350":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2407":{"crate_id":21,"path":["num_traits","ops","saturating","Saturating"],"kind":"trait"},"3642":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"3934":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2699":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"4226":{"crate_id":10,"path":["adler2"],"kind":"module"},"2991":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"3283":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2048":{"crate_id":0,"path":["chrono","month","Month","August"],"kind":"variant"},"4518":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanout_args"],"kind":"struct"},"3575":{"crate_id":17,"path":["object"],"kind":"module"},"2340":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"3867":{"crate_id":18,"path":["memchr","arch","all","memchr","OneIter"],"kind":"struct"},"2632":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"162":{"crate_id":0,"path":["chrono","date","Date"],"kind":"struct"},"2924":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"4159":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"3216":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"4451":{"crate_id":21,"path":["num_traits","ops","saturating","SaturatingMul"],"kind":"trait"},"2273":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"3508":{"crate_id":2,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"2565":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"95":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"3800":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2857":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"4092":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"4384":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"3149":{"crate_id":1,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"679":{"crate_id":0,"path":["chrono","format","parsed","Parsed"],"kind":"struct"},"3441":{"crate_id":21,"path":["num_traits","ParseFloatError"],"kind":"struct"},"3733":{"crate_id":2,"path":["core","slice","GetManyMutIndex"],"kind":"trait"},"2498":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"4025":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2790":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"4317":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"3082":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"3374":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"3666":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2431":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2723":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"3958":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"253":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"3015":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"4250":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"3307":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"4542":{"crate_id":1,"path":["std","io","PipeWriter"],"kind":"struct"},"2364":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"3599":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2656":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"3891":{"crate_id":7,"path":["unwind"],"kind":"module"},"4183":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2948":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"4475":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2005":{"crate_id":0,"path":["chrono","OutOfRange"],"kind":"struct"},"3240":{"crate_id":2,"path":["core","num","niche_types","NonZeroU16Inner"],"kind":"struct"},"2297":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"3532":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"3824":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2589":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"119":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"4116":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2881":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"3173":{"crate_id":6,"path":["libc","unix","linux_like","linux","tpacket_bd_header_u"],"kind":"union"},"4408":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"3465":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"3757":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2522":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"52":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2814":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"4049":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"3106":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"4341":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"3398":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"928":{"crate_id":0,"path":["chrono","format","Fixed"],"kind":"enum"},"2455":{"crate_id":18,"path":["memchr","arch","generic","memchr","Three"],"kind":"struct"},"1220":{"crate_id":0,"path":["chrono","naive","date","NaiveDateDaysIterator"],"kind":"struct"},"3690":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2747":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"3982":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"4274":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"3039":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"3331":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"861":{"crate_id":0,"path":["chrono","format","Numeric"],"kind":"enum"},"3623":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1153":{"crate_id":0,"path":["chrono","format","ParseErrorKind","Invalid"],"kind":"variant"},"2388":{"crate_id":1,"path":["std","fs","exists"],"kind":"function"},"3915":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"2680":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"4207":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2972":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"3264":{"crate_id":18,"path":["memchr","arch","all","packedpair","Finder"],"kind":"struct"},"4499":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"3556":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2321":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2613":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"3848":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2905":{"crate_id":2,"path":["core","cell","lazy","force_mut","really_init_mut","PoisonOnPanic"],"kind":"struct"},"4140":{"crate_id":1,"path":["std","error"],"kind":"module"},"3197":{"crate_id":18,"path":["memchr","arch","all","memchr","Two"],"kind":"struct"},"1962":{"crate_id":0,"path":["chrono","weekday","Weekday","Sun"],"kind":"variant"},"4432":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2254":{"crate_id":0,"path":["chrono"],"kind":"module"},"3489":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2546":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"3781":{"crate_id":6,"path":["libc","unix","linux_like","linux","ptp_clock_time"],"kind":"struct"},"4073":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2838":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"4365":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"3130":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"3422":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"3714":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2479":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"4006":{"crate_id":21,"path":["num_traits","identities","One"],"kind":"trait"},"2771":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"4298":{"crate_id":6,"path":["libc","unix","linux_like","linux","tpacket_versions"],"kind":"enum"},"3063":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"3355":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"3647":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2412":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"2704":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"3939":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2996":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"4231":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"3288":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"4523":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2345":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"3580":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"2637":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"3872":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"4164":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2929":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"4456":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"3221":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2278":{"crate_id":15,"path":["addr2line","line","LineLocationRangeIter"],"kind":"struct"},"3513":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"3805":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1335":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2570":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"100":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2862":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"4097":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"3154":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"4389":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"3446":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"3738":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2503":{"crate_id":6,"path":["libc","unix","linux_like","linux","ptp_extts_request"],"kind":"struct"},"2795":{"crate_id":6,"path":["libc","unix","linux_like","linux","iwreq_data"],"kind":"union"},"4030":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"3087":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"617":{"crate_id":0,"path":["chrono","format","formatting","format"],"kind":"function"},"4322":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"3379":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2436":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"3671":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2728":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"3963":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"258":{"crate_id":0,"path":["chrono","round","SubsecRound"],"kind":"trait"},"4255":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"3020":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"4547":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"3312":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"842":{"crate_id":0,"path":["chrono","format","Numeric","IsoYearDiv100"],"kind":"variant"},"3604":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2369":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"3896":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2661":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"enum"},"4188":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2953":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"3245":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"4480":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3537":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2302":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2594":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"124":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"3829":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"2886":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"4121":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"3178":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"4413":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"3470":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2527":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"3762":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"4054":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2819":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"4346":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"3111":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"3403":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"3695":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2460":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"3987":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2752":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"3044":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"4279":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"3336":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"3628":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2393":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2685":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"3920":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"2977":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"4212":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"4504":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"3269":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"2326":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"3561":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2618":{"crate_id":6,"path":["libc","unix","linux_like","linux","iw_encode_ext"],"kind":"struct"},"1383":{"crate_id":0,"path":["chrono","naive","datetime","MAX_DATETIME"],"kind":"constant"},"3853":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"148":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2910":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"4145":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"4437":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"3202":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"3494":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"2259":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"3786":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2551":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"4078":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2843":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"373":{"crate_id":0,"path":["chrono","date","MAX_DATE"],"kind":"constant"},"3135":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"4370":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"3427":{"crate_id":18,"path":["memchr","memchr","Memchr3"],"kind":"struct"},"2484":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"3719":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2776":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"4011":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"3068":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"4303":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"3360":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2417":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"3652":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"3944":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"2709":{"crate_id":1,"path":["std","thread","spawnhook","SpawnHooks"],"kind":"struct"},"4236":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"3001":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"4528":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"3293":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"3585":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2350":{"crate_id":21,"path":["num_traits","FloatErrorKind"],"kind":"enum"},"3877":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2642":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"4169":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2934":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"3226":{"crate_id":6,"path":["libc","unix","linux_like","linux","tpacket_auxdata"],"kind":"struct"},"4461":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"3518":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2283":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2575":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"105":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"3810":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2867":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1340":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"4102":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"3159":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1924":{"crate_id":0,"path":["chrono","round","RoundingError","DurationExceedsLimit"],"kind":"variant"},"4394":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"3451":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"981":{"crate_id":0,"path":["chrono","format","OffsetPrecision"],"kind":"enum"},"2508":{"crate_id":21,"path":["num_traits","ops","saturating","SaturatingAdd"],"kind":"trait"},"38":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"3743":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"4035":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2800":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"4327":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1857":{"crate_id":0,"path":["chrono","offset","MappedLocalTime","None"],"kind":"variant"},"622":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond6"],"kind":"variant"},"3092":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"3384":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"914":{"crate_id":0,"path":["chrono","format","Fixed","LongMonthName"],"kind":"variant"},"3676":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2441":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"3968":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2733":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"263":{"crate_id":0,"path":["chrono","traits","Datelike"],"kind":"trait"},"3025":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"4260":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"3317":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"847":{"crate_id":0,"path":["chrono","format","Numeric","WeekFromMon"],"kind":"variant"},"4552":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"3609":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2374":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"2666":{"crate_id":21,"path":["num_traits","NumAssign"],"kind":"trait"},"3901":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2958":{"crate_id":2,"path":["core","core_arch","x86","__m512h"],"kind":"struct"},"4193":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"4485":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"3250":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2307":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"3542":{"crate_id":6,"path":["libc","unix","linux_like","linux","ptp_sys_offset"],"kind":"struct"},"2599":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"3834":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"4126":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2891":{"crate_id":21,"path":["num_traits","ops","euclid","CheckedEuclid"],"kind":"trait"},"4418":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"3183":{"crate_id":1,"path":["std","thread","thread_name_string","ThreadNameString"],"kind":"struct"},"3475":{"crate_id":2,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"3767":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1297":{"crate_id":0,"path":["chrono","naive","date","MAX_DATE"],"kind":"constant"},"2532":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"4059":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2824":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"3116":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"4351":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"3408":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2465":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"3700":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2757":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"3992":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"3049":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"4284":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"3341":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2398":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"3633":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"3925":{"crate_id":18,"path":["memchr","arch","all","memchr","ThreeIter"],"kind":"struct"},"2690":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"4217":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2982":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"4509":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"3274":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"3566":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2331":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"3858":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2623":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2915":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"4150":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"3207":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"4442":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"3499":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2264":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"2556":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"86":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"3791":{"crate_id":2,"path":["core","ffi","va_list","sealed_trait","VaArgSafe"],"kind":"trait"},"2848":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"4083":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"4375":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"3140":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"3432":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2489":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"3724":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"4016":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2781":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"4308":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"3073":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"3365":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"3657":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2422":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"3949":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2714":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"3006":{"crate_id":1,"path":["std","sync","poison","mutex","MappedMutexGuard"],"kind":"struct"},"4241":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"3298":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"4533":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2355":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"3590":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2647":{"crate_id":1,"path":["std","sys","backtrace","print","DisplayBacktrace"],"kind":"struct"},"1412":{"crate_id":0,"path":["chrono","offset","MappedLocalTime"],"kind":"type_alias"},"3882":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2939":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"4174":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"4466":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"3231":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2288":{"crate_id":6,"path":["libc","unix","linux_like","linux","iw_quality"],"kind":"struct"},"3523":{"crate_id":21,"path":["num_traits","ops","saturating","SaturatingSub"],"kind":"trait"},"3815":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2580":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"110":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"4107":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2872":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"4399":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3164":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"3456":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"986":{"crate_id":0,"path":["chrono","format","OffsetFormat"],"kind":"struct"},"3748":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2513":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"4040":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2805":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"3097":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"627":{"crate_id":0,"path":["chrono","format","formatting","SecondsFormat","AutoSi"],"kind":"variant"},"1862":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"3389":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"919":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneName"],"kind":"variant"},"4332":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2446":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"3681":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2738":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"3973":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"3030":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"4265":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"4557":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"3322":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"852":{"crate_id":0,"path":["chrono","format","Numeric","Hour"],"kind":"variant"},"2379":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"3614":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"3906":{"crate_id":2,"path":["core","intrinsics","fallback","CarryingMulAdd"],"kind":"trait"},"2671":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"4198":{"crate_id":11,"path":["hashbrown","raw_entry","RawEntryBuilderMut"],"kind":"struct"},"2963":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"4490":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"3255":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"3547":{"crate_id":18,"path":["memchr","arch","x86_64","avx2","memchr","OneIter"],"kind":"struct"},"2312":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1077":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"3839":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2604":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"134":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2896":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"4131":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"3188":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"4423":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"3480":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2537":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"67":{"crate_id":2,"path":["core","clone","CloneToUninit"],"kind":"trait"},"3772":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2829":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"4064":{"crate_id":1,"path":["std","time","UNIX_EPOCH"],"kind":"constant"},"4356":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"3121":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"3413":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"2470":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"3705":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"}},"external_crates":{"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler2","html_root_url":"https://docs.rs/adler2/2.0.0/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"num_traits","html_root_url":"https://docs.rs/num-traits/0.2/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"iana_time_zone","html_root_url":null},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":39}