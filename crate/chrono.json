{"root":"0:0:1930","crate_version":"0.4.22","includes_private":false,"index":{"0:2362":{"id":"0:2362","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[87,0],"end":[178,1]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"items":["0:2364:2077","0:2365:2089","0:2366:2098","0:2367:2106","0:2368:2114"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6459:8529":{"id":"1:6459:8529","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6460:62263","1:6461:11086","1:6462:62264","1:6463:62265","1:6464:62266","1:6465:62267"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10565:8524","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13532:64638":{"id":"2:13532:64638","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:16004:6922","self::pattern":"2:13054:1925"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13079:7159","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:358:7296":{"id":"23:358:7296","crate_id":23,"name":"NumCast","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:359:681"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToPrimitive","id":"23:307:2925","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3198-0:2933:2038":{"id":"b:2:3198-0:2933:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2933:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["2:3201:2535"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2654":{"id":"0:2654","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[74,33],"end":[74,35]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:614:2655":{"id":"0:614:2655","crate_id":0,"name":"InternalNumeric","span":{"filename":"src/format/mod.rs","begin":[153,0],"end":[155,1]},"visibility":"public","docs":"An opaque type representing numeric item types for internal uses only.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3310:7470-0:614:2655","a:2:3281:220-0:614:2655","a:2:9259:7637-0:614:2655","a:2:9260:7636-0:614:2655","a:2:3269:211-0:614:2655","b:2:3202-0:614:2655","b:2:3213-0:614:2655","b:2:4002-0:614:2655","b:2:2869-0:614:2655","b:2:2872-0:614:2655","b:2:3208-0:614:2655","b:2:3198-0:614:2655","b:5:787-0:614:2655","0:616","0:618","0:620","0:621"]}},"0:3411:1884":{"id":"0:3411:1884","crate_id":0,"name":"Utc","span":{"filename":"src/offset/utc.rs","begin":[44,0],"end":[44,15]},"visibility":"public","docs":"The UTC time zone. This is the most efficient time zone when you don't need the local time.\nIt is also used as an offset (which is also a dummy type).\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non the UTC struct is the preferred way to construct `DateTime<Utc>`\ninstances.\n\n# Example\n\n```\nuse chrono::{DateTime, TimeZone, NaiveDateTime, Utc};\n\nlet dt = DateTime::<Utc>::from_utc(NaiveDateTime::from_timestamp(61, 0), Utc);\n\nassert_eq!(Utc.timestamp(61, 0), dt);\nassert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 1, 1), dt);\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"unit","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":[],"impls":[]}},"2:3516:7103":{"id":"2:3516:7103","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3517:578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3454:715":{"id":"0:3454:715","crate_id":0,"name":"hash","span":{"filename":"src/offset/mod.rs","begin":[40,44],"end":[40,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::hash::Hasher","id":"2:10540:146","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2564:2192":{"id":"0:2564:2192","crate_id":0,"name":"with_year","span":{"filename":"src/traits.rs","begin":[59,4],"end":[59,51]},"visibility":"default","docs":"Makes a new value with the year number changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:558:671":{"id":"0:558:671","crate_id":0,"name":"format","span":{"filename":"src/format/mod.rs","begin":[4,0],"end":[971,1]},"visibility":"public","docs":"Formatting (and parsing) utilities for date and time.\n\nThis module provides the common types and routines to implement,\nfor example, [`DateTime::format`](../struct.DateTime.html#method.format) or\n[`DateTime::parse_from_str`](../struct.DateTime.html#method.parse_from_str) methods.\nFor most cases you should use these high-level interfaces.\n\nInternally the formatting and parsing shares the same abstract **formatting items**,\nwhich are just an [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) of\nthe [`Item`](./enum.Item.html) type.\nThey are generated from more readable **format strings**;\ncurrently Chrono supports a built-in syntax closely resembling\nC's `strftime` format. The available options can be found [here](./strftime/index.html).\n\n# Example\n```rust\n# use std::error::Error;\nuse chrono::prelude::*;\n\nlet date_time = Utc.ymd(2020, 11, 10).and_hms(0, 1, 32);\n\nlet formatted = format!(\"{}\", date_time.format(\"%Y-%m-%d %H:%M:%S\"));\nassert_eq!(formatted, \"2020-11-10 00:01:32\");\n\nlet parsed = Utc.datetime_from_str(&formatted, \"%Y-%m-%d %H:%M:%S\")?;\nassert_eq!(parsed, date_time);\n# Ok::<(), chrono::ParseError>(())\n```","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:995:2596","0:605","0:608","0:611","0:2641:2444","0:2659:2443","0:614:2655","0:2714:2237","0:2763:2701","0:2795:2039","0:2835:1898","0:2850:2735","0:632:1899","0:645:2775","0:701:671","0:2933:2038"],"is_stripped":false}},"0:3461:6597":{"id":"0:3461:6597","crate_id":0,"name":"TimestampExceedsLimit","span":{"filename":"src/round.rs","begin":[277,4],"end":[277,25]},"visibility":"default","docs":"Error when `DateTime.timestamp_nanos` exceeds the limit.\n\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};\nlet dt = Utc.ymd(2300, 12, 12).and_hms(0, 0, 0);\n\nassert_eq!(dt.duration_round(Duration::days(1)), Err(RoundingError::TimestampExceedsLimit),);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2686:2639":{"id":"0:2686:2639","crate_id":0,"name":"Ordinal","span":{"filename":"src/format/mod.rs","begin":[128,4],"end":[128,11]},"visibility":"default","docs":"Day of the year (FW=PW=3).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13529:3503":{"id":"2:13529:3503","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13054:1925","prim@char":"1:16004:6922"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13470:37185":{"id":"2:13470:37185","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:13054:1925","prim@char":"1:16004:6922"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12846:7185","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:2659:2443":{"id":"b:2:2869-0:2659:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2871:2029"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2889:1907":{"id":"0:2889:1907","crate_id":0,"name":"weekday","span":{"filename":"src/format/parsed.rs","begin":[77,4],"end":[77,32]},"visibility":"public","docs":"Day of the week.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3474:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}},"0:3552:2810":{"id":"0:3552:2810","crate_id":0,"name":"November","span":{"filename":"src/month.rs","begin":[55,4],"end":[55,17]},"visibility":"default","docs":"November","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:22877:8887":{"id":"2:22877:8887","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22878:8885","2:22879:1247","2:22880:1272"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:129:1891":{"id":"0:129:1891","crate_id":0,"name":"MAX_DATE","span":{"filename":"src/date.rs","begin":[70,0],"end":[70,53]},"visibility":"public","docs":"The maximum possible `Date`.","links":{},"attrs":["#[allow(deprecated)]","#[deprecated(since = \"0.4.20\", note = \"Use Date::MAX_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use Date::MAX_UTC instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3411:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"expr":"Date<Utc>::MAX_UTC","value":null,"is_literal":false}},"b:2:3202-0:2914:2040":{"id":"b:2:3202-0:2914:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2967:184":{"id":"2:2967:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2969:997","2:2970:826","2:2971:792","2:2972:713","2:2973:696"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2418:1904":{"id":"0:2418:1904","crate_id":0,"name":"round","span":{"filename":"src/round.rs","begin":[4,0],"end":[625,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2450:1876","0:2458:1905","0:3456:1906"],"is_stripped":true}},"0:2727:2462":{"id":"0:2727:2462","crate_id":0,"name":"Nanosecond","span":{"filename":"src/format/mod.rs","begin":[210,4],"end":[210,14]},"visibility":"default","docs":"An optional dot plus one or more digits for left-aligned nanoseconds.\nMay print nothing, 3, 6 or 9 digits according to the available accuracy.\nSee also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:9260:7636-0:2933:2038":{"id":"a:2:9260:7636-0:2933:2038","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9260:7636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9260:7636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2933:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"23:700:58094":{"id":"23:700:58094","crate_id":23,"name":"OverflowingSub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:701:66538"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sub","id":"2:3342:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2832":{"id":"0:2832","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[278,31],"end":[278,36]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10292:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2834:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2886:2835":{"id":"0:2886:2835","crate_id":0,"name":"week_from_sun","span":{"filename":"src/format/parsed.rs","begin":[66,4],"end":[66,34]},"visibility":"public","docs":"Week number, where the week 1 starts at the first Sunday of January\n(0--53, 1--53 or 1--52 depending on the year).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"0:2409":{"id":"0:2409","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[491,43],"end":[491,49]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::Offset","name":"Offset","id":"0:2372:1888","glob":false}},"5:6106:61164":{"id":"5:6106:61164","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:16010:6927"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2873:604":{"id":"0:2873:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[347,23],"end":[347,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3537:2805":{"id":"0:3537:2805","crate_id":0,"name":"June","span":{"filename":"src/month.rs","begin":[45,4],"end":[45,12]},"visibility":"default","docs":"June","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[474,58],"end":[474,70]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"datetime::MIN_DATETIME","name":"MIN_DATETIME","id":"0:367:1896","glob":false}},"0:2664:2620":{"id":"0:2664:2620","crate_id":0,"name":"YearMod100","span":{"filename":"src/format/mod.rs","begin":[105,4],"end":[105,14]},"visibility":"default","docs":"Gregorian year modulo 100 (FW=PW=2). Cannot be negative.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3065:1901":{"id":"0:3065:1901","crate_id":0,"name":"IsoWeek","span":{"filename":"src/naive/isoweek.rs","begin":[21,0],"end":[26,1]},"visibility":"public","docs":"ISO 8601 week.\n\nThis type, combined with [`Weekday`](../enum.Weekday.html),\nconstitutes the ISO 8601 [week date](./struct.NaiveDate.html#week-date).\nOne can retrieve this type from the existing [`Datelike`](../trait.Datelike.html) types\nvia the [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) method.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:2770":{"id":"0:2770","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[253,23],"end":[253,32]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2771:604","0:2772:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:3422:1903":{"id":"b:2:4002-0:3422:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2729:2459":{"id":"0:2729:2459","crate_id":0,"name":"Nanosecond3","span":{"filename":"src/format/mod.rs","begin":[212,4],"end":[212,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3540:2806":{"id":"0:3540:2806","crate_id":0,"name":"July","span":{"filename":"src/month.rs","begin":[47,4],"end":[47,12]},"visibility":"default","docs":"July","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:14242:8274":{"id":"2:14242:8274","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14243:61562","2:14244:61563","2:14245:61564","2:14246:61565","2:14247:61566","2:14248:61567","2:14249:7893"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6790:8526":{"id":"1:6790:8526","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6791:13197"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10565:8524","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:4002-0:2933:2038":{"id":"b:2:4002-0:2933:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2933:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:2659:2443":{"id":"b:2:3198-0:2659:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3201:2535"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2359:841":{"id":"0:2359:841","crate_id":0,"name":"map","span":{"filename":"src/offset/mod.rs","begin":[78,4],"end":[84,5]},"visibility":"public","docs":"Maps a `LocalResult<T>` into `LocalResult<U>` with given function.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3522:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"T"}],"output":{"kind":"generic","inner":"U"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13497:64630":{"id":"2:13497:64630","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:13054:1925","str::matches":"1:16010:6927","`DoubleEndedIterator`":"2:8448:120","prim@char":"1:16004:6922"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49684:7177","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13079:7159","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:7470-0:2933:2038":{"id":"a:2:3310:7470-0:2933:2038","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3310:7470","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3310:7470","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2933:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2721:2672":{"id":"0:2721:2672","crate_id":0,"name":"LongWeekdayName","span":{"filename":"src/format/mod.rs","begin":[198,4],"end":[198,19]},"visibility":"default","docs":"Full day of the week names.\n\nPrints a full name in the title case, reads either a short or full name in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2924":{"id":"0:2924","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[197,16],"end":[197,21]},"visibility":{"restricted":{"parent":"0:995:2596","path":"::format::strftime"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10292:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2926:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:41":{"id":"0:41","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[459,33],"end":[459,36]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Utc","name":"Utc","id":"0:3411:1884","glob":false}},"0:2648":{"id":"0:2648","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[74,9],"end":[74,13]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"23:241:57986":{"id":"23:241:57986","crate_id":23,"name":"UpperBounded","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:242:4506"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:2914:2040":{"id":"b:2:3213-0:2914:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2749:2654":{"id":"0:2749:2654","crate_id":0,"name":"Internal","span":{"filename":"src/format/mod.rs","begin":[249,4],"end":[249,27]},"visibility":"default","docs":"Internal uses only.\n\nThis item exists so that one can add additional internal-only formatting\nwithout breaking major compatibility (as enum variants cannot be selectively private).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]}},"23:233:7293":{"id":"23:233:7293","crate_id":23,"name":"Bounded","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:234:4507","23:235:4506"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2570:2198":{"id":"0:2570:2198","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/traits.rs","begin":[89,4],"end":[89,59]},"visibility":"default","docs":"Makes a new value with the day of year (starting from 0) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2487":{"id":"0:2487","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[494,46],"end":[494,57]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"round::SubsecRound","name":"SubsecRound","id":"0:2450:1876","glob":false}},"0:2690:2642":{"id":"0:2690:2642","crate_id":0,"name":"Hour12","span":{"filename":"src/format/mod.rs","begin":[132,4],"end":[132,10]},"visibility":"default","docs":"Hour number in the 12-hour clocks (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2869-0:2933:2038":{"id":"b:2:2869-0:2933:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2933:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["2:2871:2029"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3440:7101":{"id":"2:3440:7101","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3442:1237"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9259:7637-0:2659:2443":{"id":"a:2:9259:7637-0:2659:2443","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9259:7637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2795:2039":{"id":"0:2795:2039","crate_id":0,"name":"Item","span":{"filename":"src/format/mod.rs","begin":[279,0],"end":[297,1]},"visibility":"public","docs":"A single formatting item. This is used for both formatting and parsing.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:2797:2450","0:2800:2719","0:2803:2603","0:2806:2722","0:2809:2443","0:2813:2237","0:2816:127"],"impls":["a:2:3310:7470-0:2795:2039","a:2:3281:220-0:2795:2039","a:2:9259:7637-0:2795:2039","a:2:9260:7636-0:2795:2039","a:2:3269:211-0:2795:2039","b:2:3202-0:2795:2039","b:2:3213-0:2795:2039","b:2:4002-0:2795:2039","b:2:2869-0:2795:2039","b:2:2872-0:2795:2039","b:2:3208-0:2795:2039","b:2:3198-0:2795:2039","b:5:787-0:2795:2039","0:2818","0:2821","0:2823","0:2827","0:2829","0:2832"]}},"0:2838":{"id":"0:2838","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[336,9],"end":[336,14]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10292:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2839:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1723":{"id":"0:1723","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[14,53],"end":[14,61]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::date::MIN_DATE","name":"MIN_DATE","id":"0:1175:1892","glob":false}},"b:2:2872-0:2795:2039":{"id":"b:2:2872-0:2795:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2866:7070","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2874:5914"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2568:2196":{"id":"0:2568:2196","crate_id":0,"name":"with_day0","span":{"filename":"src/traits.rs","begin":[79,4],"end":[79,51]},"visibility":"default","docs":"Makes a new value with the day of month (starting from 0) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3452":{"id":"0:3452","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[40,44],"end":[40,48]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::hash::Hash","id":"2:10530:142","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"2:10530:142","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:3454:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2756:604":{"id":"0:2756:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[181,16],"end":[181,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13434:60061":{"id":"2:13434:60061","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10934:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10934:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:2294":{"id":"0:2294","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[34,0],"end":[34,27]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"import","inner":{"source":"self::local::Local","name":"Local","id":"0:3404:1873","glob":false}},"0:2602:2249":{"id":"0:2602:2249","crate_id":0,"name":"Micros","span":{"filename":"src/datetime/mod.rs","begin":[63,4],"end":[63,10]},"visibility":"default","docs":"Use fixed 6 subsecond digits. This corresponds to\n[Fixed::Nanosecond6](format/enum.Fixed.html#variant.Nanosecond6).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2574:2843":{"id":"0:2574:2843","crate_id":0,"name":"hour12","span":{"filename":"src/traits.rs","begin":[129,4],"end":[136,5]},"visibility":"default","docs":"Returns the hour number from 1 to 12 with a boolean flag,\nwhich is false for AM and true for PM.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"bool"},{"kind":"primitive","inner":"u32"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6415:1397":{"id":"5:6415:1397","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2702:1542":{"id":"0:2702:1542","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[149,13],"end":[149,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"2:23089:21413":{"id":"2:23089:21413","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23090:12264","2:23091:63690","2:23092:63691"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23082:8524","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2820:408":{"id":"0:2820:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[278,9],"end":[278,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13513:64635":{"id":"2:13513:64635","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:614:2655":{"id":"b:2:3213-0:614:2655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2987:4205":{"id":"0:2987:4205","crate_id":0,"name":"NaiveDateWeeksIterator","span":{"filename":"src/naive/date.rs","begin":[1825,0],"end":[1827,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"a:2:3281:220-0:614:2655":{"id":"a:2:3281:220-0:614:2655","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8411:7875":{"id":"2:8411:7875","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"a:2:3269:211-0:3422:1903":{"id":"a:2:3269:211-0:3422:1903","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:2835:1898":{"id":"b:2:2869-0:2835:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2871:2029"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:2763:2701":{"id":"b:2:2872-0:2763:2701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2866:7070","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2874:5914"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13079:7159":{"id":"2:13079:7159","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13081:4360","2:13082:63525","2:13083:63526"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"2:13073:7160","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3274:5719":{"id":"2:3274:5719","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1586:1556":{"id":"0:1586:1556","crate_id":0,"name":"time","span":{"filename":"src/naive/time/mod.rs","begin":[4,0],"end":[1413,1]},"visibility":{"restricted":{"parent":"0:1061:1900","path":"::naive"}},"docs":"ISO 8601 time without timezone.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3081:1887"],"is_stripped":true}},"2:3201:2535":{"id":"2:3201:2535","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3175:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9259:7637-0:2641:2444":{"id":"a:2:9259:7637-0:2641:2444","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9259:7637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9259:7637-0:2914:2040":{"id":"a:2:9259:7637-0:2914:2040","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9259:7637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2926:660":{"id":"0:2926:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/strftime.rs","begin":[197,16],"end":[197,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10252:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10241:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2851:2738":{"id":"0:2851:2738","crate_id":0,"name":"OutOfRange","span":{"filename":"src/format/mod.rs","begin":[350,4],"end":[350,14]},"visibility":"default","docs":"Given field is out of permitted range.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3277:218":{"id":"2:3277:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1752":{"id":"0:1752","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[484,51],"end":[484,60]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::NaiveTime","name":"NaiveTime","id":"0:3081:1887","glob":false}},"1:6437:8526":{"id":"1:6437:8526","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6438:8724","1:6439:8725","1:6440:13196","1:6441:59786","1:6443:59790","1:6445:59787","1:6446:59788","1:6448:59789"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10565:8524","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:22840:8880":{"id":"2:22840:8880","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22841:63730","2:22842:1227","2:22843:1228","2:22844:63731","2:22845:63732","2:22846:63733","2:22847:63734","2:22848:63735","2:22849:63736","2:22850:63737"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22853:8524","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2878:2236":{"id":"0:2878:2236","crate_id":0,"name":"Parsed","span":{"filename":"src/format/parsed.rs","begin":[26,0],"end":[110,1]},"visibility":"public","docs":"Parsed parts of date and time. There are two classes of methods:\n\n- `set_*` methods try to set given field(s) while checking for the consistency.\n  It may or may not check for the range constraint immediately (for efficiency reasons).\n\n- `to_*` methods try to make a concrete date and time value out of set fields.\n  It fully checks any remaining out-of-range conditions and inconsistent/impossible fields.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":["0:2879:2157","0:2880:2938","0:2881:2940","0:2882:2944","0:2883:2949","0:2884:2951","0:2885:1909","0:2886:2835","0:2887:2837","0:2888:2958","0:2889:1907","0:2890:2189","0:2891:2158","0:2892:2963","0:2893:2965","0:2894:2476","0:2895:2477","0:2896:2478","0:2897:2308","0:2898:957"],"impls":[]}},"0:368:1895":{"id":"0:368:1895","crate_id":0,"name":"MAX_DATETIME","span":{"filename":"src/datetime/mod.rs","begin":[96,0],"end":[96,65]},"visibility":"public","docs":"The maximum possible `DateTime<Utc>`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use DateTime::MAX_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use DateTime::MAX_UTC instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3411:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"expr":"DateTime<Utc>::MAX_UTC","value":null,"is_literal":false}},"2:10540:146":{"id":"2:10540:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10541:652","2:10542:2202","2:10543:62968","2:10544:62969","2:10545:62970","2:10546:62971","2:10547:62972","2:10548:62973","2:10549:62974","2:10550:62975","2:10551:62976","2:10552:62977","2:10553:62978","2:10554:62979","2:10555:62980","2:10556:1533"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:614:2655":{"id":"b:5:787-0:614:2655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:7917","5:790:7918","5:791:7919"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:2795:2039":{"id":"b:2:4002-0:2795:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3406:7093":{"id":"2:3406:7093","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3408:181","2:3409:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2846":{"id":"0:2846","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[336,34],"end":[336,36]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:7:1030":{"id":"0:7:1030","crate_id":0,"name":"prelude","span":{"filename":"src/lib.rs","begin":[443,0],"end":[443,15]},"visibility":"public","docs":"A convenience module appropriate for glob imports (`use chrono::prelude::*;`).","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:8","0:11","0:14","0:18","0:21","0:25","0:28","0:31","0:34","0:38","0:41","0:45","0:48","0:51","0:55","0:58"],"is_stripped":false}},"0:2895:2477":{"id":"0:2895:2477","crate_id":0,"name":"second","span":{"filename":"src/format/parsed.rs","begin":[95,4],"end":[95,27]},"visibility":"public","docs":"Second number (0--60, accounting for leap seconds).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"0:2839:660":{"id":"0:2839:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[336,9],"end":[336,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10252:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10241:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:333:5075":{"id":"23:333:5075","crate_id":23,"name":"FromPrimitive","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:334:8112","23:335:8113","23:336:8114","23:337:8115","23:338:6716","23:339:8116","23:340:689","23:341:8117","23:342:8118","23:343:5162","23:344:6717","23:345:8119","23:346:8120","23:347:2525"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2652":{"id":"0:2652","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[74,22],"end":[74,31]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2653:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2646:2603":{"id":"0:2646:2603","crate_id":0,"name":"Space","span":{"filename":"src/format/mod.rs","begin":[81,4],"end":[81,9]},"visibility":"default","docs":"Space padding.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1291:1893":{"id":"0:1291:1893","crate_id":0,"name":"datetime","span":{"filename":"src/naive/datetime/mod.rs","begin":[4,0],"end":[1642,1]},"visibility":"crate","docs":"ISO 8601 date and time without timezone.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1386:1896","0:1387:1895","0:3008:1886"],"is_stripped":true}},"0:1727":{"id":"0:1727","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[19,25],"end":[19,38]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::datetime::NaiveDateTime","name":"NaiveDateTime","id":"0:3008:1886","glob":false}},"0:2357:5708":{"id":"0:2357:5708","crate_id":0,"name":"earliest","span":{"filename":"src/offset/mod.rs","begin":[62,4],"end":[67,5]},"visibility":"public","docs":"Returns `Some` for the earliest possible conversion result, or `None` if none.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6413-0:2835:1898":{"id":"b:5:6413-0:2835:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10299:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6415:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1055":{"id":"0:1055","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[480,17],"end":[480,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"format::ParseError","name":"ParseError","id":"0:2835:1898","glob":false}},"a:2:3269:211-0:2641:2444":{"id":"a:2:3269:211-0:2641:2444","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:546":{"id":"0:546","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[474,19],"end":[474,27]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"datetime::DateTime","name":"DateTime","id":"0:2621:1877","glob":false}},"0:2709":{"id":"0:2709","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[97,27],"end":[97,29]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1041:2171":{"id":"0:1041:2171","crate_id":0,"name":"new_with_offset","span":{"filename":"src/format/mod.rs","begin":[778,4],"end":[796,5]},"visibility":"public","docs":"Makes a new `DelayedFormat` value out of local date and time and UTC offset.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["date",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2947:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}],["time",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3081:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}],["offset",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Off"}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2933:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"Off","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Off"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Offset","id":"0:2372:1888","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Display","id":"2:10299:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2565:2193":{"id":"0:2565:2193","crate_id":0,"name":"with_month","span":{"filename":"src/traits.rs","begin":[64,4],"end":[64,53]},"visibility":"default","docs":"Makes a new value with the month number (starting from 1) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:22940:8523":{"id":"2:22940:8523","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22930:8524","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3217:1416":{"id":"2:3217:1416","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47622:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[468,15],"end":[468,19]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"date::Date","name":"Date","id":"0:2590:1872","glob":false}},"0:1565:2958":{"id":"0:1565:2958","crate_id":0,"name":"isoweek","span":{"filename":"src/naive/isoweek.rs","begin":[4,0],"end":[167,1]},"visibility":{"restricted":{"parent":"0:1061:1900","path":"::naive"}},"docs":"ISO 8601 week.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3065:1901"],"is_stripped":true}},"0:2604:2252":{"id":"0:2604:2252","crate_id":0,"name":"Nanos","span":{"filename":"src/datetime/mod.rs","begin":[67,4],"end":[67,9]},"visibility":"default","docs":"Use fixed 9 subsecond digits. This corresponds to\n[Fixed::Nanosecond9](format/enum.Fixed.html#variant.Nanosecond9).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2582:4711":{"id":"0:2582:4711","crate_id":0,"name":"num_seconds_from_midnight","span":{"filename":"src/traits.rs","begin":[175,4],"end":[177,5]},"visibility":"default","docs":"Returns the number of non-leap seconds past the last midnight.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:366:7295":{"id":"23:366:7295","crate_id":23,"name":"AsPrimitive","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:368:66104"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2757:907":{"id":"0:2757:907","crate_id":0,"name":"ne","span":{"filename":"src/format/mod.rs","begin":[181,16],"end":[181,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2842":{"id":"0:2842","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[336,23],"end":[336,32]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2812:1543":{"id":"0:2812:1543","crate_id":0,"name":"1","span":{"filename":"src/format/mod.rs","begin":[292,21],"end":[292,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"0:2572:1881":{"id":"0:2572:1881","crate_id":0,"name":"Timelike","span":{"filename":"src/traits.rs","begin":[122,0],"end":[178,1]},"visibility":"public","docs":"The common set of methods for time component.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2573:2086","0:2574:2843","0:2575:2476","0:2576:2477","0:2577:2478","0:2578:2479","0:2579:2480","0:2580:2481","0:2581:2482","0:2582:4711"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:253":{"id":"0:253","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[468,31],"end":[468,39]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"date::MIN_DATE","name":"MIN_DATE","id":"0:128:1892","glob":false}},"2:13456:6259":{"id":"2:13456:6259","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:16004:6922","self::pattern":"2:13054:1925"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13079:7159","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3364:7086":{"id":"2:3364:7086","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3365:181","2:3366:913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1022:920":{"id":"0:1022:920","crate_id":0,"name":"new","span":{"filename":"src/format/strftime.rs","begin":[215,4],"end":[217,5]},"visibility":"public","docs":"Creates a new parsing iterator from the `strftime`-like format string.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2741:2696":{"id":"0:2741:2696","crate_id":0,"name":"TimezoneOffset","span":{"filename":"src/format/mod.rs","begin":[236,4],"end":[236,18]},"visibility":"default","docs":"Same as [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.\nParsing allows an optional colon.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13449:37312":{"id":"2:13449:37312","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49754:7180","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3404:1873":{"id":"0:3404:1873","crate_id":0,"name":"Local","span":{"filename":"src/offset/local/mod.rs","begin":[55,0],"end":[55,17]},"visibility":"public","docs":"The local timescale. This is implemented via the standard `time` crate.\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non the Local struct is the preferred way to construct `DateTime<Local>`\ninstances.\n\n# Example\n\n```\nuse chrono::{Local, DateTime, TimeZone};\n\nlet dt: DateTime<Local> = Local::now();\nlet dt: DateTime<Local> = Local.timestamp(0, 0);\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"unit","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":[],"impls":[]}},"0:2879:2157":{"id":"0:2879:2157","crate_id":0,"name":"year","span":{"filename":"src/format/parsed.rs","begin":[31,4],"end":[31,25]},"visibility":"public","docs":"Year.\n\nThis can be negative unlike [`year_div_100`](#structfield.year_div_100)\nand [`year_mod_100`](#structfield.year_mod_100) fields.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}},"param_names":[]}}},"23:579:7301":{"id":"23:579:7301","crate_id":23,"name":"CheckedDiv","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:580:66592"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Div","id":"2:3352:7084","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2376:2528":{"id":"0:2376:2528","crate_id":0,"name":"ymd","span":{"filename":"src/offset/mod.rs","begin":[224,4],"end":[226,5]},"visibility":"default","docs":"Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date, invalid month and/or day.\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.ymd(2015, 5, 15).to_string(), \"2015-05-15UTC\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["month",{"kind":"primitive","inner":"u32"}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:403:58013":{"id":"23:403:58013","crate_id":23,"name":"FloatCore","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:404:66123","23:405:66124","23:406:66125","23:407:66126","23:408:4507","23:409:66127","23:410:66128","23:411:4506","23:412:63894","23:413:63895","23:414:63896","23:415:63898","23:416:66130","23:417:62492","23:418:2213","23:419:1904","23:420:43892","23:421:62491","23:422:4445","23:423:7326","23:424:63892","23:425:63893","23:426:2087","23:427:3099","23:428:63889","23:429:66131","23:430:63890","23:431:63891","23:432:66129"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Num","id":"23:844:7265","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumCast","id":"23:358:7296","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Neg","id":"2:3364:7086","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13537:9224":{"id":"2:13537:9224","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:3422:1903":{"id":"b:5:787-0:3422:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["5:789:7917","5:790:7918","5:791:7919"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1027":{"id":"0:1027","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[256,0],"end":[475,1]},"visibility":{"restricted":{"parent":"0:995:2596","path":"::format::strftime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["eq_by","take","rposition","cloned","try_for_each","cmp","try_collect","cycle","map_while","eq","for_each","next_chunk","ge","count","is_sorted","enumerate","any","min_by","fold","unzip","collect_into","all","flat_map","filter","advance_by","position","rev","min","copied","min_by_key","reduce","max","partition","sum","flatten","is_sorted_by","filter_map","find","nth","lt","is_sorted_by_key","last","product","chain","try_reduce","skip","partition_in_place","max_by","fuse","partial_cmp","peekable","step_by","__iterator_get_unchecked","cmp_by","max_by_key","zip","find_map","is_partitioned","inspect","skip_while","ne","intersperse","size_hint","scan","collect","partial_cmp_by","try_find","try_fold","le","by_ref","take_while","map","intersperse_with","gt"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8602:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:1029:2039","0:1030:922"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13427:64623":{"id":"2:13427:64623","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"5:5833:7361":{"id":"5:5833:7361","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5835:181","5:5836:432"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"23:866:7281":{"id":"23:866:7281","crate_id":23,"name":"NumAssignOps","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AddAssign","id":"2:3368:2031","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SubAssign","id":"2:3372:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"MulAssign","id":"2:3376:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DivAssign","id":"2:3380:7088","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RemAssign","id":"2:3384:7090","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2888:104":{"id":"2:2888:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2889:408","2:2890:410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3208-0:2714:2237":{"id":"b:2:3208-0:2714:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2651":{"id":"0:2651","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[74,22],"end":[74,31]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2662:2618":{"id":"0:2662:2618","crate_id":0,"name":"YearDiv100","span":{"filename":"src/format/mod.rs","begin":[103,4],"end":[103,14]},"visibility":"default","docs":"Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:631:782":{"id":"0:631:782","crate_id":0,"name":"kind","span":{"filename":"src/format/mod.rs","begin":[341,4],"end":[343,5]},"visibility":"public","docs":"The category of parse error","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3431:7099":{"id":"2:3431:7099","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3433:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2869":{"id":"0:2869","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[347,16],"end":[347,21]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2870:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8363:8370":{"id":"2:8363:8370","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8365:4501"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2942:1902":{"id":"0:2942:1902","crate_id":0,"name":"NaiveWeek","span":{"filename":"src/naive/date.rs","begin":[57,0],"end":[60,1]},"visibility":"public","docs":"A week represented by a [`NaiveDate`] and a [`Weekday`] which is the first\nday of the week.","links":{"`NaiveDate`":"0:2947:1885","`Weekday`":"0:3474:1882"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"23:586:7305":{"id":"23:586:7305","crate_id":23,"name":"CheckedShl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:587:66336"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Shl","id":"2:3411:7095","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2888:2958":{"id":"0:2888:2958","crate_id":0,"name":"isoweek","span":{"filename":"src/format/parsed.rs","begin":[74,4],"end":[74,28]},"visibility":"public","docs":"[ISO week number](../naive/struct.NaiveDate.html#week-date)\n(1--52 or 1--53 depending on the year).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"0:2840":{"id":"0:2840","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[336,16],"end":[336,21]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2841:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3310:7470":{"id":"2:3310:7470","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2450:1876":{"id":"0:2450:1876","crate_id":0,"name":"SubsecRound","span":{"filename":"src/round.rs","begin":[20,0],"end":[45,1]},"visibility":"public","docs":"Extension trait for subsecond rounding or truncation to a maximum number\nof digits. Rounding can be used to decrease the error variance when\nserializing/persisting to lower precision. Truncation is the default\nbehavior in Chrono display formatting.  Either can be used to guarantee\nequality (e.g. for testing) when round-tripping through a lower precision\nformat.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2451:6564","0:2452:6569"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3169:74":{"id":"2:3169:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3171:7866"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:2460:6587":{"id":"0:2460:6587","crate_id":0,"name":"duration_round","span":{"filename":"src/round.rs","begin":[125,4],"end":[125,75]},"visibility":"default","docs":"Return a copy rounded by Duration.\n\n# Example\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, TimeZone, Utc};\nlet dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);\nassert_eq!(\n    dt.duration_round(Duration::milliseconds(10)).unwrap().to_string(),\n    \"2018-01-11 12:00:00.150 UTC\"\n);\nassert_eq!(\n    dt.duration_round(Duration::days(1)).unwrap().to_string(),\n    \"2018-01-12 00:00:00 UTC\"\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["duration",{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47622:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:2458:1905","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3521:1880":{"id":"0:3521:1880","crate_id":0,"name":"Month","span":{"filename":"src/month.rs","begin":[33,0],"end":[58,1]},"visibility":"public","docs":"The month of the year.\n\nThis enum is just a convenience implementation.\nThe month in dates created by DateLike objects does not return this enum.\n\nIt is possible to convert from a date to a month independently\n```\nuse num_traits::FromPrimitive;\nuse chrono::prelude::*;\nlet date = Utc.ymd(2019, 10, 28).and_hms(9, 10, 11);\n// `2019-10-28T09:10:11Z`\nlet month = Month::from_u32(date.month());\nassert_eq!(month, Some(Month::October))\n```\nOr from a Month to an integer usable by dates\n```\n# use chrono::prelude::*;\nlet month = Month::January;\nlet dt = Utc.ymd(2019, month.number_from_month(), 28).and_hms(9, 10, 11);\nassert_eq!((dt.year(), dt.month(), dt.day()), (2019, 1, 28));\n```\nAllows mapping from and to month, from 1-January to 12-December.\nCan be Serialized/Deserialized with serde","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:3522:2801","0:3525:2802","0:3528:2803","0:3531:2804","0:3534:2793","0:3537:2805","0:3540:2806","0:3543:2807","0:3546:2808","0:3549:2809","0:3552:2810","0:3555:2811"],"impls":[]}},"0:2818":{"id":"0:2818","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[278,9],"end":[278,14]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2820:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2874":{"id":"0:2874","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[347,34],"end":[347,36]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:635:660":{"id":"0:635:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[386,4],"end":[397,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10252:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10241:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2706":{"id":"0:2706","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[97,16],"end":[97,25]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2707:604","0:2708:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1036":{"id":"0:1036","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[764,0],"end":[824,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8602:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2933:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["0:1040:920","0:1041:2171"],"negative":false,"synthetic":false,"blanket_impl":null}},"23:847:7278":{"id":"23:847:7278","crate_id":23,"name":"NumOps","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Add","id":"2:3337:2030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sub","id":"2:3342:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Mul","id":"2:3347:7085","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Div","id":"2:3352:7084","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Rem","id":"2:3358:7087","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2921":{"id":"0:2921","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[197,9],"end":[197,14]},"visibility":{"restricted":{"parent":"0:995:2596","path":"::format::strftime"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2923:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2881:2940":{"id":"0:2881:2940","crate_id":0,"name":"year_mod_100","span":{"filename":"src/format/parsed.rs","begin":[41,4],"end":[41,33]},"visibility":"public","docs":"Year modulo 100. Implies that the year is >= 1 BCE when set.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}},"param_names":[]}}},"5:6104:65278":{"id":"5:6104:65278","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:8368:216","`Box<str>`":"5:432:2592"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2592","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:8275","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13538:60006":{"id":"2:13538:60006","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:2933:2038":{"id":"a:2:3281:220-0:2933:2038","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2933:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3572:1910":{"id":"0:3572:1910","crate_id":0,"name":"Months","span":{"filename":"src/month.rs","begin":[194,0],"end":[194,34]},"visibility":"public","docs":"A duration in calendar months","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:8":{"id":"0:8","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[445,4],"end":[445,24]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Date","name":"Date","id":"0:2590:1872","glob":false}},"b:2:3208-0:614:2655":{"id":"b:2:3208-0:614:2655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2451:6564":{"id":"0:2451:6564","crate_id":0,"name":"round_subsecs","span":{"filename":"src/round.rs","begin":[32,4],"end":[32,48]},"visibility":"default","docs":"Return a copy rounded to the specified number of subsecond digits. With\n9 or more digits, self is returned unmodified. Halfway values are\nrounded up (away from zero).\n\n# Example\n``` rust\n# use chrono::{DateTime, SubsecRound, Timelike, TimeZone, Utc};\nlet dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);\nassert_eq!(dt.round_subsecs(2).nanosecond(), 150_000_000);\nassert_eq!(dt.round_subsecs(1).nanosecond(), 200_000_000);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["digits",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:6959:8531":{"id":"1:6959:8531","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6960:62286"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1720":{"id":"0:1720","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[14,43],"end":[14,51]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::date::MAX_DATE","name":"MAX_DATE","id":"0:1176:1891","glob":false}},"0:2754":{"id":"0:2754","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[181,16],"end":[181,25]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2765":{"id":"0:2765","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[253,9],"end":[253,14]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10292:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2766:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3380:7088":{"id":"2:3380:7088","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3382:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2374:1889":{"id":"0:2374:1889","crate_id":0,"name":"TimeZone","span":{"filename":"src/offset/mod.rs","begin":[203,0],"end":[478,1]},"visibility":"public","docs":"The time zone.\n\nThe methods here are the primarily constructors for [`Date`](../struct.Date.html) and\n[`DateTime`](../struct.DateTime.html) types.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2375:1888","0:2376:2528","0:2377:4465","0:2378:5738","0:2379:4468","0:2380:5745","0:2381:4472","0:2382:2308","0:2383:5751","0:2384:2320","0:2385:5760","0:2386:2337","0:2387:3455","0:2388:2130","0:2389:5784","0:2390:5786","0:2391:2164","0:2393:2081","0:2395:5790","0:2396:3097","0:2397:2136","0:2398:2351"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2703":{"id":"0:2703","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[97,9],"end":[97,14]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2704:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2747:2404":{"id":"0:2747:2404","crate_id":0,"name":"RFC3339","span":{"filename":"src/format/mod.rs","begin":[243,4],"end":[243,11]},"visibility":"default","docs":"RFC 3339 & ISO 8601 date and time syntax.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2380:5745":{"id":"0:2380:5745","crate_id":0,"name":"isoywd","span":{"filename":"src/offset/mod.rs","begin":[301,4],"end":[303,5]},"visibility":"default","docs":"Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date and/or invalid week number.\n\n# Example\n\n```\nuse chrono::{Utc, Weekday, TimeZone};\n\nassert_eq!(Utc.isoywd(2015, 20, Weekday::Fri).to_string(), \"2015-05-15UTC\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["week",{"kind":"primitive","inner":"u32"}],["weekday",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3474:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13436:60062":{"id":"2:13436:60062","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10934:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10934:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"23:760:7320":{"id":"23:760:7320","crate_id":23,"name":"WrappingShl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:761:66381"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Shl","id":"2:3411:7095","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3447":{"id":"0:3447","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[40,40],"end":[40,42]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:2795:2039":{"id":"a:2:3281:220-0:2795:2039","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13426:3211":{"id":"2:13426:3211","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12525:5881"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2684:2637":{"id":"0:2684:2637","crate_id":0,"name":"WeekdayFromMon","span":{"filename":"src/format/mod.rs","begin":[126,4],"end":[126,18]},"visibility":"default","docs":"Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2811:1542":{"id":"0:2811:1542","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[292,12],"end":[292,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"0:617:408":{"id":"0:617:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[158,4],"end":[160,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2584":{"id":"0:2584","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[503,17],"end":[503,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"traits::Datelike","name":"Datelike","id":"0:2553:1879","glob":false}},"2:13767:138":{"id":"2:13767:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13768:181","2:13769:1013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3740:7110":{"id":"2:3740:7110","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3742:58849"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2371:1484":{"id":"0:2371:1484","crate_id":0,"name":"unwrap","span":{"filename":"src/offset/mod.rs","begin":[182,4],"end":[190,5]},"visibility":"public","docs":"Returns the single unique conversion result, or panics accordingly.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2389:5784":{"id":"0:2389:5784","crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/mod.rs","begin":[438,4],"end":[438,85]},"visibility":"default","docs":"Creates the offset(s) for given local `NaiveDate` if possible.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2947:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:2374:1889","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2378:5738":{"id":"0:2378:5738","crate_id":0,"name":"yo","span":{"filename":"src/offset/mod.rs","begin":[266,4],"end":[268,5]},"visibility":"default","docs":"Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date and/or invalid DOY.\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.yo(2015, 135).to_string(), \"2015-05-15UTC\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2577:2478":{"id":"0:2577:2478","crate_id":0,"name":"nanosecond","span":{"filename":"src/traits.rs","begin":[147,4],"end":[147,32]},"visibility":"default","docs":"Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./naive/struct.NaiveTime.html#leap-second-handling).","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2490:1907":{"id":"0:2490:1907","crate_id":0,"name":"weekday","span":{"filename":"src/weekday.rs","begin":[1,0],"end":[309,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3474:1882","0:3510:1908"],"is_stripped":true}},"0:2705":{"id":"0:2705","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[97,16],"end":[97,25]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1730":{"id":"0:1730","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[19,40],"end":[19,52]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::datetime::MAX_DATETIME","name":"MAX_DATETIME","id":"0:1387:1895","glob":false}},"2:13429:60063":{"id":"2:13429:60063","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:16021:6936"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22804:8893":{"id":"2:22804:8893","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22805:8885","2:22806:63730","2:22807:1227","2:22808:1228","2:22809:4445","2:22810:6074","2:22811:63792","2:22812:6130","2:22813:63793","2:22814:7326","2:22815:63731","2:22816:63732","2:22817:63733","2:22818:63734","2:22819:63735","2:22820:63736","2:22821:63737"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22853:8524","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2735:2686":{"id":"0:2735:2686","crate_id":0,"name":"TimezoneName","span":{"filename":"src/format/mod.rs","begin":[220,4],"end":[220,16]},"visibility":"default","docs":"Timezone name.\n\nIt does not support parsing, its use in the parser is an immediate failure.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:636":{"id":"0:636","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[401,0],"end":[406,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","type_id","description","cause","source"],"trait":{"kind":"resolved_path","inner":{"name":"Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:637:2765"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13535:2235":{"id":"2:13535:2235","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:12993:2500","FromStr::Err":"2:12993:2500"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47622:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12993:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12993:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2379:4468":{"id":"0:2379:4468","crate_id":0,"name":"yo_opt","span":{"filename":"src/offset/mod.rs","begin":[277,4],"end":[282,5]},"visibility":"default","docs":"Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date and/or invalid DOY.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2364:2077":{"id":"0:2364:2077","crate_id":0,"name":"and_time","span":{"filename":"src/offset/mod.rs","begin":[93,4],"end":[100,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["time",{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3081:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:790:7918":{"id":"5:790:7918","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5727:8542":{"id":"1:5727:8542","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5728:11098","1:5729:61923","1:5730:61924"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:871:7282":{"id":"23:871:7282","crate_id":23,"name":"NumAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Num","id":"23:844:7265","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumAssignOps","id":"23:866:7281","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3431:1542":{"id":"0:3431:1542","crate_id":0,"name":"0","span":{"filename":"src/offset/mod.rs","begin":[49,14],"end":[49,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"2:3522:131":{"id":"2:3522:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3524:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3525:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3198-0:2795:2039":{"id":"b:2:3198-0:2795:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3201:2535"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3459:6600":{"id":"0:3459:6600","crate_id":0,"name":"DurationExceedsLimit","span":{"filename":"src/round.rs","begin":[267,4],"end":[267,24]},"visibility":"default","docs":"Error when `Duration.num_nanoseconds` exceeds the limit.\n\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};\nlet dt = Utc.ymd(2260, 12, 31).and_hms_nano(23, 59, 59, 1_75_500_000);\n\nassert_eq!(\n    dt.duration_round(Duration::days(300 * 365)),\n    Err(RoundingError::DurationExceedsLimit)\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2680:1901":{"id":"0:2680:1901","crate_id":0,"name":"IsoWeek","span":{"filename":"src/format/mod.rs","begin":[122,4],"end":[122,11]},"visibility":"default","docs":"Week number in the ISO week date (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3440:604":{"id":"0:3440:604","crate_id":0,"name":"eq","span":{"filename":"src/offset/mod.rs","begin":[40,16],"end":[40,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2587":{"id":"0:2587","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[503,27],"end":[503,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"traits::Timelike","name":"Timelike","id":"0:2572:1881","glob":false}},"a:2:9260:7636-0:2659:2443":{"id":"a:2:9260:7636-0:2659:2443","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9260:7636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13539:60007":{"id":"2:13539:60007","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2644:2445":{"id":"0:2644:2445","crate_id":0,"name":"Zero","span":{"filename":"src/format/mod.rs","begin":[79,4],"end":[79,8]},"visibility":"default","docs":"Zero (`0`) padding.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:8367:8369":{"id":"2:8367:8369","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8369:7909"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3417:7096":{"id":"2:3417:7096","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3419:181","2:3420:1236"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3269:211-0:2659:2443":{"id":"a:2:3269:211-0:2659:2443","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:620":{"id":"0:620","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[169,0],"end":[169,30]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:9343:8520":{"id":"1:9343:8520","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9344:7332","1:9345:7270","1:9346:2213","1:9347:62492","1:9348:1904","1:9349:43892","1:9350:62491"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10565:8524","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:722:7316":{"id":"23:722:7316","crate_id":23,"name":"SaturatingSub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:723:1228"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sub","id":"2:3342:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2717:2668":{"id":"0:2717:2668","crate_id":0,"name":"LongMonthName","span":{"filename":"src/format/mod.rs","begin":[190,4],"end":[190,17]},"visibility":"default","docs":"Full month names.\n\nPrints a full name in the title case, reads either a short or full name in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2390:5786":{"id":"0:2390:5786","crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/mod.rs","begin":[441,4],"end":[441,93]},"visibility":"default","docs":"Creates the offset(s) for given local `NaiveDateTime` if possible.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:3008:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:2374:1889","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3269:211-0:2850:2735":{"id":"a:2:3269:211-0:2850:2735","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2403":{"id":"0:2403","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[491,17],"end":[491,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::FixedOffset","name":"FixedOffset","id":"0:3101:1883","glob":false}},"0:630":{"id":"0:630","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[339,0],"end":[344,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:631:782"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3208-0:2835:1898":{"id":"b:2:3208-0:2835:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23465:8888":{"id":"2:23465:8888","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23466:1270","2:23467:1269","2:23468:1267","2:23469:1266"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialEq","id":"2:22877:8887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2875":{"id":"0:2875","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[347,34],"end":[347,36]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2459:126":{"id":"0:2459:126","crate_id":0,"name":"Err","span":{"filename":"src/round.rs","begin":[104,4],"end":[104,32]},"visibility":"default","docs":"Error that can occur in rounding or truncating","links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"std::error::Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}},"b:2:2872-0:2835:1898":{"id":"b:2:2872-0:2835:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2866:7070","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2874:5914"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13459:3654":{"id":"2:13459:3654","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"1:16004:6922","self::pattern":"2:13054:1925","`None`":"2:47495:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:523:7299":{"id":"23:523:7299","crate_id":23,"name":"PrimInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:524:66432","23:525:66433","23:526:66434","23:527:43967","23:528:66435","23:529:66436","23:530:1119","23:531:1120","23:532:66437","23:533:66438","23:534:66439","23:535:66440","23:536:66441","23:537:66442","23:538:66443","23:539:66444","23:540:66445","23:541:66446","23:542:7277"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Num","id":"23:844:7265","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}},{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}},{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}},{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumCast","id":"23:358:7296","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Bounded","id":"23:233:7293","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"2:2957:177","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Not","id":"2:3389:7094","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BitAnd","id":"2:3396:7091","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BitOr","id":"2:3401:7092","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BitXor","id":"2:3406:7093","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Shl","id":"2:3411:7095","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Shr","id":"2:3417:7096","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"CheckedAdd","id":"23:572:7300","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"CheckedSub","id":"23:575:7307","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"CheckedMul","id":"23:577:7302","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"CheckedDiv","id":"23:579:7301","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Saturating","id":"23:715:7313","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:896:2235":{"id":"0:896:2235","crate_id":0,"name":"parse","span":{"filename":"src/format/parse.rs","begin":[243,0],"end":[249,1]},"visibility":"public","docs":"Tries to parse given string into `parsed` with given formatting items.\nReturns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).\nThere should be no trailing string after parsing;\nuse a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.\n\nThis particular date and time parser is:\n\n- Greedy. It will consume the longest possible prefix.\n  For example, `April` is always consumed entirely when the long month name is requested;\n  it equally accepts `Apr`, but prefers the longer prefix in this case.\n\n- Padding-agnostic (for numeric items).\n  The [`Pad`](./enum.Pad.html) field is completely ignored,\n  so one can prepend any number of whitespace then any number of zeroes before numbers.\n\n- (Still) obeying the intrinsic parsing width. This allows, for example, parsing `HHMMSS`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["parsed",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2878:2236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8602:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1971:5857":{"id":"0:1971:5857","crate_id":0,"name":"tz_info","span":{"filename":"src/offset/local/tz_info/mod.rs","begin":[1,0],"end":[131,60]},"visibility":{"restricted":{"parent":"0:1883:816","path":"::offset::local"}},"docs":null,"links":{},"attrs":["#[cfg(unix)]","#![deny(missing_docs)]","#![allow(dead_code)]","#![warn(unreachable_pub)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"2:13494:1923":{"id":"2:13494:1923","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:13054:1925","prim@char":"1:16004:6922","str::matches":"1:16010:6927","`DoubleEndedIterator`":"2:8448:120"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49666:7176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:789:7917":{"id":"5:789:7917","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:2558:2158":{"id":"0:2558:2158","crate_id":0,"name":"day","span":{"filename":"src/traits.rs","begin":[33,4],"end":[33,25]},"visibility":"default","docs":"Returns the day of month starting from 1.\n\nThe return value ranges from 1 to 31. (The last day of month differs by months.)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2743:2698":{"id":"0:2743:2698","crate_id":0,"name":"TimezoneOffsetZ","span":{"filename":"src/format/mod.rs","begin":[239,4],"end":[239,19]},"visibility":"default","docs":"Same as [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.\nParsing allows an optional colon.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2872-0:614:2655":{"id":"b:2:2872-0:614:2655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2866:7070","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2874:5914"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3484:2816":{"id":"0:3484:2816","crate_id":0,"name":"Thu","span":{"filename":"src/weekday.rs","begin":[22,4],"end":[22,11]},"visibility":"default","docs":"Thursday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2884:2951":{"id":"0:2884:2951","crate_id":0,"name":"isoyear_mod_100","span":{"filename":"src/format/parsed.rs","begin":[59,4],"end":[59,36]},"visibility":"public","docs":"Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), modulo 100.\nImplies that the year is >= 1 BCE when set.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}},"param_names":[]}}},"a:2:9260:7636-0:2763:2701":{"id":"a:2:9260:7636-0:2763:2701","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9260:7636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:7470-0:2914:2040":{"id":"a:2:3310:7470-0:2914:2040","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3310:7470","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3202-0:2850:2735":{"id":"b:2:3202-0:2850:2735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:7470-0:3422:1903":{"id":"a:2:3310:7470-0:3422:1903","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3310:7470","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3310:7470","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3182:227":{"id":"2:3182:227","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3184:127","2:3185:1416"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6088:65276":{"id":"5:6088:65276","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3543:2807":{"id":"0:3543:2807","crate_id":0,"name":"August","span":{"filename":"src/month.rs","begin":[49,4],"end":[49,14]},"visibility":"default","docs":"August","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13514:6034":{"id":"2:13514:6034","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:16004:6922","self::pattern":"2:13054:1925"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"2:13084:7158","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2559:2188":{"id":"0:2559:2188","crate_id":0,"name":"day0","span":{"filename":"src/traits.rs","begin":[38,4],"end":[38,26]},"visibility":"default","docs":"Returns the day of month starting from 0.\n\nThe return value ranges from 0 to 30. (The last day of month differs by months.)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1061:1900":{"id":"0:1061:1900","crate_id":0,"name":"naive","span":{"filename":"src/naive/mod.rs","begin":[1,0],"end":[38,1]},"visibility":"public","docs":"Date and time types unconcerned with timezones.\n\nThey are primarily building blocks for other types\n(e.g. [`TimeZone`](../offset/trait.TimeZone.html)),\nbut can be also used for the simpler date and time handling.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1714","0:1717","0:1720","0:1723","0:1727","0:1730","0:1733","0:1736","0:1739"],"is_stripped":false}},"0:2805:1542":{"id":"0:2805:1542","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[286,10],"end":[286,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"b:2:2869-0:3422:1903":{"id":"b:2:2869-0:3422:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:2871:2029"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1062:1890":{"id":"0:1062:1890","crate_id":0,"name":"date","span":{"filename":"src/naive/date.rs","begin":[4,0],"end":[2774,1]},"visibility":{"restricted":{"parent":"0:1061:1900","path":"::naive"}},"docs":"ISO 8601 calendar date without timezone.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2942:1902","0:2947:1885","0:1175:1892","0:1176:1891","0:2966:4197","0:2987:4205"],"is_stripped":true}},"0:2365:2089":{"id":"0:2365:2089","crate_id":0,"name":"and_hms_opt","span":{"filename":"src/offset/mod.rs","begin":[107,4],"end":[114,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1795:5698":{"id":"0:1795:5698","crate_id":0,"name":"fixed","span":{"filename":"src/offset/fixed.rs","begin":[4,0],"end":[248,1]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":"The time zone which has a fixed offset from UTC.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3101:1883"],"is_stripped":true}},"b:2:3198-0:614:2655":{"id":"b:2:3198-0:614:2655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3201:2535"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3423:7097":{"id":"2:3423:7097","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3425:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4723:2830":{"id":"1:4723:2830","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4724:2202","1:4725:62523","1:4727:62524","1:4728:9438","1:4729:62525","1:4730:62526","1:4731:6719","1:4740:7893"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2827":{"id":"0:2827","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[278,27],"end":[278,29]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13520:19988":{"id":"2:13520:19988","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:16004:6922","self::pattern":"2:13054:1925"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8880:7125":{"id":"2:8880:7125","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8602:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:859:7280":{"id":"23:859:7280","crate_id":23,"name":"RefNum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Base","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumOps","id":"23:847:7278","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Base"}},{"type":{"kind":"generic","inner":"Base"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumOps","id":"23:847:7278","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Base"}}}},{"type":{"kind":"generic","inner":"Base"}}],"bindings":[]}},"param_names":[]}},"generic_params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"implementations":[]}},"0:2415":{"id":"0:2415","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[491,61],"end":[491,64]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::Utc","name":"Utc","id":"0:3411:1884","glob":false}},"a:2:9260:7636-0:2641:2444":{"id":"a:2:9260:7636-0:2641:2444","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9260:7636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:7795:8646":{"id":"1:7795:8646","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7796:62520"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2891:2158":{"id":"0:2891:2158","crate_id":0,"name":"day","span":{"filename":"src/format/parsed.rs","begin":[83,4],"end":[83,24]},"visibility":"public","docs":"Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"a:2:3269:211-0:2933:2038":{"id":"a:2:3269:211-0:2933:2038","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2933:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2923:408":{"id":"0:2923:408","crate_id":0,"name":"clone","span":{"filename":"src/format/strftime.rs","begin":[197,9],"end":[197,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:2641:2444":{"id":"b:2:3198-0:2641:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3201:2535"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2682:2635":{"id":"0:2682:2635","crate_id":0,"name":"NumDaysFromSun","span":{"filename":"src/format/mod.rs","begin":[124,4],"end":[124,18]},"visibility":"default","docs":"Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2725:2677":{"id":"0:2725:2677","crate_id":0,"name":"UpperAmPm","span":{"filename":"src/format/mod.rs","begin":[206,4],"end":[206,13]},"visibility":"default","docs":"AM/PM.\n\nPrints in upper case, reads in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"5:5837:7362":{"id":"5:5837:7362","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5839:181","5:5840:6127"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2843":{"id":"0:2843","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[336,23],"end":[336,32]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2844:604","0:2845:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6787:8556":{"id":"1:6787:8556","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6788:11127","1:6789:61824"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10565:8524","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2751:1542":{"id":"0:2751:1542","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[249,13],"end":[249,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"2:3337:2030":{"id":"2:3337:2030","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3339:181","2:3340:265"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3522:2801":{"id":"0:3522:2801","crate_id":0,"name":"January","span":{"filename":"src/month.rs","begin":[35,4],"end":[35,15]},"visibility":"default","docs":"January","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13445:37327":{"id":"2:13445:37327","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:16010:6927"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49736:7168","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2590:1872":{"id":"0:2590:1872","crate_id":0,"name":"Date","span":{"filename":"src/date.rs","begin":[58,0],"end":[61,1]},"visibility":"public","docs":"ISO 8601 calendar date with time zone.\n\nYou almost certainly want to be using a [`NaiveDate`] instead of this type.\n\nThis type primarily exists to aid in the construction of DateTimes that\nhave a timezone by way of the [`TimeZone`] datelike constructors (e.g.\n[`TimeZone::ymd`]).\n\nThis type should be considered ambiguous at best, due to the inherent lack\nof precision required for the time zone resolution.\n\nThere are some guarantees on the usage of `Date<Tz>`:\n\n- If properly constructed via [`TimeZone::ymd`] and others without an error,\n  the corresponding local date should exist for at least a moment.\n  (It may still have a gap from the offset changes.)\n\n- The `TimeZone` is free to assign *any* [`Offset`](crate::offset::Offset) to the\n  local date, as long as that offset did occur in given day.\n\n  For example, if `2015-03-08T01:59-08:00` is followed by `2015-03-08T03:00-07:00`,\n  it may produce either `2015-03-08-08:00` or `2015-03-08-07:00`\n  but *not* `2015-03-08+00:00` and others.\n\n- Once constructed as a full `DateTime`, [`DateTime::date`] and other associated\n  methods should return those for the original `Date`. For example, if `dt =\n  tz.ymd(y,m,d).hms(h,n,s)` were valid, `dt.date() == tz.ymd(y,m,d)`.\n\n- The date is timezone-agnostic up to one day (i.e. practically always),\n  so the local date and UTC date should be equal for most cases\n  even though the raw calculation between `NaiveDate` and `Duration` may not.","links":{"`TimeZone`":"0:2374:1889","`NaiveDate`":"0:2947:1885","`TimeZone::ymd`":"0:2374:1889","crate::offset::Offset":"0:2372:1888","`DateTime::date`":"0:2621:1877"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:10307:7223":{"id":"2:10307:7223","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10308:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:2763:2701":{"id":"b:2:2869-0:2763:2701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2871:2029"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3278:217":{"id":"2:3278:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2767":{"id":"0:2767","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[253,16],"end":[253,21]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2768:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2367:2106":{"id":"0:2367:2106","crate_id":0,"name":"and_hms_micro_opt","span":{"filename":"src/offset/mod.rs","begin":[143,4],"end":[156,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["micro",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10303:7221":{"id":"2:10303:7221","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10304:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2452:6569":{"id":"0:2452:6569","crate_id":0,"name":"trunc_subsecs","span":{"filename":"src/round.rs","begin":[44,4],"end":[44,48]},"visibility":"default","docs":"Return a copy truncated to the specified number of subsecond\ndigits. With 9 or more digits, self is returned unmodified.\n\n# Example\n``` rust\n# use chrono::{DateTime, SubsecRound, Timelike, TimeZone, Utc};\nlet dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);\nassert_eq!(dt.trunc_subsecs(2).nanosecond(), 150_000_000);\nassert_eq!(dt.trunc_subsecs(1).nanosecond(), 100_000_000);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["digits",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13540:60008":{"id":"2:13540:60008","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3444:660":{"id":"0:3444:660","crate_id":0,"name":"fmt","span":{"filename":"src/offset/mod.rs","begin":[40,27],"end":[40,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10252:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10241:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2484":{"id":"0:2484","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[494,31],"end":[494,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"round::RoundingError","name":"RoundingError","id":"0:3456:1906","glob":false}},"a:2:3269:211-0:2714:2237":{"id":"a:2:3269:211-0:2714:2237","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2600:2246":{"id":"0:2600:2246","crate_id":0,"name":"Millis","span":{"filename":"src/datetime/mod.rs","begin":[59,4],"end":[59,10]},"visibility":"default","docs":"Use fixed 3 subsecond digits. This corresponds to\n[Fixed::Nanosecond3](format/enum.Fixed.html#variant.Nanosecond3).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3525:2802":{"id":"0:3525:2802","crate_id":0,"name":"February","span":{"filename":"src/month.rs","begin":[37,4],"end":[37,16]},"visibility":"default","docs":"February","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13508:3574":{"id":"2:13508:3574","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6861:8534":{"id":"1:6861:8534","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6862:62224"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3435:408":{"id":"0:3435:408","crate_id":0,"name":"clone","span":{"filename":"src/offset/mod.rs","begin":[40,9],"end":[40,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2674:2452":{"id":"0:2674:2452","crate_id":0,"name":"Day","span":{"filename":"src/format/mod.rs","begin":[116,4],"end":[116,7]},"visibility":"default","docs":"Day of the month (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13441:60083":{"id":"2:13441:60083","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:16010:6927"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:2795:2039":{"id":"b:2:3202-0:2795:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2515":{"id":"0:2515","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[497,37],"end":[497,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"weekday::Weekday","name":"Weekday","id":"0:3474:1882","glob":false}},"0:2384:2320":{"id":"0:2384:2320","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/offset/mod.rs","begin":[365,4],"end":[367,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap milliseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\nPanics on out-of-range number of milliseconds for a non-panicking\nversion see [`timestamp_millis_opt`](#method.timestamp_millis_opt).\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.timestamp_millis(1431648000).timestamp(), 1431648);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["millis",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2545:1912":{"id":"0:2545:1912","crate_id":0,"name":"traits","span":{"filename":"src/traits.rs","begin":[1,0],"end":[241,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2553:1879","0:2572:1881"],"is_stripped":true}},"23:641:7312":{"id":"23:641:7312","crate_id":23,"name":"MulAddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:644:66344"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2719:2670":{"id":"0:2719:2670","crate_id":0,"name":"ShortWeekdayName","span":{"filename":"src/format/mod.rs","begin":[194,4],"end":[194,20]},"visibility":"default","docs":"Abbreviated day of the week names.\n\nPrints a three-letter-long name in the title case, reads the same name in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2650:408":{"id":"0:2650:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[74,15],"end":[74,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6085:7414":{"id":"5:6085:7414","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2834:660":{"id":"0:2834:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[278,31],"end":[278,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10252:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10241:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2755":{"id":"0:2755","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[181,16],"end":[181,25]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2756:604","0:2757:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3213-0:2714:2237":{"id":"b:2:3213-0:2714:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13442:3630":{"id":"2:13442:3630","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:16004:6922"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49432:7133","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:1075:8565":{"id":"1:1075:8565","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1076:7917","1:1077:9224","1:1078:61164","1:1079:61165","1:1080:60006","1:1081:60007","1:1082:60008"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3081:1887":{"id":"0:3081:1887","crate_id":0,"name":"NaiveTime","span":{"filename":"src/naive/time/mod.rs","begin":[192,0],"end":[195,1]},"visibility":"public","docs":"ISO 8601 time without timezone.\nAllows for the nanosecond precision and optional leap second representation.\n\n# Leap Second Handling\n\nSince 1960s, the manmade atomic clock has been so accurate that\nit is much more accurate than Earth's own motion.\nIt became desirable to define the civil time in terms of the atomic clock,\nbut that risks the desynchronization of the civil time from Earth.\nTo account for this, the designers of the Coordinated Universal Time (UTC)\nmade that the UTC should be kept within 0.9 seconds of the observed Earth-bound time.\nWhen the mean solar day is longer than the ideal (86,400 seconds),\nthe error slowly accumulates and it is necessary to add a **leap second**\nto slow the UTC down a bit.\n(We may also remove a second to speed the UTC up a bit, but it never happened.)\nThe leap second, if any, follows 23:59:59 of June 30 or December 31 in the UTC.\n\nFast forward to the 21st century,\nwe have seen 26 leap seconds from January 1972 to December 2015.\nYes, 26 seconds. Probably you can read this paragraph within 26 seconds.\nBut those 26 seconds, and possibly more in the future, are never predictable,\nand whether to add a leap second or not is known only before 6 months.\nInternet-based clocks (via NTP) do account for known leap seconds,\nbut the system API normally doesn't (and often can't, with no network connection)\nand there is no reliable way to retrieve leap second information.\n\nChrono does not try to accurately implement leap seconds; it is impossible.\nRather, **it allows for leap seconds but behaves as if there are *no other* leap seconds.**\nVarious operations will ignore any possible leap second(s)\nexcept when any of the operands were actually leap seconds.\n\nIf you cannot tolerate this behavior,\nyou must use a separate `TimeZone` for the International Atomic Time (TAI).\nTAI is like UTC but has no leap seconds, and thus slightly differs from UTC.\nChrono does not yet provide such implementation, but it is planned.\n\n## Representing Leap Seconds\n\nThe leap second is indicated via fractional seconds more than 1 second.\nThis makes possible to treat a leap second as the prior non-leap second\nif you don't care about sub-second accuracy.\nYou should use the proper formatting to get the raw leap second.\n\nAll methods accepting fractional seconds will accept such values.\n\n```\nuse chrono::{NaiveDate, NaiveTime, Utc, TimeZone};\n\nlet t = NaiveTime::from_hms_milli(8, 59, 59, 1_000);\n\nlet dt1 = NaiveDate::from_ymd(2015, 7, 1).and_hms_micro(8, 59, 59, 1_000_000);\n\nlet dt2 = Utc.ymd(2015, 6, 30).and_hms_nano(23, 59, 59, 1_000_000_000);\n# let _ = (t, dt1, dt2);\n```\n\nNote that the leap second can happen anytime given an appropriate time zone;\n2015-07-01 01:23:60 would be a proper leap second if UTC+01:24 had existed.\nPractically speaking, though, by the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.\n\n## Date And Time Arithmetics\n\nAs a concrete example, let's assume that `03:00:60` and `04:00:60` are leap seconds.\nIn reality, of course, leap seconds are separated by at least 6 months.\nWe will also use some intuitive concise notations for the explanation.\n\n`Time + Duration`\n(short for [`NaiveTime::overflowing_add_signed`](#method.overflowing_add_signed)):\n\n- `03:00:00 + 1s = 03:00:01`.\n- `03:00:59 + 60s = 03:02:00`.\n- `03:00:59 + 1s = 03:01:00`.\n- `03:00:60 + 1s = 03:01:00`.\n  Note that the sum is identical to the previous.\n- `03:00:60 + 60s = 03:01:59`.\n- `03:00:60 + 61s = 03:02:00`.\n- `03:00:60.1 + 0.8s = 03:00:60.9`.\n\n`Time - Duration`\n(short for [`NaiveTime::overflowing_sub_signed`](#method.overflowing_sub_signed)):\n\n- `03:00:00 - 1s = 02:59:59`.\n- `03:01:00 - 1s = 03:00:59`.\n- `03:01:00 - 60s = 03:00:00`.\n- `03:00:60 - 60s = 03:00:00`.\n  Note that the result is identical to the previous.\n- `03:00:60.7 - 0.4s = 03:00:60.3`.\n- `03:00:60.7 - 0.9s = 03:00:59.8`.\n\n`Time - Time`\n(short for [`NaiveTime::signed_duration_since`](#method.signed_duration_since)):\n\n- `04:00:00 - 03:00:00 = 3600s`.\n- `03:01:00 - 03:00:00 = 60s`.\n- `03:00:60 - 03:00:00 = 60s`.\n  Note that the difference is identical to the previous.\n- `03:00:60.6 - 03:00:59.4 = 1.2s`.\n- `03:01:00 - 03:00:59.8 = 0.2s`.\n- `03:01:00 - 03:00:60.5 = 0.5s`.\n  Note that the difference is larger than the previous,\n  even though the leap second clearly follows the previous whole second.\n- `04:00:60.9 - 03:00:60.1 =\n  (04:00:60.9 - 04:00:00) + (04:00:00 - 03:01:00) + (03:01:00 - 03:00:60.1) =\n  60.9s + 3540s + 0.9s = 3601.8s`.\n\nIn general,\n\n- `Time + Duration` unconditionally equals to `Duration + Time`.\n\n- `Time - Duration` unconditionally equals to `Time + (-Duration)`.\n\n- `Time1 - Time2` unconditionally equals to `-(Time2 - Time1)`.\n\n- Associativity does not generally hold, because\n  `(Time + Duration1) - Duration2` no longer equals to `Time + (Duration1 - Duration2)`\n  for two positive durations.\n\n    - As a special case, `(Time + Duration) - Duration` also does not equal to `Time`.\n\n    - If you can assume that all durations have the same sign, however,\n      then the associativity holds:\n      `(Time + Duration1) + Duration2` equals to `Time + (Duration1 + Duration2)`\n      for two positive durations.\n\n## Reading And Writing Leap Seconds\n\nThe \"typical\" leap seconds on the minute boundary are\ncorrectly handled both in the formatting and parsing.\nThe leap second in the human-readable representation\nwill be represented as the second part being 60, as required by ISO 8601.\n\n```\nuse chrono::{Utc, TimeZone};\n\nlet dt = Utc.ymd(2015, 6, 30).and_hms_milli(23, 59, 59, 1_000);\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:59:60Z\");\n```\n\nThere are hypothetical leap seconds not on the minute boundary\nnevertheless supported by Chrono.\nThey are allowed for the sake of completeness and consistency;\nthere were several \"exotic\" time zone offsets with fractional minutes prior to UTC after all.\nFor such cases the human-readable representation is ambiguous\nand would be read back to the next non-leap second.\n\n```\nuse chrono::{DateTime, Utc, TimeZone};\n\nlet dt = Utc.ymd(2015, 6, 30).and_hms_milli(23, 56, 4, 1_000);\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:56:05Z\");\n\nlet dt = Utc.ymd(2015, 6, 30).and_hms(23, 56, 5);\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:56:05Z\");\nassert_eq!(DateTime::parse_from_rfc3339(\"2015-06-30T23:56:05Z\").unwrap(), dt);\n```\n\nSince Chrono alone cannot determine any existence of leap seconds,\n**there is absolutely no guarantee that the leap second read has actually happened**.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:3435:7100":{"id":"2:3435:7100","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3437:1234"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2887:2837":{"id":"0:2887:2837","crate_id":0,"name":"week_from_mon","span":{"filename":"src/format/parsed.rs","begin":[70,4],"end":[70,34]},"visibility":"public","docs":"Week number, where the week 1 starts at the first Monday of January\n(0--53, 1--53 or 1--52 depending on the year).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"2:13506:64633":{"id":"2:13506:64633","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2660:2449":{"id":"0:2660:2449","crate_id":0,"name":"Year","span":{"filename":"src/format/mod.rs","begin":[101,4],"end":[101,8]},"visibility":"default","docs":"Full Gregorian year (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"23:611:7308":{"id":"23:611:7308","crate_id":23,"name":"CheckedEuclid","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:612:66394","23:613:66395"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Euclid","id":"23:599:7309","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:5:787-0:2850:2735":{"id":"b:5:787-0:2850:2735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:7917","5:790:7918","5:791:7919"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:2763:2701":{"id":"b:5:787-0:2763:2701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:7917","5:790:7918","5:791:7919"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:720:7314":{"id":"23:720:7314","crate_id":23,"name":"SaturatingAdd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:721:1227"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Add","id":"2:3337:2030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2395:5790":{"id":"0:2395:5790","crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/mod.rs","begin":[460,4],"end":[460,68]},"visibility":"default","docs":"Creates the offset for given UTC `NaiveDate`. This cannot fail.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2947:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:2374:1889","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3281:220-0:2714:2237":{"id":"a:2:3281:220-0:2714:2237","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2806:2722":{"id":"0:2806:2722","crate_id":0,"name":"OwnedSpace","span":{"filename":"src/format/mod.rs","begin":[289,4],"end":[289,24]},"visibility":"default","docs":"Same as `Space` but with the string owned by the item.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2592","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}]}},"0:2772:907":{"id":"0:2772:907","crate_id":0,"name":"ne","span":{"filename":"src/format/mod.rs","begin":[253,23],"end":[253,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2621:1877":{"id":"0:2621:1877","crate_id":0,"name":"DateTime","span":{"filename":"src/datetime/mod.rs","begin":[86,0],"end":[89,1]},"visibility":"public","docs":"ISO 8601 combined date and time with time zone.\n\nThere are some constructors implemented here (the `from_*` methods), but\nthe general-purpose constructors are all via the methods on the\n[`TimeZone`](./offset/trait.TimeZone.html) implementations.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:3247:115":{"id":"2:3247:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3248:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3487:2817":{"id":"0:3487:2817","crate_id":0,"name":"Fri","span":{"filename":"src/weekday.rs","begin":[24,4],"end":[24,11]},"visibility":"default","docs":"Friday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:2957:177":{"id":"2:2957:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2958:415","2:2959:3099","2:2960:2087","2:2961:7289"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2396:3097":{"id":"0:2396:3097","crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/mod.rs","begin":[463,4],"end":[463,76]},"visibility":"default","docs":"Creates the offset for given UTC `NaiveDateTime`. This cannot fail.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:3008:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:2374:1889","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2872-0:2641:2444":{"id":"b:2:2872-0:2641:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2866:7070","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2874:5914"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:55":{"id":"0:55","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[463,20],"end":[463,26]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Offset","name":"Offset","id":"0:2372:1888","glob":false}},"0:2893:2965":{"id":"0:2893:2965","crate_id":0,"name":"hour_mod_12","span":{"filename":"src/format/parsed.rs","begin":[89,4],"end":[89,32]},"visibility":"public","docs":"Hour number modulo 12 (0--11).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"23:476:7298":{"id":"23:476:7298","crate_id":23,"name":"One","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:477:7297","23:478:66107","23:479:66106"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Mul","id":"2:3347:7085","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13453:3198":{"id":"2:13453:3198","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:13054:1925","prim@char":"1:16004:6922"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13510:64634":{"id":"2:13510:64634","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:7470-0:2659:2443":{"id":"a:2:3310:7470-0:2659:2443","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3310:7470","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2877":{"id":"0:2877","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[347,38],"end":[347,42]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:7470-0:2835:1898":{"id":"a:2:3310:7470-0:2835:1898","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3310:7470","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2366:2098":{"id":"0:2366:2098","crate_id":0,"name":"and_hms_milli_opt","span":{"filename":"src/offset/mod.rs","begin":[122,4],"end":[135,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["milli",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2351":{"id":"0:2351","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[37,0],"end":[37,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::utc::Utc","name":"Utc","id":"0:3411:1884","glob":false}},"b:2:3208-0:2763:2701":{"id":"b:2:3208-0:2763:2701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1743":{"id":"0:1743","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[484,16],"end":[484,23]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::IsoWeek","name":"IsoWeek","id":"0:3065:1901","glob":false}},"0:2816:127":{"id":"0:2816:127","crate_id":0,"name":"Error","span":{"filename":"src/format/mod.rs","begin":[296,4],"end":[296,9]},"visibility":"default","docs":"Issues a formatting error. Used to signal an invalid format string.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2598:2243":{"id":"0:2598:2243","crate_id":0,"name":"Secs","span":{"filename":"src/datetime/mod.rs","begin":[55,4],"end":[55,8]},"visibility":"default","docs":"Format whole seconds only, with no decimal point nor subseconds.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2885:1909":{"id":"0:2885:1909","crate_id":0,"name":"month","span":{"filename":"src/format/parsed.rs","begin":[62,4],"end":[62,26]},"visibility":"public","docs":"Month (1--12).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"0:2696:2462":{"id":"0:2696:2462","crate_id":0,"name":"Nanosecond","span":{"filename":"src/format/mod.rs","begin":[140,4],"end":[140,14]},"visibility":"default","docs":"The number of nanoseconds since the last whole second (FW=PW=9).\nNote that this is *not* left-aligned;\nsee also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2606:2256":{"id":"0:2606:2256","crate_id":0,"name":"AutoSi","span":{"filename":"src/datetime/mod.rs","begin":[72,4],"end":[72,10]},"visibility":"default","docs":"Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to\ndisplay all available non-zero sub-second digits.  This corresponds to\n[Fixed::Nanosecond](format/enum.Fixed.html#variant.Nanosecond).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3546:2808":{"id":"0:3546:2808","crate_id":0,"name":"September","span":{"filename":"src/month.rs","begin":[51,4],"end":[51,17]},"visibility":"default","docs":"September","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1176:1891":{"id":"0:1176:1891","crate_id":0,"name":"MAX_DATE","span":{"filename":"src/naive/date.rs","begin":[177,0],"end":[177,47]},"visibility":"public","docs":"The maximum possible `NaiveDate` (December 31, 262143 CE).","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDate::MAX instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDate::MAX instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2947:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"NaiveDate::MAX","value":null,"is_literal":false}},"1:4741:7390":{"id":"1:4741:7390","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4742:62406","1:4743:44297","1:4744:62408","1:4745:62407"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2692:2456":{"id":"0:2692:2456","crate_id":0,"name":"Minute","span":{"filename":"src/format/mod.rs","begin":[134,4],"end":[134,10]},"visibility":"default","docs":"The number of minutes since the last whole hour (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:12501:9217":{"id":"2:12501:9217","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12502:2039","2:12503:64460"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2567:2195":{"id":"0:2567:2195","crate_id":0,"name":"with_day","span":{"filename":"src/traits.rs","begin":[74,4],"end":[74,49]},"visibility":"default","docs":"Makes a new value with the day of month (starting from 1) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3213-0:2835:1898":{"id":"b:2:3213-0:2835:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2578:2479":{"id":"0:2578:2479","crate_id":0,"name":"with_hour","span":{"filename":"src/traits.rs","begin":[152,4],"end":[152,51]},"visibility":"default","docs":"Makes a new value with the hour number changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:8404:151":{"id":"2:8404:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8405:2039","2:8406:7875","2:8407:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2863:97":{"id":"2:2863:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2865:2029"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:2554:2157":{"id":"0:2554:2157","crate_id":0,"name":"year","span":{"filename":"src/traits.rs","begin":[6,4],"end":[6,26]},"visibility":"default","docs":"Returns the year number in the [calendar date](./naive/struct.NaiveDate.html#calendar-date).","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2659:2443":{"id":"0:2659:2443","crate_id":0,"name":"Numeric","span":{"filename":"src/format/mod.rs","begin":[98,0],"end":[150,1]},"visibility":"public","docs":"Numeric item types.\nThey have associated formatting width (FW) and parsing width (PW).\n\nThe **formatting width** is the minimal width to be formatted.\nIf the number is too short, and the padding is not [`Pad::None`](./enum.Pad.html#variant.None),\nthen it is left-padded.\nIf the number is too long or (in some cases) negative, it is printed as is.\n\nThe **parsing width** is the maximal width to be scanned.\nThe parser only tries to consume from one to given number of digits (greedily).\nIt also trims the preceding whitespace if any.\nIt cannot parse the negative number, so some date and time cannot be formatted then\nparsed with the same formatting items.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2660:2449","0:2662:2618","0:2664:2620","0:2666:2622","0:2668:2624","0:2670:2626","0:2672:1880","0:2674:2452","0:2676:2630","0:2678:2632","0:2680:1901","0:2682:2635","0:2684:2637","0:2686:2639","0:2688:2454","0:2690:2642","0:2692:2456","0:2694:2457","0:2696:2462","0:2698:2650","0:2700:2654"],"impls":["a:2:3310:7470-0:2659:2443","a:2:3281:220-0:2659:2443","a:2:9259:7637-0:2659:2443","a:2:9260:7636-0:2659:2443","a:2:3269:211-0:2659:2443","b:2:3202-0:2659:2443","b:2:3213-0:2659:2443","b:2:4002-0:2659:2443","b:2:2869-0:2659:2443","b:2:2872-0:2659:2443","b:2:3208-0:2659:2443","b:2:3198-0:2659:2443","b:5:787-0:2659:2443","0:2703","0:2705","0:2706","0:2709","0:2710","0:2712"]}},"2:3279:106":{"id":"2:3279:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2712":{"id":"0:2712","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[97,31],"end":[97,36]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10292:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2713:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1739":{"id":"0:1739","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[21,0],"end":[21,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::time::NaiveTime","name":"NaiveTime","id":"0:3081:1887","glob":false}},"2:13463:7871":{"id":"2:13463:7871","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"self::pattern":"2:13054:1925","prim@char":"1:16004:6922","`None`":"2:47495:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13079:7159","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3178:228":{"id":"2:3178:228","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3180:127","2:3181:1417"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3281:220":{"id":"2:3281:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2354":{"id":"0:2354","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[52,0],"end":[85,1]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:2356:2082","0:2357:5708","0:2358:5710","0:2359:841"],"negative":false,"synthetic":false,"blanket_impl":null}},"23:577:7302":{"id":"23:577:7302","crate_id":23,"name":"CheckedMul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:578:3043"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Mul","id":"2:3347:7085","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8412:768":{"id":"2:8412:768","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2649":{"id":"0:2649","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[74,15],"end":[74,20]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2650:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3208-0:2914:2040":{"id":"b:2:3208-0:2914:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3648:7107":{"id":"2:3648:7107","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3650:63329","2:3651:63330","2:3652:2846"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:2809:2443":{"id":"0:2809:2443","crate_id":0,"name":"Numeric","span":{"filename":"src/format/mod.rs","begin":[292,4],"end":[292,25]},"visibility":"default","docs":"Numeric item. Can be optionally padded to the maximal length (if any) when formatting;\nthe parser simply ignores any padded whitespace and zeroes.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]}},"0:2841:408":{"id":"0:2841:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[336,16],"end":[336,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:616":{"id":"0:616","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[157,0],"end":[161,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:617:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3198-0:3422:1903":{"id":"b:2:3198-0:3422:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3201:2535"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:2714:2237":{"id":"b:2:2869-0:2714:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2871:2029"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2391:2164":{"id":"0:2391:2164","crate_id":0,"name":"from_local_date","span":{"filename":"src/offset/mod.rs","begin":[445,4],"end":[450,5]},"visibility":"default","docs":"Converts the local `NaiveDate` to the timezone-aware `Date` if possible.","links":{},"attrs":["#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2947:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13421:64621":{"id":"2:13421:64621","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:3422:1903":{"id":"a:2:3281:220-0:3422:1903","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2850:2735":{"id":"0:2850:2735","crate_id":0,"name":"ParseErrorKind","span":{"filename":"src/format/mod.rs","begin":[348,0],"end":[380,1]},"visibility":"public","docs":"The category of parse error","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:2851:2738","0:2853:2742","0:2855:2747","0:2857:2749","0:2859:2751","0:2861:2753","0:2863:2755"],"impls":["a:2:3310:7470-0:2850:2735","a:2:3281:220-0:2850:2735","a:2:9259:7637-0:2850:2735","a:2:9260:7636-0:2850:2735","a:2:3269:211-0:2850:2735","b:2:3202-0:2850:2735","b:2:3213-0:2850:2735","b:2:4002-0:2850:2735","b:2:2869-0:2850:2735","b:2:2872-0:2850:2735","b:2:3208-0:2850:2735","b:2:3198-0:2850:2735","b:5:787-0:2850:2735","0:2867","0:2869","0:2871","0:2872","0:2874","0:2875","0:2877"]}},"0:2581:2482":{"id":"0:2581:2482","crate_id":0,"name":"with_nanosecond","span":{"filename":"src/traits.rs","begin":[171,4],"end":[171,57]},"visibility":"default","docs":"Makes a new value with nanoseconds since the whole non-leap second changed.\n\nReturns `None` when the resulting value would be invalid.\nAs with the [`nanosecond`](#tymethod.nanosecond) method,\nthe input range can exceed 1,000,000,000 for leap seconds.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13439:64624":{"id":"2:13439:64624","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:16010:6927","crate::ops::IndexMut":"2:3581:7105","str::slice_unchecked":"1:16010:6927"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"5:6411:223":{"id":"5:6411:223","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6412:1397"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9259:7637-0:2714:2237":{"id":"a:2:9259:7637-0:2714:2237","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9259:7637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2653:604":{"id":"0:2653:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[74,22],"end":[74,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2859:2751":{"id":"0:2859:2751","crate_id":0,"name":"TooShort","span":{"filename":"src/format/mod.rs","begin":[369,4],"end":[369,12]},"visibility":"default","docs":"The input string has been prematurely ended.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:9259:7637-0:2850:2735":{"id":"a:2:9259:7637-0:2850:2735","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9259:7637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2872-0:2659:2443":{"id":"b:2:2872-0:2659:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2866:7070","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2874:5914"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2458:1905":{"id":"0:2458:1905","crate_id":0,"name":"DurationRound","span":{"filename":"src/round.rs","begin":[101,0],"end":[143,1]},"visibility":"public","docs":"Extension trait for rounding or truncating a DateTime by a Duration.\n\n# Limitations\nBoth rounding and truncating are done via [`Duration::num_nanoseconds`] and\n[`DateTime::timestamp_nanos`]. This means that they will fail if either the\n`Duration` or the `DateTime` are too big to represented as nanoseconds. They\nwill also fail if the `Duration` is bigger than the timestamp.","links":{"`Duration::num_nanoseconds`":"20:405:121","`DateTime::timestamp_nanos`":"0:2621:1877"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2459:126","0:2460:6587","0:2461:6592"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8413:7471":{"id":"2:8413:7471","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8415:7872","2:8417:7873","2:8418:7874"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3310:7470-0:2714:2237":{"id":"a:2:3310:7470-0:2714:2237","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3310:7470","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3474:1882":{"id":"0:3474:1882","crate_id":0,"name":"Weekday","span":{"filename":"src/weekday.rs","begin":[14,0],"end":[29,1]},"visibility":"public","docs":"The day of week.\n\nThe order of the days of week depends on the context.\n(This is why this type does *not* implement `PartialOrd` or `Ord` traits.)\nOne should prefer `*_from_monday` or `*_from_sunday` methods to get the correct result.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:3475:2813","0:3478:2814","0:3481:2815","0:3484:2816","0:3487:2817","0:3490:2818","0:3493:2812"],"impls":[]}},"0:2375:1888":{"id":"0:2375:1888","crate_id":0,"name":"Offset","span":{"filename":"src/offset/mod.rs","begin":[207,4],"end":[207,24]},"visibility":"default","docs":"An associated offset type.\nThis type is used to store the actual offset in date and time types.\nThe original `TimeZone` value can be recovered via `TimeZone::from_offset`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Offset","id":"0:2372:1888","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:2579:2480":{"id":"0:2579:2480","crate_id":0,"name":"with_minute","span":{"filename":"src/traits.rs","begin":[157,4],"end":[157,52]},"visibility":"default","docs":"Makes a new value with the minute number changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["min",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3729:224":{"id":"2:3729:224","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3730:181","2:3731:7110","2:3732:686","2:3733:369"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"2:3734:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3213-0:2763:2701":{"id":"b:2:3213-0:2763:2701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2761":{"id":"0:2761","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[181,31],"end":[181,36]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10292:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2762:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3202-0:2835:1898":{"id":"b:2:3202-0:2835:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5647:8558":{"id":"1:5647:8558","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5648:61803","1:5649:7848"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10565:8524","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:4051:7209":{"id":"2:4051:7209","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4052:8072"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9260:7636-0:2850:2735":{"id":"a:2:9260:7636-0:2850:2735","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9260:7636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13430:5158":{"id":"2:13430:5158","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47495:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10934:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10934:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3441:907":{"id":"0:3441:907","crate_id":0,"name":"ne","span":{"filename":"src/offset/mod.rs","begin":[40,16],"end":[40,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:2714:2237":{"id":"b:2:2872-0:2714:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2866:7070","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2874:5914"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9260:7636-0:2914:2040":{"id":"a:2:9260:7636-0:2914:2040","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9260:7636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3202-0:2933:2038":{"id":"b:2:3202-0:2933:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2933:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10242:2830":{"id":"2:10242:2830","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10243:1533","2:10244:8081","2:10246:6719"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5719:8543":{"id":"1:5719:8543","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5720:59945","1:5721:59947","1:5722:59946","1:5723:59948"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9259:7637-0:3422:1903":{"id":"a:2:9259:7637-0:3422:1903","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9259:7637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9259:7637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:7470-0:2641:2444":{"id":"a:2:3310:7470-0:2641:2444","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3310:7470","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:7470-0:614:2655":{"id":"a:2:3310:7470-0:614:2655","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3310:7470","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2387:3455":{"id":"0:2387:3455","crate_id":0,"name":"datetime_from_str","span":{"filename":"src/offset/mod.rs","begin":[428,4],"end":[432,5]},"visibility":"default","docs":"Parses a string with the specified format string and returns a\n`DateTime` with the current offset.\n\nSee the [`crate::format::strftime`] module on the\nsupported escape sequences.\n\nIf the to-be-parsed string includes an offset, it *must* match the\noffset of the TimeZone, otherwise an error will be returned.\n\nSee also [`DateTime::parse_from_str`] which gives a [`DateTime`] with\nparsed [`FixedOffset`].","links":{"`FixedOffset`":"0:3101:1883","`DateTime::parse_from_str`":"0:2621:1877","`DateTime`":"0:2621:1877","`crate::format::strftime`":"0:995:2596"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:2850:2735":{"id":"b:2:3198-0:2850:2735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3201:2535"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2941:660":{"id":"0:2941:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[746,9],"end":[746,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10252:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10241:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2835:1898":{"id":"0:2835:1898","crate_id":0,"name":"ParseError","span":{"filename":"src/format/mod.rs","begin":[337,0],"end":[337,38]},"visibility":"public","docs":"An error from the `parse` function.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:630","a:2:3310:7470-0:2835:1898","a:2:3281:220-0:2835:1898","a:2:9259:7637-0:2835:1898","a:2:9260:7636-0:2835:1898","a:2:3269:211-0:2835:1898","b:2:3202-0:2835:1898","b:2:3213-0:2835:1898","b:2:4002-0:2835:1898","b:2:2869-0:2835:1898","b:2:2872-0:2835:1898","b:2:3208-0:2835:1898","b:2:3198-0:2835:1898","b:5:6413-0:2835:1898","b:5:787-0:2835:1898","0:2838","0:2840","0:2842","0:2843","0:2846","0:2847","0:2849","0:634","0:636"]}},"a:2:3269:211-0:2835:1898":{"id":"a:2:3269:211-0:2835:1898","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:12993:2500":{"id":"2:12993:2500","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12994:126","2:12995:2501"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2563:2191":{"id":"0:2563:2191","crate_id":0,"name":"iso_week","span":{"filename":"src/traits.rs","begin":[54,4],"end":[54,34]},"visibility":"default","docs":"Returns the ISO week.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3065:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"23:750:7317":{"id":"23:750:7317","crate_id":23,"name":"WrappingAdd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:751:1527"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Add","id":"2:3337:2030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2763:2701":{"id":"0:2763:2701","crate_id":0,"name":"InternalFixed","span":{"filename":"src/format/mod.rs","begin":[254,0],"end":[256,1]},"visibility":"public","docs":"An opaque type representing fixed-format item types for internal uses only.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3310:7470-0:2763:2701","a:2:3281:220-0:2763:2701","a:2:9259:7637-0:2763:2701","a:2:9260:7636-0:2763:2701","a:2:3269:211-0:2763:2701","b:2:3202-0:2763:2701","b:2:3213-0:2763:2701","b:2:4002-0:2763:2701","b:2:2869-0:2763:2701","b:2:2872-0:2763:2701","b:2:3208-0:2763:2701","b:2:3198-0:2763:2701","b:5:787-0:2763:2701","0:2765","0:2767","0:2769","0:2770","0:2773","0:2774"]}},"0:2383:5751":{"id":"0:2383:5751","crate_id":0,"name":"timestamp_opt","span":{"filename":"src/offset/mod.rs","begin":[345,4],"end":[350,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nReturns `LocalResult::None` on out-of-range number of seconds and/or\ninvalid nanosecond, otherwise always returns `LocalResult::Single`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["secs",{"kind":"primitive","inner":"i64"}],["nsecs",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3812:7116":{"id":"2:3812:7116","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:2641:2444":{"id":"b:5:787-0:2641:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:7917","5:790:7918","5:791:7919"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2571:4485":{"id":"0:2571:4485","crate_id":0,"name":"num_days_from_ce","span":{"filename":"src/traits.rs","begin":[103,4],"end":[118,5]},"visibility":"default","docs":"Counts the days in the proleptic Gregorian calendar, with January 1, Year 1 (CE) as day 1.\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd(1970, 1, 1).num_days_from_ce(), 719_163);\nassert_eq!(NaiveDate::from_ymd(2, 1, 1).num_days_from_ce(), 366);\nassert_eq!(NaiveDate::from_ymd(1, 1, 1).num_days_from_ce(), 1);\nassert_eq!(NaiveDate::from_ymd(0, 1, 1).num_days_from_ce(), -365);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1736":{"id":"0:1736","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[20,0],"end":[20,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::isoweek::IsoWeek","name":"IsoWeek","id":"0:3065:1901","glob":false}},"0:2753:408":{"id":"0:2753:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[181,9],"end":[181,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2800:2719":{"id":"0:2800:2719","crate_id":0,"name":"OwnedLiteral","span":{"filename":"src/format/mod.rs","begin":[284,4],"end":[284,26]},"visibility":"default","docs":"Same as `Literal` but with the string owned by the item.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2592","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}]}},"2:13491:64629":{"id":"2:13491:64629","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13079:7159","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13073:7160":{"id":"2:13073:7160","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13075:8810","2:13076:922","2:13077:64066","2:13078:64067"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2569:2197":{"id":"0:2569:2197","crate_id":0,"name":"with_ordinal","span":{"filename":"src/traits.rs","begin":[84,4],"end":[84,57]},"visibility":"default","docs":"Makes a new value with the day of year (starting from 1) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2863:2755":{"id":"0:2863:2755","crate_id":0,"name":"BadFormat","span":{"filename":"src/format/mod.rs","begin":[375,4],"end":[375,13]},"visibility":"default","docs":"There was an error on the formatting string, or there were non-supported formating items.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2704:408":{"id":"0:2704:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[97,9],"end":[97,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:2835:1898":{"id":"a:2:3281:220-0:2835:1898","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8602:157":{"id":"2:8602:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8603:2039","2:8604:922","2:8605:7876","2:8608:4357","2:8609:495","2:8611:6056","2:8614:7877","2:8615:7878","2:8616:7879","2:8617:2466","2:8619:6240","2:8621:7880","2:8622:7881","2:8624:841","2:8627:7882","2:8634:7883","2:8636:7884","2:8639:3494","2:8640:7885","2:8641:7886","2:8643:7887","2:8645:7888","2:8648:1308","2:8649:3493","2:8650:2882","2:8654:7889","2:8657:7890","2:8658:7891","2:8659:7892","2:8661:7893","2:8662:3626","2:8664:7894","2:8667:7895","2:8669:7896","2:8679:7897","2:8694:7898","2:8696:7899","2:8700:7900","2:8709:7901","2:8712:7902","2:8714:7903","2:8717:276","2:8724:294","2:8731:3654","2:8738:7904","2:8747:7905","2:8757:1014","2:8764:7906","2:8771:3099","2:8772:2087","2:8773:7075","2:8785:7074","2:8792:7073","2:8804:7072","2:8811:4586","2:8812:7907","2:8817:7908","2:8820:3487","2:8823:3987","2:8824:4501","2:8826:7909","2:8828:415","2:8831:7910","2:8834:997","2:8837:7911","2:8840:604","2:8843:7912","2:8846:907","2:8848:826","2:8850:792","2:8852:713","2:8854:696","2:8856:7913","2:8857:7914","2:8865:7915"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3372:2033":{"id":"2:3372:2033","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3374:1356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3202-0:3422:1903":{"id":"b:2:3202-0:3422:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2815:1542":{"id":"0:2815:1542","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[294,10],"end":[294,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"b:2:4002-0:2914:2040":{"id":"b:2:4002-0:2914:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3581:7105":{"id":"2:3581:7105","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3583:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3577:7104","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13500:64631":{"id":"2:13500:64631","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13054:1925","`DoubleEndedIterator`":"2:8448:120","str::rmatch_indices":"1:16010:6927","prim@char":"1:16004:6922"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49612:7178","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:2714:2237":{"id":"b:2:4002-0:2714:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:2714:2237":{"id":"b:2:3198-0:2714:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3201:2535"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:2835:1898":{"id":"b:2:4002-0:2835:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:11":{"id":"0:11","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[448,4],"end":[448,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]","#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Local","name":"Local","id":"0:3404:1873","glob":false}},"2:3166:75":{"id":"2:3166:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3168:305"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:3281:220-0:2659:2443":{"id":"a:2:3281:220-0:2659:2443","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2872-0:2933:2038":{"id":"b:2:2872-0:2933:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2866:7070","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2933:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["2:2874:5914"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9259:7637-0:2763:2701":{"id":"a:2:9259:7637-0:2763:2701","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9259:7637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[463,28],"end":[463,36]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::TimeZone","name":"TimeZone","id":"0:2374:1889","glob":false}},"0:2381:4472":{"id":"0:2381:4472","crate_id":0,"name":"isoywd_opt","span":{"filename":"src/offset/mod.rs","begin":[314,4],"end":[319,5]},"visibility":"default","docs":"Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date and/or invalid week number.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["week",{"kind":"primitive","inner":"u32"}],["weekday",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3474:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9259:7637":{"id":"2:9259:7637","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13467:60090":{"id":"2:13467:60090","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:13054:1925","`DoubleEndedIterator`":"2:8448:120","str::rsplit":"1:16010:6927","prim@char":"1:16004:6922","str::split_whitespace":"1:16010:6927"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49462:7172","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1880":{"id":"0:1880","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[29,0],"end":[29,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::fixed::FixedOffset","name":"FixedOffset","id":"0:3101:1883","glob":false}},"0:3422:1903":{"id":"0:3422:1903","crate_id":0,"name":"LocalResult","span":{"filename":"src/offset/mod.rs","begin":[41,0],"end":[50,1]},"visibility":"public","docs":"The conversion result from the local time to the timezone-aware datetime types.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:3424:174","0:3426:3089","0:3429:3090"],"impls":["0:2354","0:2362","0:2369","a:2:3310:7470-0:3422:1903","a:2:3281:220-0:3422:1903","a:2:9259:7637-0:3422:1903","a:2:9260:7636-0:3422:1903","a:2:3269:211-0:3422:1903","b:2:3202-0:3422:1903","b:2:3213-0:3422:1903","b:2:4002-0:3422:1903","b:2:2869-0:3422:1903","b:2:2872-0:3422:1903","b:2:3208-0:3422:1903","b:2:3198-0:3422:1903","b:5:787-0:3422:1903","0:3433","0:3436","0:3438","0:3442","0:3445","0:3447","0:3449","0:3452"]}},"2:10575:7923":{"id":"2:10575:7923","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10576:146","2:10577:38391","2:10578:61893"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:840:7327":{"id":"23:840:7327","crate_id":23,"name":"Unsigned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Num","id":"23:844:7265","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:618:7310":{"id":"23:618:7310","crate_id":23,"name":"Inv","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:619:181","23:620:7331"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:634":{"id":"0:634","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[385,0],"end":[398,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10299:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:635:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6105:6254":{"id":"5:6105:6254","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2397:2136":{"id":"0:2397:2136","crate_id":0,"name":"from_utc_date","span":{"filename":"src/offset/mod.rs","begin":[468,4],"end":[470,5]},"visibility":"default","docs":"Converts the UTC `NaiveDate` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).","links":{},"attrs":["#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2947:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13447:9514":{"id":"2:13447:9514","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49716:7167","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2871:2029":{"id":"2:2871:2029","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6685:8545":{"id":"1:6685:8545","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6686:62307","1:6687:11009","1:6688:11010","1:6689:11012","1:6690:11011","1:6691:11013","1:6692:11014","1:6693:11016","1:6694:10607","1:6695:11019","1:6696:11020","1:6697:11021","1:6698:11022","1:6699:11023","1:6700:11024","1:6701:11017","1:6702:11018"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2926:124":{"id":"2:2926:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3202-0:2659:2443":{"id":"b:2:3202-0:2659:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:2659:2443":{"id":"b:2:4002-0:2659:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:2914:2040":{"id":"b:5:787-0:2914:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["5:789:7917","5:790:7918","5:791:7919"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:2232:7294":{"id":"23:2232:7294","crate_id":23,"name":"FloatConst","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:2233:2539","23:2234:15437","23:2235:15441","23:2236:15438","23:2237:15439","23:2238:15432","23:2239:15433","23:2240:15434","23:2241:15435","23:2242:15436","23:2243:15447","23:2244:15446","23:2245:15444","23:2246:15442","23:2247:15430","23:2248:15440","23:2249:15431","23:2250:15445","23:2251:15443"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2844:604":{"id":"0:2844:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[336,23],"end":[336,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5735:8544":{"id":"1:5735:8544","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5736:11098","1:5737:12556"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1717":{"id":"0:1717","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[14,32],"end":[14,41]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::date::NaiveWeek","name":"NaiveWeek","id":"0:2942:1902","glob":false}},"2:3505:7102":{"id":"2:3505:7102","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3506:545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3492:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2368:2114":{"id":"0:2368:2114","crate_id":0,"name":"and_hms_nano_opt","span":{"filename":"src/offset/mod.rs","begin":[164,4],"end":[177,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3481:2815":{"id":"0:3481:2815","crate_id":0,"name":"Wed","span":{"filename":"src/weekday.rs","begin":[20,4],"end":[20,11]},"visibility":"default","docs":"Wednesday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13476:64626":{"id":"2:13476:64626","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"str::split":"1:16010:6927","prim@char":"1:16004:6922","`DoubleEndedIterator`":"2:8448:120","str::rsplit_terminator":"1:16010:6927","self::pattern":"2:13054:1925"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49512:7173","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13450:2846":{"id":"2:13450:2846","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:16004:6922","self::pattern":"2:13054:1925"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2759":{"id":"0:2759","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[181,27],"end":[181,29]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:995:2596":{"id":"0:995:2596","crate_id":0,"name":"strftime","span":{"filename":"src/format/strftime.rs","begin":[4,0],"end":[639,1]},"visibility":"public","docs":"`strftime`/`strptime`-inspired date and time formatting syntax.\n\n## Specifiers\n\nThe following specifiers are available both to formatting and parsing.\n\n| Spec. | Example  | Description                                                                |\n|-------|----------|----------------------------------------------------------------------------|\n|       |          | **DATE SPECIFIERS:**                                                       |\n| `%Y`  | `2001`   | The full proleptic Gregorian year, zero-padded to 4 digits. chrono supports years from -262144 to 262143. |\n| `%C`  | `20`     | The proleptic Gregorian year divided by 100, zero-padded to 2 digits. [^1] |\n| `%y`  | `01`     | The proleptic Gregorian year modulo 100, zero-padded to 2 digits. [^1]     |\n|       |          |                                                                            |\n| `%m`  | `07`     | Month number (01--12), zero-padded to 2 digits.                            |\n| `%b`  | `Jul`    | Abbreviated month name. Always 3 letters.                                  |\n| `%B`  | `July`   | Full month name. Also accepts corresponding abbreviation in parsing.       |\n| `%h`  | `Jul`    | Same as `%b`.                                                              |\n|       |          |                                                                            |\n| `%d`  | `08`     | Day number (01--31), zero-padded to 2 digits.                              |\n| `%e`  | ` 8`     | Same as `%d` but space-padded. Same as `%_d`.                              |\n|       |          |                                                                            |\n| `%a`  | `Sun`    | Abbreviated weekday name. Always 3 letters.                                |\n| `%A`  | `Sunday` | Full weekday name. Also accepts corresponding abbreviation in parsing.     |\n| `%w`  | `0`      | Sunday = 0, Monday = 1, ..., Saturday = 6.                                 |\n| `%u`  | `7`      | Monday = 1, Tuesday = 2, ..., Sunday = 7. (ISO 8601)                       |\n|       |          |                                                                            |\n| `%U`  | `28`     | Week number starting with Sunday (00--53), zero-padded to 2 digits. [^2]   |\n| `%W`  | `27`     | Same as `%U`, but week 1 starts with the first Monday in that year instead.|\n|       |          |                                                                            |\n| `%G`  | `2001`   | Same as `%Y` but uses the year number in ISO 8601 week date. [^3]          |\n| `%g`  | `01`     | Same as `%y` but uses the year number in ISO 8601 week date. [^3]          |\n| `%V`  | `27`     | Same as `%U` but uses the week number in ISO 8601 week date (01--53). [^3] |\n|       |          |                                                                            |\n| `%j`  | `189`    | Day of the year (001--366), zero-padded to 3 digits.                       |\n|       |          |                                                                            |\n| `%D`  | `07/08/01`    | Month-day-year format. Same as `%m/%d/%y`.                            |\n| `%x`  | `07/08/01`    | Locale's date representation (e.g., 12/31/99).                        |\n| `%F`  | `2001-07-08`  | Year-month-day format (ISO 8601). Same as `%Y-%m-%d`.                 |\n| `%v`  | ` 8-Jul-2001` | Day-month-year format. Same as `%e-%b-%Y`.                            |\n|       |          |                                                                            |\n|       |          | **TIME SPECIFIERS:**                                                       |\n| `%H`  | `00`     | Hour number (00--23), zero-padded to 2 digits.                             |\n| `%k`  | ` 0`     | Same as `%H` but space-padded. Same as `%_H`.                              |\n| `%I`  | `12`     | Hour number in 12-hour clocks (01--12), zero-padded to 2 digits.           |\n| `%l`  | `12`     | Same as `%I` but space-padded. Same as `%_I`.                              |\n|       |          |                                                                            |\n| `%P`  | `am`     | `am` or `pm` in 12-hour clocks.                                            |\n| `%p`  | `AM`     | `AM` or `PM` in 12-hour clocks.                                            |\n|       |          |                                                                            |\n| `%M`  | `34`     | Minute number (00--59), zero-padded to 2 digits.                           |\n| `%S`  | `60`     | Second number (00--60), zero-padded to 2 digits. [^4]                      |\n| `%f`  | `026490000`   | The fractional seconds (in nanoseconds) since last whole second. [^7] |\n| `%.f` | `.026490`| Similar to `.%f` but left-aligned. These all consume the leading dot. [^7] |\n| `%.3f`| `.026`        | Similar to `.%f` but left-aligned but fixed to a length of 3. [^7]    |\n| `%.6f`| `.026490`     | Similar to `.%f` but left-aligned but fixed to a length of 6. [^7]    |\n| `%.9f`| `.026490000`  | Similar to `.%f` but left-aligned but fixed to a length of 9. [^7]    |\n| `%3f` | `026`         | Similar to `%.3f` but without the leading dot. [^7]                   |\n| `%6f` | `026490`      | Similar to `%.6f` but without the leading dot. [^7]                   |\n| `%9f` | `026490000`   | Similar to `%.9f` but without the leading dot. [^7]                   |\n|       |               |                                                                       |\n| `%R`  | `00:34`       | Hour-minute format. Same as `%H:%M`.                                  |\n| `%T`  | `00:34:60`    | Hour-minute-second format. Same as `%H:%M:%S`.                        |\n| `%X`  | `00:34:60`    | Locale's time representation (e.g., 23:13:48).                        |\n| `%r`  | `12:34:60 AM` | Hour-minute-second format in 12-hour clocks. Same as `%I:%M:%S %p`.   |\n|       |          |                                                                            |\n|       |          | **TIME ZONE SPECIFIERS:**                                                  |\n| `%Z`  | `ACST`   | Local time zone name. Skips all non-whitespace characters during parsing. [^8] |\n| `%z`  | `+0930`  | Offset from the local time to UTC (with UTC being `+0000`).                |\n| `%:z` | `+09:30` | Same as `%z` but with a colon.                                             |\n| `%#z` | `+09`    | *Parsing only:* Same as `%z` but allows minutes to be missing or present.  |\n|       |          |                                                                            |\n|       |          | **DATE & TIME SPECIFIERS:**                                                |\n|`%c`|`Sun Jul  8 00:34:60 2001`|Locale's date and time (e.g., Thu Mar  3 23:05:25 2005).       |\n| `%+`  | `2001-07-08T00:34:60.026490+09:30` | ISO 8601 / RFC 3339 date & time format. [^5]     |\n|       |               |                                                                       |\n| `%s`  | `994518299`   | UNIX timestamp, the number of seconds since 1970-01-01 00:00 UTC. [^6]|\n|       |          |                                                                            |\n|       |          | **SPECIAL SPECIFIERS:**                                                    |\n| `%t`  |          | Literal tab (`\\t`).                                                        |\n| `%n`  |          | Literal newline (`\\n`).                                                    |\n| `%%`  |          | Literal percent sign.                                                      |\n\nIt is possible to override the default padding behavior of numeric specifiers `%?`.\nThis is not allowed for other specifiers and will result in the `BAD_FORMAT` error.\n\nModifier | Description\n-------- | -----------\n`%-?`    | Suppresses any padding including spaces and zeroes. (e.g. `%j` = `012`, `%-j` = `12`)\n`%_?`    | Uses spaces as a padding. (e.g. `%j` = `012`, `%_j` = ` 12`)\n`%0?`    | Uses zeroes as a padding. (e.g. `%e` = ` 9`, `%0e` = `09`)\n\nNotes:\n\n[^1]: `%C`, `%y`:\n   This is floor division, so 100 BCE (year number -99) will print `-1` and `99` respectively.\n\n[^2]: `%U`:\n   Week 1 starts with the first Sunday in that year.\n   It is possible to have week 0 for days before the first Sunday.\n\n[^3]: `%G`, `%g`, `%V`:\n   Week 1 is the first week with at least 4 days in that year.\n   Week 0 does not exist, so this should be used with `%G` or `%g`.\n\n[^4]: `%S`:\n   It accounts for leap seconds, so `60` is possible.\n\n[^5]: `%+`: Same as `%Y-%m-%dT%H:%M:%S%.f%:z`, i.e. 0, 3, 6 or 9 fractional\n   digits for seconds and colons in the time zone offset.\n   <br>\n   <br>\n   The typical `strftime` implementations have different (and locale-dependent)\n   formats for this specifier. While Chrono's format for `%+` is far more\n   stable, it is best to avoid this specifier if you want to control the exact\n   output.\n\n[^6]: `%s`:\n   This is not padded and can be negative.\n   For the purpose of Chrono, it only accounts for non-leap seconds\n   so it slightly differs from ISO C `strftime` behavior.\n\n[^7]: `%f`, `%.f`, `%.3f`, `%.6f`, `%.9f`, `%3f`, `%6f`, `%9f`:\n   <br>\n   The default `%f` is right-aligned and always zero-padded to 9 digits\n   for the compatibility with glibc and others,\n   so it always counts the number of nanoseconds since the last whole second.\n   E.g. 7ms after the last second will print `007000000`,\n   and parsing `7000000` will yield the same.\n   <br>\n   <br>\n   The variant `%.f` is left-aligned and print 0, 3, 6 or 9 fractional digits\n   according to the precision.\n   E.g. 70ms after the last second under `%.f` will print `.070` (note: not `.07`),\n   and parsing `.07`, `.070000` etc. will yield the same.\n   Note that they can print or read nothing if the fractional part is zero or\n   the next character is not `.`.\n   <br>\n   <br>\n   The variant `%.3f`, `%.6f` and `%.9f` are left-aligned and print 3, 6 or 9 fractional digits\n   according to the number preceding `f`.\n   E.g. 70ms after the last second under `%.3f` will print `.070` (note: not `.07`),\n   and parsing `.07`, `.070000` etc. will yield the same.\n   Note that they can read nothing if the fractional part is zero or\n   the next character is not `.` however will print with the specified length.\n   <br>\n   <br>\n   The variant `%3f`, `%6f` and `%9f` are left-aligned and print 3, 6 or 9 fractional digits\n   according to the number preceding `f`, but without the leading dot.\n   E.g. 70ms after the last second under `%3f` will print `070` (note: not `07`),\n   and parsing `07`, `070000` etc. will yield the same.\n   Note that they can read nothing if the fractional part is zero.\n\n[^8]: `%Z`:\n   Offset will not be populated from the parsed data, nor will it be validated.\n   Timezone is completely ignored. Similar to the glibc `strptime` treatment of\n   this format code.\n   <br>\n   <br>\n   It is not possible to reliably convert from an abbreviation to an offset,\n   for example CDT can mean either Central Daylight Time (North America) or\n   China Daylight Time.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2914:2040"],"is_stripped":false}},"0:2713:660":{"id":"0:2713:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[97,31],"end":[97,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10252:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10241:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2739:2464":{"id":"0:2739:2464","crate_id":0,"name":"TimezoneOffsetColonZ","span":{"filename":"src/format/mod.rs","begin":[233,4],"end":[233,24]},"visibility":"default","docs":"Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace,\nand `Z` can be either in upper case or in lower case.\nThe offset is limited from `-24:00` to `+24:00`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:128:1892":{"id":"0:128:1892","crate_id":0,"name":"MIN_DATE","span":{"filename":"src/date.rs","begin":[66,0],"end":[66,53]},"visibility":"public","docs":"The minimum possible `Date`.","links":{},"attrs":["#[allow(deprecated)]","#[deprecated(since = \"0.4.20\", note = \"Use Date::MIN_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use Date::MIN_UTC instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3411:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"expr":"Date<Utc>::MIN_UTC","value":null,"is_literal":false}},"2:4000:68":{"id":"2:4000:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4001:1429"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"0:2894:2476":{"id":"0:2894:2476","crate_id":0,"name":"minute","span":{"filename":"src/format/parsed.rs","begin":[92,4],"end":[92,27]},"visibility":"public","docs":"Minute number (0--59).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"2:3204:681":{"id":"2:3204:681","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:715:7313":{"id":"23:715:7313","crate_id":23,"name":"Saturating","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:716:1227","23:717:1228"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5797:8550":{"id":"1:5797:8550","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5798:11098"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2870:408":{"id":"0:2870:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[347,16],"end":[347,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:2914:2040":{"id":"b:2:3198-0:2914:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3201:2535"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2769":{"id":"0:2769","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[253,23],"end":[253,32]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"23:575:7307":{"id":"23:575:7307","crate_id":23,"name":"CheckedSub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:576:3236"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sub","id":"2:3342:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3389:7094":{"id":"2:3389:7094","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3390:181","2:3391:952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2849":{"id":"0:2849","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[336,38],"end":[336,42]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:2714:2237":{"id":"b:5:787-0:2714:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:7917","5:790:7918","5:791:7919"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3396:7091":{"id":"2:3396:7091","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3398:181","2:3399:351"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3424:174":{"id":"0:3424:174","crate_id":0,"name":"None","span":{"filename":"src/offset/mod.rs","begin":[44,4],"end":[44,8]},"visibility":"default","docs":"Given local time representation is invalid.\nThis can occur when, for example, the positive timezone transition.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"23:307:2925":{"id":"23:307:2925","crate_id":23,"name":"ToPrimitive","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:308:8085","23:309:8086","23:310:8087","23:311:2981","23:312:8088","23:313:8089","23:314:8090","23:315:8091","23:316:8092","23:317:2995","23:318:8093","23:319:8094","23:320:8095","23:321:8096"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:18":{"id":"0:18","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[455,20],"end":[455,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::DateTime","name":"DateTime","id":"0:2621:1877","glob":false}},"0:2768:408":{"id":"0:2768:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[253,16],"end":[253,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13479:64627":{"id":"2:13479:64627","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"prim@char":"1:16004:6922","str::split":"1:16010:6927","self::pattern":"2:13054:1925","str::split_terminator":"1:16010:6927"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49530:7171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13079:7159","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:2914:2040":{"id":"b:2:2872-0:2914:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2866:7070","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2874:5914"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6863:8535":{"id":"1:6863:8535","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6864:62819"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2871":{"id":"0:2871","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[347,23],"end":[347,32]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:0:1930":{"id":"0:0:1930","crate_id":0,"name":"chrono","span":{"filename":"src/lib.rs","begin":[4,0],"end":[532,1]},"visibility":"public","docs":"# Chrono: Date and Time for Rust\n\nIt aims to be a feature-complete superset of\nthe [time](https://github.com/rust-lang-deprecated/time) library.\nIn particular,\n\n* Chrono strictly adheres to ISO 8601.\n* Chrono is timezone-aware by default, with separate timezone-naive types.\n* Chrono is space-optimal and (while not being the primary goal) reasonably efficient.\n\nThere were several previous attempts to bring a good date and time library to Rust,\nwhich Chrono builds upon and should acknowledge:\n\n* [Initial research on\n   the wiki](https://github.com/rust-lang/rust-wiki-backup/blob/master/Lib-datetime.md)\n* Dietrich Epp's [datetime-rs](https://github.com/depp/datetime-rs)\n* Luis de Bethencourt's [rust-datetime](https://github.com/luisbg/rust-datetime)\n\nAny significant changes to Chrono are documented in\nthe [`CHANGELOG.md`](https://github.com/chronotope/chrono/blob/main/CHANGELOG.md) file.\n\n## Usage\n\nPut this in your `Cargo.toml`:\n\n```toml\n[dependencies]\nchrono = \"0.4\"\n```\n\n### Features\n\nChrono supports various runtime environments and operating systems, and has\nseveral features that may be enabled or disabled.\n\nDefault features:\n\n- `alloc`: Enable features that depend on allocation (primarily string formatting)\n- `std`: Enables functionality that depends on the standard library. This\n  is a superset of `alloc` and adds interoperation with standard library types\n  and traits.\n- `clock`: Enables reading the system time (`now`) that depends on the standard library for\nUNIX-like operating systems and the Windows API (`winapi`) for Windows.\n\nOptional features:\n\n- [`serde`][]: Enable serialization/deserialization via serde.\n- `unstable-locales`: Enable localization. This adds various methods with a\n  `_localized` suffix. The implementation and API may change or even be\n  removed in a patch release. Feedback welcome.\n\n[`serde`]: https://github.com/serde-rs/serde\n[wasm-bindgen]: https://github.com/rustwasm/wasm-bindgen\n\nSee the [cargo docs][] for examples of specifying features.\n\n[cargo docs]: https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#choosing-features\n\n## Overview\n\n### Duration\n\nChrono currently uses its own [`Duration`] type to represent the magnitude\nof a time span. Since this has the same name as the newer, standard type for\nduration, the reference will refer this type as `OldDuration`.\n\nNote that this is an \"accurate\" duration represented as seconds and\nnanoseconds and does not represent \"nominal\" components such as days or\nmonths.\n\nWhen the `oldtime` feature is enabled, [`Duration`] is an alias for the\n[`time::Duration`](https://docs.rs/time/0.1.40/time/struct.Duration.html)\ntype from v0.1 of the time crate. time v0.1 is deprecated, so new code\nshould disable the `oldtime` feature and use the `chrono::Duration` type\ninstead. The `oldtime` feature is enabled by default for backwards\ncompatibility, but future versions of Chrono are likely to remove the\nfeature entirely.\n\nChrono does not yet natively support\nthe standard [`Duration`](https://doc.rust-lang.org/std/time/struct.Duration.html) type,\nbut it will be supported in the future.\nMeanwhile you can convert between two types with\n[`Duration::from_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.from_std)\nand\n[`Duration::to_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.to_std)\nmethods.\n\n### Date and Time\n\nChrono provides a\n[**`DateTime`**](./struct.DateTime.html)\ntype to represent a date and a time in a timezone.\n\nFor more abstract moment-in-time tracking such as internal timekeeping\nthat is unconcerned with timezones, consider\n[`time::SystemTime`](https://doc.rust-lang.org/std/time/struct.SystemTime.html),\nwhich tracks your system clock, or\n[`time::Instant`](https://doc.rust-lang.org/std/time/struct.Instant.html), which\nis an opaque but monotonically-increasing representation of a moment in time.\n\n`DateTime` is timezone-aware and must be constructed from\nthe [**`TimeZone`**](./offset/trait.TimeZone.html) object,\nwhich defines how the local date is converted to and back from the UTC date.\nThere are three well-known `TimeZone` implementations:\n\n* [**`Utc`**](./offset/struct.Utc.html) specifies the UTC time zone. It is most efficient.\n\n* [**`Local`**](./offset/struct.Local.html) specifies the system local time zone.\n\n* [**`FixedOffset`**](./offset/struct.FixedOffset.html) specifies\n  an arbitrary, fixed time zone such as UTC+09:00 or UTC-10:30.\n  This often results from the parsed textual date and time.\n  Since it stores the most information and does not depend on the system environment,\n  you would want to normalize other `TimeZone`s into this type.\n\n`DateTime`s with different `TimeZone` types are distinct and do not mix,\nbut can be converted to each other using\nthe [`DateTime::with_timezone`](./struct.DateTime.html#method.with_timezone) method.\n\nYou can get the current date and time in the UTC time zone\n([`Utc::now()`](./offset/struct.Utc.html#method.now))\nor in the local time zone\n([`Local::now()`](./offset/struct.Local.html#method.now)).\n\n```rust\nuse chrono::prelude::*;\n\nlet utc: DateTime<Utc> = Utc::now();       // e.g. `2014-11-28T12:45:59.324310806Z`\nlet local: DateTime<Local> = Local::now(); // e.g. `2014-11-28T21:45:59.324310806+09:00`\n# let _ = utc; let _ = local;\n```\n\nAlternatively, you can create your own date and time.\nThis is a bit verbose due to Rust's lack of function and method overloading,\nbut in turn we get a rich combination of initialization methods.\n\n```rust\nuse chrono::prelude::*;\nuse chrono::offset::LocalResult;\n\nlet dt = Utc.ymd(2014, 7, 8).and_hms(9, 10, 11); // `2014-07-08T09:10:11Z`\n// July 8 is 188th day of the year 2014 (`o` for \"ordinal\")\nassert_eq!(dt, Utc.yo(2014, 189).and_hms(9, 10, 11));\n// July 8 is Tuesday in ISO week 28 of the year 2014.\nassert_eq!(dt, Utc.isoywd(2014, 28, Weekday::Tue).and_hms(9, 10, 11));\n\nlet dt = Utc.ymd(2014, 7, 8).and_hms_milli(9, 10, 11, 12); // `2014-07-08T09:10:11.012Z`\nassert_eq!(dt, Utc.ymd(2014, 7, 8).and_hms_micro(9, 10, 11, 12_000));\nassert_eq!(dt, Utc.ymd(2014, 7, 8).and_hms_nano(9, 10, 11, 12_000_000));\n\n// dynamic verification\nassert_eq!(Utc.ymd_opt(2014, 7, 8).and_hms_opt(21, 15, 33),\n           LocalResult::Single(Utc.ymd(2014, 7, 8).and_hms(21, 15, 33)));\nassert_eq!(Utc.ymd_opt(2014, 7, 8).and_hms_opt(80, 15, 33), LocalResult::None);\nassert_eq!(Utc.ymd_opt(2014, 7, 38).and_hms_opt(21, 15, 33), LocalResult::None);\n\n// other time zone objects can be used to construct a local datetime.\n// obviously, `local_dt` is normally different from `dt`, but `fixed_dt` should be identical.\nlet local_dt = Local.ymd(2014, 7, 8).and_hms_milli(9, 10, 11, 12);\nlet fixed_dt = FixedOffset::east(9 * 3600).ymd(2014, 7, 8).and_hms_milli(18, 10, 11, 12);\nassert_eq!(dt, fixed_dt);\n# let _ = local_dt;\n```\n\nVarious properties are available to the date and time, and can be altered individually.\nMost of them are defined in the traits [`Datelike`](./trait.Datelike.html) and\n[`Timelike`](./trait.Timelike.html) which you should `use` before.\nAddition and subtraction is also supported.\nThe following illustrates most supported operations to the date and time:\n\n```rust\nuse chrono::prelude::*;\nuse chrono::Duration;\n\n// assume this returned `2014-11-28T21:45:59.324310806+09:00`:\nlet dt = FixedOffset::east(9*3600).ymd(2014, 11, 28).and_hms_nano(21, 45, 59, 324310806);\n\n// property accessors\nassert_eq!((dt.year(), dt.month(), dt.day()), (2014, 11, 28));\nassert_eq!((dt.month0(), dt.day0()), (10, 27)); // for unfortunate souls\nassert_eq!((dt.hour(), dt.minute(), dt.second()), (21, 45, 59));\nassert_eq!(dt.weekday(), Weekday::Fri);\nassert_eq!(dt.weekday().number_from_monday(), 5); // Mon=1, ..., Sun=7\nassert_eq!(dt.ordinal(), 332); // the day of year\nassert_eq!(dt.num_days_from_ce(), 735565); // the number of days from and including Jan 1, 1\n\n// time zone accessor and manipulation\nassert_eq!(dt.offset().fix().local_minus_utc(), 9 * 3600);\nassert_eq!(dt.timezone(), FixedOffset::east(9 * 3600));\nassert_eq!(dt.with_timezone(&Utc), Utc.ymd(2014, 11, 28).and_hms_nano(12, 45, 59, 324310806));\n\n// a sample of property manipulations (validates dynamically)\nassert_eq!(dt.with_day(29).unwrap().weekday(), Weekday::Sat); // 2014-11-29 is Saturday\nassert_eq!(dt.with_day(32), None);\nassert_eq!(dt.with_year(-300).unwrap().num_days_from_ce(), -109606); // November 29, 301 BCE\n\n// arithmetic operations\nlet dt1 = Utc.ymd(2014, 11, 14).and_hms(8, 9, 10);\nlet dt2 = Utc.ymd(2014, 11, 14).and_hms(10, 9, 8);\nassert_eq!(dt1.signed_duration_since(dt2), Duration::seconds(-2 * 3600 + 2));\nassert_eq!(dt2.signed_duration_since(dt1), Duration::seconds(2 * 3600 - 2));\nassert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 0, 0) + Duration::seconds(1_000_000_000),\n           Utc.ymd(2001, 9, 9).and_hms(1, 46, 40));\nassert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 0, 0) - Duration::seconds(1_000_000_000),\n           Utc.ymd(1938, 4, 24).and_hms(22, 13, 20));\n```\n\n### Formatting and Parsing\n\nFormatting is done via the [`format`](./struct.DateTime.html#method.format) method,\nwhich format is equivalent to the familiar `strftime` format.\n\nSee [`format::strftime`](./format/strftime/index.html#specifiers)\ndocumentation for full syntax and list of specifiers.\n\nThe default `to_string` method and `{:?}` specifier also give a reasonable representation.\nChrono also provides [`to_rfc2822`](./struct.DateTime.html#method.to_rfc2822) and\n[`to_rfc3339`](./struct.DateTime.html#method.to_rfc3339) methods\nfor well-known formats.\n\nChrono now also provides date formatting in almost any language without the\nhelp of an additional C library. This functionality is under the feature\n`unstable-locales`:\n\n```toml\nchrono = { version = \"0.4\", features = [\"unstable-locales\"] }\n```\n\nThe `unstable-locales` feature requires and implies at least the `alloc` feature.\n\n```rust\nuse chrono::prelude::*;\n\n# #[cfg(feature = \"unstable-locales\")]\n# fn test() {\nlet dt = Utc.ymd(2014, 11, 28).and_hms(12, 0, 9);\nassert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2014-11-28 12:00:09\");\nassert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), \"Fri Nov 28 12:00:09 2014\");\nassert_eq!(dt.format_localized(\"%A %e %B %Y, %T\", Locale::fr_BE).to_string(), \"vendredi 28 novembre 2014, 12:00:09\");\n\nassert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), dt.format(\"%c\").to_string());\nassert_eq!(dt.to_string(), \"2014-11-28 12:00:09 UTC\");\nassert_eq!(dt.to_rfc2822(), \"Fri, 28 Nov 2014 12:00:09 +0000\");\nassert_eq!(dt.to_rfc3339(), \"2014-11-28T12:00:09+00:00\");\nassert_eq!(format!(\"{:?}\", dt), \"2014-11-28T12:00:09Z\");\n\n// Note that milli/nanoseconds are only printed if they are non-zero\nlet dt_nano = Utc.ymd(2014, 11, 28).and_hms_nano(12, 0, 9, 1);\nassert_eq!(format!(\"{:?}\", dt_nano), \"2014-11-28T12:00:09.000000001Z\");\n# }\n# #[cfg(not(feature = \"unstable-locales\"))]\n# fn test() {}\n# if cfg!(feature = \"unstable-locales\") {\n#    test();\n# }\n```\n\nParsing can be done with three methods:\n\n1. The standard [`FromStr`](https://doc.rust-lang.org/std/str/trait.FromStr.html) trait\n   (and [`parse`](https://doc.rust-lang.org/std/primitive.str.html#method.parse) method\n   on a string) can be used for parsing `DateTime<FixedOffset>`, `DateTime<Utc>` and\n   `DateTime<Local>` values. This parses what the `{:?}`\n   ([`std::fmt::Debug`](https://doc.rust-lang.org/std/fmt/trait.Debug.html))\n   format specifier prints, and requires the offset to be present.\n\n2. [`DateTime::parse_from_str`](./struct.DateTime.html#method.parse_from_str) parses\n   a date and time with offsets and returns `DateTime<FixedOffset>`.\n   This should be used when the offset is a part of input and the caller cannot guess that.\n   It *cannot* be used when the offset can be missing.\n   [`DateTime::parse_from_rfc2822`](./struct.DateTime.html#method.parse_from_rfc2822)\n   and\n   [`DateTime::parse_from_rfc3339`](./struct.DateTime.html#method.parse_from_rfc3339)\n   are similar but for well-known formats.\n\n3. [`Offset::datetime_from_str`](./offset/trait.TimeZone.html#method.datetime_from_str) is\n   similar but returns `DateTime` of given offset.\n   When the explicit offset is missing from the input, it simply uses given offset.\n   It issues an error when the input contains an explicit offset different\n   from the current offset.\n\nMore detailed control over the parsing process is available via\n[`format`](./format/index.html) module.\n\n```rust\nuse chrono::prelude::*;\n\nlet dt = Utc.ymd(2014, 11, 28).and_hms(12, 0, 9);\nlet fixed_dt = dt.with_timezone(&FixedOffset::east(9*3600));\n\n// method 1\nassert_eq!(\"2014-11-28T12:00:09Z\".parse::<DateTime<Utc>>(), Ok(dt.clone()));\nassert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<Utc>>(), Ok(dt.clone()));\nassert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<FixedOffset>>(), Ok(fixed_dt.clone()));\n\n// method 2\nassert_eq!(DateTime::parse_from_str(\"2014-11-28 21:00:09 +09:00\", \"%Y-%m-%d %H:%M:%S %z\"),\n           Ok(fixed_dt.clone()));\nassert_eq!(DateTime::parse_from_rfc2822(\"Fri, 28 Nov 2014 21:00:09 +0900\"),\n           Ok(fixed_dt.clone()));\nassert_eq!(DateTime::parse_from_rfc3339(\"2014-11-28T21:00:09+09:00\"), Ok(fixed_dt.clone()));\n\n// method 3\nassert_eq!(Utc.datetime_from_str(\"2014-11-28 12:00:09\", \"%Y-%m-%d %H:%M:%S\"), Ok(dt.clone()));\nassert_eq!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\"), Ok(dt.clone()));\n\n// oops, the year is missing!\nassert!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T %Y\").is_err());\n// oops, the format string does not include the year at all!\nassert!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T\").is_err());\n// oops, the weekday is incorrect!\nassert!(Utc.datetime_from_str(\"Sat Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\").is_err());\n```\n\nAgain : See [`format::strftime`](./format/strftime/index.html#specifiers)\ndocumentation for full syntax and list of specifiers.\n\n### Conversion from and to EPOCH timestamps\n\nUse [`Utc.timestamp(seconds, nanoseconds)`](./offset/trait.TimeZone.html#method.timestamp)\nto construct a [`DateTime<Utc>`](./struct.DateTime.html) from a UNIX timestamp\n(seconds, nanoseconds that passed since January 1st 1970).\n\nUse [`DateTime.timestamp`](./struct.DateTime.html#method.timestamp) to get the timestamp (in seconds)\nfrom a [`DateTime`](./struct.DateTime.html). Additionally, you can use\n[`DateTime.timestamp_subsec_nanos`](./struct.DateTime.html#method.timestamp_subsec_nanos)\nto get the number of additional number of nanoseconds.\n\n```rust\n// We need the trait in scope to use Utc::timestamp().\nuse chrono::{DateTime, TimeZone, Utc};\n\n// Construct a datetime from epoch:\nlet dt = Utc.timestamp(1_500_000_000, 0);\nassert_eq!(dt.to_rfc2822(), \"Fri, 14 Jul 2017 02:40:00 +0000\");\n\n// Get epoch value from a datetime:\nlet dt = DateTime::parse_from_rfc2822(\"Fri, 14 Jul 2017 02:40:00 +0000\").unwrap();\nassert_eq!(dt.timestamp(), 1_500_000_000);\n```\n\n### Individual date\n\nChrono also provides an individual date type ([**`Date`**](./struct.Date.html)).\nIt also has time zones attached, and have to be constructed via time zones.\nMost operations available to `DateTime` are also available to `Date` whenever appropriate.\n\n```rust\nuse chrono::prelude::*;\nuse chrono::offset::LocalResult;\n\n# // these *may* fail, but only very rarely. just rerun the test if you were that unfortunate ;)\nassert_eq!(Utc::today(), Utc::now().date());\nassert_eq!(Local::today(), Local::now().date());\n\nassert_eq!(Utc.ymd(2014, 11, 28).weekday(), Weekday::Fri);\nassert_eq!(Utc.ymd_opt(2014, 11, 31), LocalResult::None);\nassert_eq!(Utc.ymd(2014, 11, 28).and_hms_milli(7, 8, 9, 10).format(\"%H%M%S\").to_string(),\n           \"070809\");\n```\n\nThere is no timezone-aware `Time` due to the lack of usefulness and also the complexity.\n\n`DateTime` has [`date`](./struct.DateTime.html#method.date) method\nwhich returns a `Date` which represents its date component.\nThere is also a [`time`](./struct.DateTime.html#method.time) method,\nwhich simply returns a naive local time described below.\n\n### Naive date and time\n\nChrono provides naive counterparts to `Date`, (non-existent) `Time` and `DateTime`\nas [**`NaiveDate`**](./naive/struct.NaiveDate.html),\n[**`NaiveTime`**](./naive/struct.NaiveTime.html) and\n[**`NaiveDateTime`**](./naive/struct.NaiveDateTime.html) respectively.\n\nThey have almost equivalent interfaces as their timezone-aware twins,\nbut are not associated to time zones obviously and can be quite low-level.\nThey are mostly useful for building blocks for higher-level types.\n\nTimezone-aware `DateTime` and `Date` types have two methods returning naive versions:\n[`naive_local`](./struct.DateTime.html#method.naive_local) returns\na view to the naive local time,\nand [`naive_utc`](./struct.DateTime.html#method.naive_utc) returns\na view to the naive UTC time.\n\n## Limitations\n\nOnly proleptic Gregorian calendar (i.e. extended to support older dates) is supported.\nBe very careful if you really have to deal with pre-20C dates, they can be in Julian or others.\n\nDate types are limited in about +/- 262,000 years from the common epoch.\nTime types are limited in the nanosecond accuracy.\n\n[Leap seconds are supported in the representation but\nChrono doesn't try to make use of them](./naive/struct.NaiveTime.html#leap-second-handling).\n(The main reason is that leap seconds are not really predictable.)\nAlmost *every* operation over the possible leap seconds will ignore them.\nConsider using `NaiveDateTime` with the implicit TAI (International Atomic Time) scale\nif you want.\n\nChrono inherently does not support an inaccurate or partial date and time representation.\nAny operation that can be ambiguous will return `None` in such cases.\nFor example, \"a month later\" of 2014-01-30 is not well-defined\nand consequently `Utc.ymd(2014, 1, 30).with_month(2)` returns `None`.\n\nNon ISO week handling is not yet supported.\nFor now you can use the [chrono_ext](https://crates.io/crates/chrono_ext)\ncrate ([sources](https://github.com/bcourtine/chrono-ext/)).\n\nAdvanced time zone handling is not yet supported.\nFor now you can try the [Chrono-tz](https://github.com/chronotope/chrono-tz/) crate instead.","links":{"`Duration`":"20:405:121"},"attrs":["#![doc(html_root_url = \"https://docs.rs/chrono/latest/\")]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![warn(unreachable_pub)]","#![deny(dead_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:7:1030","0:558:671","0:1061:1900","0:1758:957","0:4","0:247","0:250","0:253","0:546","0:549","0:552","0:555","0:1055","0:1058","0:1743","0:1746","0:1749","0:1752","0:1755","0:2399","0:2403","0:2406","0:2409","0:2412","0:2415","0:2481","0:2484","0:2487","0:2512","0:2515","0:2536","0:2539","0:2542","0:2584","0:2587"],"is_stripped":false}},"2:13482:60095":{"id":"2:13482:60095","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"2:13054:1925","str::rsplitn":"1:16010:6927","prim@char":"1:16004:6922"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49566:7175","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3492:116":{"id":"2:3492:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3493:221","2:3494:543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2377:4465":{"id":"0:2377:4465","crate_id":0,"name":"ymd_opt","span":{"filename":"src/offset/mod.rs","begin":[244,4],"end":[249,5]},"visibility":"default","docs":"Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date, invalid month and/or day.\n\n# Example\n\n```\nuse chrono::{Utc, LocalResult, TimeZone};\n\nassert_eq!(Utc.ymd_opt(2015, 5, 15).unwrap().to_string(), \"2015-05-15UTC\");\nassert_eq!(Utc.ymd_opt(2000, 0, 0), LocalResult::None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["month",{"kind":"primitive","inner":"u32"}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2771:604":{"id":"0:2771:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[253,23],"end":[253,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2676:2630":{"id":"0:2676:2630","crate_id":0,"name":"WeekFromSun","span":{"filename":"src/format/mod.rs","begin":[118,4],"end":[118,15]},"visibility":"default","docs":"Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2512":{"id":"0:2512","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[497,18],"end":[497,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"weekday::ParseWeekdayError","name":"ParseWeekdayError","id":"0:3510:1908","glob":false}},"0:2539":{"id":"0:2539","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[500,23],"end":[500,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"month::Months","name":"Months","id":"0:3572:1910","glob":false}},"2:23470:21432":{"id":"2:23470:21432","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23471:63364","2:23472:63365","2:23473:63366"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialOrd","id":"2:23465:8888","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10313:7225":{"id":"2:10313:7225","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10314:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2715:2665":{"id":"0:2715:2665","crate_id":0,"name":"ShortMonthName","span":{"filename":"src/format/mod.rs","begin":[186,4],"end":[186,18]},"visibility":"default","docs":"Abbreviated month names.\n\nPrints a three-letter-long name in the title case, reads the same name in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"5:6103:65277":{"id":"5:6103:65277","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4004:1429":{"id":"2:4004:1429","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46031:7210","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2358:5710":{"id":"0:2358:5710","crate_id":0,"name":"latest","span":{"filename":"src/offset/mod.rs","begin":[70,4],"end":[75,5]},"visibility":"public","docs":"Returns `Some` for the latest possible conversion result, or `None` if none.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14166:141":{"id":"2:14166:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14167:277","2:14168:518","2:14169:280","2:14170:1079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"22:86:7271":{"id":"22:86:7271","crate_id":22,"name":"Average","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:87:7272","22:88:7273"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Integer","id":"22:109:7253","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13544:64640":{"id":"2:13544:64640","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:16004:6922"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49779:7183","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9259:7637-0:614:2655":{"id":"a:2:9259:7637-0:614:2655","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9259:7637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2657":{"id":"0:2657","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[74,37],"end":[74,42]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10292:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2658:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:4783:8299":{"id":"2:4783:8299","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4784:2039","2:4785:64034","2:4786:4357"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2874:5914":{"id":"2:2874:5914","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6557:8562":{"id":"1:6557:8562","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6558:62356","1:6559:62357"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3202-0:2714:2237":{"id":"b:2:3202-0:2714:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5775:8546":{"id":"1:5775:8546","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5776:61806","1:5777:61807","1:5778:61808","1:5779:61809"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13543:8567":{"id":"2:13543:8567","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:16004:6922"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49770:7182","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:702:58095":{"id":"23:702:58095","crate_id":23,"name":"OverflowingMul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:703:66346"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Mul","id":"2:3347:7085","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13419:3244":{"id":"2:13419:3244","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2882:2944":{"id":"0:2882:2944","crate_id":0,"name":"isoyear","span":{"filename":"src/format/parsed.rs","begin":[47,4],"end":[47,28]},"visibility":"public","docs":"Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date).\n\nThis can be negative unlike [`isoyear_div_100`](#structfield.isoyear_div_100) and\n[`isoyear_mod_100`](#structfield.isoyear_mod_100) fields.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}},"param_names":[]}}},"0:2555:6850":{"id":"0:2555:6850","crate_id":0,"name":"year_ce","span":{"filename":"src/traits.rs","begin":[11,4],"end":[18,5]},"visibility":"default","docs":"Returns the absolute year number starting from 1 with a boolean flag,\nwhich is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"bool"},{"kind":"primitive","inner":"u32"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2399":{"id":"0:2399","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[489,0],"end":[489,22]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]","#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::Local","name":"Local","id":"0:3404:1873","glob":false}},"0:2670:2626":{"id":"0:2670:2626","crate_id":0,"name":"IsoYearMod100","span":{"filename":"src/format/mod.rs","begin":[112,4],"end":[112,17]},"visibility":"default","docs":"Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:21":{"id":"0:21","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[455,30],"end":[455,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::SecondsFormat","name":"SecondsFormat","id":"0:2597:1878","glob":false}},"0:51":{"id":"0:51","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[461,46],"end":[461,55]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::NaiveTime","name":"NaiveTime","id":"0:3081:1887","glob":false}},"b:2:3202-0:614:2655":{"id":"b:2:3202-0:614:2655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13541:64639":{"id":"2:13541:64639","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:16004:6922"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49761:7181","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3008:1886":{"id":"0:3008:1886","crate_id":0,"name":"NaiveDateTime","span":{"filename":"src/naive/datetime/mod.rs","begin":[76,0],"end":[79,1]},"visibility":"public","docs":"ISO 8601 combined date and time without timezone.\n\n# Example\n\n`NaiveDateTime` is commonly created from [`NaiveDate`](./struct.NaiveDate.html).\n\n```\nuse chrono::{NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);\n# let _ = dt;\n```\n\nYou can use typical [date-like](../trait.Datelike.html) and\n[time-like](../trait.Timelike.html) methods,\nprovided that relevant traits are in the scope.\n\n```\n# use chrono::{NaiveDate, NaiveDateTime};\n# let dt: NaiveDateTime = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);\nuse chrono::{Datelike, Timelike, Weekday};\n\nassert_eq!(dt.weekday(), Weekday::Fri);\nassert_eq!(dt.num_seconds_from_midnight(), 33011);\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"5:6084:65275":{"id":"5:6084:65275","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2592","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:8275","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2592","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:8275","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13485:60097":{"id":"2:13485:60097","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:16004:6922","str::splitn":"1:16010:6927","self::pattern":"2:13054:1925"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49584:7174","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13079:7159","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2556:1909":{"id":"0:2556:1909","crate_id":0,"name":"month","span":{"filename":"src/traits.rs","begin":[23,4],"end":[23,27]},"visibility":"default","docs":"Returns the month number starting from 1.\n\nThe return value ranges from 1 to 12.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2698:2650":{"id":"0:2698:2650","crate_id":0,"name":"Timestamp","span":{"filename":"src/format/mod.rs","begin":[143,4],"end":[143,13]},"visibility":"default","docs":"The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).\nFor formatting, it assumes UTC upon the absence of time zone offset.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:3208-0:2933:2038":{"id":"b:2:3208-0:2933:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2933:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2573:2086":{"id":"0:2573:2086","crate_id":0,"name":"hour","span":{"filename":"src/traits.rs","begin":[124,4],"end":[124,26]},"visibility":"default","docs":"Returns the hour number from 0 to 23.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"23:752:7322":{"id":"23:752:7322","crate_id":23,"name":"WrappingSub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:753:1529"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sub","id":"2:3342:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9259:7637-0:2795:2039":{"id":"a:2:9259:7637-0:2795:2039","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9259:7637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:549":{"id":"0:549","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[474,29],"end":[474,42]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"datetime::SecondsFormat","name":"SecondsFormat","id":"0:2597:1878","glob":false}},"0:1387:1895":{"id":"0:1387:1895","crate_id":0,"name":"MAX_DATETIME","span":{"filename":"src/naive/datetime/mod.rs","begin":[47,0],"end":[47,59]},"visibility":"public","docs":"The maximum possible `NaiveDateTime`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDateTime::MAX instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDateTime::MAX instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:3008:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"NaiveDateTime::MAX","value":null,"is_literal":false}},"b:2:3202-0:2763:2701":{"id":"b:2:3202-0:2763:2701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13526:64637":{"id":"2:13526:64637","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13054:1925","prim@char":"1:16004:6922"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13079:7159","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:621":{"id":"0:621","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[171,0],"end":[175,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10292:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:622:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2668:2624":{"id":"0:2668:2624","crate_id":0,"name":"IsoYearDiv100","span":{"filename":"src/format/mod.rs","begin":[110,4],"end":[110,17]},"visibility":"default","docs":"Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1755":{"id":"0:1755","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[484,62],"end":[484,71]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::NaiveWeek","name":"NaiveWeek","id":"0:2942:1902","glob":false}},"1:5785:8547":{"id":"1:5785:8547","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5786:59898"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13444:3492":{"id":"2:13444:3492","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49448:7165","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:599:7309":{"id":"23:599:7309","crate_id":23,"name":"Euclid","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:600:6890","23:601:5990"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Div","id":"2:3352:7084","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Rem","id":"2:3358:7087","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9259:7637-0:2835:1898":{"id":"a:2:9259:7637-0:2835:1898","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9259:7637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:9260:7636":{"id":"2:9260:7636","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1749":{"id":"0:1749","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[484,36],"end":[484,49]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::NaiveDateTime","name":"NaiveDateTime","id":"0:3008:1886","glob":false}},"0:2518:1909":{"id":"0:2518:1909","crate_id":0,"name":"month","span":{"filename":"src/month.rs","begin":[1,0],"end":[352,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3521:1880","0:3572:1910","0:3592:1911"],"is_stripped":true}},"0:3429:3090":{"id":"0:3429:3090","crate_id":0,"name":"Ambiguous","span":{"filename":"src/offset/mod.rs","begin":[49,4],"end":[49,35]},"visibility":"default","docs":"Given local time representation has multiple results and thus ambiguous.\nThis can occur when, for example, the negative timezone transition.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"generic","inner":"T"},{"kind":"generic","inner":"T"}]}},"0:701:671":{"id":"0:701:671","crate_id":0,"name":"format","span":{"filename":"src/format/mod.rs","begin":[717,0],"end":[733,1]},"visibility":"public","docs":"Tries to format given arguments with given formatting items.\nInternally used by `DelayedFormat`.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["w",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10252:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["date",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2947:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}}],["time",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3081:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}}],["off",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3101:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]}}}}],"bindings":[]}},"param_names":[]}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10241:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8602:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2356:2082":{"id":"0:2356:2082","crate_id":0,"name":"single","span":{"filename":"src/offset/mod.rs","begin":[54,4],"end":[59,5]},"visibility":"public","docs":"Returns `Some` only when the conversion result is unique, or `None` otherwise.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2868:660":{"id":"0:2868:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[347,9],"end":[347,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10252:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10241:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2947:1885":{"id":"0:2947:1885","crate_id":0,"name":"NaiveDate","span":{"filename":"src/naive/date.rs","begin":[168,0],"end":[170,1]},"visibility":"public","docs":"ISO 8601 calendar date without timezone.\nAllows for every [proleptic Gregorian date](#calendar-date)\nfrom Jan 1, 262145 BCE to Dec 31, 262143 CE.\nAlso supports the conversion from ISO 8601 ordinal and week date.\n\n# Calendar Date\n\nThe ISO 8601 **calendar date** follows the proleptic Gregorian calendar.\nIt is like a normal civil calendar but note some slight differences:\n\n* Dates before the Gregorian calendar's inception in 1582 are defined via the extrapolation.\n  Be careful, as historical dates are often noted in the Julian calendar and others\n  and the transition to Gregorian may differ across countries (as late as early 20C).\n\n  (Some example: Both Shakespeare from Britain and Cervantes from Spain seemingly died\n  on the same calendar date---April 23, 1616---but in the different calendar.\n  Britain used the Julian calendar at that time, so Shakespeare's death is later.)\n\n* ISO 8601 calendars has the year 0, which is 1 BCE (a year before 1 CE).\n  If you need a typical BCE/BC and CE/AD notation for year numbers,\n  use the [`Datelike::year_ce`](../trait.Datelike.html#method.year_ce) method.\n\n# Week Date\n\nThe ISO 8601 **week date** is a triple of year number, week number\nand [day of the week](../enum.Weekday.html) with the following rules:\n\n* A week consists of Monday through Sunday, and is always numbered within some year.\n  The week number ranges from 1 to 52 or 53 depending on the year.\n\n* The week 1 of given year is defined as the first week containing January 4 of that year,\n  or equivalently, the first week containing four or more days in that year.\n\n* The year number in the week date may *not* correspond to the actual Gregorian year.\n  For example, January 3, 2016 (Sunday) was on the last (53rd) week of 2015.\n\nChrono's date types default to the ISO 8601 [calendar date](#calendar-date),\nbut [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) and\n[`Datelike::weekday`](../trait.Datelike.html#tymethod.weekday) methods\ncan be used to get the corresponding week date.\n\n# Ordinal Date\n\nThe ISO 8601 **ordinal date** is a pair of year number and day of the year (\"ordinal\").\nThe ordinal number ranges from 1 to 365 or 366 depending on the year.\nThe year number is the same as that of the [calendar date](#calendar-date).\n\nThis is currently the internal format of Chrono's date types.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:10311:7224":{"id":"2:10311:7224","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10312:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:796:7324":{"id":"23:796:7324","crate_id":23,"name":"Pow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:798:181","23:799:7277"],"generics":{"params":[{"name":"RHS","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13084:7158":{"id":"2:13084:7158","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13079:7159","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:7928:8359":{"id":"2:7928:8359","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7929:63456","2:7930:63457","2:7931:63454","2:7932:63452","2:7933:63458","2:7934:63455","2:7935:63453"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3449":{"id":"0:3449","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[40,40],"end":[40,42]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1175:1892":{"id":"0:1175:1892","crate_id":0,"name":"MIN_DATE","span":{"filename":"src/naive/date.rs","begin":[174,0],"end":[174,47]},"visibility":"public","docs":"The minimum possible `NaiveDate` (January 1, 262145 BCE).","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDate::MIN instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDate::MIN instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2947:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"NaiveDate::MIN","value":null,"is_literal":false}},"0:3475:2813":{"id":"0:3475:2813","crate_id":0,"name":"Mon","span":{"filename":"src/weekday.rs","begin":[16,4],"end":[16,11]},"visibility":"default","docs":"Monday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3457:6599":{"id":"0:3457:6599","crate_id":0,"name":"DurationExceedsTimestamp","span":{"filename":"src/round.rs","begin":[254,4],"end":[254,28]},"visibility":"default","docs":"Error when the Duration exceeds the Duration from or until the Unix epoch.\n\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};\nlet dt = Utc.ymd(1970, 12, 12).and_hms(0, 0, 0);\n\nassert_eq!(\n    dt.duration_round(Duration::days(365)),\n    Err(RoundingError::DurationExceedsTimestamp),\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2597:1878":{"id":"0:2597:1878","crate_id":0,"name":"SecondsFormat","span":{"filename":"src/datetime/mod.rs","begin":[53,0],"end":[77,1]},"visibility":"public","docs":"Specific formatting options for seconds. This may be extended in the\nfuture, so exhaustive matching in external code is not recommended.\n\nSee the `TimeZone::to_rfc3339_opts` function for usage.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:2598:2243","0:2600:2246","0:2602:2249","0:2604:2252","0:2606:2256"],"impls":[]}},"0:2707:604":{"id":"0:2707:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[97,16],"end":[97,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:762:7321":{"id":"23:762:7321","crate_id":23,"name":"WrappingShr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:763:66091"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Shr","id":"2:3417:7096","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2773":{"id":"0:2773","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[253,34],"end":[253,36]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2542":{"id":"0:2542","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[500,31],"end":[500,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"month::ParseMonthError","name":"ParseMonthError","id":"0:3592:1911","glob":false}},"0:2797:2450":{"id":"0:2797:2450","crate_id":0,"name":"Literal","span":{"filename":"src/format/mod.rs","begin":[281,4],"end":[281,20]},"visibility":"default","docs":"A literally printed and parsed text.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}},"0:2723:2675":{"id":"0:2723:2675","crate_id":0,"name":"LowerAmPm","span":{"filename":"src/format/mod.rs","begin":[202,4],"end":[202,13]},"visibility":"default","docs":"AM/PM.\n\nPrints in lower case, reads in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2700:2654":{"id":"0:2700:2654","crate_id":0,"name":"Internal","span":{"filename":"src/format/mod.rs","begin":[149,4],"end":[149,29]},"visibility":"default","docs":"Internal uses only.\n\nThis item exists so that one can add additional internal-only formatting\nwithout breaking major compatibility (as enum variants cannot be selectively private).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]}},"2:13517:64636":{"id":"2:13517:64636","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13054:1925","prim@char":"1:16004:6922"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:581:7304":{"id":"23:581:7304","crate_id":23,"name":"CheckedRem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:582:66525"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Rem","id":"2:3358:7087","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3213-0:2795:2039":{"id":"b:2:3213-0:2795:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:584:7303":{"id":"23:584:7303","crate_id":23,"name":"CheckedNeg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:585:66541"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3208-0:3422:1903":{"id":"b:2:3208-0:3422:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13446:37317":{"id":"2:13446:37317","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:16010:6927"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49745:7184","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2867":{"id":"0:2867","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[347,9],"end":[347,14]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10292:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2868:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10530:142":{"id":"2:10530:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10531:715","2:10533:7928"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2737:2465":{"id":"0:2737:2465","crate_id":0,"name":"TimezoneOffsetColon","span":{"filename":"src/format/mod.rs","begin":[226,4],"end":[226,23]},"visibility":"default","docs":"Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace.\nThe offset is limited from `-24:00` to `+24:00`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:10301:7220":{"id":"2:10301:7220","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10302:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3559:7113":{"id":"2:3559:7113","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3561:237","2:3562:206","2:3563:63614"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:3422:1903":{"id":"b:2:3213-0:3422:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2553:1879":{"id":"0:2553:1879","crate_id":0,"name":"Datelike","span":{"filename":"src/traits.rs","begin":[4,0],"end":[119,1]},"visibility":"public","docs":"The common set of methods for date component.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2554:2157","0:2555:6850","0:2556:1909","0:2557:2187","0:2558:2158","0:2559:2188","0:2560:2189","0:2561:2190","0:2562:1907","0:2563:2191","0:2564:2192","0:2565:2193","0:2566:2194","0:2567:2195","0:2568:2196","0:2569:2197","0:2570:2198","0:2571:4485"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3172:149":{"id":"2:3172:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3174:2535"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:754:7318":{"id":"23:754:7318","crate_id":23,"name":"WrappingMul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:755:1528"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Mul","id":"2:3347:7085","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1883:816":{"id":"0:1883:816","crate_id":0,"name":"local","span":{"filename":"src/offset/local/mod.rs","begin":[4,0],"end":[322,1]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":"The local (system) time zone.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3404:1873"],"is_stripped":true}},"2:3342:2032":{"id":"2:3342:2032","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3344:181","2:3345:1355"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2933:2038":{"id":"0:2933:2038","crate_id":0,"name":"DelayedFormat","span":{"filename":"src/format/mod.rs","begin":[747,0],"end":[761,1]},"visibility":"public","docs":"A *temporary* object which can be used as an argument to `format!` or others.\nThis is normally constructed via `format` methods of each date and time type.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1036","a:2:3310:7470-0:2933:2038","a:2:3281:220-0:2933:2038","a:2:9259:7637-0:2933:2038","a:2:9260:7636-0:2933:2038","a:2:3269:211-0:2933:2038","b:2:3202-0:2933:2038","b:2:3213-0:2933:2038","b:2:4002-0:2933:2038","b:2:2869-0:2933:2038","b:2:2872-0:2933:2038","b:2:3208-0:2933:2038","b:2:3198-0:2933:2038","b:5:6413-0:2933:2038","0:2939","0:1043"]}},"23:572:7300":{"id":"23:572:7300","crate_id":23,"name":"CheckedAdd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:573:3044"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Add","id":"2:3337:2030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13782:150":{"id":"2:13782:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13783:181","2:13784:150","2:13785:767"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:611":{"id":"0:611","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[63,0],"end":[63,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"strftime::StrftimeItems","name":"StrftimeItems","id":"0:2914:2040","glob":false}},"0:3478:2814":{"id":"0:3478:2814","crate_id":0,"name":"Tue","span":{"filename":"src/weekday.rs","begin":[18,4],"end":[18,11]},"visibility":"default","docs":"Tuesday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:632:1899":{"id":"0:632:1899","crate_id":0,"name":"ParseResult","span":{"filename":"src/format/mod.rs","begin":[383,0],"end":[383,48]},"visibility":"public","docs":"Same as `Result<T, ParseError>`.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47622:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:2896:2478":{"id":"0:2896:2478","crate_id":0,"name":"nanosecond","span":{"filename":"src/format/parsed.rs","begin":[98,4],"end":[98,31]},"visibility":"public","docs":"The number of nanoseconds since the whole second (0--999,999,999).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"0:3432:1543":{"id":"0:3432:1543","crate_id":0,"name":"1","span":{"filename":"src/offset/mod.rs","begin":[49,25],"end":[49,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"a:2:3269:211-0:2914:2040":{"id":"a:2:3269:211-0:2914:2040","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2890:2189":{"id":"0:2890:2189","crate_id":0,"name":"ordinal","span":{"filename":"src/format/parsed.rs","begin":[80,4],"end":[80,28]},"visibility":"public","docs":"Day of the year (1--365 or 1--366 depending on the year).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"0:3438":{"id":"0:3438","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[40,16],"end":[40,25]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::cmp::PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:3440:604","0:3441:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10934:214":{"id":"2:10934:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:10936:181","2:10937:5158","2:10938:60060","2:10939:60061","2:10940:60062","2:10941:753","2:10942:754"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:10925:8524","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2481":{"id":"0:2481","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[494,16],"end":[494,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"round::DurationRound","name":"DurationRound","id":"0:2458:1905","glob":false}},"0:2655":{"id":"0:2655","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[74,33],"end":[74,35]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2733:2461":{"id":"0:2733:2461","crate_id":0,"name":"Nanosecond9","span":{"filename":"src/format/mod.rs","begin":[216,4],"end":[216,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2808:1542":{"id":"0:2808:1542","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[289,15],"end":[289,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2592","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}},"b:2:4002-0:614:2655":{"id":"b:2:4002-0:614:2655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1029:2039":{"id":"0:1029:2039","crate_id":0,"name":"Item","span":{"filename":"src/format/strftime.rs","begin":[257,4],"end":[257,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"0:2560:2189":{"id":"0:2560:2189","crate_id":0,"name":"ordinal","span":{"filename":"src/traits.rs","begin":[43,4],"end":[43,29]},"visibility":"default","docs":"Returns the day of year starting from 1.\n\nThe return value ranges from 1 to 366. (The last day of year differs by years.)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2580:2481":{"id":"0:2580:2481","crate_id":0,"name":"with_second","span":{"filename":"src/traits.rs","begin":[164,4],"end":[164,52]},"visibility":"default","docs":"Makes a new value with the second number changed.\n\nReturns `None` when the resulting value would be invalid.\nAs with the [`second`](#tymethod.second) method,\nthe input range is restricted to 0 through 59.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3269:211":{"id":"2:3269:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:757:7319":{"id":"23:757:7319","crate_id":23,"name":"WrappingNeg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:758:64179"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1758:957":{"id":"0:1758:957","crate_id":0,"name":"offset","span":{"filename":"src/offset/mod.rs","begin":[4,0],"end":[537,1]},"visibility":"public","docs":"The time zone, which calculates offsets from the local time to UTC.\n\nThere are four operations provided by the `TimeZone` trait:\n\n1. Converting the local `NaiveDateTime` to `DateTime<Tz>`\n2. Converting the UTC `NaiveDateTime` to `DateTime<Tz>`\n3. Converting `DateTime<Tz>` to the local `NaiveDateTime`\n4. Constructing `DateTime<Tz>` objects from various offsets\n\n1 is used for constructors. 2 is used for the `with_timezone` method of date and time types.\n3 is used for other methods, e.g. `year()` or `format()`, and provided by an associated type\nwhich implements `Offset` (which then passed to `TimeZone` for actual implementations).\nTechnically speaking `TimeZone` has a total knowledge about given timescale,\nbut `Offset` is used as a cache to avoid the repeated conversion\nand provides implementations for 1 and 3.\nAn `TimeZone` instance can be reconstructed from the corresponding `Offset` instance.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1880","0:2294","0:2351","0:3422:1903","0:2372:1888","0:2374:1889"],"is_stripped":false}},"2:3519:130":{"id":"2:3519:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3521:376"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3522:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3216:127":{"id":"2:3216:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38808:7205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[468,21],"end":[468,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"date::MAX_DATE","name":"MAX_DATE","id":"0:129:1891","glob":false}},"2:8410:2039":{"id":"2:8410:2039","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8602:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}},"1:5653:8560":{"id":"1:5653:8560","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5654:9942","1:5655:3211"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10565:8524","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3734:137":{"id":"2:3734:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3736:687"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3592:1911":{"id":"0:3592:1911","crate_id":0,"name":"ParseMonthError","span":{"filename":"src/month.rs","begin":[205,0],"end":[207,1]},"visibility":"public","docs":"An error resulting from reading `<Month>` value with `FromStr`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:3510:1908":{"id":"0:3510:1908","crate_id":0,"name":"ParseWeekdayError","span":{"filename":"src/weekday.rs","begin":[190,0],"end":[192,1]},"visibility":"public","docs":"An error resulting from reading `Weekday` value with `FromStr`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"b:2:3208-0:2659:2443":{"id":"b:2:3208-0:2659:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:819:7266":{"id":"23:819:7266","crate_id":23,"name":"Signed","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:820:4445","23:821:7325","23:822:7326","23:823:6130","23:824:63793"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Num","id":"23:844:7265","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Neg","id":"2:3364:7086","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1047:660":{"id":"0:1047:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[828,4],"end":[844,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10252:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10241:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6083":{"id":"5:6083","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5903:1340","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6084:65275","5:6085:7414","5:6088:65276","5:6091:2788","5:6103:65277","5:6104:65278","5:6105:6254","5:6106:61164","5:6107:61165"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:2641:2444":{"id":"b:2:4002-0:2641:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3445":{"id":"0:3445","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[40,34],"end":[40,38]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::marker::Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2566:2194":{"id":"0:2566:2194","crate_id":0,"name":"with_month0","span":{"filename":"src/traits.rs","begin":[69,4],"end":[69,55]},"visibility":"default","docs":"Makes a new value with the month number (starting from 0) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3198-0:2835:1898":{"id":"b:2:3198-0:2835:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3201:2535"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9260:7636-0:3422:1903":{"id":"a:2:9260:7636-0:3422:1903","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9260:7636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9260:7636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:2641:2444":{"id":"b:2:2869-0:2641:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2871:2029"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:14":{"id":"0:14","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[453,4],"end":[453,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::SubsecRound","name":"SubsecRound","id":"0:2450:1876","glob":false}},"23:854:7279":{"id":"23:854:7279","crate_id":23,"name":"NumRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Num","id":"23:844:7265","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumOps","id":"23:847:7278","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"implementations":[]}},"0:637:2765":{"id":"0:637:2765","crate_id":0,"name":"description","span":{"filename":"src/format/mod.rs","begin":[403,4],"end":[405,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:605":{"id":"0:605","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[58,0],"end":[58,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"parse::parse","name":"parse","id":"0:896:2235","glob":false}},"0:2708:907":{"id":"0:2708:907","crate_id":0,"name":"ne","span":{"filename":"src/format/mod.rs","begin":[97,16],"end":[97,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2880:2938":{"id":"0:2880:2938","crate_id":0,"name":"year_div_100","span":{"filename":"src/format/parsed.rs","begin":[38,4],"end":[38,33]},"visibility":"public","docs":"Year divided by 100. Implies that the year is >= 1 BCE when set.\n\nDue to the common usage, if this field is missing but\n[`year_mod_100`](#structfield.year_mod_100) is present,\nit is inferred to 19 when `year_mod_100 >= 70` and 20 otherwise.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}},"param_names":[]}}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[459,20],"end":[459,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::FixedOffset","name":"FixedOffset","id":"0:3101:1883","glob":false}},"2:3212:1417":{"id":"2:3212:1417","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47622:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:619:604":{"id":"0:619:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[164,4],"end":[166,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9260:7636-0:2795:2039":{"id":"a:2:9260:7636-0:2795:2039","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9260:7636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13418:793":{"id":"2:13418:793","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:16004:6922"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2461:6592":{"id":"0:2461:6592","crate_id":0,"name":"duration_trunc","span":{"filename":"src/round.rs","begin":[142,4],"end":[142,75]},"visibility":"default","docs":"Return a copy truncated by Duration.\n\n# Example\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, TimeZone, Utc};\nlet dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);\nassert_eq!(\n    dt.duration_trunc(Duration::milliseconds(10)).unwrap().to_string(),\n    \"2018-01-11 12:00:00.150 UTC\"\n);\nassert_eq!(\n    dt.duration_trunc(Duration::days(1)).unwrap().to_string(),\n    \"2018-01-11 00:00:00 UTC\"\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["duration",{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47622:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:2458:1905","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2688:2454":{"id":"0:2688:2454","crate_id":0,"name":"Hour","span":{"filename":"src/format/mod.rs","begin":[130,4],"end":[130,8]},"visibility":"default","docs":"Hour number in the 24-hour clocks (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3358:7087":{"id":"2:3358:7087","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3360:181","2:3361:1102"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3208-0:2641:2444":{"id":"b:2:3208-0:2641:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6107:61165":{"id":"5:6107:61165","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:16010:6927"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2823":{"id":"0:2823","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[278,16],"end":[278,25]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2825:604","0:2826:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:2850:2735":{"id":"a:2:3281:220-0:2850:2735","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3531:2804":{"id":"0:3531:2804","crate_id":0,"name":"April","span":{"filename":"src/month.rs","begin":[41,4],"end":[41,13]},"visibility":"default","docs":"April","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:3208-0:2795:2039":{"id":"b:2:3208-0:2795:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:2914:2040":{"id":"b:2:2869-0:2914:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2871:2029"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2372:1888":{"id":"0:2372:1888","crate_id":0,"name":"Offset","span":{"filename":"src/offset/mod.rs","begin":[194,0],"end":[197,1]},"visibility":"public","docs":"The offset from the local time to UTC.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2373:2288"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10292:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1030:922":{"id":"0:1030:922","crate_id":0,"name":"next","span":{"filename":"src/format/strftime.rs","begin":[259,4],"end":[474,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4748:7411":{"id":"1:4748:7411","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4749:62830","1:4750:62831","1:4751:62832","1:4753:6317","1:4754:62833","1:4756:60090","1:4757:9514"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"1:4666:6012","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2966:4197":{"id":"0:2966:4197","crate_id":0,"name":"NaiveDateDaysIterator","span":{"filename":"src/naive/date.rs","begin":[1787,0],"end":[1789,1]},"visibility":"public","docs":"Iterator over `NaiveDate` with a step size of one day.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:2745:2397":{"id":"0:2745:2397","crate_id":0,"name":"RFC2822","span":{"filename":"src/format/mod.rs","begin":[241,4],"end":[241,11]},"visibility":"default","docs":"RFC 2822 date and time syntax. Commonly used for email and MIME date and time.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2897:2308":{"id":"0:2897:2308","crate_id":0,"name":"timestamp","span":{"filename":"src/format/parsed.rs","begin":[103,4],"end":[103,30]},"visibility":"public","docs":"The number of non-leap seconds since the midnight UTC on January 1, 1970.\n\nThis can be off by one if [`second`](#structfield.second) is 60 (a leap second).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}},"param_names":[]}}},"2:3175:135":{"id":"2:3175:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3177:681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3426:3089":{"id":"0:3426:3089","crate_id":0,"name":"Single","span":{"filename":"src/offset/mod.rs","begin":[46,4],"end":[46,13]},"visibility":"default","docs":"Given local time representation has a single unique result.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"generic","inner":"T"}]}},"0:2388:2130":{"id":"0:2388:2130","crate_id":0,"name":"from_offset","span":{"filename":"src/offset/mod.rs","begin":[435,4],"end":[435,50]},"visibility":"default","docs":"Reconstructs the time zone from the offset.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["offset",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:2374:1889","args":null,"param_names":[]}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:10305:7222":{"id":"2:10305:7222","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10306:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:614:2655":{"id":"b:2:2869-0:614:2655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2871:2029"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:874:7283":{"id":"23:874:7283","crate_id":23,"name":"NumAssignRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumAssign","id":"23:871:7282","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumAssignOps","id":"23:866:7281","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"implementations":[]}},"a:2:3310:7470-0:2795:2039":{"id":"a:2:3310:7470-0:2795:2039","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3310:7470","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:645:2775":{"id":"0:645:2775","crate_id":0,"name":"format_item","span":{"filename":"src/format/mod.rs","begin":[419,0],"end":[429,1]},"visibility":"public","docs":"Formats single formatting item","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["w",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10252:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["date",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2947:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}}],["time",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3081:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}}],["off",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3101:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]}}}}],"bindings":[]}},"param_names":[]}}],["item",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10241:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"23:589:7306":{"id":"23:589:7306","crate_id":23,"name":"CheckedShr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:590:66328"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Shr","id":"2:3417:7096","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3577:7104":{"id":"2:3577:7104","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3579:181","2:3580:753"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:2861:2753":{"id":"0:2861:2753","crate_id":0,"name":"TooLong","span":{"filename":"src/format/mod.rs","begin":[372,4],"end":[372,11]},"visibility":"default","docs":"All formatting items have been read but there is a remaining input.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2406":{"id":"0:2406","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[491,30],"end":[491,41]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::LocalResult","name":"LocalResult","id":"0:3422:1903","glob":false}},"2:10292:109":{"id":"2:10292:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10293:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:608":{"id":"0:608","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[59,0],"end":[59,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"parsed::Parsed","name":"Parsed","id":"0:2878:2236","glob":false}},"0:2883:2949":{"id":"0:2883:2949","crate_id":0,"name":"isoyear_div_100","span":{"filename":"src/format/parsed.rs","begin":[55,4],"end":[55,36]},"visibility":"public","docs":"Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), divided by 100.\nImplies that the year is >= 1 BCE when set.\n\nDue to the common usage, if this field is missing but\n[`isoyear_mod_100`](#structfield.isoyear_mod_100) is present,\nit is inferred to 19 when `isoyear_mod_100 >= 70` and 20 otherwise.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}},"param_names":[]}}},"0:2758":{"id":"0:2758","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[181,27],"end":[181,29]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:705:2398":{"id":"0:705:2398","crate_id":0,"name":"parsed","span":{"filename":"src/format/parsed.rs","begin":[4,0],"end":[1260,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":"A collection of parsed date and time items.\nThey can be constructed incrementally while being checked for consistency.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2878:2236"],"is_stripped":true}},"0:2666:2622":{"id":"0:2666:2622","crate_id":0,"name":"IsoYear","span":{"filename":"src/format/mod.rs","begin":[108,4],"end":[108,11]},"visibility":"default","docs":"Year in the ISO week date (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3525:132":{"id":"2:3525:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3527:181","2:3528:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3310:7470-0:2850:2735":{"id":"a:2:3310:7470-0:2850:2735","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3310:7470","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2845:907":{"id":"0:2845:907","crate_id":0,"name":"ne","span":{"filename":"src/format/mod.rs","begin":[336,23],"end":[336,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2762:660":{"id":"0:2762:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[181,31],"end":[181,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10252:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10241:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9260:7636-0:2835:1898":{"id":"a:2:9260:7636-0:2835:1898","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9260:7636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1043":{"id":"0:1043","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[827,0],"end":[845,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8602:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10299:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2933:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["0:1047:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:2763:2701":{"id":"a:2:3269:211-0:2763:2701","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2872-0:3422:1903":{"id":"b:2:2872-0:3422:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2866:7070","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:2874:5914"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2385:5760":{"id":"0:2385:5760","crate_id":0,"name":"timestamp_millis_opt","span":{"filename":"src/offset/mod.rs","begin":[386,4],"end":[393,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap milliseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\n\nReturns `LocalResult::None` on out-of-range number of milliseconds\nand/or invalid nanosecond, otherwise always returns\n`LocalResult::Single`.\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone, LocalResult};\nmatch Utc.timestamp_millis_opt(1431648000) {\n    LocalResult::Single(dt) => assert_eq!(dt.timestamp(), 1431648),\n    _ => panic!(\"Incorrect timestamp_millis\"),\n};\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["millis",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:2850:2735":{"id":"b:2:2872-0:2850:2735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2866:7070","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2874:5914"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:622:660":{"id":"0:622:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[172,4],"end":[174,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10252:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10241:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2731:2460":{"id":"0:2731:2460","crate_id":0,"name":"Nanosecond6","span":{"filename":"src/format/mod.rs","begin":[214,4],"end":[214,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:8408-0:2914:2040":{"id":"b:2:8408-0:2914:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8602:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8404:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:8410:2039","2:8411:7875","2:8412:768"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:2641:2444":{"id":"0:2641:2444","crate_id":0,"name":"Pad","span":{"filename":"src/format/mod.rs","begin":[75,0],"end":[82,1]},"visibility":"public","docs":"Padding characters for numeric items.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2642:174","0:2644:2445","0:2646:2603"],"impls":["a:2:3310:7470-0:2641:2444","a:2:3281:220-0:2641:2444","a:2:9259:7637-0:2641:2444","a:2:9260:7636-0:2641:2444","a:2:3269:211-0:2641:2444","b:2:3202-0:2641:2444","b:2:3213-0:2641:2444","b:2:4002-0:2641:2444","b:2:2869-0:2641:2444","b:2:2872-0:2641:2444","b:2:3208-0:2641:2444","b:2:3198-0:2641:2444","b:5:787-0:2641:2444","0:2648","0:2649","0:2651","0:2652","0:2654","0:2655","0:2657"]}},"a:2:9259:7637-0:2933:2038":{"id":"a:2:9259:7637-0:2933:2038","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9259:7637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9259:7637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2933:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3555:2811":{"id":"0:3555:2811","crate_id":0,"name":"December","span":{"filename":"src/month.rs","begin":[57,4],"end":[57,17]},"visibility":"default","docs":"December","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3347:7085":{"id":"2:3347:7085","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3349:181","2:3350:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"22:37:7267":{"id":"22:37:7267","crate_id":22,"name":"Roots","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:38:7269","22:39:7270","22:40:7268"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Integer","id":"22:109:7253","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:4666:6012":{"id":"1:4666:6012","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4667:5939","1:4668:8242","1:4670:8243","1:4671:6043","1:4672:7371","1:4673:6272","1:4674:8244","1:4676:8245","1:4677:7893","1:4678:3492","1:4679:2466","1:4681:3493"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13523:60099":{"id":"2:13523:60099","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:16004:6922","self::pattern":"2:13054:1925"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13079:7159","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[457,30],"end":[457,35]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Month","name":"Month","id":"0:3521:1880","glob":false}},"0:2557:2187":{"id":"0:2557:2187","crate_id":0,"name":"month0","span":{"filename":"src/traits.rs","begin":[28,4],"end":[28,28]},"visibility":"default","docs":"Returns the month number starting from 0.\n\nThe return value ranges from 0 to 11.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2821":{"id":"0:2821","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[278,16],"end":[278,25]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3456:1906":{"id":"0:3456:1906","crate_id":0,"name":"RoundingError","span":{"filename":"src/round.rs","begin":[242,0],"end":[278,1]},"visibility":"public","docs":"An error from rounding by `Duration`\n\nSee: [`DurationRound`]","links":{"`DurationRound`":"0:2458:1905"},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:3457:6599","0:3459:6600","0:3461:6597"],"impls":[]}},"2:22751:8884":{"id":"2:22751:8884","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22752:8885","2:22753:63730","2:22754:63886","2:22755:63887","2:22756:63888","2:22757:4445","2:22758:63889","2:22759:63890","2:22760:63891","2:22761:63892","2:22762:63893","2:22763:63894","2:22764:63895","2:22765:63896","2:22766:63897","2:22767:63898","2:22768:7326","2:22769:63899","2:22770:63365","2:22771:63364","2:22772:63366","2:22773:63731","2:22774:63732","2:22775:63733","2:22776:63734"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22853:8524","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:4002-0:2850:2735":{"id":"b:2:4002-0:2850:2735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:61:1890":{"id":"0:61:1890","crate_id":0,"name":"date","span":{"filename":"src/date.rs","begin":[4,0],"end":[633,1]},"visibility":"crate","docs":"ISO 8601 calendar date with time zone.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2590:1872","0:128:1892","0:129:1891"],"is_stripped":true}},"a:2:3269:211-0:2795:2039":{"id":"a:2:3269:211-0:2795:2039","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3211:127":{"id":"2:3211:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}},"0:3101:1883":{"id":"0:3101:1883","crate_id":0,"name":"FixedOffset","span":{"filename":"src/offset/fixed.rs","begin":[27,0],"end":[29,1]},"visibility":"public","docs":"The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non a `FixedOffset` struct is the preferred way to construct\n`DateTime<FixedOffset>` instances. See the [`east`](#method.east) and\n[`west`](#method.west) methods for examples.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:3775:7115":{"id":"2:3775:7115","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:552":{"id":"0:552","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[474,44],"end":[474,56]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"datetime::MAX_DATETIME","name":"MAX_DATETIME","id":"0:368:1895","glob":false}},"0:48":{"id":"0:48","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[461,31],"end":[461,44]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::NaiveDateTime","name":"NaiveDateTime","id":"0:3008:1886","glob":false}},"b:2:4002-0:2763:2701":{"id":"b:2:4002-0:2763:2701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2575:2476":{"id":"0:2575:2476","crate_id":0,"name":"minute","span":{"filename":"src/traits.rs","begin":[139,4],"end":[139,28]},"visibility":"default","docs":"Returns the minute number from 0 to 59.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3384:7090":{"id":"2:3384:7090","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3386:1103"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6091:2788":{"id":"5:6091:2788","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5008:8504":{"id":"1:5008:8504","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5009:7457","1:5010:61967"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1714":{"id":"0:1714","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[14,21],"end":[14,30]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::date::NaiveDate","name":"NaiveDate","id":"0:2947:1885","glob":false}},"2:3352:7084":{"id":"2:3352:7084","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3354:181","2:3355:558"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9260:7636-0:2714:2237":{"id":"a:2:9260:7636-0:2714:2237","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9260:7636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3534:2793":{"id":"0:3534:2793","crate_id":0,"name":"May","span":{"filename":"src/month.rs","begin":[43,4],"end":[43,11]},"visibility":"default","docs":"May","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13443:8817":{"id":"2:13443:8817","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:16004:6922"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49438:7166","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:236:57985":{"id":"23:236:57985","crate_id":23,"name":"LowerBounded","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:237:4507"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2752":{"id":"0:2752","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[181,9],"end":[181,14]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2753:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5789:8548":{"id":"1:5789:8548","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5790:62299"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10565:8524","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1020":{"id":"0:1020","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[213,0],"end":[252,1]},"visibility":{"restricted":{"parent":"0:995:2596","path":"::format::strftime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:1022:920"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3104:8856":{"id":"2:3104:8856","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:3103:8524","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2393:2081":{"id":"0:2393:2081","crate_id":0,"name":"from_local_datetime","span":{"filename":"src/offset/mod.rs","begin":[454,4],"end":[457,5]},"visibility":"default","docs":"Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.","links":{},"attrs":["#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:3008:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3368:2031":{"id":"2:3368:2031","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3370:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2826:907":{"id":"0:2826:907","crate_id":0,"name":"ne","span":{"filename":"src/format/mod.rs","begin":[278,16],"end":[278,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:2763:2701":{"id":"a:2:3281:220-0:2763:2701","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"23:844:7265":{"id":"23:844:7265","crate_id":23,"name":"Num","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:845:66572","23:846:9141"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Zero","id":"23:466:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"One","id":"23:476:7298","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumOps","id":"23:847:7278","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3376:7089":{"id":"2:3376:7089","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3378:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2536":{"id":"0:2536","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[500,16],"end":[500,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"month::Month","name":"Month","id":"0:3521:1880","glob":false}},"2:13432:60060":{"id":"2:13432:60060","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47495:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10934:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10934:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3549:2809":{"id":"0:3549:2809","crate_id":0,"name":"October","span":{"filename":"src/month.rs","begin":[53,4],"end":[53,15]},"visibility":"default","docs":"October","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2825:604":{"id":"0:2825:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[278,16],"end":[278,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:2914:2040":{"id":"a:2:3281:220-0:2914:2040","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2914:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2853:2742":{"id":"0:2853:2742","crate_id":0,"name":"Impossible","span":{"filename":"src/format/mod.rs","begin":[356,4],"end":[356,14]},"visibility":"default","docs":"There is no possible date and time value with given set of fields.\n\nThis does not include the out-of-range conditions, which are trivially invalid.\nIt includes the case that there are one or more fields that are inconsistent to each other.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:3202-0:2641:2444":{"id":"b:2:3202-0:2641:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:2659:2443":{"id":"b:2:3213-0:2659:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2297:5699":{"id":"0:2297:5699","crate_id":0,"name":"utc","span":{"filename":"src/offset/utc.rs","begin":[4,0],"end":[116,1]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":"The UTC (Coordinated Universal Time) time zone.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3411:1884"],"is_stripped":true}},"0:2386:2337":{"id":"0:2386:2337","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/offset/mod.rs","begin":[408,4],"end":[415,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap nanoseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\nUnlike [`timestamp_millis`](#method.timestamp_millis), this never\npanics.\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.timestamp_nanos(1431648000000000).timestamp(), 1431648);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["nanos",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1746":{"id":"0:1746","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[484,25],"end":[484,34]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::NaiveDate","name":"NaiveDate","id":"0:2947:1885","glob":false}},"2:3401:7092":{"id":"2:3401:7092","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3403:181","2:3404:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2412":{"id":"0:2412","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[491,51],"end":[491,59]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::TimeZone","name":"TimeZone","id":"0:2374:1889","glob":false}},"b:2:3213-0:2850:2735":{"id":"b:2:3213-0:2850:2735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:2763:2701":{"id":"b:2:3198-0:2763:2701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3201:2535"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2373:2288":{"id":"0:2373:2288","crate_id":0,"name":"fix","span":{"filename":"src/offset/mod.rs","begin":[196,4],"end":[196,33]},"visibility":"default","docs":"Returns the fixed offset from UTC to the local time stored.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3101:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2803:2603":{"id":"0:2803:2603","crate_id":0,"name":"Space","span":{"filename":"src/format/mod.rs","begin":[286,4],"end":[286,18]},"visibility":"default","docs":"Whitespace. Prints literally but reads zero or more whitespace.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}},"0:2829":{"id":"0:2829","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[278,27],"end":[278,29]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2710":{"id":"0:2710","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[97,27],"end":[97,29]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:2835:1898":{"id":"b:5:787-0:2835:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:7917","5:790:7918","5:791:7919"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13503:64632":{"id":"2:13503:64632","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:13054:1925","prim@char":"1:16004:6922","`DoubleEndedIterator`":"2:8448:120","str::match_indices":"1:16010:6927"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49630:7179","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13079:7159","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:724:7315":{"id":"23:724:7315","crate_id":23,"name":"SaturatingMul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:725:66426"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Mul","id":"2:3347:7085","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:256:1893":{"id":"0:256:1893","crate_id":0,"name":"datetime","span":{"filename":"src/datetime/mod.rs","begin":[4,0],"end":[1154,1]},"visibility":"crate","docs":"ISO 8601 date and time with time zone.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2597:1878","0:2621:1877","0:367:1896","0:368:1895"],"is_stripped":true}},"2:8887:8368":{"id":"2:8887:8368","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"2:7928:8359","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3411:7095":{"id":"2:3411:7095","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3413:181","2:3414:1233"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2892:2963":{"id":"0:2892:2963","crate_id":0,"name":"hour_div_12","span":{"filename":"src/format/parsed.rs","begin":[86,4],"end":[86,32]},"visibility":"public","docs":"Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"2:3427:7098":{"id":"2:3427:7098","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3429:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:791:7919":{"id":"5:791:7919","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:614:2655":{"id":"a:2:3269:211-0:614:2655","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:25":{"id":"0:25","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[457,20],"end":[457,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Datelike","name":"Datelike","id":"0:2553:1879","glob":false}},"a:2:3310:7470-0:2763:2701":{"id":"a:2:3310:7470-0:2763:2701","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3310:7470","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:2850:2735":{"id":"b:2:2869-0:2850:2735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2871:2029"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:698:58093":{"id":"23:698:58093","crate_id":23,"name":"OverflowingAdd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:699:66088"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Add","id":"2:3337:2030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2866:7070":{"id":"2:2866:7070","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2868:5914"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13473:60093":{"id":"2:13473:60093","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"`DoubleEndedIterator`":"2:8448:120","self::pattern":"2:13054:1925","str::split":"1:16010:6927","prim@char":"1:16004:6922"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49480:7170","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13079:7159","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:2795:2039":{"id":"b:2:2869-0:2795:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2871:2029"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23774:8886":{"id":"2:23774:8886","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23775:8885"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23770:8524","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1386:1896":{"id":"0:1386:1896","crate_id":0,"name":"MIN_DATETIME","span":{"filename":"src/naive/datetime/mod.rs","begin":[44,0],"end":[44,59]},"visibility":"public","docs":"The minimum possible `NaiveDateTime`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDateTime::MIN instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDateTime::MIN instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:3008:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"NaiveDateTime::MIN","value":null,"is_literal":false}},"0:1040:920":{"id":"0:1040:920","crate_id":0,"name":"new","span":{"filename":"src/format/mod.rs","begin":[766,4],"end":[775,5]},"visibility":"public","docs":"Makes a new `DelayedFormat` value out of local date and time.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["date",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2947:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}],["time",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3081:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2933:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2766:660":{"id":"0:2766:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[253,9],"end":[253,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10252:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10241:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:2641:2444":{"id":"b:2:3213-0:2641:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10299:119":{"id":"2:10299:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10300:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3717:7108":{"id":"2:3717:7108","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"2:3648:7107","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:2572:127":{"id":"1:2572:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2573:5931","1:2575:2765","1:2576:8071","1:2577:8072"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10292:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10299:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:31":{"id":"0:31","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[457,37],"end":[457,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Timelike","name":"Timelike","id":"0:2572:1881","glob":false}},"5:783:222":{"id":"5:783:222","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:7917","5:785:7918","5:786:7919"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:636:7311":{"id":"23:636:7311","crate_id":23,"name":"MulAdd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:639:181","23:640:7332"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13423:64622":{"id":"2:13423:64622","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:16010:6927"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"22:109:7253":{"id":"22:109:7253","crate_id":22,"name":"Integer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:110:2831","22:111:2832","22:112:7255","22:113:7256","22:114:7257","22:115:7258","22:116:65905","22:118:65898","22:119:65899","22:120:65900","22:121:65901","22:122:65902","22:123:2924","22:124:3797","22:125:65903","22:126:65904"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Num","id":"23:844:7265","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"2:2957:177","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2694:2457":{"id":"0:2694:2457","crate_id":0,"name":"Second","span":{"filename":"src/format/mod.rs","begin":[136,4],"end":[136,10]},"visibility":"default","docs":"The number of seconds since the last whole minute (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3490:2818":{"id":"0:3490:2818","crate_id":0,"name":"Sat","span":{"filename":"src/weekday.rs","begin":[26,4],"end":[26,11]},"visibility":"default","docs":"Saturday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3436":{"id":"0:3436","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[40,16],"end":[40,25]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2914:2040":{"id":"0:2914:2040","crate_id":0,"name":"StrftimeItems","span":{"filename":"src/format/strftime.rs","begin":[198,0],"end":[211,1]},"visibility":"public","docs":"Parsing iterator for `strftime`-like format strings.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1020","a:2:3310:7470-0:2914:2040","a:2:3281:220-0:2914:2040","a:2:9259:7637-0:2914:2040","a:2:9260:7636-0:2914:2040","a:2:3269:211-0:2914:2040","b:2:3202-0:2914:2040","b:2:3213-0:2914:2040","b:2:4002-0:2914:2040","b:2:2869-0:2914:2040","b:2:8408-0:2914:2040","b:2:2872-0:2914:2040","b:2:3208-0:2914:2040","b:2:3198-0:2914:2040","b:5:787-0:2914:2040","0:2921","0:2924","0:1027"]}},"b:5:6413-0:2933:2038":{"id":"b:5:6413-0:2933:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10299:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2933:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["5:6415:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2561:2190":{"id":"0:2561:2190","crate_id":0,"name":"ordinal0","span":{"filename":"src/traits.rs","begin":[48,4],"end":[48,30]},"visibility":"default","docs":"Returns the day of year starting from 0.\n\nThe return value ranges from 0 to 365. (The last day of year differs by years.)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2847":{"id":"0:2847","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[336,34],"end":[336,36]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2835:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:814:2235":{"id":"0:814:2235","crate_id":0,"name":"parse","span":{"filename":"src/format/parse.rs","begin":[5,0],"end":[965,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":"Date and time parsing routines.","links":{},"attrs":["#![allow(deprecated)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:896:2235"],"is_stripped":true}},"a:2:3281:220-0:2641:2444":{"id":"a:2:3281:220-0:2641:2444","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13420:64620":{"id":"2:13420:64620","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2678:2632":{"id":"0:2678:2632","crate_id":0,"name":"WeekFromMon","span":{"filename":"src/format/mod.rs","begin":[120,4],"end":[120,15]},"visibility":"default","docs":"Week number, where the week 1 starts at the first Monday of January (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2672:1880":{"id":"0:2672:1880","crate_id":0,"name":"Month","span":{"filename":"src/format/mod.rs","begin":[114,4],"end":[114,9]},"visibility":"default","docs":"Month (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[457,47],"end":[457,54]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Weekday","name":"Weekday","id":"0:3474:1882","glob":false}},"1:6859:8532":{"id":"1:6859:8532","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6860:61699"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2802:1542":{"id":"0:2802:1542","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[284,17],"end":[284,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2592","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}},"2:8473:4359":{"id":"2:8473:4359","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8474:793","2:8475:3244"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8602:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9260:7636-0:614:2655":{"id":"a:2:9260:7636-0:614:2655","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9260:7636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"23:466:2445":{"id":"23:466:2445","crate_id":23,"name":"Zero","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:467:4502","23:468:66588","23:469:8257"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Add","id":"2:3337:2030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8883:8109":{"id":"2:8883:8109","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8602:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2658:660":{"id":"0:2658:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[74,37],"end":[74,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10252:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10241:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2576:2477":{"id":"0:2576:2477","crate_id":0,"name":"second","span":{"filename":"src/traits.rs","begin":[142,4],"end":[142,28]},"visibility":"default","docs":"Returns the second number from 0 to 59.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2398:2351":{"id":"0:2398:2351","crate_id":0,"name":"from_utc_datetime","span":{"filename":"src/offset/mod.rs","begin":[475,4],"end":[477,5]},"visibility":"default","docs":"Converts the UTC `NaiveDateTime` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).","links":{},"attrs":["#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:3008:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2382:2308":{"id":"0:2382:2308","crate_id":0,"name":"timestamp","span":{"filename":"src/offset/mod.rs","begin":[335,4],"end":[337,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nPanics on the out-of-range number of seconds and/or invalid nanosecond,\nfor a non-panicking version see [`timestamp_opt`](#method.timestamp_opt).\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.timestamp(1431648000, 0).to_string(), \"2015-05-15 00:00:00 UTC\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["secs",{"kind":"primitive","inner":"i64"}],["nsecs",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2774":{"id":"0:2774","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[253,34],"end":[253,36]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2763:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1733":{"id":"0:1733","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[19,54],"end":[19,66]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::datetime::MIN_DATETIME","name":"MIN_DATETIME","id":"0:1386:1896","glob":false}},"2:13064:7131":{"id":"2:13064:7131","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13066:7160","2:13067:63837","2:13068:63838","2:13069:63839","2:13070:63841","2:13071:63840","2:13072:63842"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2714:2237":{"id":"0:2714:2237","crate_id":0,"name":"Fixed","span":{"filename":"src/format/mod.rs","begin":[182,0],"end":[250,1]},"visibility":"public","docs":"Fixed-format item types.\n\nThey have their own rules of formatting and parsing.\nOtherwise noted, they print in the specified cases but parse case-insensitively.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2715:2665","0:2717:2668","0:2719:2670","0:2721:2672","0:2723:2675","0:2725:2677","0:2727:2462","0:2729:2459","0:2731:2460","0:2733:2461","0:2735:2686","0:2737:2465","0:2739:2464","0:2741:2696","0:2743:2698","0:2745:2397","0:2747:2404","0:2749:2654"],"impls":["a:2:3310:7470-0:2714:2237","a:2:3281:220-0:2714:2237","a:2:9259:7637-0:2714:2237","a:2:9260:7636-0:2714:2237","a:2:3269:211-0:2714:2237","b:2:3202-0:2714:2237","b:2:3213-0:2714:2237","b:2:4002-0:2714:2237","b:2:2869-0:2714:2237","b:2:2872-0:2714:2237","b:2:3208-0:2714:2237","b:2:3198-0:2714:2237","b:5:787-0:2714:2237","0:2752","0:2754","0:2755","0:2758","0:2759","0:2761"]}},"b:2:3208-0:2850:2735":{"id":"b:2:3208-0:2850:2735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3433":{"id":"0:3433","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[40,9],"end":[40,14]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::clone::Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:3435:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13448:64625":{"id":"2:13448:64625","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49726:7169","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2795:2039":{"id":"b:5:787-0:2795:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2795:2039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["5:789:7917","5:790:7918","5:791:7919"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:618":{"id":"0:618","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[163,0],"end":[167,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:619:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13417":{"id":"2:13417","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12514:1340","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13418:793","2:13419:3244","2:13420:64620","2:13421:64621","2:13423:64622","2:13426:3211","2:13427:64623","2:13428:304","2:13429:60063","2:13430:5158","2:13432:60060","2:13434:60061","2:13436:60062","2:13438:8607","2:13439:64624","2:13440:60082","2:13441:60083","2:13442:3630","2:13443:8817","2:13444:3492","2:13445:37327","2:13446:37317","2:13447:9514","2:13448:64625","2:13449:37312","2:13450:2846","2:13453:3198","2:13456:6259","2:13459:3654","2:13463:7871","2:13467:60090","2:13470:37185","2:13473:60093","2:13476:64626","2:13479:64627","2:13482:60095","2:13485:60097","2:13488:64628","2:13491:64629","2:13494:1923","2:13497:64630","2:13500:64631","2:13503:64632","2:13506:64633","2:13508:3574","2:13510:64634","2:13512:3196","2:13513:64635","2:13514:6034","2:13517:64636","2:13520:19988","2:13523:60099","2:13526:64637","2:13529:3503","2:13532:64638","2:13535:2235","2:13537:9224","2:13538:60006","2:13539:60007","2:13540:60008","2:13541:64639","2:13543:8567","2:13544:64640"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13438:8607":{"id":"2:13438:8607","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:16010:6927","crate::ops::Index":"2:3577:7104","str::slice_mut_unchecked":"1:16010:6927"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:2939":{"id":"0:2939","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[746,9],"end":[746,14]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"2:10292:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10292:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2933:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["0:2941:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5741:8545":{"id":"1:5741:8545","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5742:10661","1:5743:59898","1:5744:11098","1:5745:62773","1:5746:8724","1:5747:8725","1:5748:62774","1:5749:1304","1:5750:62775","1:5751:62776","1:5752:5919","1:5753:62777","1:5754:62778","1:5755:62779","1:5756:62780","1:5757:62781"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2898:957":{"id":"0:2898:957","crate_id":0,"name":"offset","span":{"filename":"src/format/parsed.rs","begin":[106,4],"end":[106,27]},"visibility":"public","docs":"Offset from the local time to UTC, in seconds.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}},"param_names":[]}}},"0:2855:2747":{"id":"0:2855:2747","crate_id":0,"name":"NotEnough","span":{"filename":"src/format/mod.rs","begin":[363,4],"end":[363,13]},"visibility":"default","docs":"Given set of fields is not enough to make a requested date and time value.\n\nNote that there *may* be a case that given fields constrain the possible values so much\nthat there is a unique possible value. Chrono only tries to be correct for\nmost useful sets of fields however, as such constraint solving can be expensive.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:8448:120":{"id":"2:8448:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8449:4360","2:8450:7867","2:8451:7868","2:8452:7869","2:8456:7870","2:8459:7871"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8602:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3493:2812":{"id":"0:3493:2812","crate_id":0,"name":"Sun","span":{"filename":"src/weekday.rs","begin":[28,4],"end":[28,11]},"visibility":"default","docs":"Sunday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3428:1542":{"id":"0:3428:1542","crate_id":0,"name":"0","span":{"filename":"src/offset/mod.rs","begin":[46,11],"end":[46,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[461,20],"end":[461,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::NaiveDate","name":"NaiveDate","id":"0:2947:1885","glob":false}},"0:3442":{"id":"0:3442","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[40,27],"end":[40,32]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"2:10292:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10292:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:3444:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10309:189":{"id":"2:10309:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10310:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2921:183":{"id":"2:2921:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2923:604","2:2924:907"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3274:5719","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13512:3196":{"id":"2:13512:3196","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:367:1896":{"id":"0:367:1896","crate_id":0,"name":"MIN_DATETIME","span":{"filename":"src/datetime/mod.rs","begin":[93,0],"end":[93,65]},"visibility":"public","docs":"The minimum possible `DateTime<Utc>`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use DateTime::MIN_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use DateTime::MIN_UTC instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3411:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"expr":"DateTime<Utc>::MIN_UTC","value":null,"is_literal":false}},"0:2642:174":{"id":"0:2642:174","crate_id":0,"name":"None","span":{"filename":"src/format/mod.rs","begin":[77,4],"end":[77,8]},"visibility":"default","docs":"No padding.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:4":{"id":"0:4","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[432,0],"end":[432,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"oldtime::Duration","name":"Duration","id":"20:405:121","glob":false}},"b:5:787-0:2659:2443":{"id":"b:5:787-0:2659:2443","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:7917","5:790:7918","5:791:7919"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8400:136":{"id":"2:8400:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8402:684"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2562:1907":{"id":"0:2562:1907","crate_id":0,"name":"weekday","span":{"filename":"src/traits.rs","begin":[51,4],"end":[51,33]},"visibility":"default","docs":"Returns the day of week.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3474:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3213-0:2933:2038":{"id":"b:2:3213-0:2933:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2933:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2369":{"id":"0:2369","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[180,0],"end":[191,1]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10292:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3422:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:2371:1484"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13488:64628":{"id":"2:13488:64628","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47495:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13064:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2857:2749":{"id":"0:2857:2749","crate_id":0,"name":"Invalid","span":{"filename":"src/format/mod.rs","begin":[366,4],"end":[366,11]},"visibility":"default","docs":"The input string has some invalid character sequence for given formatting items.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1058":{"id":"0:1058","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[480,29],"end":[480,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"format::ParseResult","name":"ParseResult","id":"0:632:1899","glob":false}},"2:13428:304":{"id":"2:13428:304","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:16021:6936","str::as_mut_ptr":"1:16010:6927"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2799:1542":{"id":"0:2799:1542","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[281,12],"end":[281,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"0:2813:2237":{"id":"0:2813:2237","crate_id":0,"name":"Fixed","span":{"filename":"src/format/mod.rs","begin":[294,4],"end":[294,16]},"visibility":"default","docs":"Fixed-format item.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2714:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]}},"0:2872":{"id":"0:2872","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[347,23],"end":[347,32]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2850:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2873:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3528:2803":{"id":"0:3528:2803","crate_id":0,"name":"March","span":{"filename":"src/month.rs","begin":[39,4],"end":[39,13]},"visibility":"default","docs":"March","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13440:60082":{"id":"2:13440:60082","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:16010:6927"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23137:8940":{"id":"2:23137:8940","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"2:23774:8886","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23128:8524","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"paths":{"2:13054:1925":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"5:8197:7875":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:820:10171":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"6:6240:11111":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:46782:7412":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:13163:11710":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"16:5753:9620":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:12442:11495":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"0:2806:2722":{"crate_id":0,"path":["chrono","format","Item","OwnedSpace"],"kind":"variant"},"16:6110:9600":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:10587:8125":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"16:5790:9622":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:4135:10575":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"21:1592:10338":{"crate_id":21,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"21:5539:10943":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"21:619:10288":{"crate_id":21,"path":["libc","unix","servent"],"kind":"struct"},"2:9259:7637":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"23:236:57985":{"crate_id":23,"path":["num_traits","bounds","LowerBounded"],"kind":"trait"},"6:4538:10753":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:12116:7457":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"1:4432:7427":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"1:10840:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:53503:12497":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"21:6923:11145":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:10540:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:3310:7470":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:2362:600":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:15483:59891":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"5:3375:9255":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"14:56:11324":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:4051:7209":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"14:250:12214":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:3714:11961":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:4080:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:46702:8387":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"11:54:9455":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"16:7823:9573":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:9139:7629":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:10804:7366":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"5:8176:9230":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"18:611:10017":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:3406:7093":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"20:405:121":{"crate_id":20,"path":["time","duration","Duration"],"kind":"struct"},"21:5439:10921":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:11414:8773":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:10489:9980":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"6:88:44192":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"6:1537:10302":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"21:1618:10344":{"crate_id":21,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"16:5346:9560":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:7932:12663":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"0:2727:2462":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond"],"kind":"variant"},"2:32348:63671":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"2:56351:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:14821:8644":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"5:8160:7875":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"16:7250:9659":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"16:5975:9626":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:5735:8544":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:51234:8976":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:14609:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"21:3899:10450":{"crate_id":21,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:16007:6924":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:9261:7635":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:3734:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"16:6620:9848":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"16:7119:9553":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:3933:10470":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:7804:9571":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:7663:8639":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:15045:59760":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"6:6150:11052":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:4127:10571":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:2269:8869":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:11159:11312":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:51147:8951":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:13547:11809":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:9296:11249":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"9:776:9381":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"21:5170:10781":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"12:1682:9478":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"21:6935:11147":{"crate_id":21,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:3264:9826":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:5858:8766":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"17:11947:11395":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"12:432:9470":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"5:6652:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"6:5416:10914":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"6:527:10230":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:5111:7235":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"6:618:10283":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:13780:11888":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:15019:8642":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"0:701:671":{"crate_id":0,"path":["chrono","format","format"],"kind":"function"},"23:241:57986":{"crate_id":23,"path":["num_traits","bounds","UpperBounded"],"kind":"trait"},"7:0:1481":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:5185:7238":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:48052:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:53533:12499":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"16:3118:9832":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:46720:8388":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"21:3875:10433":{"crate_id":21,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:9919:660":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"1:13568:8170":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:4471:7429":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:48531:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"5:8463:8278":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"5:6475:7122":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"23:586:7305":{"crate_id":23,"path":["num_traits","ops","checked","CheckedShl"],"kind":"trait"},"17:12195:11438":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:46486:9148":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:23082:8524":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"17:11231:9909":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:13221:11725":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"21:4200:10611":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:13819:11896":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:11318:7170":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:48811:7925":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"5:1235:9298":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"21:4030:10529":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:49612:7178":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"12:764:8108":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"12:1703:9479":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:10179:11261":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"12:933:8619":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"18:755:65894":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"0:2853:2742":{"crate_id":0,"path":["chrono","format","ParseErrorKind","Impossible"],"kind":"variant"},"2:45945:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"6:6668:11126":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:46066:7235":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:3337:2030":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"6:1680:10386":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:53428:12492":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"18:767:11171":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:3172:9822":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"5:3396:8571":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"5:6672:9237":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:9088:51441":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:2921:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:3516:7103":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"0:2741:2696":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffset"],"kind":"variant"},"17:9133:51442":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:53465:12495":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:11015:13148":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"12:2419:7132":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:3365:9808":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:6199:8720":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:11668:7457":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"5:5093:660":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"1:2395:8159":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"21:4040:10532":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:46374:9202":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"2:46427:9205":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:0:1331":{"crate_id":1,"path":["std"],"kind":"module"},"1:12257:8662":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:3275:7345":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"0:2725:2677":{"crate_id":0,"path":["chrono","format","Fixed","UpperAmPm"],"kind":"variant"},"17:11277:11316":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"21:4262:8722":{"crate_id":21,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"12:162:9469":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:53408:12490":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:13506:11795":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"6:4440:10712":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:51211:8972":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:5789:8548":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:14808:8561":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"21:1543:10307":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"16:3145:9831":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"6:4005:10514":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"6:4332:10664":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"12:971:8622":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"16:2773:9842":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"9:686:9332":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"1:11156:8506":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"18:713:7071":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"16:7786:9572":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"21:4446:10720":{"crate_id":21,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"6:6940:11147":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:4734:11978":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:46434:9206":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"17:11767:11360":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:15498:9495":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"1:10684:8165":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:1748:10420":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:11779:11363":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:11696:11346":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:49420:7164":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:11283:9089":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"21:1613:10342":{"crate_id":21,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:1530:8623":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"17:11794:11369":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:46792:8393":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:5631:779":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:49200:9091":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"12:815:8618":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"21:1732:10416":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"21:6072:11027":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:3960:10492":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:8481:8587":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:9933:13112":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:12234:11443":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:10028:13114":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"7:38:49110":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:11143:7172":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"6:3877:10432":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:51673:8957":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:12010:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:13386:11764":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:13356:11759":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"6:4493:10735":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:48010:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:11317:59756":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"1:4684:7388":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:53192:8979":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"23:466:2445":{"crate_id":23,"path":["num_traits","identities","Zero"],"kind":"trait"},"17:9659:65888":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:6964:11152":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:13554:11810":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"21:4059:10540":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"16:6101:9557":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"16:6964:7633":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:5727:8542":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"6:3993:10505":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"9:157:9351":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"6:1606:7063":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:10667:8574":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"17:13540:11808":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:3812:7116":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:57699:12508":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:3648:7420":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:49480:7170":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"6:612:10280":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"19:117:11156":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"17:0:6906":{"crate_id":17,"path":["object"],"kind":"module"},"16:6591:9643":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:46761:8392":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"16:7894:9598":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:696:7778":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:10452:10174":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"24:0:1927":{"crate_id":24,"path":["iana_time_zone"],"kind":"module"},"17:12142:11430":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:15331:8513":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:3372:2033":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:56377:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:6014:9628":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:9600:65887":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"1:10882:6224":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"9:234:9359":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"1:1482:8277":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"12:399:9471":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"9:996:9400":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"12:183:9473":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"12:2072:8571":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"1:1446:8614":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"21:5390:10902":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:47528:2039":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"17:13685:11869":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:12010:11408":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"21:5370:10890":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:13272:11739":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:24805:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:49736:7168":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"21:5323:10863":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"6:6202:11091":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:51253:12482":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"21:4300:10653":{"crate_id":21,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"23:840:7327":{"crate_id":23,"path":["num_traits","sign","Unsigned"],"kind":"trait"},"1:8973:8671":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"6:4373:10687":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"5:8379:7119":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:1472:7122":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:4378:7875":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:12132:7875":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:7928:8359":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:50058:8806":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:11506:7625":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"6:5436:10919":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:3200:7371":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"12:2040:7122":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:10701:8172":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"5:1215:9297":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"5:5875:10134":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"22:131:2832":{"crate_id":22,"path":["num_integer","mod_floor"],"kind":"function"},"16:2945:9841":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:1651:8627":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:8473:4359":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"21:5397:10903":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:10516:9981":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"18:897:10015":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:10117:9990":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:12795:7188":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:9005:51438":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:49770:7182":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"5:4242:10125":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"23:874:7283":{"crate_id":23,"path":["num_traits","NumAssignRef"],"kind":"trait"},"5:1091:10125":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:10814:9957":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"21:6127:11041":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:2594:13187":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"2:46590:7202":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:13799:11893":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:32159:7350":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"1:12038:8643":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:11962:11399":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"16:6718:9853":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"5:3748:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"5:7642:8283":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"18:830:10010":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"9:469:13299":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"17:13609:11824":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"11:0:6901":{"crate_id":11,"path":["adler"],"kind":"module"},"2:24093:7286":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"16:547:9800":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:37627:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:47495:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:46503:9149":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:9971:65882":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"21:1904:45562":{"crate_id":21,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"16:5029:11987":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:3746:7112":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"5:1939:8277":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"9:809:6225":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:47018:8366":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"23:724:7315":{"crate_id":23,"path":["num_traits","ops","saturating","SaturatingMul"],"kind":"trait"},"6:5485:10931":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:8602:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"12:1256:8627":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"6:4277:10634":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:46631:8381":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:46052:4426":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"1:11193:8508":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"12:1103:8624":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:11254:9907":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:3431:7099":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"6:1576:10321":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:24068:12364":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:51339:8956":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:12065:59758":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"16:4704:11977":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:13258:11734":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:3427:7098":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"0:2372:1888":{"crate_id":0,"path":["chrono","offset","Offset"],"kind":"trait"},"1:12171:8591":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:7629:8637":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:1132:7211":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"6:5257:10822":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:9849:65890":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:5165:7236":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:51445:8985":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:14588:12557":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"1:4732:61892":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"16:3522:11177":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:10926:13141":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"21:664:2080":{"crate_id":21,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:38871:7476":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:13986:11939":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"23:760:7320":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingShl"],"kind":"trait"},"16:6491:9639":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"21:6112:11036":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:9627:59924":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"2:22934:8521":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"16:3018:9820":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:50439:7207":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"6:586:10267":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"21:6900:11139":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"5:4215:7122":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"21:1529:10302":{"crate_id":21,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:10592:8133":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"12:2412:12266":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:9763:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:11378:9959":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"21:4508:10743":{"crate_id":21,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:24013:12360":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"18:645:10019":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"5:8446:8277":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"17:11186:11313":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"22:127:2924":{"crate_id":22,"path":["num_integer","div_rem"],"kind":"function"},"2:48850:12475":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:5775:8546":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:14952:10179":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"12:928:8616":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"16:6391:9637":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:10826:7370":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"0:2690:2642":{"crate_id":0,"path":["chrono","format","Numeric","Hour12"],"kind":"variant"},"1:5785:8547":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"5:8391:7120":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:2508:8300":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:14103:10177":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:49432:7133":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"21:5293:10840":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:13488:11791":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"16:5384:9604":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"15:0:6904":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:11479:8533":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"6:3987:10502":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:52163:8981":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"0:2745:2397":{"crate_id":0,"path":["chrono","format","Fixed","RFC2822"],"kind":"variant"},"2:49339:9101":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:8448:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:11665:11344":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:47926:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"21:3979:10502":{"crate_id":21,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"16:3392:9833":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"14:194:49785":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:48094:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"0:3429:3090":{"crate_id":0,"path":["chrono","offset","LocalResult","Ambiguous"],"kind":"variant"},"5:3772:8108":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:47884:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:13154:11706":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"12:2253:8624":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"16:5707:9617":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"21:5221:10801":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:13205:11722":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:6959:8531":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:299:13102":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"5:8130:7122":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:16014:6929":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"6:1567:10315":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"20:0:1556":{"crate_id":20,"path":["time"],"kind":"module"},"2:4783:8299":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:9759:13109":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:9896:65883":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"23:577:7302":{"crate_id":23,"path":["num_traits","ops","checked","CheckedMul"],"kind":"trait"},"21:4134:10577":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:4242:10622":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"16:4614:11974":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:9943:65891":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"16:5295:49862":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"0:2857:2749":{"crate_id":0,"path":["chrono","format","ParseErrorKind","Invalid"],"kind":"variant"},"1:7615:8636":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"21:6206:11094":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:3277:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:49448:7165":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"16:5996:9627":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"0:2863:2755":{"crate_id":0,"path":["chrono","format","ParseErrorKind","BadFormat"],"kind":"variant"},"6:5363:10885":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"12:880:8277":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"1:3561:7419":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"22:266:7254":{"crate_id":22,"path":["num_integer","ExtendedGcd"],"kind":"struct"},"16:3939:11964":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:9649:13107":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:51180:8984":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"21:6026:11008":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"18:651:10016":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"6:3981:10500":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:9689:65886":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:3364:7086":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"17:10801:13136":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:3411:7095":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"21:579:10267":{"crate_id":21,"path":["libc","unix","pollfd"],"kind":"struct"},"2:47562:7633":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"21:5559:10957":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:16028:6943":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"0:2680:1901":{"crate_id":0,"path":["chrono","format","Numeric","IsoWeek"],"kind":"variant"},"2:24635:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"18:775:11161":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"5:1644:8615":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"21:4269:10634":{"crate_id":21,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:11098:7391":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"16:7185:9653":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:49842:8792":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:50407:9116":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:11588:11333":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:1912:45562":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"5:1486:8627":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:51721:8942":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:10106:9989":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:50398:9115":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"21:4119:10571":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"21:1654:10374":{"crate_id":21,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:23089:21413":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"18:886:10014":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"8:0:6898":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"6:5452:10923":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"16:7971:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"0:614:2655":{"crate_id":0,"path":["chrono","format","InternalNumeric"],"kind":"struct"},"2:49754:7180":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"16:5941:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"6:533:10233":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:50071:12776":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"0:2859:2751":{"crate_id":0,"path":["chrono","format","ParseErrorKind","TooShort"],"kind":"variant"},"5:3370:8568":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"12:1666:9477":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"21:4394:10698":{"crate_id":21,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:15353:8701":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"23:358:7296":{"crate_id":23,"path":["num_traits","cast","NumCast"],"kind":"trait"},"2:32299:8272":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:24669:7353":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"6:6685:11135":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:11957:9107":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"16:7467:9563":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:11482:11324":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:13192:11717":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:23871:9127":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:11575:6225":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"14:231:1898":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"0:2644:2445":{"crate_id":0,"path":["chrono","format","Pad","Zero"],"kind":"variant"},"2:46641:8382":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:16004:6922":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:5101:7342":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"21:4004:10518":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:16008:6925":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:10934:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:4670:7403":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"5:69:8276":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:53129:8959":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:3103:8524":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"0:2688:2454":{"crate_id":0,"path":["chrono","format","Numeric","Hour"],"kind":"variant"},"17:11726:11350":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"21:4338:10670":{"crate_id":21,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:4510:7425":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:13119:11705":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"16:4762:11979":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"16:4922:11984":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:4512:7426":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"20:427:7035":{"crate_id":20,"path":["time","duration","OutOfRangeError"],"kind":"struct"},"2:4965:7234":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:13073:7160":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:56364:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:12645:11532":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"5:8138:9268":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:681:11319":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:11406:6262":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"6:157:44258":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"1:13659:8613":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:9974:9074":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:12741:11542":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"21:4438:10715":{"crate_id":21,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"16:6208:9632":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"21:4288:10646":{"crate_id":21,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:15092:7137":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"17:10864:11298":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:13858:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:12282:2233":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"21:4127:10575":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:2397:8160":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"1:11365:8705":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:12287:11450":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"6:5402:10903":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:3172:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"1:11150:7167":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:2458:8178":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"6:4434:10711":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:12480:11500":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:12610:11520":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:9719:13108":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:4148:10579":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:49352:9102":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"0:2698:2650":{"crate_id":0,"path":["chrono","format","Numeric","Timestamp"],"kind":"variant"},"1:1488:8616":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"22:109:7253":{"crate_id":22,"path":["num_integer","Integer"],"kind":"trait"},"2:2283:8872":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:10599:13131":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:3281:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"6:4020:10520":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:49880:8796":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:3339:7378":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:10705:2654":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"21:5418:10915":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"20:492:7028":{"crate_id":20,"path":["time","Tm"],"kind":"struct"},"1:15032:8643":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:49300:9099":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:46453:8995":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:7792:8645":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:10128:9991":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"0:2743:2698":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetZ"],"kind":"variant"},"2:52796:8987":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:50170:7148":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"17:14000:11942":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:9162:9908":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:13064:7131":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"21:5974:10980":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:4386:10692":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:3506:9828":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"6:4296:10646":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:45812:7114":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"16:6238:9564":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"5:5788:10125":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"21:5480:10931":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:5285:10834":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"21:1661:10378":{"crate_id":21,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:8639:8728":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"6:4315:10656":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"21:5358:10885":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:46420:9204":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:3775:7115":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:12118:11428":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"0:2684:2637":{"crate_id":0,"path":["chrono","format","Numeric","WeekdayFromMon"],"kind":"variant"},"17:12795:11557":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"21:4140:10579":{"crate_id":21,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:24250:7354":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"21:3912:10460":{"crate_id":21,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:52006:8986":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:14:2202":{"crate_id":2,"path":["core","write"],"kind":"macro"},"6:5237:10809":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:11232:8511":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"6:4402:10698":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:14633:7387":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:4748:7411":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"5:3362:8570":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:2166:8277":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"22:145:7261":{"crate_id":22,"path":["num_integer","IterBinomial"],"kind":"struct"},"17:10236:9894":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"21:5303:10847":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:53439:12493":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:12083:12546":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"2:11356:9090":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:8107:7433":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:6459:8529":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:3197:5939":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"17:11970:11401":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"6:4474:10727":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:5298:10840":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:4639:7403":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"23:844:7265":{"crate_id":23,"path":["num_traits","Num"],"kind":"trait"},"5:1674:8618":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"5:8121:9267":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:6861:8534":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:24533:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"23:752:7322":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingSub"],"kind":"trait"},"2:2194:12356":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:13284:13455":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"1:16002:6920":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:46284:7182":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:12552:11512":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:10710:7202":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"6:4446:10715":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"4:0:6897":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:10309:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"6:6662:11124":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"5:5315:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:10435:13122":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"23:757:7319":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingNeg"],"kind":"trait"},"2:2292:8873":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"21:564:10258":{"crate_id":21,"path":["libc","unix","hostent"],"kind":"struct"},"6:4081:10548":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"23:0:1929":{"crate_id":23,"path":["num_traits"],"kind":"module"},"0:2800:2719":{"crate_id":0,"path":["chrono","format","Item","OwnedLiteral"],"kind":"variant"},"0:2641:2444":{"crate_id":0,"path":["chrono","format","Pad"],"kind":"enum"},"17:11932:11391":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"0:2715:2665":{"crate_id":0,"path":["chrono","format","Fixed","ShortMonthName"],"kind":"variant"},"6:3883:10433":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:53454:12494":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"5:1685:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"21:4426:10711":{"crate_id":21,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:6699:11023":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"17:9368:11250":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"21:4090:10558":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"23:4513:7286":{"crate_id":23,"path":["num_traits","ParseFloatError"],"kind":"struct"},"0:2861:2753":{"crate_id":0,"path":["chrono","format","ParseErrorKind","TooLong"],"kind":"variant"},"2:53556:12500":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"6:5995:10992":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"6:6928:11145":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:3169:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"6:6024:11004":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:2769:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"17:11640:11341":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:32500:63674":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"5:7212:7122":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:15235:8609":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"16:6744:9855":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:13963:63696":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"1:1493:8617":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:3192:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:10584:9965":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:45860:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:12756:11546":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:12221:11441":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:3166:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"21:520:10230":{"crate_id":21,"path":["libc","unix","timeval"],"kind":"struct"},"1:2027:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:10160:11259":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:13782:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:10809:7368":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:9768:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:12076:62743":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"17:11555:11331":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:3194:7367":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:10001:51490":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"21:5208:10800":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:12783:11550":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"16:7514:9582":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"21:4108:10567":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"16:2794:9547":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"16:4790:11980":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:5981:8775":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:12699:11538":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"16:7226:9657":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"16:3772:11962":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"21:5411:10914":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:5833:7361":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"16:6413:9483":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"5:1618:7875":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"5:1195:13453":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"16:4230:11965":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:51869:12486":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:4078:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"17:13532:11805":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"16:6554:9641":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"21:4417:10705":{"crate_id":21,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:49584:7174":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:12302:5951":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:24129:12368":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:1531:10299":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:11835:11380":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"0:2749:2654":{"crate_id":0,"path":["chrono","format","Fixed","Internal"],"kind":"variant"},"16:6252:9634":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"0:2721:2672":{"crate_id":0,"path":["chrono","format","Fixed","LongWeekdayName"],"kind":"variant"},"1:10646:16234":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:6976:11154":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:3218:9824":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"5:5903:1340":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"21:1719:10413":{"crate_id":21,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:1662:10374":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:46328:8993":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:4473:7430":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:14575:7368":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"21:3925:10470":{"crate_id":21,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:9592:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"13:232:12259":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"0:2719:2670":{"crate_id":0,"path":["chrono","format","Fixed","ShortWeekdayName"],"kind":"variant"},"0:2664:2620":{"crate_id":0,"path":["chrono","format","Numeric","YearMod100"],"kind":"variant"},"2:2866:7070":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"12:353:12260":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:46711:8375":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:45784:7117":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:6695:11019":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:49959:8801":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"12:466:13448":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:48516:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"2:11924:9106":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:5797:8550":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:4066:7208":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"17:13574:11816":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"21:5999:10998":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"18:858:10012":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:12247:11445":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:15072:7022":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"17:12712:11539":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"0:2646:2603":{"crate_id":0,"path":["chrono","format","Pad","Space"],"kind":"variant"},"2:13817:63959":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:48279:7223":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"16:6644:9644":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:13240:11726":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:12993:2500":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:11138:8108":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:7756:8379":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:10224:13121":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"23:575:7307":{"crate_id":23,"path":["num_traits","ops","checked","CheckedSub"],"kind":"trait"},"17:10635:11264":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"21:1696:10403":{"crate_id":21,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"16:7042:9865":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:11001:13147":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"5:4515:9280":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"21:6959:11152":{"crate_id":21,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:14601:7369":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"17:12771:11547":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"5:4443:7457":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:46802:8394":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:10377:13199":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:4666:6012":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:8883:8109":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:10788:13134":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:13062:11670":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"21:6929:11146":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:46603:8372":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:4:979":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"6:6004:10998":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"21:1518:10297":{"crate_id":21,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:3743:9954":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"16:5717:9618":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:10925:8524":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:9280:11248":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"6:6181:11077":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:6634:63318":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"21:514:10227":{"crate_id":21,"path":["libc","unix","utimbuf"],"kind":"struct"},"0:2809:2443":{"crate_id":0,"path":["chrono","format","Item","Numeric"],"kind":"variant"},"2:3522:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:9634:10168":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"2:46659:12461":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:13810:11894":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:9839:9933":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"16:5561:9613":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:16023:6938":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:47758:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:10529:11263":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"21:6680:11135":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"0:0:1930":{"crate_id":0,"path":["chrono"],"kind":"module"},"1:5376:8702":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"6:1588:10330":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:48272:7222":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:12262:11448":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"5:3839:10125":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:10571:13129":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:1428:8108":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"21:4067:10545":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:48832:6225":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"18:0:6907":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:12004:8640":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"21:5990:10992":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:11163:7172":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"10:0:6900":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:46998:7434":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"5:6764:7403":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"0:2737:2465":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetColon"],"kind":"variant"},"2:3505:7102":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:4400:8688":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:7216:9656":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:14643:59754":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"21:81:44192":{"crate_id":21,"path":["libc","unix","DIR"],"kind":"enum"},"17:9769:65885":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"18:721:11163":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:52589:8967":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"0:2851:2738":{"crate_id":0,"path":["chrono","format","ParseErrorKind","OutOfRange"],"kind":"variant"},"14:244:12212":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:46561:13179":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:46299:8990":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"17:11714:11347":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:23774:8886":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"0:2666:2622":{"crate_id":0,"path":["chrono","format","Numeric","IsoYear"],"kind":"variant"},"2:24839:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:47691:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"0:2795:2039":{"crate_id":0,"path":["chrono","format","Item"],"kind":"enum"},"2:8367:8369":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"17:9799:13110":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"23:2232:7294":{"crate_id":23,"path":["num_traits","float","FloatConst"],"kind":"trait"},"17:13733:11870":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:10200:13119":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:46343:9207":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:46989:8362":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:6899:11138":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"21:1568:10321":{"crate_id":21,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:11268:8611":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"2:52325:8954":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:15201:8602":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:16029:6944":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"23:523:7299":{"crate_id":23,"path":["num_traits","int","PrimInt"],"kind":"trait"},"1:11130:7412":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"14:11:13163":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"16:2816:9835":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"23:762:7321":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingShr"],"kind":"trait"},"16:7870:9568":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:51030:12480":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:50048:8805":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"6:161:44259":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:23676:64090":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"6:6031:11008":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"12:869:7122":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:11653:11343":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:13772:11885":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:10242:2830":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"23:579:7301":{"crate_id":23,"path":["num_traits","ops","checked","CheckedDiv"],"kind":"trait"},"2:49260:9095":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:2397:7346":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"0:1758:957":{"crate_id":0,"path":["chrono","offset"],"kind":"module"},"1:5008:8504":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"16:5456:9608":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"12:2036:7875":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"6:4410:10701":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:3274:5719":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"16:2889:9836":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:3323:7374":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"16:6269:9635":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:11524:7444":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"19:0:994":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:7073:9649":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:10618:8061":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"0:2714:2237":{"crate_id":0,"path":["chrono","format","Fixed"],"kind":"enum"},"6:6905:11139":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:16015:6930":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:12168:11270":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:4526:10748":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:5741:8545":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:8738:8739":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"21:5196:10796":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:4885:7347":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:50186:7153":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:50037:8804":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"9:1020:9401":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:10912:13137":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:9260:7636":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"24:24:8214":{"crate_id":24,"path":["iana_time_zone","GetTimezoneError"],"kind":"enum"},"16:6152:9561":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"0:2700:2654":{"crate_id":0,"path":["chrono","format","Numeric","Internal"],"kind":"variant"},"1:8132:8135":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"21:1536:10305":{"crate_id":21,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:38808:7205":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:12227:8736":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"12:777:7875":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:8380:8135":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"18:850:10011":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"6:4509:10740":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:32340:9162":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"22:37:7267":{"crate_id":22,"path":["num_integer","roots","Roots"],"kind":"trait"},"1:14804:8172":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"5:6688:9238":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"12:979:8623":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:11434:11322":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:8887:8368":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"21:5239:10813":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"16:7342:9595":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:8027:8135":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"12:1881:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:10299:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"16:4477:11971":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:9809:65884":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"5:8115:7875":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:49405:5950":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:7670:6240":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"12:2066:8570":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:10052:13116":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:5815:9623":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"21:6008:10999":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:49630:7179":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:10530:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:3104:8856":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:10952:8666":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:48635:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:12632:11531":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:51546:8980":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"18:745:65893":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"5:3300:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:12494:11502":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:2937:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:12242:8653":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:12773:13192":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"5:2777:9302":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:2187:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"23:618:7310":{"crate_id":23,"path":["num_traits","ops","inv","Inv"],"kind":"trait"},"9:27:9383":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"17:11993:11405":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:13279:13177":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"2:50023:8803":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"6:4038:10529":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:12053:8644":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:12262:7137":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:9065:51440":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"5:1843:10125":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"5:7780:234":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:24035:9030":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:53399:12489":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:8413:7471":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"16:6949:9861":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:47716:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:12735:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"17:9476:11253":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"16:7571:9558":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"6:3972:10495":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"5:1694:9295":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:10656:11266":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:7174:9652":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"6:1721:10410":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:23664:8522":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:12811:7190":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:14958:10180":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"21:5533:10942":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:6577:9642":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"6:4098:10558":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:8363:8370":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:3134:5910":{"crate_id":1,"path":["std","fs"],"kind":"module"},"21:4485:10735":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"6:545:10238":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"17:12051:11412":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"0:3426:3089":{"crate_id":0,"path":["chrono","offset","LocalResult","Single"],"kind":"variant"},"17:12208:11440":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:13746:11876":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:51901:12487":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"5:374:8304":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:13331:11751":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"5:1607:8108":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:11628:11338":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"5:8146:64586":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:10279:9931":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:22853:8524":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:1152:13182":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:51358:12483":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:10407:9919":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"16:6021:9815":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:10468:9979":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"23:476:7298":{"crate_id":23,"path":["num_traits","identities","One"],"kind":"trait"},"1:5960:8772":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:24121:12367":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"5:6954:9225":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"18:783:11161":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"16:3091:9879":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:11147:11311":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:11409:8770":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"6:5271:10833":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"6:5146:10757":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"16:4995:11986":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:50182:7152":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"21:6145:11052":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:46612:8373":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:53518:12498":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"21:6049:11026":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:3384:7090":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"5:7453:10125":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:8180:7335":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"0:995:2596":{"crate_id":0,"path":["chrono","format","strftime"],"kind":"module"},"1:8388:6225":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"2:3396:7091":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:13079:7159":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"12:2045:8277":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"5:783:222":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:11519:11329":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"0:1061:1900":{"crate_id":0,"path":["chrono","naive"],"kind":"module"},"17:10253:9885":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:37651:7071":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"18:678:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:14034:8640":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"21:5141:10757":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"21:4307:10656":{"crate_id":21,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:5475:10929":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:4723:2830":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"6:4346:10670":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:1544:10305":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:3368:2031":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"0:7:1030":{"crate_id":0,"path":["chrono","prelude"],"kind":"module"},"21:1598:7063":{"crate_id":21,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"18:821:10009":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:47622:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"21:4234:10622":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:22930:8524":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:51076:8983":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:3648:7107":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:12568:11513":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"9:927:49213":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:12158:8590":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"6:5423:10915":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"16:6691:9645":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:2433:8170":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"12:2052:8568":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:9771:10170":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"6:6054:11026":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"16:7279:9866":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"6:4516:10743":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"16:3241:9825":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"16:7146:9650":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:11199:11315":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:6787:8556":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"21:4466:10727":{"crate_id":21,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:8410:9291":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"12:1121:8625":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"12:2404:65880":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"0:2642:174":{"crate_id":0,"path":["chrono","format","Pad","None"],"kind":"variant"},"17:10950:13143":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:47553:7875":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"6:3896:10442":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:13130:8795":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"5:3336:8569":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:13282:11740":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"16:5314:11247":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:10477:9978":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"16:4535:11973":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"21:6197:11091":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"13:120:49757":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"0:2747:2404":{"crate_id":0,"path":["chrono","format","Fixed","RFC3339"],"kind":"variant"},"2:53255:8944":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"21:6917:11144":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:47800:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:77:1491":{"crate_id":2,"path":["core","usize"],"kind":"module"},"21:506:10222":{"crate_id":21,"path":["libc","unix","group"],"kind":"struct"},"23:572:7300":{"crate_id":23,"path":["num_traits","ops","checked","CheckedAdd"],"kind":"trait"},"2:22549:64086":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:12023:8642":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"21:4279:10641":{"crate_id":21,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:45876:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:10304:9922":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:4741:7390":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:8690:8731":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:16016:6931":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"23:4506:7285":{"crate_id":23,"path":["num_traits","FloatErrorKind"],"kind":"enum"},"1:16021:6936":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"16:7205:9655":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:2888:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"0:2682:2635":{"crate_id":0,"path":["chrono","format","Numeric","NumDaysFromSun"],"kind":"variant"},"1:11658:7456":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:53341:8982":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:13637:11832":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"0:2763:2701":{"crate_id":0,"path":["chrono","format","InternalFixed"],"kind":"struct"},"21:4332:10668":{"crate_id":21,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"21:6089:11029":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:11915:11385":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:46673:8385":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:13402:11768":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"16:5231:11988":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:11397:7175":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:15216:8603":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:46980:8059":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:46468:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:13760:11882":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:4142:10577":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:5395:10902":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:10577:59889":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"16:3488:9829":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"12:0:6902":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"5:8298:9260":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:22536:7071":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:11685:7460":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"6:3966:10493":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:4671:11976":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:9729:65889":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"5:3341:9254":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"16:4350:11967":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"0:2674:2452":{"crate_id":0,"path":["chrono","format","Numeric","Day"],"kind":"variant"},"6:1712:10404":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:4008:13106":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:13865:11910":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"18:802:10007":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:6911:11140":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"21:1713:10410":{"crate_id":21,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"16:7378:9566":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:2751:7203":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"5:1457:8626":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:10575:7923":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"23:796:7324":{"crate_id":23,"path":["num_traits","pow","Pow"],"kind":"trait"},"5:3970:10125":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"14:0:6903":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"21:4456:10726":{"crate_id":21,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"0:2374:1889":{"crate_id":0,"path":["chrono","offset","TimeZone"],"kind":"trait"},"6:4198:10604":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:5273:9810":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"21:1725:8715":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:4012:10518":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:12057:10150":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"6:5971:10975":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:13620:11825":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:10252:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:23137:8940":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:12521:11506":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"21:6657:11124":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:10061:13117":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"23:307:2925":{"crate_id":23,"path":["num_traits","cast","ToPrimitive"],"kind":"trait"},"6:1733:8715":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:7420:9583":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"18:838:7160":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:3758:8857":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:5647:8558":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:13590:11819":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:8902:51436":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"16:7477:9584":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"6:1600:10338":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"6:4379:10690":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:10677:8628":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"17:13180:11712":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:47537:7457":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"16:5595:9614":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"20:467:7025":{"crate_id":20,"path":["time","PreciseTime"],"kind":"struct"},"17:9440:11252":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"16:3064:9878":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:12514:1340":{"crate_id":2,"path":["core","str"],"kind":"module"},"2:3269:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"3:0:430":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"21:600:10278":{"crate_id":21,"path":["libc","unix","sigval"],"kind":"struct"},"21:6235:11111":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:9210:51443":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:22840:8880":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"9:963:9399":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"16:4641:11975":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"16:6518:9640":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"6:580:10264":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:4308:10653":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:1041:8137":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"21:1626:10349":{"crate_id":21,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:2171:8568":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:4740:8895":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"0:2659:2443":{"crate_id":0,"path":["chrono","format","Numeric"],"kind":"enum"},"0:2914:2040":{"crate_id":0,"path":["chrono","format","strftime","StrftimeItems"],"kind":"struct"},"2:24147:43618":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:52438:8943":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"21:4222:10621":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:3729:224":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"16:6605:9576":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:52403:8961":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"16:6464:9574":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:45968:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"23:819:7266":{"crate_id":23,"path":["num_traits","sign","Signed"],"kind":"trait"},"18:621:11160":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"21:3985:10505":{"crate_id":21,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"5:3759:7457":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"21:558:10255":{"crate_id":21,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:24499:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"17:13377:11763":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:15754:10181":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:10071:9994":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:5213:10800":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"21:5431:10919":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:6934:11146":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:1619:8624":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"16:5632:9615":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"6:3907:10450":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:10303:7221":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"21:4371:10690":{"crate_id":21,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:46650:8383":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:10313:7225":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:7732:8641":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:32334:8273":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"17:11358:9960":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"21:6106:11034":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:2188:8571":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"16:7761:9662":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:11297:12524":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"2:51051:12481":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"16:6636:9578":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"16:7453:9562":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"21:5966:10975":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:11458:11323":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"18:668:10021":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:46581:8371":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"21:1550:10310":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:47545:8108":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"21:150:44258":{"crate_id":21,"path":["libc","unix","FILE"],"kind":"enum"},"17:12582:11515":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"6:5308:10847":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:7795:8646":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"21:5382:10897":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:4230:10621":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:4208:10611":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"21:4020:10523":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"16:7024:9864":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:5500:8709":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:8849:9905":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"21:5232:10809":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:53050:8975":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"16:5855:9624":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"5:5415:7403":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:1507:8620":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:12659:11533":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:11604:11334":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"23:722:7316":{"crate_id":23,"path":["num_traits","ops","saturating","SaturatingSub"],"kind":"trait"},"15:230:9486":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:6319:8721":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:12525:5881":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:1415:7457":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:3658:10152":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"6:4116:10567":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:12467:11498":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:1518:8621":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:8289:8135":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"6:4416:10702":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"6:1669:10378":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"5:923:9265":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"23:589:7306":{"crate_id":23,"path":["num_traits","ops","checked","CheckedShr"],"kind":"trait"},"2:3435:7100":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:8880:7125":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:10887:11299":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:1302:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"16:4448:11970":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:12456:11497":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:15474:12561":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"16:5488:9610":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"21:5470:10929":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"5:1441:8624":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:50241:9159":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"17:13318:11745":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:16003:6921":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"17:11678:11345":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"16:3338:9807":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"21:4354:10679":{"crate_id":21,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:2314:9924":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"5:3044:12660":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"20:442:7026":{"crate_id":20,"path":["time","sys","inner","unix","SteadyTime"],"kind":"struct"},"1:7677:5875":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:23470:21432":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"23:636:7311":{"crate_id":23,"path":["num_traits","ops","mul_add","MulAdd"],"kind":"trait"},"6:6117:11036":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:16005:6923":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:10307:7223":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:3423:7097":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"6:1551:10307":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"21:3973:10500":{"crate_id":21,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"0:2729:2459":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond3"],"kind":"variant"},"1:11434:8723":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"18:740:13099":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:47682:7875":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"21:6019:11004":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:10957:8667":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:14130:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"1:10566:8145":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"6:4270:8722":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:1558:10310":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"16:6166:9630":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:10565:8524":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"23:715:7313":{"crate_id":23,"path":["num_traits","ops","saturating","Saturating"],"kind":"trait"},"16:5580:9798":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"6:4055:10535":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"16:5927:9625":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:3041:9821":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"21:586:10270":{"crate_id":21,"path":["libc","unix","winsize"],"kind":"struct"},"1:1438:7875":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:1524:8622":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"5:2218:9257":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"16:4955:11985":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:14626:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"3:321:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:6247:11114":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"21:4080:10551":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:49289:9098":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"21:4073:10548":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:15986:59757":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"12:379:9472":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"18:136:13441":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"21:4102:10564":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:6697:11021":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"0:2660:2449":{"crate_id":0,"path":["chrono","format","Numeric","Year"],"kind":"variant"},"6:4218:10612":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"16:5421:9606":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:0:6905":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:12501:9217":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:1075:8565":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"23:403:58013":{"crate_id":23,"path":["num_traits","float","FloatCore"],"kind":"trait"},"23:581:7304":{"crate_id":23,"path":["num_traits","ops","checked","CheckedRem"],"kind":"trait"},"5:8106:8275":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"12:472:13449":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"0:3422:1903":{"crate_id":0,"path":["chrono","offset","LocalResult"],"kind":"enum"},"18:867:10013":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"21:4501:10740":{"crate_id":21,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:8908:8059":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"9:722:9335":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"21:5447:10923":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"23:584:7303":{"crate_id":23,"path":["num_traits","ops","checked","CheckedNeg"],"kind":"trait"},"2:10295:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"13:0:6896":{"crate_id":13,"path":["std_detect"],"kind":"module"},"21:6946:11151":{"crate_id":21,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:9264:11247":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"21:6176:11077":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:3920:10460":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"6:1626:10344":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:48136:9152":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:3352:7084":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"23:720:7314":{"crate_id":23,"path":["num_traits","ops","saturating","SaturatingAdd"],"kind":"trait"},"1:9063:8657":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"16:5672:9616":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"16:3604:11181":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"12:856:8615":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"2:3358:7087":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:13306:11742":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"18:695:10022":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"0:2850:2735":{"crate_id":0,"path":["chrono","format","ParseErrorKind"],"kind":"enum"},"12:750:7457":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:10866:8682":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:51397:12484":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:10874:7421":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:13627:11827":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"6:5579:10968":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"6:5387:10897":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:13587:12668":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:13370:11761":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:22993:8885":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:11420:8714":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:11304:51446":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:12095:11422":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"12:895:9457":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"17:10266:9888":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:11026:13149":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:10938:13142":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"5:2262:9300":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:13054:11668":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:6951:11151":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:24169:43610":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"5:5536:9237":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:52246:8966":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"17:294:13101":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:8404:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"20:562:7033":{"crate_id":20,"path":["time","TmFmt"],"kind":"struct"},"16:7236:9658":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:10988:13146":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:10305:7222":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"5:994:9266":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"0:2717:2668":{"crate_id":0,"path":["chrono","format","Fixed","LongMonthName"],"kind":"variant"},"17:12917:11559":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:10580:7924":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"6:634:10293":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:48803:12470":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:50421:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:51744:8945":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:13446:11779":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:11245:9088":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:9186:9962":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:15053:2233":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"12:2392:12263":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:10241:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"16:5960:9805":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:3525:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:28054:7292":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:68:729":{"crate_id":2,"path":["core","i32"],"kind":"module"},"2:2062:7403":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"9:692:9334":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"17:11030:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:5719:8543":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"21:4053:10537":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:5968:8774":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:4728:8894":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:2926:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"16:6357:9636":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:52132:8978":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:1642:8626":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"12:2280:8626":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:10962:13144":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:14236:7427":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"21:1672:10386":{"crate_id":21,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"12:787:8617":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:4434:7428":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:46730:8389":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"16:7549:9570":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:14550:8557":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"16:5330:11248":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:24237:5949":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:46621:8380":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:4287:10641":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"5:1011:7457":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"21:627:10293":{"crate_id":21,"path":["libc","unix","protoent"],"kind":"struct"},"2:49042:9222":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:10458:11213":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"22:0:1928":{"crate_id":22,"path":["num_integer"],"kind":"module"},"1:8474:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"9:1075:9402":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:10661:16236":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"6:4067:10540":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"21:6260:11117":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:49865:8793":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:12040:11411":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"23:702:58095":{"crate_id":23,"path":["num_traits","ops","overflowing","OverflowingMul"],"kind":"trait"},"2:32400:63673":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"17:13465:11786":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"16:2843:9816":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"6:5244:10813":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:3717:7108":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:11120:7202":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:11981:11404":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"12:2059:8569":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"0:2835:1898":{"crate_id":0,"path":["chrono","format","ParseError"],"kind":"struct"},"16:7884:9569":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:11499:11328":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"21:5252:10822":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"16:5522:9612":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"21:4530:10753":{"crate_id":21,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:10095:9988":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"6:1694:10397":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:46397:9203":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:11070:7433":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:24601:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"6:4454:10720":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"16:5505:9611":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:12252:8661":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:11137:7165":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"6:626:10288":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:8839:13189":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"5:2310:9317":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"6:4028:10523":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"16:6219:9633":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:12187:8592":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:6511:8374":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:24873:7352":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"17:13453:11780":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:10463:715":{"crate_id":2,"path":["core","hash"],"kind":"module"},"6:1727:10413":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:4417:11969":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:49269:9096":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"16:2733:9793":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:3279:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"12:2398:12264":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:3341:7379":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"21:6848:11136":{"crate_id":21,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:7858:8932":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:11615:7455":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"17:10041:13115":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"21:5280:10834":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:9718:8695":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"21:1740:10420":{"crate_id":21,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"16:6072:9580":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"17:10081:9931":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:3195:9823":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"5:8280:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:15122:12559":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"16:6780:9646":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"21:4402:10701":{"crate_id":21,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:22602:64458":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:49371:9104":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"5:8263:8631":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:46024:7109":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"16:7333:9581":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:1157:16237":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:24567:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:607:13104":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:12155:11433":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"5:1663:8617":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:23770:8524":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"6:4321:10659":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"21:6221:11102":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:56403:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:7856:9664":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:8925:8749":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"1:9861:10171":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"2:49684:7177":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:47596:7634":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:5201:10796":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"16:6176:9631":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"17:11809:11375":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:672:2080":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:24:600":{"crate_id":2,"path":["core","env"],"kind":"macro"},"1:10816:7369":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:9467:13220":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"21:6894:11138":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:49666:7176":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"0:2692:2456":{"crate_id":0,"path":["chrono","format","Numeric","Minute"],"kind":"variant"},"1:7255:13188":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:49381:9105":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:10673:51628":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:12946:11579":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"12:1238:9468":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"21:594:10275":{"crate_id":21,"path":["libc","unix","linger"],"kind":"struct"},"1:6685:8545":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:2957:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:50198:7156":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"12:1183:9466":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:49745:7184":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:3325:5925":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"9:900:12318":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:46413:7181":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:53302:8962":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"6:6094:11029":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:4532:10750":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:2159:7875":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:11045:51444":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:13788:11889":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:56325:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:2991:9830":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"21:605:10280":{"crate_id":21,"path":["libc","unix","itimerval"],"kind":"struct"},"6:0:798":{"crate_id":6,"path":["libc"],"kind":"module"},"21:4313:10659":{"crate_id":21,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"0:2733:2461":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond9"],"kind":"variant"},"5:3329:7457":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:48619:7219":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:1501:8619":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"17:13898:11917":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:5408:7124":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:6082:8711":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:10975:13145":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:25243:7313":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"9:603:13309":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:48795:7926":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:6569:9850":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"6:6126:11040":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:46391:7182":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:9961:13113":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"21:6121:11040":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:53380:8947":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"5:3894:9292":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:11250:8512":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"2:3740:7110":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"21:4365:10687":{"crate_id":21,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:13520:11802":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:22804:8893":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"2:47968:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:45922:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:12537:11508":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"5:6257:8282":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:16011:6928":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:13961:8641":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:11086:7387":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"5:2200:10127":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:10211:13120":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:24222:7351":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:5653:8560":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:23128:8524":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:12735:7189":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:16020:6935":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:49779:7183":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"21:6663:11126":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"7:85:49117":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:13963:11935":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:11738:11351":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:48258:7221":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:13978:11936":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:6893:8396":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"5:3048:12661":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:15185:8601":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:9343:8520":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"21:6242:11114":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:2543:9977":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:11328:11547":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:5584:16240":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:24106:7285":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:11354:8703":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"0:2676:2630":{"crate_id":0,"path":["chrono","format","Numeric","WeekFromSun"],"kind":"variant"},"17:510:13103":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:11425:9092":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:3492:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"0:2855:2747":{"crate_id":0,"path":["chrono","format","ParseErrorKind","NotEnough"],"kind":"variant"},"1:14570:12551":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"1:13422:8716":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"21:0:798":{"crate_id":21,"path":["libc"],"kind":"module"},"17:13912:11924":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:2512:9920":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:3297:7475":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:16018:6933":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:11206:7185":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:11360:8704":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:14317:8061":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"20:445:7022":{"crate_id":20,"path":["time","Timespec"],"kind":"struct"},"2:23942:9128":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:16017:6932":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:10366:11319":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:16010:6927":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:9766:10169":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"23:854:7279":{"crate_id":23,"path":["num_traits","NumRef"],"kind":"trait"},"2:22583:64459":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:13933:11930":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:9332:9975":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"5:1635:8614":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"21:4324:10664":{"crate_id":21,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"16:6424:9638":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"23:866:7281":{"crate_id":23,"path":["num_traits","NumAssignOps"],"kind":"trait"},"6:6265:11117":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:46111:9001":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"0:632:1899":{"crate_id":0,"path":["chrono","format","ParseResult"],"kind":"typedef"},"1:8646:8730":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:5030:5909":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:13884:11915":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"21:3952:10492":{"crate_id":21,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:46473:9147":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:12373:11481":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:47614:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:5034:7336":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:12073:11421":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:11082:9911":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"6:6132:11041":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:12385:11483":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:13084:7158":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:12203:8593":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:13394:11766":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:7649:8638":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:10858:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:11572:11332":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:3287:9827":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"6:4061:10537":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:47007:8364":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"12:2032:7457":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"6:4340:10668":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"6:601:10275":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"23:847:7278":{"crate_id":23,"path":["num_traits","NumOps"],"kind":"trait"},"2:46312:8991":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:12405:8177":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"6:5207:10799":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:10301:7220":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"23:859:7280":{"crate_id":23,"path":["num_traits","RefNum"],"kind":"trait"},"16:4890:11983":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"5:7824:10138":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:2912:9818":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"21:4171:10603":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:3389:7094":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"1:8803:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"0:2670:2626":{"crate_id":0,"path":["chrono","format","Numeric","IsoYearMod100"],"kind":"variant"},"2:56338:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:55967:8911":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:12247:8741":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:12846:7185":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"5:4599:10128":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"21:1580:10330":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:6999:9648":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"21:3888:10442":{"crate_id":21,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:3682:7415":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:50194:7155":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:46059:8899":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"16:6136:9601":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"5:3039:64613":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:12671:11534":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"17:10331:9933":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:9979:9075":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:15509:9495":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:49911:8800":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"6:4464:10726":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"16:6087:9559":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"16:2968:9819":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:10611:13132":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"16:7195:9654":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:3351:7384":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:7441:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:3519:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"5:5889:10136":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"21:4432:10712":{"crate_id":21,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"16:5360:9603":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"5:4306:8108":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:9404:11251":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:12598:11518":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:3366:5952":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:14166:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"16:6682:9575":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:9060:8737":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:14936:10178":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"18:661:10020":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:16025:6940":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"0:2933:2038":{"crate_id":0,"path":["chrono","format","DelayedFormat"],"kind":"struct"},"17:542:9534":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:13923:5875":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:51492:8973":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"16:5407:9605":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"6:6922:11144":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"23:333:5075":{"crate_id":23,"path":["num_traits","cast","FromPrimitive"],"kind":"trait"},"2:49716:7167":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:11616:11337":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:10317:9921":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:49326:9100":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"0:2816:127":{"crate_id":0,"path":["chrono","format","Item","Error"],"kind":"variant"},"1:1190:16238":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"5:1472:8625":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"5:8203:7875":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:45991:7106":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"16:2866:9817":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:12744:10176":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"1:6863:8535":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"0:2672:1880":{"crate_id":0,"path":["chrono","format","Numeric","Month"],"kind":"variant"},"23:611:7308":{"crate_id":23,"path":["num_traits","ops","euclid","CheckedEuclid"],"kind":"trait"},"21:3958:10493":{"crate_id":21,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"5:6411:223":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:3182:227":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:46771:8377":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"21:4210:10612":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"21:5202:10799":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:47666:7457":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:13582:11817":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:900:8144":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"16:5736:9619":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:11453:8555":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:9034:51439":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"5:7257:10125":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:11598:7454":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:3401:7092":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:14242:7425":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:2177:8569":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:4752:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"6:4362:10679":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:4075:10545":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:9528:7165":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:50178:7151":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:24771:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"21:538:10238":{"crate_id":21,"path":["libc","unix","rusage"],"kind":"struct"},"16:6731:9854":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:48583:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:11428:8703":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:11114:7457":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:22604:64454":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:13893:13178":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"5:7620:8282":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"5:4628:235":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:13172:11711":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:3577:7104":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:23139:8885":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"21:4518:10748":{"crate_id":21,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"0:2731:2460":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond6"],"kind":"variant"},"1:7507:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:5373:8701":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:2934:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:783:10171":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"9:0:6899":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"12:940:8620":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:6853:11136":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:10827:9958":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:9301:2234":{"crate_id":1,"path":["std","time","UNIX_EPOCH"],"kind":"constant"},"2:49894:8799":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"5:7111:10138":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"21:5266:10833":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"6:4088:10551":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:14239:7429":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"21:4152:10588":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:46031:7210":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:3175:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:15391:8702":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"6:5175:10781":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:22581:64456":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:52085:8974":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:7117:7624":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:15229:8608":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:13786:8648":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"21:3869:10432":{"crate_id":21,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:8400:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"5:3488:8277":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"5:3040:12350":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"21:1686:10397":{"crate_id":21,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:10799:7365":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:24215:12378":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:11822:11379":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"5:2553:9303":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:15412:8709":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"16:4823:11981":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:12982:11610":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:10149:13111":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:3342:2032":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"6:5538:10942":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:12725:11540":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:3380:7088":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"17:13598:11820":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"18:705:11161":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:50190:7154":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:6077:11027":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:48549:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"2:51099:8971":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:46353:9208":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"23:750:7317":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingAdd"],"kind":"trait"},"16:6126:9629":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:13767:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:4256:10633":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:47605:7737":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"5:4699:10130":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"16:4852:11982":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:3736:7422":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"6:513:10222":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"6:4356:10676":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:3376:7089":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"22:133:3797":{"crate_id":22,"path":["num_integer","div_mod_floor"],"kind":"function"},"6:5226:10801":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:5156:7343":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:4032:8669":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:7286:13188":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"5:8250:7132":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:9733:8696":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:3278:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"18:730:65892":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:8954:9963":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:51595:8965":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"6:6013:10999":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"23:698:58093":{"crate_id":23,"path":["num_traits","ops","overflowing","OverflowingAdd"],"kind":"trait"},"16:7928:4426":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"18:169:13445":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"6:1764:10426":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:1149:13180":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:23465:8888":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"21:4012:10520":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:5472:9609":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"16:5766:9621":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"16:7360:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:50228:7140":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"2:48561:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"9:749:9336":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"1:1017:8135":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"6:1740:10416":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"12:1147:8626":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"21:611:10283":{"crate_id":21,"path":["libc","unix","tms"],"kind":"struct"},"16:7303:9660":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"21:3997:10514":{"crate_id":21,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"21:6971:11154":{"crate_id":21,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"6:4425:10705":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:11077:7435":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"20:569:3607":{"crate_id":20,"path":["time","Fmt"],"kind":"enum"},"2:3247:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:12124:8586":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"12:952:8621":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:10353:9925":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:3178:228":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:14069:8301":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"6:4179:10603":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:49279:9097":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:47842:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:2183:8570":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:1459:8615":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:16024:6939":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"0:2735:2686":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneName"],"kind":"variant"},"2:51769:8946":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:7332:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"21:1559:10315":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:48842:12474":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:11337:9976":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:49761:7181":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:12507:11503":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"14:216:49791":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:2456:8177":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"1:11402:8506":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:6557:8562":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"18:791:10006":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:10427:10172":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:22564:64086":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"5:2330:9299":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:9594:10167":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"17:2484:51528":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:5039:7337":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"0:2813:2237":{"crate_id":0,"path":["chrono","format","Item","Fixed"],"kind":"variant"},"9:1056:9394":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"6:5430:10916":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:7295:9579":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:11180:8507":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"21:5285:10835":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"23:871:7282":{"crate_id":23,"path":["num_traits","NumAssign"],"kind":"trait"},"1:9174:13189":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"0:3424:174":{"crate_id":0,"path":["chrono","offset","LocalResult","None"],"kind":"variant"},"0:2686:2639":{"crate_id":0,"path":["chrono","format","Numeric","Ordinal"],"kind":"variant"},"5:8168:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:46366:7183":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"6:571:10258":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"16:7406:9565":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"6:593:10270":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:46739:8390":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:22877:8887":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"6:4392:10695":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"21:532:10235":{"crate_id":21,"path":["libc","unix","rlimit"],"kind":"struct"},"23:700:58094":{"crate_id":23,"path":["num_traits","ops","overflowing","OverflowingSub"],"kind":"trait"},"2:50202:7157":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:3581:7105":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:2162:7122":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:2502:2593":{"crate_id":1,"path":["std","error"],"kind":"module"},"17:12431:11493":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:45901:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:11100:9913":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:11411:7174":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:49530:7171":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:607:10278":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"0:558:671":{"crate_id":0,"path":["chrono","format"],"kind":"module"},"17:13041:11662":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:46751:8391":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:15975:16239":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:16009:6926":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:22751:8884":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"2:24703:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"17:12408:11492":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"5:1653:8616":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:11208:8510":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"2:50206:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"17:11539:11330":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:12028:11409":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"21:4248:10633":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:49361:9103":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:9886:13111":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"6:565:10255":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:6226:11102":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:50451:7206":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"21:6888:11137":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:894:8143":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"21:1756:10426":{"crate_id":21,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:2967:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"6:6893:11137":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:11847:11383":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:8488:8588":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"14:47:13163":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:49251:9094":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:13942:11932":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"0:2797:2450":{"crate_id":0,"path":["chrono","format","Item","Literal"],"kind":"variant"},"6:5290:10835":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:56390:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:50174:7150":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"23:641:7312":{"crate_id":23,"path":["num_traits","ops","mul_add","MulAddAssign"],"kind":"trait"},"2:49438:7166":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"6:4485:10733":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"0:2803:2603":{"crate_id":0,"path":["chrono","format","Item","Space"],"kind":"variant"},"1:9639:59921":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"5:3882:6224":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:24737:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"21:4408:10702":{"crate_id":21,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:8164:13454":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:14565:12549":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"17:13924:11926":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"6:6640:11123":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:50362:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:49462:7172":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:6859:8532":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"0:645:2775":{"crate_id":0,"path":["chrono","format","format_item"],"kind":"function"},"12:2269:8625":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:13939:12669":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:49046:9221":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:5564:10957":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"15:248:9487":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"5:5837:7362":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:9574:9912":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"18:152:13442":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:9551:9906":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"21:154:44259":{"crate_id":21,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:50354:12479":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:6937:8536":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"18:637:11161":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"5:8344:9262":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"6:5544:10943":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:5930:8769":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:13497:11794":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:10447:13176":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"5:0:277":{"crate_id":5,"path":["alloc"],"kind":"module"},"6:4048:10532":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:4157:9966":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:6790:8526":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"0:2739:2464":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetColonZ"],"kind":"variant"},"6:4160:10588":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"21:4384:10695":{"crate_id":21,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:51925:12488":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"12:1784:10123":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:3287:7239":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:11457:11008":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"5:8368:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"6:5979:10980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"5:4643:10130":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"5:8362:12354":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"9:41:9384":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"16:3549:11960":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:10623:13133":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:10962:6128":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:12343:11462":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"5:3951:8277":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:4300:7389":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"21:1704:10404":{"crate_id":21,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:5208:7237":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"12:1162:9465":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:3800:11963":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"16:6768:9857":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:10502:11262":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"21:5178:10783":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"21:526:10233":{"crate_id":21,"path":["libc","unix","timespec"],"kind":"struct"},"2:53419:12491":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:13429:11772":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:11750:11352":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"16:6366:9484":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:46551:10144":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:11118:51445":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"21:4378:10692":{"crate_id":21,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:51285:8964":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"6:5183:10783":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:1526:10297":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"21:4477:10733":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:1704:10403":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:9245:9889":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"21:6906:11140":{"crate_id":21,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"21:4348:10676":{"crate_id":21,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"5:432:2592":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:46691:8395":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"20:519:1898":{"crate_id":20,"path":["time","ParseError"],"kind":"enum"},"1:12742:7366":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:48498:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:12327:11457":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:12182:11437":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:22940:8523":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"21:5574:10968":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:13098:11700":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:12307:11456":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"16:6032:9552":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:51124:8963":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:11439:9093":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:521:10227":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"5:8330:9261":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:53595:12501":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"23:366:7295":{"crate_id":23,"path":["num_traits","cast","AsPrimitive"],"kind":"trait"},"5:1597:7457":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"16:7738:9661":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:10543:11301":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:4000:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:2863:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:5605:8858":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"23:599:7309":{"crate_id":23,"path":["num_traits","ops","euclid","Euclid"],"kind":"trait"},"1:4397:8687":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:24185:43619":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"21:6635:11123":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:47674:8108":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:51316:8952":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"14:189:13163":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"6:1634:10349":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:13477:11787":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:1633:8625":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"6:5444:10921":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:32696:8935":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"16:7392:9567":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:7975:10153":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"6:6211:11094":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:46682:8386":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:11674:7459":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:10448:9896":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:4607:7434":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:49726:7169":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"5:8313:9148":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"5:3038:7917":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:10140:9933":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:12138:8589":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:24052:12362":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"16:4304:11966":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"21:4524:10750":{"crate_id":21,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"16:7158:9651":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:53480:12496":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:4921:7348":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:6438:8384":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"16:5433:9607":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"16:4506:11972":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"6:1621:10342":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:51821:12485":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"0:2668:2624":{"crate_id":0,"path":["chrono","format","Numeric","IsoYearDiv100"],"kind":"variant"},"1:5952:8771":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"16:7264:9577":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:13842:11909":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:0:488":{"crate_id":2,"path":["core"],"kind":"module"},"2:51642:8953":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:2155:7457":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:49566:7175":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:12772:7191":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"23:233:7293":{"crate_id":23,"path":["num_traits","bounds","Bounded"],"kind":"trait"},"17:10558:13126":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"5:7849:10142":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:46290:12451":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"0:2696:2462":{"crate_id":0,"path":["chrono","format","Numeric","Nanosecond"],"kind":"variant"},"16:4386:11968":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:12685:11535":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"5:7379:7875":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:11340:12530":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"2:48820:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"0:2694:2457":{"crate_id":0,"path":["chrono","format","Numeric","Second"],"kind":"variant"},"2:52372:8958":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"21:573:10264":{"crate_id":21,"path":["libc","unix","iovec"],"kind":"struct"},"17:10420:9918":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"6:5328:10863":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:16027:6942":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:51523:8977":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"16:7843:9663":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:3440:7101":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"16:3429:9548":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:48265:7220":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:13348:11756":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:16019:6934":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"21:3964:10495":{"crate_id":21,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:49512:7173":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"16:6807:9647":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:12275:11449":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:10311:7224":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:1311:9995":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:8193:10153":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"22:86:7271":{"crate_id":22,"path":["num_integer","average","Average"],"kind":"trait"},"1:15970:5916":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:6437:8526":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:3347:7085":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"6:4110:10564":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:10292:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:2793:7204":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"17:10844:9933":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:51378:8941":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:3559:7113":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"11:46:12269":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"17:10403:9929":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"6:6111:11034":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:48522:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"2:3417:7096":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:16026:6941":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"16:2754:9809":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"6:539:10235":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"20:473:7026":{"crate_id":20,"path":["time","SteadyTime"],"kind":"struct"},"23:754:7318":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingMul"],"kind":"trait"},"12:843:8614":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:14242:8274":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"21:4047:10535":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"15:269:9491":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:2572:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"0:2662:2618":{"crate_id":0,"path":["chrono","format","Numeric","YearDiv100"],"kind":"variant"},"2:52939:8955":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:1497:8618":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:2219:1050":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:49986:8802":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"12:1203:9467":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:13564:11813":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"21:5425:10916":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:51696:8960":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"6:5375:10890":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"12:114:13447":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"21:1523:10299":{"crate_id":21,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:16022:6937":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"21:4190:10604":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"0:2678:2632":{"crate_id":0,"path":["chrono","format","Numeric","WeekFromMon"],"kind":"variant"},"2:57678:12507":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"2:14079:9117":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"16:3320:9880":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"0:2723:2675":{"crate_id":0,"path":["chrono","format","Fixed","LowerAmPm"],"kind":"variant"},"17:10377:9923":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:13296:11741":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"18:812:10008":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:4394:8686":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:8929:51437":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:46973:8360":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:7927:8134":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"1:15130:8649":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:9381:7131":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"12:559:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:12061:12545":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"17:1236:13105":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:50344:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"}},"external_crates":{"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"23":{"name":"num_traits","html_root_url":"https://docs.rs/num-traits/0.2/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"22":{"name":"num_integer","html_root_url":"https://docs.rs/num-integer/0.1/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"24":{"name":"iana_time_zone","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"libc","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"time","html_root_url":"https://doc.rust-lang.org/time/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":17}