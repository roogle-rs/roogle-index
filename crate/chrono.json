{"root":"0:0:2231","crate_version":"0.4.33","includes_private":false,"index":{"0:3118:3992":{"id":"0:3118:3992","crate_id":0,"name":"Thu","span":{"filename":"src/weekday.rs","begin":[50,4],"end":[50,11]},"visibility":"default","docs":"Thursday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"3","value":"3"}}}},"a:2:2966:253-0:3152:2156":{"id":"a:2:2966:253-0:3152:2156","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2210:3900":{"id":"0:2210:3900","crate_id":0,"name":"hour_div_12","span":{"filename":"src/format/parsed.rs","begin":[82,4],"end":[82,32]},"visibility":"public","docs":"Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"0:1967-0:3047:2160":{"id":"0:1967-0:3047:2160","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[542,48],"end":[542,51]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"inner":{"import":{"source":"offset::Utc","name":"Utc","id":"0:3047:2160","glob":false}}},"0:1490":{"id":"0:1490","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1179,0],"end":[1184,1]},"visibility":"default","docs":"Add-assign `chrono::Duration` to `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the addition ignores integral number of days.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:33908:2348","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1491:302"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3130":{"id":"0:3130","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,9],"end":[32,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2748-0:2488:3453":{"id":"b:2:2748-0:2488:3453","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2748-0:3108:2158":{"id":"b:2:2748-0:3108:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1240":{"id":"0:1240","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1084,0],"end":[1098,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1241:752"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32882:9016-0:2729:2178":{"id":"a:2:32882:9016-0:2729:2178","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2759-0:2444:3447":{"id":"b:2:2759-0:2444:3447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3240":{"id":"0:3240","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[598,22],"end":[598,26]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3241:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2441-0:2746:2163":{"id":"b:2:2441-0:2746:2163","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1050:2711":{"id":"0:1050:2711","crate_id":0,"name":"checked_add_signed","span":{"filename":"src/naive/date.rs","begin":[1158,4],"end":[1161,5]},"visibility":"public","docs":"Adds the number of whole days in the given `Duration` to the current date.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(d.checked_add_signed(Duration::days(40)),\n           Some(NaiveDate::from_ymd_opt(2015, 10, 15).unwrap()));\nassert_eq!(d.checked_add_signed(Duration::days(-40)),\n           Some(NaiveDate::from_ymd_opt(2015, 7, 27).unwrap()));\nassert_eq!(d.checked_add_signed(Duration::days(1_000_000_000)), None);\nassert_eq!(d.checked_add_signed(Duration::days(-1_000_000_000)), None);\nassert_eq!(NaiveDate::MAX.checked_add_signed(Duration::days(1)), None);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32825:244-0:2549:2174":{"id":"a:2:32825:244-0:2549:2174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2446:3452":{"id":"0:2446:3452","crate_id":0,"name":"colons","span":{"filename":"src/format/mod.rs","begin":[285,4],"end":[285,22]},"visibility":"public","docs":"Separator between hours, minutes and seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:3040:2149":{"id":"0:3040:2149","crate_id":0,"name":"Local","span":{"filename":"src/offset/local/mod.rs","begin":[115,0],"end":[115,17]},"visibility":"public","docs":"The local timescale.\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non the Local struct is the preferred way to construct `DateTime<Local>`\ninstances.\n\n# Example\n\n```\nuse chrono::{Local, DateTime, TimeZone};\n\nlet dt1: DateTime<Local> = Local::now();\nlet dt2: DateTime<Local> = Local.timestamp_opt(0, 0).unwrap();\nassert!(dt1 >= dt2);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["0:1870","a:2:42477:9166-0:3040:2149","a:2:2966:253-0:3040:2149","a:2:32825:244-0:3040:2149","a:2:32882:9016-0:3040:2149","a:2:42476:9167-0:3040:2149","b:2:2754-0:3040:2149","b:2:2744-0:3040:2149","b:2:2748-0:3040:2149","b:2:2441-0:3040:2149","b:2:2444-0:3040:2149","b:2:3558-0:3040:2149","b:2:2759-0:3040:2149","b:5:687-0:3040:2149","0:3043","0:1873","0:3045","0:3042"]}}},"0:3081:725":{"id":"0:3081:725","crate_id":0,"name":"fmt","span":{"filename":"src/offset/mod.rs","begin":[41,27],"end":[41,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2774":{"id":"0:2774","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[22,30],"end":[22,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3091:2183":{"id":"0:3091:2183","crate_id":0,"name":"RoundingError","span":{"filename":"src/round.rs","begin":[241,0],"end":[277,1]},"visibility":"public","docs":"An error from rounding by `Duration`\n\nSee: [`DurationRound`]","links":{"`DurationRound`":"0:1988:2182"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:3092:8156","0:3094:8153","0:3096:8155"],"impls":["a:2:42477:9166-0:3091:2183","a:2:2966:253-0:3091:2183","a:2:32825:244-0:3091:2183","a:2:32882:9016-0:3091:2183","a:2:42476:9167-0:3091:2183","b:2:2754-0:3091:2183","b:2:2744-0:3091:2183","b:2:2748-0:3091:2183","b:2:2441-0:3091:2183","b:2:2444-0:3091:2183","b:2:3558-0:3091:2183","b:2:2759-0:3091:2183","b:5:687-0:3091:2183","b:5:5828-0:3091:2183","0:3098","0:3107","0:3103","0:3100","0:3102","0:3105","0:2005","0:2007"]}}},"b:5:687-0:3060:2180":{"id":"b:5:687-0:3060:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5562:3624":{"id":"5:5562:3624","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7571:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3558-0:3060:2180":{"id":"b:2:3558-0:3060:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:415:2751":{"id":"0:415:2751","crate_id":0,"name":"ordinal","span":{"filename":"src/datetime/mod.rs","begin":[987,4],"end":[989,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5828-0:2620:2161":{"id":"b:5:5828-0:2620:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5826:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5830:1605"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:209:2754":{"id":"0:209:2754","crate_id":0,"name":"with_year","span":{"filename":"src/date.rs","begin":[433,4],"end":[435,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:406:737":{"id":"0:406:737","crate_id":0,"name":"format","span":{"filename":"src/datetime/mod.rs","begin":[921,4],"end":[923,5]},"visibility":"public","docs":"Formats the combined date and time per the specified format string.\n\nSee the [`crate::format::strftime`] module for the supported escape sequences.\n\n# Example\n```rust\nuse chrono::prelude::*;\n\nlet date_time: DateTime<Utc> = Utc.with_ymd_and_hms(2017, 04, 02, 12, 50, 32).unwrap();\nlet formatted = format!(\"{}\", date_time.format(\"%d/%m/%Y %H:%M\"));\nassert_eq!(formatted, \"02/04/2017 12:50\");\n```","links":{"`crate::format::strftime`":"0:860:3302"},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2762:135":{"id":"2:2762:135","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32755:12222","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2084:2757":{"id":"0:2084:2757","crate_id":0,"name":"with_day","span":{"filename":"src/traits.rs","begin":[192,4],"end":[192,49]},"visibility":"default","docs":"Makes a new value with the day of month (starting from 1) changed.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (for example `day(31)` in April).\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n- The value for `day` is out of range.\n\n[`DateTime<Tz>`]: crate::DateTime","links":{"crate::DateTime":"0:2154:2153"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2748-0:3060:2180":{"id":"b:2:2748-0:3060:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2654":{"id":"0:2654","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2096,62],"end":[2096,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2540:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2655:468"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1292":{"id":"0:1292","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1774,0],"end":[1780,1]},"visibility":"default","docs":"Add `Months` to `NaiveDateTime`.\n\nThe result will be clamped to valid days in the resulting month, see `checked_add_months` for\ndetails.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using `checked_add_months` to get an `Option` instead.\n\n# Example\n\n```\nuse chrono::{Months, NaiveDate};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(1, 0, 0).unwrap() + Months::new(1),\n    NaiveDate::from_ymd_opt(2014, 2, 1).unwrap().and_hms_opt(1, 0, 0).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(0, 2, 0).unwrap() + Months::new(11),\n    NaiveDate::from_ymd_opt(2014, 12, 1).unwrap().and_hms_opt(0, 2, 0).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(0, 0, 3).unwrap() + Months::new(12),\n    NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().and_hms_opt(0, 0, 3).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(0, 0, 4).unwrap() + Months::new(13),\n    NaiveDate::from_ymd_opt(2015, 2, 1).unwrap().and_hms_opt(0, 0, 4).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 31).unwrap().and_hms_opt(0, 5, 0).unwrap() + Months::new(1),\n    NaiveDate::from_ymd_opt(2014, 2, 28).unwrap().and_hms_opt(0, 5, 0).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2020, 1, 31).unwrap().and_hms_opt(6, 0, 0).unwrap() + Months::new(1),\n    NaiveDate::from_ymd_opt(2020, 2, 29).unwrap().and_hms_opt(6, 0, 0).unwrap()\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1293:206","0:1294:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3138":{"id":"0:3138","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,37],"end":[32,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3139:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2368:3367":{"id":"0:2368:3367","crate_id":0,"name":"Nanosecond","span":{"filename":"src/format/mod.rs","begin":[200,4],"end":[200,14]},"visibility":"default","docs":"An optional dot plus one or more digits for left-aligned nanoseconds.\nMay print nothing, 3, 6 or 9 digits according to the available accuracy.\nSee also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2746:2163":{"id":"0:2746:2163","crate_id":0,"name":"NaiveTime","span":{"filename":"src/naive/time/mod.rs","begin":[213,0],"end":[216,1]},"visibility":"public","docs":"ISO 8601 time without timezone.\nAllows for the nanosecond precision and optional leap second representation.\n\n# Leap Second Handling\n\nSince 1960s, the manmade atomic clock has been so accurate that\nit is much more accurate than Earth's own motion.\nIt became desirable to define the civil time in terms of the atomic clock,\nbut that risks the desynchronization of the civil time from Earth.\nTo account for this, the designers of the Coordinated Universal Time (UTC)\nmade that the UTC should be kept within 0.9 seconds of the observed Earth-bound time.\nWhen the mean solar day is longer than the ideal (86,400 seconds),\nthe error slowly accumulates and it is necessary to add a **leap second**\nto slow the UTC down a bit.\n(We may also remove a second to speed the UTC up a bit, but it never happened.)\nThe leap second, if any, follows 23:59:59 of June 30 or December 31 in the UTC.\n\nFast forward to the 21st century,\nwe have seen 26 leap seconds from January 1972 to December 2015.\nYes, 26 seconds. Probably you can read this paragraph within 26 seconds.\nBut those 26 seconds, and possibly more in the future, are never predictable,\nand whether to add a leap second or not is known only before 6 months.\nInternet-based clocks (via NTP) do account for known leap seconds,\nbut the system API normally doesn't (and often can't, with no network connection)\nand there is no reliable way to retrieve leap second information.\n\nChrono does not try to accurately implement leap seconds; it is impossible.\nRather, **it allows for leap seconds but behaves as if there are *no other* leap seconds.**\nVarious operations will ignore any possible leap second(s)\nexcept when any of the operands were actually leap seconds.\n\nIf you cannot tolerate this behavior,\nyou must use a separate `TimeZone` for the International Atomic Time (TAI).\nTAI is like UTC but has no leap seconds, and thus slightly differs from UTC.\nChrono does not yet provide such implementation, but it is planned.\n\n## Representing Leap Seconds\n\nThe leap second is indicated via fractional seconds more than 1 second.\nThis makes possible to treat a leap second as the prior non-leap second\nif you don't care about sub-second accuracy.\nYou should use the proper formatting to get the raw leap second.\n\nAll methods accepting fractional seconds will accept such values.\n\n```\nuse chrono::{NaiveDate, NaiveTime, Utc};\n\nlet t = NaiveTime::from_hms_milli_opt(8, 59, 59, 1_000).unwrap();\n\nlet dt1 = NaiveDate::from_ymd_opt(2015, 7, 1).unwrap().and_hms_micro_opt(8, 59, 59, 1_000_000).unwrap();\n\nlet dt2 = NaiveDate::from_ymd_opt(2015, 6, 30).unwrap().and_hms_nano_opt(23, 59, 59, 1_000_000_000).unwrap().and_local_timezone(Utc).unwrap();\n# let _ = (t, dt1, dt2);\n```\n\nNote that the leap second can happen anytime given an appropriate time zone;\n2015-07-01 01:23:60 would be a proper leap second if UTC+01:24 had existed.\nPractically speaking, though, by the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.\n\n## Date And Time Arithmetics\n\nAs a concrete example, let's assume that `03:00:60` and `04:00:60` are leap seconds.\nIn reality, of course, leap seconds are separated by at least 6 months.\nWe will also use some intuitive concise notations for the explanation.\n\n`Time + Duration`\n(short for [`NaiveTime::overflowing_add_signed`](#method.overflowing_add_signed)):\n\n- `03:00:00 + 1s = 03:00:01`.\n- `03:00:59 + 60s = 03:01:59`.\n- `03:00:59 + 61s = 03:02:00`.\n- `03:00:59 + 1s = 03:01:00`.\n- `03:00:60 + 1s = 03:01:00`.\n  Note that the sum is identical to the previous.\n- `03:00:60 + 60s = 03:01:59`.\n- `03:00:60 + 61s = 03:02:00`.\n- `03:00:60.1 + 0.8s = 03:00:60.9`.\n\n`Time - Duration`\n(short for [`NaiveTime::overflowing_sub_signed`](#method.overflowing_sub_signed)):\n\n- `03:00:00 - 1s = 02:59:59`.\n- `03:01:00 - 1s = 03:00:59`.\n- `03:01:00 - 60s = 03:00:00`.\n- `03:00:60 - 60s = 03:00:00`.\n  Note that the result is identical to the previous.\n- `03:00:60.7 - 0.4s = 03:00:60.3`.\n- `03:00:60.7 - 0.9s = 03:00:59.8`.\n\n`Time - Time`\n(short for [`NaiveTime::signed_duration_since`](#method.signed_duration_since)):\n\n- `04:00:00 - 03:00:00 = 3600s`.\n- `03:01:00 - 03:00:00 = 60s`.\n- `03:00:60 - 03:00:00 = 60s`.\n  Note that the difference is identical to the previous.\n- `03:00:60.6 - 03:00:59.4 = 1.2s`.\n- `03:01:00 - 03:00:59.8 = 0.2s`.\n- `03:01:00 - 03:00:60.5 = 0.5s`.\n  Note that the difference is larger than the previous,\n  even though the leap second clearly follows the previous whole second.\n- `04:00:60.9 - 03:00:60.1 =\n  (04:00:60.9 - 04:00:00) + (04:00:00 - 03:01:00) + (03:01:00 - 03:00:60.1) =\n  60.9s + 3540s + 0.9s = 3601.8s`.\n\nIn general,\n\n- `Time + Duration` unconditionally equals to `Duration + Time`.\n\n- `Time - Duration` unconditionally equals to `Time + (-Duration)`.\n\n- `Time1 - Time2` unconditionally equals to `-(Time2 - Time1)`.\n\n- Associativity does not generally hold, because\n  `(Time + Duration1) - Duration2` no longer equals to `Time + (Duration1 - Duration2)`\n  for two positive durations.\n\n    - As a special case, `(Time + Duration) - Duration` also does not equal to `Time`.\n\n    - If you can assume that all durations have the same sign, however,\n      then the associativity holds:\n      `(Time + Duration1) + Duration2` equals to `Time + (Duration1 + Duration2)`\n      for two positive durations.\n\n## Reading And Writing Leap Seconds\n\nThe \"typical\" leap seconds on the minute boundary are\ncorrectly handled both in the formatting and parsing.\nThe leap second in the human-readable representation\nwill be represented as the second part being 60, as required by ISO 8601.\n\n```\nuse chrono::{Utc, NaiveDate};\n\nlet dt = NaiveDate::from_ymd_opt(2015, 6, 30).unwrap().and_hms_milli_opt(23, 59, 59, 1_000).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:59:60Z\");\n```\n\nThere are hypothetical leap seconds not on the minute boundary nevertheless supported by Chrono.\nThey are allowed for the sake of completeness and consistency; there were several \"exotic\" time\nzone offsets with fractional minutes prior to UTC after all.\nFor such cases the human-readable representation is ambiguous and would be read back to the next\nnon-leap second.\n\nA `NaiveTime` with a leap second that is not on a minute boundary can only be created from a\n[`DateTime`](crate::DateTime) with fractional minutes as offset, or using\n[`Timelike::with_nanosecond()`].\n\n```\nuse chrono::{FixedOffset, NaiveDate, TimeZone};\n\nlet paramaribo_pre1945 = FixedOffset::east_opt(-13236).unwrap(); // -03:40:36\nlet leap_sec_2015 =\n    NaiveDate::from_ymd_opt(2015, 6, 30).unwrap().and_hms_milli_opt(23, 59, 59, 1_000).unwrap();\nlet dt1 = paramaribo_pre1945.from_utc_datetime(&leap_sec_2015);\nassert_eq!(format!(\"{:?}\", dt1), \"2015-06-30T20:19:24-03:40:36\");\nassert_eq!(format!(\"{:?}\", dt1.time()), \"20:19:24\");\n\nlet next_sec = NaiveDate::from_ymd_opt(2015, 7, 1).unwrap().and_hms_opt(0, 0, 0).unwrap();\nlet dt2 = paramaribo_pre1945.from_utc_datetime(&next_sec);\nassert_eq!(format!(\"{:?}\", dt2), \"2015-06-30T20:19:24-03:40:36\");\nassert_eq!(format!(\"{:?}\", dt2.time()), \"20:19:24\");\n\nassert!(dt1.time() != dt2.time());\nassert!(dt1.time().to_string() == dt2.time().to_string());\n```\n\nSince Chrono alone cannot determine any existence of leap seconds,\n**there is absolutely no guarantee that the leap second read has actually happened**.","links":{"crate::DateTime":"0:2154:2153","`Timelike::with_nanosecond()`":"0:2098:3155"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:1445","a:2:42477:9166-0:2746:2163","a:2:2966:253-0:2746:2163","a:2:32825:244-0:2746:2163","a:2:32882:9016-0:2746:2163","a:2:42476:9167-0:2746:2163","b:0:1983-0:2746:2163","b:2:2754-0:2746:2163","b:2:2744-0:2746:2163","b:2:2748-0:2746:2163","b:2:2441-0:2746:2163","b:2:2444-0:2746:2163","b:2:3558-0:2746:2163","b:2:2759-0:2746:2163","b:5:687-0:2746:2163","b:5:5828-0:2746:2163","0:1490","0:2749","0:1508","0:1492","0:2752","0:1510","0:1521","0:1519","0:2759","0:2757","0:2750","0:1477","0:1503","0:1528","0:1497","0:2754","0:1487","0:1495","0:1500","0:2761","0:1516","0:2762","0:1513","0:1505"]}}},"0:1245:2748":{"id":"0:1245:2748","crate_id":0,"name":"month0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1152,4],"end":[1154,5]},"visibility":"default","docs":"Returns the month number starting from 0.\n\nThe return value ranges from 0 to 11.\n\nSee also the [`NaiveDate::month0`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.month0(), 8);\n```","links":{"`NaiveDate::month0`":"0:1077:2748"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1131":{"id":"0:1131","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2152,0],"end":[2152,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7995:5726","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2966:253-0:2355:2793":{"id":"a:2:2966:253-0:2355:2793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32825:244-0:3206:2188":{"id":"a:2:32825:244-0:3206:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2748-0:2462:3450":{"id":"b:2:2748-0:2462:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:33:2407":{"id":"0:33:2407","crate_id":0,"name":"days","span":{"filename":"src/duration.rs","begin":[101,4],"end":[103,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["days",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[447,0],"end":[479,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:372:60":{"id":"0:372:60","crate_id":0,"name":"default","span":{"filename":"src/datetime/mod.rs","begin":[678,4],"end":[680,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2606":{"id":"0:2606","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[133,22],"end":[133,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2607:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2608":{"id":"0:2608","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[133,29],"end":[133,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1269:3133":{"id":"0:1269:3133","crate_id":0,"name":"second","span":{"filename":"src/naive/datetime/mod.rs","begin":[1478,4],"end":[1480,5]},"visibility":"default","docs":"Returns the second number from 0 to 59.\n\nSee also the [`NaiveTime::second`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.second(), 56);\n```","links":{"`NaiveTime::second`":"0:1480:3133"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:64:1039":{"id":"0:64:1039","crate_id":0,"name":"neg","span":{"filename":"src/duration.rs","begin":[364,4],"end":[370,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1323:725":{"id":"0:1323:725","crate_id":0,"name":"fmt","span":{"filename":"src/naive/datetime/mod.rs","begin":[2088,4],"end":[2092,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1202:3087":{"id":"0:1202:3087","crate_id":0,"name":"parse_from_str","span":{"filename":"src/naive/datetime/mod.rs","begin":[351,4],"end":[355,5]},"visibility":"public","docs":" Parses a string with the specified format string and returns a new `NaiveDateTime`.\n See the [`format::strftime` module](crate::format::strftime)\n on the supported escape sequences.\n\n # Example\n\n ```\n use chrono::{NaiveDateTime, NaiveDate};\n\n let parse_from_str = NaiveDateTime::parse_from_str;\n\n assert_eq!(parse_from_str(\"2015-09-05 23:56:04\", \"%Y-%m-%d %H:%M:%S\"),\n            Ok(NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap()));\n assert_eq!(parse_from_str(\"5sep2015pm012345.6789\", \"%d%b%Y%p%I%M%S%.f\"),\n            Ok(NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_micro_opt(13, 23, 45, 678_900).unwrap()));\n ```\n\n Offset is ignored for the purpose of parsing.\n\n ```\n # use chrono::{NaiveDateTime, NaiveDate};\n # let parse_from_str = NaiveDateTime::parse_from_str;\n assert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),\n            Ok(NaiveDate::from_ymd_opt(2014, 5, 17).unwrap().and_hms_opt(12, 34, 56).unwrap()));\n ```\n\n [Leap seconds](./struct.NaiveTime.html#leap-second-handling) are correctly handled by\n treating any time of the form `hh:mm:60` as a leap second.\n (This equally applies to the formatting, so the round trip is possible.)\n\n ```\n # use chrono::{NaiveDateTime, NaiveDate};\n # let parse_from_str = NaiveDateTime::parse_from_str;\n assert_eq!(parse_from_str(\"2015-07-01 08:59:60.123\", \"%Y-%m-%d %H:%M:%S%.f\"),\n            Ok(NaiveDate::from_ymd_opt(2015, 7, 1).unwrap().and_hms_milli_opt(8, 59, 59, 1_123).unwrap()));\n ```\n\n Missing seconds are assumed to be zero,\n but out-of-bound times or insufficient fields are errors otherwise.\n\n ```\n # use chrono::{NaiveDateTime, NaiveDate};\n # let parse_from_str = NaiveDateTime::parse_from_str;\n assert_eq!(parse_from_str(\"94/9/4 7:15\", \"%y/%m/%d %H:%M\"),\n            Ok(NaiveDate::from_ymd_opt(1994, 9, 4).unwrap().and_hms_opt(7, 15, 0).unwrap()));\n\n assert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());\n assert!(parse_from_str(\"94/9/4 12\", \"%y/%m/%d %H\").is_err());\n assert!(parse_from_str(\"94/9/4 17:60\", \"%y/%m/%d %H:%M\").is_err());\n assert!(parse_from_str(\"94/9/4 24:00:00\", \"%y/%m/%d %H:%M:%S\").is_err());\n ```\n\n All parsed fields should be consistent to each other, otherwise it's an error.\n\n ```\n # use chrono::NaiveDateTime;\n # let parse_from_str = NaiveDateTime::parse_from_str;\n let fmt = \"%Y-%m-%d %H:%M:%S = UNIX timestamp %s\";\n assert!(parse_from_str(\"2001-09-09 01:46:39 = UNIX timestamp 999999999\", fmt).is_ok());\n assert!(parse_from_str(\"1970-01-01 00:00:00 = UNIX timestamp 1\", fmt).is_err());\n ```\n\n Years before 1 BCE or after 9999 CE, require an initial sign\n\n```\n # use chrono::NaiveDateTime;\n # let parse_from_str = NaiveDateTime::parse_from_str;\n let fmt = \"%Y-%m-%d %H:%M:%S\";\n assert!(parse_from_str(\"10000-09-09 01:46:39\", fmt).is_err());\n assert!(parse_from_str(\"+10000-09-09 01:46:39\", fmt).is_ok());\n```","links":{"crate::format::strftime":"0:860:3302"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2441-0:2161:2604":{"id":"b:2:2441-0:2161:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2748-0:3226:2187":{"id":"b:2:2748-0:3226:2187","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2633:468":{"id":"0:2633:468","crate_id":0,"name":"cmp","span":{"filename":"src/naive/date.rs","begin":[191,42],"end":[191,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1535-0:2595:2179":{"id":"0:1535-0:2595:2179","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[13,85],"end":[13,94]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::date::NaiveWeek","name":"NaiveWeek","id":"0:2595:2179","glob":false}}},"0:2733:668":{"id":"0:2733:668","crate_id":0,"name":"eq","span":{"filename":"src/naive/isoweek.rs","begin":[19,9],"end":[19,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1929":{"id":"0:1929","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[191,0],"end":[204,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1931:1700"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5828-0:3091:2183":{"id":"b:5:5828-0:3091:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5826:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5830:1605"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3148":{"id":"0:3148","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[230,16],"end":[230,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3149:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1321:725":{"id":"0:1321:725","crate_id":0,"name":"fmt","span":{"filename":"src/naive/datetime/mod.rs","begin":[2055,4],"end":[2059,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42476:9167-0:2764:2159":{"id":"a:2:42476:9167-0:2764:2159","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2740":{"id":"0:2740","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,41],"end":[19,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2555:461":{"id":"0:2555:461","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[367,16],"end":[367,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1298":{"id":"0:1298","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1853,0],"end":[1862,1]},"visibility":"default","docs":"Subtract `std::time::Duration` from `NaiveDateTime`.\n\nAs a part of Chrono's [leap second handling] the subtraction assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDateTime::checked_sub_signed`] to get an `Option` instead.","links":{"`NaiveDateTime::checked_sub_signed`":"0:1223:2713"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1299:206","0:1300:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1585:7356":{"id":"0:1585:7356","crate_id":0,"name":"west","span":{"filename":"src/offset/fixed.rs","begin":[77,4],"end":[79,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.\n\nPanics on the out-of-bound `secs`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `west_opt()` instead\")]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `west_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["secs",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42477:9166-0:2112:129":{"id":"a:2:42477:9166-0:2112:129","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:102-0:3040:2149":{"id":"0:102-0:3040:2149","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[499,4],"end":[499,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"import":{"source":"crate::Local","name":"Local","id":"0:3040:2149","glob":false}}},"b:2:2444-0:2134:2146":{"id":"b:2:2444-0:2134:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2966:253-0:2488:3453":{"id":"a:2:2966:253-0:2488:3453","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:34:2408":{"id":"0:34:2408","crate_id":0,"name":"try_days","span":{"filename":"src/duration.rs","begin":[109,4],"end":[111,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nReturns `None` when the duration is out of bounds.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["days",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2158":{"id":"0:2158","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[52,9],"end":[52,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1934:2165","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:2160:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3074":{"id":"0:3074","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,16],"end":[41,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2754-0:2343:3375":{"id":"b:2:2754-0:2343:3375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1994:134":{"id":"0:1994:134","crate_id":0,"name":"Err","span":{"filename":"src/round.rs","begin":[148,4],"end":[148,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:2966:253-0:2746:2163":{"id":"a:2:2966:253-0:2746:2163","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:507:1565":{"id":"0:507:1565","crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1451,4],"end":[1455,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2966:253-0:2343:3375":{"id":"a:2:2966:253-0:2343:3375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1020:5309":{"id":"0:1020:5309","crate_id":0,"name":"from_weekday_of_month","span":{"filename":"src/naive/date.rs","begin":[499,4],"end":[506,5]},"visibility":"public","docs":"Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\nsince the beginning of the given month. For instance, if you want the 2nd Friday of March\n2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.\n\n`n` is 1-indexed.\n\n# Panics\n\nPanics if the specified day does not exist in that month, on invalid values for `month` or\n`n`, or if `year` is out of range for `NaiveDate`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_weekday_of_month_opt()` instead\")]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_weekday_of_month_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["weekday",{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["n",{"primitive":"u8"}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:48:2439":{"id":"0:48:2439","crate_id":0,"name":"num_seconds","span":{"filename":"src/duration.rs","begin":[215,4],"end":[222,5]},"visibility":"public","docs":"Returns the total number of whole seconds in the duration.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:69:206":{"id":"0:69:206","crate_id":0,"name":"Output","span":{"filename":"src/duration.rs","begin":[382,4],"end":[382,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2203:2186":{"id":"0:2203:2186","crate_id":0,"name":"month","span":{"filename":"src/format/parsed.rs","begin":[58,4],"end":[58,26]},"visibility":"public","docs":"Month (1--12).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"0:936:2511":{"id":"0:936:2511","crate_id":0,"name":"description","span":{"filename":"src/format/mod.rs","begin":[435,4],"end":[437,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1503":{"id":"0:1503","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1289,0],"end":[1294,1]},"visibility":"default","docs":"Subtract-assign `chrono::Duration` from `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the subtraction ignores integral number of days.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:33967:2353","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1504:1566"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2441-0:2488:3453":{"id":"b:2:2441-0:2488:3453","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2444-0:3152:2156":{"id":"b:2:2444-0:3152:2156","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1904:7289":{"id":"0:1904:7289","crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/utc.rs","begin":[126,4],"end":[128,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2744-0:2488:3453":{"id":"b:2:2744-0:2488:3453","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1234:2923":{"id":"0:1234:2923","crate_id":0,"name":"and_local_timezone","span":{"filename":"src/naive/datetime/mod.rs","begin":[1054,4],"end":[1056,5]},"visibility":"public","docs":"Converts the `NaiveDateTime` into the timezone-aware `DateTime<Tz>`\nwith the provided timezone, if possible.\n\nThis can fail in cases where the local time represented by the `NaiveDateTime`\nis not a valid local timestamp in the target timezone due to an offset transition\nfor example if the target timezone had a change from +00:00 to +01:00\noccuring at 2015-09-05 22:59:59, then a local time of 2015-09-05 23:56:04\ncould never occur. Similarly, if the offset transitioned in the opposite direction\nthen there would be two local times of 2015-09-05 23:56:04, one at +00:00 and one\nat +01:00.\n\n# Example\n\n```\nuse chrono::{NaiveDate, FixedOffset};\nlet hour = 3600;\nlet tz = FixedOffset::east_opt(5 * hour).unwrap();\nlet dt = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap().and_local_timezone(tz).unwrap();\nassert_eq!(dt.timezone(), tz);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["tz",{"generic":"Tz"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1514:206":{"id":"0:1514:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1384,4],"end":[1384,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:12994:36506":{"id":"2:12994:36506","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:910:7567"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5828-0:2675:2162":{"id":"b:5:5828-0:2675:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5826:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5830:1605"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2754-0:2620:2161":{"id":"b:2:2754-0:2620:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2459":{"id":"0:2459","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[280,44],"end":[280,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2460:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1097":{"id":"0:1097","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1936,0],"end":[1942,1]},"visibility":"default","docs":"Add `Months` to `NaiveDate`.\n\nThe result will be clamped to valid days in the resulting month, see `checked_add_months` for\ndetails.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using `NaiveDate::checked_add_months` to get an `Option` instead.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Months};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(1), from_ymd(2014, 2, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(11), from_ymd(2014, 12, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(12), from_ymd(2015, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(13), from_ymd(2015, 2, 1));\nassert_eq!(from_ymd(2014, 1, 31) + Months::new(1), from_ymd(2014, 2, 28));\nassert_eq!(from_ymd(2020, 1, 31) + Months::new(1), from_ymd(2020, 2, 29));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1098:206","0:1099:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2668:668":{"id":"0:2668:668","crate_id":0,"name":"eq","span":{"filename":"src/naive/date.rs","begin":[2132,35],"end":[2132,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:735:4029":{"id":"0:735:4029","crate_id":0,"name":"to_datetime_with_timezone","span":{"filename":"src/format/parsed.rs","begin":[653,4],"end":[696,5]},"visibility":"public","docs":"Returns a parsed timezone-aware date and time out of given fields,\nwith an additional `TimeZone` used to interpret and validate the local date.\n\nThis method is able to determine the combined date and time\nfrom date and time fields or a single [`timestamp`](#structfield.timestamp) field,\nplus a time zone offset.\nEither way those fields have to be consistent to each other.\nIf parsed fields include an UTC offset, it also has to be consistent to\n[`offset`](#structfield.offset).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["tz",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Tz"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:332:2212":{"id":"0:332:2212","crate_id":0,"name":"time","span":{"filename":"src/datetime/mod.rs","begin":[179,4],"end":[181,5]},"visibility":"public","docs":"Retrieves the time component.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:598":{"id":"0:598","crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[120,0],"end":[140,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8051:176","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"super::Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["0:602:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3558-0:3040:2149":{"id":"b:2:3558-0:3040:2149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2444-0:3047:2160":{"id":"b:2:2444-0:3047:2160","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:230:668":{"id":"0:230:668","crate_id":0,"name":"eq","span":{"filename":"src/date.rs","begin":[473,4],"end":[475,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2640:725":{"id":"0:2640:725","crate_id":0,"name":"fmt","span":{"filename":"src/naive/date.rs","begin":[2096,9],"end":[2096,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2205:3597":{"id":"0:2205:3597","crate_id":0,"name":"week_from_mon","span":{"filename":"src/format/parsed.rs","begin":[66,4],"end":[66,34]},"visibility":"public","docs":"Week number, where the week 1 starts at the first Monday of January\n(0--53, 1--53 or 1--52 depending on the year).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"0:3206:2188":{"id":"0:3206:2188","crate_id":0,"name":"Months","span":{"filename":"src/month.rs","begin":[229,0],"end":[229,34]},"visibility":"public","docs":"A duration in calendar months","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2054","a:2:42477:9166-0:3206:2188","a:2:2966:253-0:3206:2188","a:2:32825:244-0:3206:2188","a:2:32882:9016-0:3206:2188","a:2:42476:9167-0:3206:2188","b:2:2754-0:3206:2188","b:2:2744-0:3206:2188","b:2:2748-0:3206:2188","b:2:2441-0:3206:2188","b:2:2444-0:3206:2188","b:2:3558-0:3206:2188","b:2:2759-0:3206:2188","b:5:687-0:3206:2188","0:3212","0:3222","0:1308","0:3224","0:486","0:1097","0:3220","0:508","0:3216","0:1292","0:3214","0:3219","0:3211","0:3209","0:1100"]}}},"2:12990:34278":{"id":"2:12990:34278","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:105-0:2154:2153":{"id":"0:105-0:2154:2153","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[503,20],"end":[503,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::DateTime","name":"DateTime","id":"0:2154:2153","glob":false}}},"b:2:2744-0:2600:2177":{"id":"b:2:2744-0:2600:2177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42477:9166-0:2508:171":{"id":"a:2:42477:9166-0:2508:171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2744-0:2355:2793":{"id":"b:2:2744-0:2355:2793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:518:206":{"id":"0:518:206","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1489,4],"end":[1489,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:591":{"id":"0:591","crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[53,0],"end":[117,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8051:176","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"super::Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["0:595:1048","0:596:2736"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2554":{"id":"0:2554","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[367,16],"end":[367,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2555:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1605-0:2764:2159":{"id":"0:1605-0:2764:2159","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[30,0],"end":[30,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::fixed::FixedOffset","name":"FixedOffset","id":"0:2764:2159","glob":false}}},"0:1466:2733":{"id":"0:1466:2733","crate_id":0,"name":"format_with_items","span":{"filename":"src/naive/time/mod.rs","begin":[815,4],"end":[821,5]},"visibility":"public","docs":"Formats the time with the specified formatting items.\nOtherwise it is the same as the ordinary [`format`](#method.format) method.\n\nThe `Iterator` of items should be `Clone`able,\nsince the resulting `DelayedFormat` value may be formatted multiple times.\n\n# Example\n\n```\nuse chrono::NaiveTime;\nuse chrono::format::strftime::StrftimeItems;\n\nlet fmt = StrftimeItems::new(\"%H:%M:%S\");\nlet t = NaiveTime::from_hms_opt(23, 56, 4).unwrap();\nassert_eq!(t.format_with_items(fmt.clone()).to_string(), \"23:56:04\");\nassert_eq!(t.format(\"%H:%M:%S\").to_string(),             \"23:56:04\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveTime;\n# use chrono::format::strftime::StrftimeItems;\n# let fmt = StrftimeItems::new(\"%H:%M:%S\").clone();\n# let t = NaiveTime::from_hms_opt(23, 56, 4).unwrap();\nassert_eq!(format!(\"{}\", t.format_with_items(fmt)), \"23:56:04\");\n```","links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8051:176","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2407:789":{"id":"0:2407:789","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[171,38],"end":[171,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42476:9167-0:3143:2185":{"id":"a:2:42476:9167-0:3143:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2398:461":{"id":"0:2398:461","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[171,9],"end":[171,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3213:725":{"id":"0:3213:725","crate_id":0,"name":"fmt","span":{"filename":"src/month.rs","begin":[227,22],"end":[227,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2469:3469":{"id":"0:2469:3469","crate_id":0,"name":"OptionalMinutes","span":{"filename":"src/format/mod.rs","begin":[306,4],"end":[306,19]},"visibility":"default","docs":"Format offset from UTC as hours, and optionally with minutes.\nAny seconds will be rounded to the nearest minute.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:204:2750":{"id":"0:204:2750","crate_id":0,"name":"day0","span":{"filename":"src/date.rs","begin":[412,4],"end":[414,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2643:461":{"id":"0:2643:461","crate_id":0,"name":"clone","span":{"filename":"src/naive/date.rs","begin":[2096,22],"end":[2096,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:511:1565":{"id":"0:511:1565","crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1474,4],"end":[1476,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3017:2352","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:681:3916":{"id":"0:681:3916","crate_id":0,"name":"set_year","span":{"filename":"src/format/parsed.rs","begin":[134,4],"end":[136,5]},"visibility":"public","docs":"Tries to set the [`year`](#structfield.year) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:920-0:2196:2794":{"id":"0:920-0:2196:2794","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[69,0],"end":[69,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"parsed::Parsed","name":"Parsed","id":"0:2196:2794","glob":false}}},"a:2:42476:9167-0:3226:2187":{"id":"a:2:42476:9167-0:3226:2187","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:466:789":{"id":"0:466:789","crate_id":0,"name":"hash","span":{"filename":"src/datetime/mod.rs","begin":[1238,4],"end":[1240,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2966:253-0:3143:2185":{"id":"a:2:2966:253-0:3143:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2052:8296":{"id":"0:2052:8296","crate_id":0,"name":"from_i64","span":{"filename":"src/month.rs","begin":[202,4],"end":[204,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["n",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:352:2931":{"id":"0:352:2931","crate_id":0,"name":"checked_sub_days","span":{"filename":"src/datetime/mod.rs","begin":[454,4],"end":[459,5]},"visibility":"public","docs":"Subtract a duration in [`Days`] from the date part of the `DateTime`.\n\n# Errors\n\nReturns `None` if:\n- The resulting date would be out of range.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`Days`":"0:2600:2177"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12903:4122":{"id":"2:12903:4122","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:8766"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2415":{"id":"0:2415","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[255,23],"end":[255,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3558-0:2134:2146":{"id":"b:2:3558-0:2134:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:875:1048":{"id":"0:875:1048","crate_id":0,"name":"new","span":{"filename":"src/format/strftime.rs","begin":[181,4],"end":[190,5]},"visibility":"public","docs":"Creates a new parsing iterator from the `strftime`-like format string.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:519:1565":{"id":"0:519:1565","crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1492,4],"end":[1494,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:410:2747":{"id":"0:410:2747","crate_id":0,"name":"year","span":{"filename":"src/datetime/mod.rs","begin":[967,4],"end":[969,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3558-0:2147:2148":{"id":"b:2:3558-0:2147:2148","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1030:2931":{"id":"0:1030:2931","crate_id":0,"name":"checked_sub_days","span":{"filename":"src/naive/date.rs","begin":[780,4],"end":[785,5]},"visibility":"public","docs":"Subtract a duration in [`Days`] from the date\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\n# use chrono::{NaiveDate, Days};\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_sub_days(Days::new(6)),\n    Some(NaiveDate::from_ymd_opt(2022, 2, 14).unwrap())\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_sub_days(Days::new(1000000000000)),\n    None\n);\n```","links":{"`Days`":"0:2600:2177"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:328:2639":{"id":"0:328:2639","crate_id":0,"name":"from_utc","span":{"filename":"src/datetime/mod.rs","begin":[107,4],"end":[109,5]},"visibility":"public","docs":"Makes a new `DateTime` from its components: a `NaiveDateTime` in UTC and an `Offset`.","links":{},"attrs":["#[inline]","#[must_use]","#[deprecated(since = \"0.4.27\", note =\n\"Use TimeZone::from_utc_datetime() or DateTime::from_naive_utc_and_offset instead\")]"],"deprecation":{"since":"0.4.27","note":"Use TimeZone::from_utc_datetime() or DateTime::from_naive_utc_and_offset instead"},"inner":{"function":{"decl":{"inputs":[["datetime",{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["offset",{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1934:2165","args":null}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1039:2675":{"id":"0:1039:2675","crate_id":0,"name":"and_hms_micro_opt","span":{"filename":"src/naive/date.rs","begin":[975,4],"end":[984,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.\n\nThe microsecond part is allowed to exceed 1,000,000,000 in order to represent a [leap second](\n./struct.NaiveTime.html#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute, second and/or microsecond.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nassert!(d.and_hms_micro_opt(12, 34, 56,   789_012).is_some());\nassert!(d.and_hms_micro_opt(12, 34, 59, 1_789_012).is_some()); // leap second\nassert!(d.and_hms_micro_opt(12, 34, 59, 2_789_012).is_none());\nassert!(d.and_hms_micro_opt(12, 34, 60,   789_012).is_none());\nassert!(d.and_hms_micro_opt(12, 60, 56,   789_012).is_none());\nassert!(d.and_hms_micro_opt(24, 34, 56,   789_012).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:161:2673":{"id":"0:161:2673","crate_id":0,"name":"and_hms_micro","span":{"filename":"src/date.rs","begin":[152,4],"end":[154,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute, second and/or microsecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use and_hms_micro_opt() instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use and_hms_micro_opt() instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:2112:129":{"id":"b:2:2754-0:2112:129","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:687:3923":{"id":"0:687:3923","crate_id":0,"name":"set_isoyear","span":{"filename":"src/format/parsed.rs","begin":[158,4],"end":[160,5]},"visibility":"public","docs":"Tries to set the [`isoyear`](#structfield.isoyear) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:539:134":{"id":"0:539:134","crate_id":0,"name":"Err","span":{"filename":"src/datetime/mod.rs","begin":[1612,4],"end":[1612,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1927:2675":{"id":"0:1927:2675","crate_id":0,"name":"and_hms_micro_opt","span":{"filename":"src/offset/mod.rs","begin":[153,4],"end":[166,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:80:620":{"id":"0:80:620","crate_id":0,"name":"div","span":{"filename":"src/duration.rs","begin":[418,4],"end":[432,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2241":{"id":"0:2241","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[165,16],"end":[165,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2243:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:417:2184":{"id":"0:417:2184","crate_id":0,"name":"weekday","span":{"filename":"src/datetime/mod.rs","begin":[995,4],"end":[997,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2308:2178":{"id":"0:2308:2178","crate_id":0,"name":"IsoWeek","span":{"filename":"src/format/mod.rs","begin":[125,4],"end":[125,11]},"visibility":"default","docs":"Week number in the ISO week date (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:408":{"id":"0:408","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[965,0],"end":[1114,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["year_ce","num_days_from_ce"],"trait":{"name":"Datelike","id":"0:2070:2155","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:410:2747","0:411:2186","0:412:2748","0:413:2749","0:414:2750","0:415:2751","0:416:2752","0:417:2184","0:418:2753","0:419:2754","0:421:2755","0:423:2756","0:425:2757","0:427:2758","0:429:2759","0:431:2760"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:55:2464":{"id":"0:55:2464","crate_id":0,"name":"abs","span":{"filename":"src/duration.rs","begin":[300,4],"end":[306,5]},"visibility":"public","docs":"Returns the duration as an absolute (non-negative) value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:461":{"id":"0:461","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1231,0],"end":[1235,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2540:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:463:468"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2441-0:2409:3432":{"id":"b:2:2441-0:2409:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3558-0:2656:5110":{"id":"b:2:3558-0:2656:5110","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32825:244-0:2620:2161":{"id":"a:2:32825:244-0:2620:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:368:2789":{"id":"0:368:2789","crate_id":0,"name":"UNIX_EPOCH","span":{"filename":"src/datetime/mod.rs","begin":[667,4],"end":[667,91]},"visibility":"public","docs":"The Unix Epoch, 1970-01-01 00:00:00 UTC.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:32882:9016-0:2764:2159":{"id":"a:2:32882:9016-0:2764:2159","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:395:3074":{"id":"0:395:3074","crate_id":0,"name":"parse_from_rfc3339","span":{"filename":"src/datetime/mod.rs","begin":[820,4],"end":[827,5]},"visibility":"public","docs":"Parses an RFC 3339 date-and-time string into a `DateTime<FixedOffset>` value.\n\nParses all valid RFC 3339 values (as well as the subset of valid ISO 8601 values that are\nalso valid RFC 3339 date-and-time values) and returns a new [`DateTime`] with a\n[`FixedOffset`] corresponding to the parsed timezone. While RFC 3339 values come in a wide\nvariety of shapes and sizes, `1996-12-19T16:39:57-08:00` is an example of the most commonly\nencountered variety of RFC 3339 formats.\n\nWhy isn't this named `parse_from_iso8601`? That's because ISO 8601 allows representing\nvalues in a wide range of formats, only some of which represent actual date-and-time\ninstances (rather than periods, ranges, dates, or times). Some valid ISO 8601 values are\nalso simultaneously valid RFC 3339 values, but not all RFC 3339 values are valid ISO 8601\nvalues (or the other way around).","links":{"`DateTime`":"0:2154:2153","`FixedOffset`":"0:2764:2159"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1928:2684":{"id":"0:1928:2684","crate_id":0,"name":"and_hms_nano_opt","span":{"filename":"src/offset/mod.rs","begin":[175,4],"end":[188,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2744-0:2764:2159":{"id":"b:2:2744-0:2764:2159","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2748-0:3091:2183":{"id":"b:2:2748-0:3091:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:595:1048":{"id":"0:595:1048","crate_id":0,"name":"new","span":{"filename":"src/format/formatting.rs","begin":[56,4],"end":[65,5]},"visibility":"public","docs":"Makes a new `DelayedFormat` value out of local date and time.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["date",{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["time",{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2062-0:3226:2187":{"id":"0:2062-0:3226:2187","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[554,0],"end":[554,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"month::ParseMonthError","name":"ParseMonthError","id":"0:3226:2187","glob":false}}},"0:2169:725":{"id":"0:2169:725","crate_id":0,"name":"fmt","span":{"filename":"src/format/formatting.rs","begin":[35,9],"end":[35,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:952-0:931:2175":{"id":"0:952-0:931:2175","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[529,29],"end":[529,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"format::ParseResult","name":"ParseResult","id":"0:931:2175","glob":false}}},"2:12913:9553":{"id":"2:12913:9553","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42354:198","prim@char":"1:12055:457","self::pattern":"2:12558:8766"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:8782","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:252:206":{"id":"0:252:206","crate_id":0,"name":"Output","span":{"filename":"src/date.rs","begin":[515,4],"end":[515,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:497:1565":{"id":"0:497:1565","crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1394,4],"end":[1398,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2611:789":{"id":"0:2611:789","crate_id":0,"name":"hash","span":{"filename":"src/naive/date.rs","begin":[133,33],"end":[133,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2412:725":{"id":"0:2412:725","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[255,9],"end":[255,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1239:2789":{"id":"0:1239:2789","crate_id":0,"name":"UNIX_EPOCH","span":{"filename":"src/naive/datetime/mod.rs","begin":[1080,4],"end":[1081,82]},"visibility":"public","docs":"The Unix Epoch, 1970-01-01 00:00:00.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42476:9167-0:2600:2177":{"id":"a:2:42476:9167-0:2600:2177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3131":{"id":"0:3131","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,9],"end":[32,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3132:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3221:668":{"id":"0:3221:668","crate_id":0,"name":"eq","span":{"filename":"src/month.rs","begin":[227,39],"end":[227,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2012-0:1980:2152":{"id":"0:2012-0:1980:2152","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[545,46],"end":[545,57]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"round::SubsecRound","name":"SubsecRound","id":"0:1980:2152","glob":false}}},"0:1533-0:2637:5109":{"id":"0:1533-0:2637:5109","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[13,38],"end":[13,59]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::date::NaiveDateDaysIterator","name":"NaiveDateDaysIterator","id":"0:2637:5109","glob":false}}},"0:2683":{"id":"0:2683","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[76,24],"end":[76,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2684:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2744-0:2746:2163":{"id":"b:2:2744-0:2746:2163","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:339:2900":{"id":"0:339:2900","crate_id":0,"name":"timestamp_subsec_micros","span":{"filename":"src/datetime/mod.rs","begin":[311,4],"end":[313,5]},"visibility":"public","docs":"Returns the number of microseconds since the last second boundary.\n\nIn event of a leap second this may exceed 999,999.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:945:134":{"id":"0:945:134","crate_id":0,"name":"Err","span":{"filename":"src/format/mod.rs","begin":[476,4],"end":[476,33]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:546":{"id":"0:546","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1647,0],"end":[1658,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"std::time::SystemTime","id":"1:9163:2788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:548:752"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2090:2653":{"id":"0:2090:2653","crate_id":0,"name":"hour","span":{"filename":"src/traits.rs","begin":[269,4],"end":[269,26]},"visibility":"default","docs":"Returns the hour number from 0 to 23.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:100:1180":{"id":"0:100:1180","crate_id":0,"name":"prelude","span":{"filename":"src/lib.rs","begin":[495,0],"end":[495,15]},"visibility":"public","docs":"A convenience module appropriate for glob imports (`use chrono::prelude::*;`).","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:101-0:2147:2148","0:102-0:3040:2149","0:103-0:1980:2152","0:105-0:2154:2153","0:106-0:2170:2154","0:108-0:2070:2155","0:109-0:3152:2156","0:110-0:2089:2157","0:111-0:3108:2158","0:113-0:2764:2159","0:114-0:3047:2160","0:116-0:2620:2161","0:117-0:2675:2162","0:118-0:2746:2163","0:120-0:1932:2164","0:121-0:1934:2165"],"is_stripped":false}}},"0:366:3007":{"id":"0:366:3007","crate_id":0,"name":"from_timestamp_millis","span":{"filename":"src/datetime/mod.rs","begin":[654,4],"end":[656,5]},"visibility":"public","docs":"Makes a new [`DateTime<Utc>`] from the number of non-leap milliseconds\nsince January 1, 1970 0:00:00.000 UTC (aka \"UNIX timestamp\").\n\nThis is guaranteed to round-trip with regard to [`timestamp_millis`](DateTime::timestamp_millis).\n\nIf you need to create a `DateTime` with a [`TimeZone`] different from [`Utc`], use\n[`TimeZone::timestamp_millis_opt`] or [`DateTime::with_timezone`].\n\n# Errors\n\nReturns `None` on out-of-range number of milliseconds, otherwise returns `Some(DateTime {...})`.\n\n# Example\n\n```\nuse chrono::{DateTime, Utc};\n\nlet dt: DateTime<Utc> = DateTime::<Utc>::from_timestamp_millis(947638923004).expect(\"invalid timestamp\");\n\nassert_eq!(dt.to_string(), \"2000-01-12 01:02:03.004 UTC\");\nassert_eq!(DateTime::from_timestamp_millis(dt.timestamp_millis()).unwrap(), dt);\n```","links":{"`Utc`":"0:3047:2160","`TimeZone::timestamp_millis_opt`":"0:1947:3234","`DateTime::with_timezone`":"0:343:2705","`TimeZone`":"0:1934:2165","`DateTime<Utc>`":"0:2154:2153","DateTime::timestamp_millis":"0:334:2864"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["millis",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32882:9016-0:2637:5109":{"id":"a:2:32882:9016-0:2637:5109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2656:5110":{"id":"0:2656:5110","crate_id":0,"name":"NaiveDateWeeksIterator","span":{"filename":"src/naive/date.rs","begin":[2133,0],"end":[2135,1]},"visibility":"public","docs":"Iterator over `NaiveDate` with a step size of one week.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42477:9166-0:2656:5110","a:2:2966:253-0:2656:5110","a:2:32825:244-0:2656:5110","a:2:32882:9016-0:2656:5110","a:2:42476:9167-0:2656:5110","b:2:2754-0:2656:5110","b:2:2744-0:2656:5110","b:2:2748-0:2656:5110","b:2:2441-0:2656:5110","b:2:2444-0:2656:5110","b:2:3558-0:2656:5110","b:2:7908-0:2656:5110","b:2:2759-0:2656:5110","b:5:687-0:2656:5110","0:2669","0:2673","0:2666","0:1132","0:2658","0:2660","0:2661","0:2663","0:2667","0:1131","0:1134","0:2671","0:1127"]}}},"0:2138:725":{"id":"0:2138:725","crate_id":0,"name":"fmt","span":{"filename":"src/duration.rs","begin":[487,9],"end":[487,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1588:7362":{"id":"0:1588:7362","crate_id":0,"name":"utc_minus_local","span":{"filename":"src/offset/fixed.rs","begin":[115,4],"end":[117,5]},"visibility":"public","docs":"Returns the number of seconds to add to convert from the local time to UTC.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3226:2187":{"id":"0:3226:2187","crate_id":0,"name":"ParseMonthError","span":{"filename":"src/month.rs","begin":[246,0],"end":[248,1]},"visibility":"public","docs":"An error resulting from reading `<Month>` value with `FromStr`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42477:9166-0:3226:2187","a:2:2966:253-0:3226:2187","a:2:32825:244-0:3226:2187","a:2:32882:9016-0:3226:2187","a:2:42476:9167-0:3226:2187","b:2:2754-0:3226:2187","b:2:2744-0:3226:2187","b:2:2748-0:3226:2187","b:2:2441-0:3226:2187","b:2:2444-0:3226:2187","b:2:3558-0:3226:2187","b:2:2759-0:3226:2187","b:5:687-0:3226:2187","b:5:5828-0:3226:2187","0:2057","0:2058","0:3231","0:3228","0:3233","0:2060","0:3230"]}}},"2:12870:41053":{"id":"2:12870:41053","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12868:41052"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:54:2462":{"id":"0:54:2462","crate_id":0,"name":"checked_sub","span":{"filename":"src/duration.rs","begin":[281,4],"end":[296,5]},"visibility":"public","docs":"Subtract two durations, returning `None` if overflow occurred.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:181:2720":{"id":"0:181:2720","crate_id":0,"name":"naive_utc","span":{"filename":"src/date.rs","begin":[296,4],"end":[298,5]},"visibility":"public","docs":"Returns a view to the naive UTC date.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:333:2857":{"id":"0:333:2857","crate_id":0,"name":"timestamp","span":{"filename":"src/datetime/mod.rs","begin":[199,4],"end":[201,5]},"visibility":"public","docs":"Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC\n(aka \"UNIX timestamp\").\n\nThe reverse operation of creating a [`DateTime`] from a timestamp can be performed\nusing [`from_timestamp`](DateTime::from_timestamp) or [`TimeZone::timestamp_opt`].\n\n```\nuse chrono::{DateTime, TimeZone, Utc};\n\nlet dt: DateTime<Utc> = Utc.with_ymd_and_hms(2015, 5, 15, 0, 0, 0).unwrap();\nassert_eq!(dt.timestamp(), 1431648000);\n\nassert_eq!(DateTime::from_timestamp(dt.timestamp(), dt.timestamp_subsec_nanos()).unwrap(), dt);\n```","links":{"DateTime::from_timestamp":"0:365:2995","`DateTime`":"0:2154:2153","`TimeZone::timestamp_opt`":"0:1945:3229"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:455":{"id":"0:455","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1208,0],"end":[1208,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:701:3937":{"id":"0:701:3937","crate_id":0,"name":"set_weekday","span":{"filename":"src/format/parsed.rs","begin":[212,4],"end":[214,5]},"visibility":"public","docs":"Tries to set the [`weekday`](#structfield.weekday) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2744-0:2462:3450":{"id":"b:2:2744-0:2462:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3197":{"id":"0:3197","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,37],"end":[31,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3198:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3558-0:2343:3375":{"id":"b:2:3558-0:2343:3375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3558-0:2444:3447":{"id":"b:2:3558-0:2444:3447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:544":{"id":"0:544","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1640,0],"end":[1644,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"SystemTime","id":"1:9163:2788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:545:752"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1206:2166":{"id":"0:1206:2166","crate_id":0,"name":"date","span":{"filename":"src/naive/datetime/mod.rs","begin":[393,4],"end":[395,5]},"visibility":"public","docs":"Retrieves a date component.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(9, 10, 11).unwrap();\nassert_eq!(dt.date(), NaiveDate::from_ymd_opt(2016, 7, 8).unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:3060:2180":{"id":"b:2:2754-0:3060:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2731":{"id":"0:2731","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,9],"end":[19,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2409:3432":{"id":"0:2409:3432","crate_id":0,"name":"InternalFixed","span":{"filename":"src/format/mod.rs","begin":[256,0],"end":[258,1]},"visibility":"public","docs":"An opaque type representing fixed-format item types for internal uses only.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42477:9166-0:2409:3432","a:2:2966:253-0:2409:3432","a:2:32825:244-0:2409:3432","a:2:32882:9016-0:2409:3432","a:2:42476:9167-0:2409:3432","b:2:2754-0:2409:3432","b:2:2744-0:2409:3432","b:2:2748-0:2409:3432","b:2:2441-0:2409:3432","b:2:2444-0:2409:3432","b:2:3558-0:2409:3432","b:2:2759-0:2409:3432","b:5:687-0:2409:3432","0:2415","0:2413","0:2420","0:2416","0:2411","0:2418"]}}},"b:2:2748-0:2746:2163":{"id":"b:2:2748-0:2746:2163","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:59:2470":{"id":"0:59:2470","crate_id":0,"name":"is_zero","span":{"filename":"src/duration.rs","begin":[328,4],"end":[330,5]},"visibility":"public","docs":"Returns `true` if the duration equals `Duration::zero()`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1301":{"id":"0:1301","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1876,0],"end":[1881,1]},"visibility":"default","docs":"Subtract-assign `chrono::Duration` from `NaiveDateTime`.\n\nThis is the same as the addition with a negated `Duration`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDateTime::checked_sub_signed`] to get an `Option` instead.","links":{"`NaiveDateTime::checked_sub_signed`":"0:1223:2713"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:33967:2353","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1302:1566"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:324:2171":{"id":"0:324:2171","crate_id":0,"name":"MAX_DATETIME","span":{"filename":"src/datetime/mod.rs","begin":[69,0],"end":[69,65]},"visibility":"public","docs":"The maximum possible `DateTime<Utc>`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use DateTime::MAX_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use DateTime::MAX_UTC instead"},"inner":{"constant":{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"expr":"DateTime<Utc>::MAX_UTC","value":null,"is_literal":false}}},"0:2171:3639":{"id":"0:2171:3639","crate_id":0,"name":"Secs","span":{"filename":"src/format/formatting.rs","begin":[513,4],"end":[513,8]},"visibility":"default","docs":"Format whole seconds only, with no decimal point nor subseconds.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2512:1764":{"id":"0:2512:1764","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[328,12],"end":[328,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}},"0:1124":{"id":"0:1124","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2120,0],"end":[2127,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["rfold","advance_back_by","try_rfold","rfind","nth_back"],"trait":{"name":"DoubleEndedIterator","id":"2:7942:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1125:5727"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1303":{"id":"0:1303","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1893,0],"end":[1898,1]},"visibility":"default","docs":"Subtract-assign `std::time::Duration` from `NaiveDateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDateTime::checked_sub_signed`] to get an `Option` instead.","links":{"`NaiveDateTime::checked_sub_signed`":"0:1223:2713"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:33967:2353","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1304:1566"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:478:302":{"id":"0:478:302","crate_id":0,"name":"add_assign","span":{"filename":"src/datetime/mod.rs","begin":[1295,4],"end":[1300,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1497":{"id":"0:1497","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1219,0],"end":[1226,1]},"visibility":"default","docs":"Add `FixedOffset` to `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the addition ignores integral number of days.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1498:206","0:1499:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1875:2702":{"id":"0:1875:2702","crate_id":0,"name":"from_offset","span":{"filename":"src/offset/local/mod.rs","begin":[161,4],"end":[163,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_offset",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:733:4019":{"id":"0:733:4019","crate_id":0,"name":"to_fixed_offset","span":{"filename":"src/format/parsed.rs","begin":[617,4],"end":[619,5]},"visibility":"public","docs":"Returns a parsed fixed time zone offset out of given fields.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2223":{"id":"0:2223","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[21,27],"end":[21,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1546-0:2600:2177":{"id":"0:1546-0:2600:2177","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[533,16],"end":[533,20]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"inner":{"import":{"source":"naive::Days","name":"Days","id":"0:2600:2177","glob":false}}},"b:2:2748-0:2637:5109":{"id":"b:2:2748-0:2637:5109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2691":{"id":"0:2691","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[76,53],"end":[76,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2692:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:687-0:2409:3432":{"id":"b:5:687-0:2409:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1304:1566":{"id":"0:1304:1566","crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/datetime/mod.rs","begin":[1895,4],"end":[1897,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2445:3449":{"id":"0:2445:3449","crate_id":0,"name":"precision","span":{"filename":"src/format/mod.rs","begin":[283,4],"end":[283,34]},"visibility":"public","docs":"See `OffsetPrecision`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:30":{"id":"0:30","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[78,0],"end":[358,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:31:2399","0:32:2400","0:33:2407","0:34:2408","0:35:2412","0:36:2413","0:37:2417","0:38:2418","0:39:2423","0:40:2404","0:41:2427","0:42:2431","0:43:2434","0:44:2436","0:45:2437","0:46:2441","0:47:2443","0:48:2439","0:49:2448","0:50:2450","0:51:2455","0:52:2459","0:53:2456","0:54:2462","0:55:2464","0:56:2465","0:57:2466","0:58:2468","0:59:2470","0:60:2474","0:61:2479"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[381,0],"end":[387,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:69:206","0:70:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1932:2164":{"id":"0:1932:2164","crate_id":0,"name":"Offset","span":{"filename":"src/offset/mod.rs","begin":[207,0],"end":[210,1]},"visibility":"public","docs":"The offset from the local time to UTC.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:1933:2832"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:1907","0:1599"]}}},"0:1532-0:2620:2161":{"id":"0:1532-0:2620:2161","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[13,27],"end":[13,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::date::NaiveDate","name":"NaiveDate","id":"0:2620:2161","glob":false}}},"0:2123":{"id":"0:2123","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,42],"end":[53,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1062:3601":{"id":"0:1062:3601","crate_id":0,"name":"week","span":{"filename":"src/naive/date.rs","begin":[1417,4],"end":[1419,5]},"visibility":"public","docs":"Returns the [`NaiveWeek`] that the date belongs to, starting with the [`Weekday`]\nspecified.","links":{"`NaiveWeek`":"0:2595:2179","`Weekday`":"0:3108:2158"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["start",{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveWeek","id":"0:2595:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1140":{"id":"0:1140","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2251,0],"end":[2270,1]},"visibility":"default","docs":"Parsing a `str` into a `NaiveDate` uses the same format,\n[`%Y-%m-%d`](crate::format::strftime), as in `Debug` and `Display`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 9, 18).unwrap();\nassert_eq!(\"2015-09-18\".parse::<NaiveDate>(), Ok(d));\n\nlet d = NaiveDate::from_ymd_opt(12345, 6, 7).unwrap();\nassert_eq!(\"+12345-6-7\".parse::<NaiveDate>(), Ok(d));\n\nassert!(\"foo\".parse::<NaiveDate>().is_err());\n```","links":{"crate::format::strftime":"0:860:3302"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12518:3218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1141:134","0:1142:3219"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42477:9166-0:2600:2177":{"id":"a:2:42477:9166-0:2600:2177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2744-0:2729:2178":{"id":"b:2:2744-0:2729:2178","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2761":{"id":"0:2761","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[205,47],"end":[205,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:419:2754":{"id":"0:419:2754","crate_id":0,"name":"with_year","span":{"filename":"src/datetime/mod.rs","begin":[1015,4],"end":[1017,5]},"visibility":"default","docs":"Makes a new `DateTime` with the year number changed, while keeping the same month and day.\n\nSee also the [`NaiveDate::with_year`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist.\n- When the `NaiveDateTime` would be out of range.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_year`":"0:1084:2754"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1197:2995":{"id":"0:1197:2995","crate_id":0,"name":"from_timestamp","span":{"filename":"src/naive/datetime/mod.rs","begin":[131,4],"end":[134,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` corresponding to a UTC date and time,\nfrom the number of non-leap seconds\nsince the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nFor a non-naive version of this function see [`TimeZone::timestamp`].\n\nThe nanosecond part can exceed 1,000,000,000 in order to represent a\n[leap second](NaiveTime#leap-second-handling), but only when `secs % 60 == 59`.\n(The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)\n\n# Panics\n\nPanics if the number of seconds would be out of range for a `NaiveDateTime` (more than\nca. 262,000 years away from common era), and panics on an invalid nanosecond (2 seconds or\nmore).","links":{"NaiveTime#leap-second-handling":"0:2746:2163","`TimeZone::timestamp`":"0:1944:2857"},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_timestamp_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_timestamp_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["secs",{"primitive":"i64"}],["nsecs",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1248:2751":{"id":"0:1248:2751","crate_id":0,"name":"ordinal","span":{"filename":"src/naive/datetime/mod.rs","begin":[1209,4],"end":[1211,5]},"visibility":"default","docs":"Returns the day of year starting from 1.\n\nThe return value ranges from 1 to 366. (The last day of year differs by years.)\n\nSee also the [`NaiveDate::ordinal`](./struct.NaiveDate.html#method.ordinal) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.ordinal(), 268);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2763:461":{"id":"0:2763:461","crate_id":0,"name":"clone","span":{"filename":"src/naive/time/mod.rs","begin":[205,53],"end":[205,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3060:2180":{"id":"0:3060:2180","crate_id":0,"name":"LocalResult","span":{"filename":"src/offset/mod.rs","begin":[42,0],"end":[51,1]},"visibility":"public","docs":"The conversion result from the local time to the timezone-aware datetime types.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:3062:198","0:3064:4023","0:3067:4024"],"impls":["0:1914","0:1922","0:1929","a:2:42477:9166-0:3060:2180","a:2:2966:253-0:3060:2180","a:2:32825:244-0:3060:2180","a:2:32882:9016-0:3060:2180","a:2:42476:9167-0:3060:2180","b:2:2754-0:3060:2180","b:2:2744-0:3060:2180","b:2:2748-0:3060:2180","b:2:2441-0:3060:2180","b:2:2444-0:3060:2180","b:2:3558-0:3060:2180","b:2:2759-0:3060:2180","b:5:687-0:3060:2180","0:3087","0:3071","0:3079","0:3074","0:3082","0:3084","0:3076"]}}},"0:3159:3558":{"id":"0:3159:3558","crate_id":0,"name":"March","span":{"filename":"src/month.rs","begin":[47,4],"end":[47,13]},"visibility":"default","docs":"March","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"2","value":"2"}}}},"0:949:3219":{"id":"0:949:3219","crate_id":0,"name":"from_str","span":{"filename":"src/format/mod.rs","begin":[515,4],"end":[535,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12518:3218","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2310:3351":{"id":"0:2310:3351","crate_id":0,"name":"NumDaysFromSun","span":{"filename":"src/format/mod.rs","begin":[127,4],"end":[127,18]},"visibility":"default","docs":"Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:32825:244-0:3226:2187":{"id":"a:2:32825:244-0:3226:2187","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2759-0:2656:5110":{"id":"b:2:2759-0:2656:5110","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2441-0:3226:2187":{"id":"b:2:2441-0:3226:2187","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3189":{"id":"0:3189","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,9],"end":[31,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12962:41065":{"id":"2:12962:41065","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2275":{"id":"0:2275","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[77,15],"end":[77,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2276:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2744-0:3091:2183":{"id":"b:2:2744-0:3091:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1033:2643":{"id":"0:1033:2643","crate_id":0,"name":"and_time","span":{"filename":"src/naive/date.rs","begin":[826,4],"end":[828,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveTime, NaiveDateTime};\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nlet t = NaiveTime::from_hms_milli_opt(12, 34, 56, 789).unwrap();\n\nlet dt: NaiveDateTime = d.and_time(t);\nassert_eq!(dt.date(), d);\nassert_eq!(dt.time(), t);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["time",{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2099:6103":{"id":"0:2099:6103","crate_id":0,"name":"num_seconds_from_midnight","span":{"filename":"src/traits.rs","begin":[325,4],"end":[327,5]},"visibility":"default","docs":"Returns the number of non-leap seconds past the last midnight.\n\nEvery value in 00:00:00-23:59:59 maps to an integer in 0-86399.\n\nThis method is not intended to provide the real number of seconds since midnight on a given\nday. It does not take things like DST transitions into account.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2744-0:2196:2794":{"id":"b:2:2744-0:2196:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2229":{"id":"0:2229","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[21,47],"end":[21,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2230:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1088:2758":{"id":"0:1088:2758","crate_id":0,"name":"with_day0","span":{"filename":"src/naive/date.rs","begin":[1798,4],"end":[1801,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of month (starting from 0) changed.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `day0` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_day0(29),\n           Some(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_day0(30),\n           None); // no September 31\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2661":{"id":"0:2661","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2132,22],"end":[2132,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2662:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1457:2791":{"id":"0:1457:2791","crate_id":0,"name":"parse_and_remainder","span":{"filename":"src/naive/time/mod.rs","begin":[561,4],"end":[565,5]},"visibility":"public","docs":"Parses a string from a user-specified format into a new `NaiveTime` value, and a slice with\nthe remaining portion of the string.\nSee the [`format::strftime` module](crate::format::strftime)\non the supported escape sequences.\n\nSimilar to [`parse_from_str`](#method.parse_from_str).\n\n# Example\n\n```rust\n# use chrono::{NaiveTime};\nlet (time, remainder) = NaiveTime::parse_and_remainder(\n    \"3h4m33s trailing text\", \"%-Hh%-Mm%-Ss\").unwrap();\nassert_eq!(time, NaiveTime::from_hms_opt(3, 4, 33).unwrap());\nassert_eq!(remainder, \" trailing text\");\n```","links":{"crate::format::strftime":"0:860:3302"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1936:3249":{"id":"0:1936:3249","crate_id":0,"name":"with_ymd_and_hms","span":{"filename":"src/offset/mod.rs","begin":[226,4],"end":[240,5]},"visibility":"default","docs":"Make a new `DateTime` from year, month, day, time components and current time zone.\n\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nReturns `LocalResult::None` on invalid input data.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["day",{"primitive":"u32"}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3105":{"id":"0:3105","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[240,34],"end":[240,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3186:3568":{"id":"0:3186:3568","crate_id":0,"name":"December","span":{"filename":"src/month.rs","begin":[65,4],"end":[65,17]},"visibility":"default","docs":"December","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"11","value":"11"}}}},"0:1959:2708":{"id":"0:1959:2708","crate_id":0,"name":"from_utc_date","span":{"filename":"src/offset/mod.rs","begin":[540,4],"end":[542,5]},"visibility":"default","docs":"Converts the UTC `NaiveDate` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).","links":{},"attrs":["#[allow(clippy::wrong_self_convention)]","#[deprecated(since = \"0.4.23\", note = \"use `from_utc_datetime()` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_utc_datetime()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2599:725":{"id":"0:2599:725","crate_id":0,"name":"fmt","span":{"filename":"src/naive/date.rs","begin":[39,9],"end":[39,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42477:9166-0:2488:3453":{"id":"a:2:42477:9166-0:2488:3453","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12944:7676":{"id":"2:12944:7676","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12558:8766","`DoubleEndedIterator`":"2:7942:128","prim@char":"1:12055:457","str::rmatches":"2:12947:41060"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44443:8803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2115":{"id":"0:2115","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,9],"end":[53,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2116:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3073:461":{"id":"0:3073:461","crate_id":0,"name":"clone","span":{"filename":"src/offset/mod.rs","begin":[41,9],"end":[41,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1931:1700":{"id":"0:1931:1700","crate_id":0,"name":"unwrap","span":{"filename":"src/offset/mod.rs","begin":[195,4],"end":[203,5]},"visibility":"public","docs":"Returns the single unique conversion result, or panics accordingly.","links":{},"attrs":["#[must_use]","#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2561":{"id":"0:2561","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[367,38],"end":[367,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:535:134":{"id":"0:535:134","crate_id":0,"name":"Err","span":{"filename":"src/datetime/mod.rs","begin":[1590,4],"end":[1590,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1500":{"id":"0:1500","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1276,0],"end":[1283,1]},"visibility":"default","docs":"Subtract `chrono::Duration` from `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the subtraction ignores integral number of days.\nThis is the same as addition with a negated `Duration`.\n\nAs a part of Chrono's [leap second handling], the subtraction assumes that **there is no leap\nsecond ever**, except when the `NaiveTime` itself represents a leap second in which case the\nassumption becomes that **there is exactly a single leap second ever**.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\n\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::zero(),                  from_hmsm(3, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::seconds(1),              from_hmsm(3, 5, 6, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::seconds(60 + 5),         from_hmsm(3, 4, 2, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::seconds(2*60*60 + 6*60), from_hmsm(0, 59, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::milliseconds(80),        from_hmsm(3, 5, 6, 920));\nassert_eq!(from_hmsm(3, 5, 7, 950) - Duration::milliseconds(280),     from_hmsm(3, 5, 7, 670));\n```\n\nThe subtraction wraps around.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::seconds(8*60*60), from_hmsm(19, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::days(800),        from_hmsm(3, 5, 7, 0));\n```\n\nLeap seconds are handled, but the subtraction assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\nlet leap = from_hmsm(3, 5, 59, 1_300);\nassert_eq!(leap - Duration::zero(),            from_hmsm(3, 5, 59, 1_300));\nassert_eq!(leap - Duration::milliseconds(200), from_hmsm(3, 5, 59, 1_100));\nassert_eq!(leap - Duration::milliseconds(500), from_hmsm(3, 5, 59, 800));\nassert_eq!(leap - Duration::seconds(60),       from_hmsm(3, 5, 0, 300));\nassert_eq!(leap - Duration::days(1),           from_hmsm(3, 6, 0, 300));\n```\n\n[leap second handling]: crate::NaiveTime#leap-second-handling","links":{"crate::NaiveTime#leap-second-handling":"0:2746:2163"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1501:206","0:1502:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2769":{"id":"0:2769","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[22,20],"end":[22,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2202:3889":{"id":"0:2202:3889","crate_id":0,"name":"isoyear_mod_100","span":{"filename":"src/format/parsed.rs","begin":[55,4],"end":[55,36]},"visibility":"public","docs":"Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), modulo 100.\nImplies that the year is >= 1 BCE when set.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}}}},"b:2:2759-0:3047:2160":{"id":"b:2:2759-0:3047:2160","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:914-0:607:3306":{"id":"0:914-0:607:3306","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[64,29],"end":[64,40]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"formatting::format_item","name":"format_item","id":"0:607:3306","glob":false}}},"a:2:42476:9167-0:3235:2221":{"id":"a:2:42476:9167-0:3235:2221","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:327:2821":{"id":"0:327:2821","crate_id":0,"name":"from_naive_utc_and_offset","span":{"filename":"src/datetime/mod.rs","begin":[96,4],"end":[98,5]},"visibility":"public","docs":"Makes a new `DateTime` from its components: a `NaiveDateTime` in UTC and an `Offset`.\n\nThis is a low-level method, intended for use cases such as deserializing a `DateTime` or\npassing it through FFI.\n\nFor regular use you will probably want to use a method such as\n[`TimeZone::from_local_datetime`] or [`NaiveDateTime::and_local_timezone`] instead.\n\n# Example\n\n```rust\nuse chrono::{Local, DateTime};\n\nlet dt = Local::now();\n// Get components\nlet naive_utc = dt.naive_utc();\nlet offset = dt.offset().clone();\n// Serialize, pass through FFI... and recreate the `DateTime`:\nlet dt_new = DateTime::<Local>::from_naive_utc_and_offset(naive_utc, offset);\nassert_eq!(dt, dt_new);\n```","links":{"`NaiveDateTime::and_local_timezone`":"0:1234:2923","`TimeZone::from_local_datetime`":"0:1956:2647"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["datetime",{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["offset",{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1934:2165","args":null}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2462:3450":{"id":"0:2462:3450","crate_id":0,"name":"OffsetPrecision","span":{"filename":"src/format/mod.rs","begin":[294,0],"end":[311,1]},"visibility":"public","docs":"The precision of an offset from UTC formatting item.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2463:3462","0:2465:3465","0:2467:3467","0:2469:3469","0:2471:3471","0:2473:3473"],"impls":["a:2:42477:9166-0:2462:3450","a:2:2966:253-0:2462:3450","a:2:32825:244-0:2462:3450","a:2:32882:9016-0:2462:3450","a:2:42476:9167-0:2462:3450","b:2:2754-0:2462:3450","b:2:2744-0:2462:3450","b:2:2748-0:2462:3450","b:2:2441-0:2462:3450","b:2:2444-0:2462:3450","b:2:3558-0:2462:3450","b:2:2759-0:2462:3450","b:5:687-0:2462:3450","0:2475","0:2477","0:2478","0:2481","0:2483","0:2485","0:2480"]}}},"a:2:2966:253-0:2549:2174":{"id":"a:2:2966:253-0:2549:2174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1273:3142":{"id":"0:1273:3142","crate_id":0,"name":"with_minute","span":{"filename":"src/naive/datetime/mod.rs","begin":[1543,4],"end":[1545,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the minute number changed.\n\nSee also the [`NaiveTime::with_minute`] method.\n\n# Errors\n\nReturns `None` if the value for `minute` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.with_minute(45),\n           Some(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 45, 56, 789).unwrap()));\nassert_eq!(dt.with_minute(60), None);\n```","links":{"`NaiveTime::with_minute`":"0:1483:3142"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["min",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1092":{"id":"0:1092","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1887,0],"end":[1894,1]},"visibility":"default","docs":"Add `chrono::Duration` to `NaiveDate`.\n\nThis discards the fractional days in `Duration`, rounding to the closest integral number of days\ntowards `Duration::zero()`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDate::checked_add_signed`] to get an `Option` instead.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nassert_eq!(from_ymd(2014, 1, 1) + Duration::zero(),             from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::seconds(86399),     from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::seconds(-86399),    from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(1),            from_ymd(2014, 1, 2));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(-1),           from_ymd(2013, 12, 31));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(364),          from_ymd(2014, 12, 31));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(365*4 + 1),    from_ymd(2018, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(365*400 + 97), from_ymd(2414, 1, 1));\n```\n\n[`NaiveDate::checked_add_signed`]: crate::NaiveDate::checked_add_signed","links":{"crate::NaiveDate::checked_add_signed":"0:1050:2711"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1093:206","0:1094:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1250:2184":{"id":"0:1250:2184","crate_id":0,"name":"weekday","span":{"filename":"src/naive/datetime/mod.rs","begin":[1245,4],"end":[1247,5]},"visibility":"default","docs":"Returns the day of week.\n\nSee also the [`NaiveDate::weekday`](./struct.NaiveDate.html#method.weekday) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike, Weekday};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.weekday(), Weekday::Fri);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5828-0:2134:2146":{"id":"b:5:5828-0:2134:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5826:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5830:1605"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1874:2164":{"id":"0:1874:2164","crate_id":0,"name":"Offset","span":{"filename":"src/offset/local/mod.rs","begin":[159,4],"end":[159,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1949:2870":{"id":"0:1949:2870","crate_id":0,"name":"timestamp_micros","span":{"filename":"src/offset/mod.rs","begin":[454,4],"end":[459,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap microseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\n#Example\n```\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.timestamp_micros(1431648000000).unwrap().timestamp(), 1431648);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["micros",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2669":{"id":"0:2669","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2132,46],"end":[2132,56]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2546:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2670:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32825:244-0:2267:3310":{"id":"a:2:32825:244-0:2267:3310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2760:468":{"id":"0:2760:468","crate_id":0,"name":"cmp","span":{"filename":"src/naive/time/mod.rs","begin":[205,42],"end":[205,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2444-0:3206:2188":{"id":"b:2:2444-0:3206:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:267-0:2147:2148":{"id":"0:267-0:2147:2148","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[512,0],"end":[512,19]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"date::Date","name":"Date","id":"0:2147:2148","glob":false}}},"2:12970:33251":{"id":"2:12970:33251","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:8766"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32825:244-0:3040:2149":{"id":"a:2:32825:244-0:3040:2149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2145":{"id":"0:2145","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[487,40],"end":[487,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42477:9166-0:3235:2221":{"id":"a:2:42477:9166-0:3235:2221","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2374:3405":{"id":"0:2374:3405","crate_id":0,"name":"Nanosecond9","span":{"filename":"src/format/mod.rs","begin":[206,4],"end":[206,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2441-0:2147:2148":{"id":"b:2:2441-0:2147:2148","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1313:1565":{"id":"0:1313:1565","crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1994,4],"end":[1996,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3112:3990":{"id":"0:3112:3990","crate_id":0,"name":"Tue","span":{"filename":"src/weekday.rs","begin":[46,4],"end":[46,11]},"visibility":"default","docs":"Tuesday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"1","value":"1"}}}},"0:345:2909":{"id":"0:345:2909","crate_id":0,"name":"fixed_offset","span":{"filename":"src/datetime/mod.rs","begin":[351,4],"end":[353,5]},"visibility":"public","docs":"Fix the offset from UTC to its current value, dropping the associated timezone information.\nThis it useful for converting a generic `DateTime<Tz: Timezone>` to `DateTime<FixedOffset>`.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:72:302":{"id":"0:72:302","crate_id":0,"name":"add_assign","span":{"filename":"src/duration.rs","begin":[390,4],"end":[393,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42476:9167-0:3091:2183":{"id":"a:2:42476:9167-0:3091:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1938:3763":{"id":"0:1938:3763","crate_id":0,"name":"ymd","span":{"filename":"src/offset/mod.rs","begin":[251,4],"end":[253,5]},"visibility":"default","docs":"Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date, invalid month and/or day.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `with_ymd_and_hms()` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `with_ymd_and_hms()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2031:8297":{"id":"0:2031:8297","crate_id":0,"name":"from_u64","span":{"filename":"src/weekday.rs","begin":[215,4],"end":[226,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["n",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:470:206":{"id":"0:470:206","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1254,4],"end":[1254,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:807":{"id":"0:807","crate_id":0,"name":null,"span":{"filename":"src/format/parse.rs","begin":[527,0],"end":[538,1]},"visibility":"default","docs":"Accepts a relaxed form of RFC3339.\nA space or a 'T' are acepted as the separator between the date and time\nparts. Additional spaces are allowed between each component.\n\nAll of these examples are equivalent:\n```\n# use chrono::{DateTime, offset::FixedOffset};\n\"2012-12-12T12:12:12Z\".parse::<DateTime<FixedOffset>>()?;\n\"2012-12-12 12:12:12Z\".parse::<DateTime<FixedOffset>>()?;\n\"2012-  12-12T12:  12:12Z\".parse::<DateTime<FixedOffset>>()?;\n# Ok::<(), chrono::ParseError>(())\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12518:3218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:808:134","0:809:3219"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42477:9166-0:2147:2148":{"id":"a:2:42477:9166-0:2147:2148","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1129:1062":{"id":"0:1129:1062","crate_id":0,"name":"next","span":{"filename":"src/naive/date.rs","begin":[2140,4],"end":[2144,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:8051:176","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2034:725":{"id":"0:2034:725","crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[239,4],"end":[241,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12958:4120":{"id":"2:12958:4120","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12868:41052":{"id":"2:12868:41052","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42476:9167-0:2462:3450":{"id":"a:2:42476:9167-0:2462:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2751:668":{"id":"0:2751:668","crate_id":0,"name":"eq","span":{"filename":"src/naive/time/mod.rs","begin":[205,9],"end":[205,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1312:206":{"id":"0:1312:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1991,4],"end":[1991,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2528:1764":{"id":"0:2528:1764","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[341,10],"end":[341,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12886:41056":{"id":"2:12886:41056","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12061:1548","crate::ops::IndexMut":"2:3220:8698","str::slice_unchecked":"2:12885:41055"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:165:2684":{"id":"0:165:2684","crate_id":0,"name":"and_hms_nano_opt","span":{"filename":"src/date.rs","begin":[192,4],"end":[200,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute, second and/or nanosecond.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2664:789":{"id":"0:2664:789","crate_id":0,"name":"hash","span":{"filename":"src/naive/date.rs","begin":[2132,29],"end":[2132,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1408":{"id":"0:1408","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[59,0],"end":[118,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1409:2747","0:1410:3601","0:1411:6693"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1448:6861":{"id":"0:1448:6861","crate_id":0,"name":"from_hms_milli","span":{"filename":"src/naive/time/mod.rs","begin":[289,4],"end":[291,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and millisecond.\n\nThe millisecond part can exceed 1,000\nin order to represent the [leap second](#leap-second-handling).\n\n# Panics\n\nPanics on invalid hour, minute, second and/or millisecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_hms_milli_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_hms_milli_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1531-0:2600:2177":{"id":"0:1531-0:2600:2177","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[13,21],"end":[13,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::date::Days","name":"Days","id":"0:2600:2177","glob":false}}},"0:2505":{"id":"0:2505","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[314,44],"end":[314,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2506:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2744-0:3235:2221":{"id":"b:2:2744-0:3235:2221","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3202":{"id":"0:3202","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,50],"end":[31,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2546:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3203:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2134:2146":{"id":"0:2134:2146","crate_id":0,"name":"OutOfRangeError","span":{"filename":"src/duration.rs","begin":[488,0],"end":[488,31]},"visibility":"public","docs":"Represents error when converting `Duration` to/from a standard library\nimplementation\n\nThe `std::time::Duration` supports a range from zero to `u64::MAX`\n*seconds*, while this module supports signed range of up to\n`i64::MAX` of *milliseconds*.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42477:9166-0:2134:2146","a:2:2966:253-0:2134:2146","a:2:32825:244-0:2134:2146","a:2:32882:9016-0:2134:2146","a:2:42476:9167-0:2134:2146","b:2:2754-0:2134:2146","b:2:2744-0:2134:2146","b:2:2748-0:2134:2146","b:2:2441-0:2134:2146","b:2:2444-0:2134:2146","b:2:3558-0:2134:2146","b:2:2759-0:2134:2146","b:5:687-0:2134:2146","b:5:5828-0:2134:2146","0:94","0:92","0:2145","0:2143","0:2139","0:2142","0:2137","0:2141"]}}},"0:1551-0:2729:2178":{"id":"0:1551-0:2729:2178","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[534,16],"end":[534,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"naive::IsoWeek","name":"IsoWeek","id":"0:2729:2178","glob":false}}},"b:2:2754-0:2170:2154":{"id":"b:2:2754-0:2170:2154","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:246:301":{"id":"0:246:301","crate_id":0,"name":"add","span":{"filename":"src/date.rs","begin":[502,4],"end":[504,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32882:9016-0:2134:2146":{"id":"a:2:32882:9016-0:2134:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2744-0:2637:5109":{"id":"b:2:2744-0:2637:5109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2444-0:2595:2179":{"id":"b:2:2444-0:2595:2179","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2595:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:687-0:3108:2158":{"id":"b:5:687-0:3108:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:679":{"id":"0:679","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[125,0],"end":[697,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:680:1048","0:681:3916","0:683:3919","0:685:3921","0:687:3923","0:689:3925","0:691:3927","0:693:3929","0:695:3931","0:697:3933","0:699:3935","0:701:3937","0:702:3939","0:704:3941","0:706:3944","0:707:3947","0:708:3950","0:710:3952","0:712:3954","0:714:3956","0:716:3958","0:717:3960","0:719:3969","0:727:4005","0:728:4014","0:733:4019","0:734:3062","0:735:4029"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2619:468":{"id":"0:2619:468","crate_id":0,"name":"cmp","span":{"filename":"src/naive/date.rs","begin":[133,62],"end":[133,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2043:2690":{"id":"0:2043:2690","crate_id":0,"name":"succ","span":{"filename":"src/month.rs","begin":[76,4],"end":[91,5]},"visibility":"public","docs":"The next month.\n\n`m`:        | `January`  | `February` | `...` | `December`\n----------- | ---------  | ---------- | --- | ---------\n`m.succ()`: | `February` | `March`    | `...` | `January`","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2744-0:3206:2188":{"id":"b:2:2744-0:3206:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:52:2459":{"id":"0:52:2459","crate_id":0,"name":"num_nanoseconds","span":{"filename":"src/duration.rs","begin":[254,4],"end":[258,5]},"visibility":"public","docs":"Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2443:2602":{"id":"2:2443:2602","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1593:2164":{"id":"0:1593:2164","crate_id":0,"name":"Offset","span":{"filename":"src/offset/fixed.rs","begin":[130,4],"end":[130,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:2966:253-0:2595:2179":{"id":"a:2:2966:253-0:2595:2179","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2595:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2272:3315":{"id":"0:2272:3315","crate_id":0,"name":"Space","span":{"filename":"src/format/mod.rs","begin":[84,4],"end":[84,9]},"visibility":"default","docs":"Space padding.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1461:6219":{"id":"0:1461:6219","crate_id":0,"name":"overflowing_sub_signed","span":{"filename":"src/naive/time/mod.rs","begin":[667,4],"end":[670,5]},"visibility":"public","docs":"Subtracts given `Duration` from the current time, and also returns the number of *seconds*\nin the integral number of days ignored from the subtraction.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hms = |h, m, s| { NaiveTime::from_hms_opt(h, m, s).unwrap() };\n\nassert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(2)),\n           (from_hms(1, 4, 5), 0));\nassert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(17)),\n           (from_hms(10, 4, 5), 86_400));\nassert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(-22)),\n           (from_hms(1, 4, 5), -86_400));\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"tuple":[{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"primitive":"i64"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32882:9016-0:2488:3453":{"id":"a:2:32882:9016-0:2488:3453","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2748-0:3235:2221":{"id":"b:2:2748-0:3235:2221","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2208:2751":{"id":"0:2208:2751","crate_id":0,"name":"ordinal","span":{"filename":"src/format/parsed.rs","begin":[76,4],"end":[76,28]},"visibility":"public","docs":"Day of the year (1--365 or 1--366 depending on the year).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"0:1934:2165":{"id":"0:1934:2165","crate_id":0,"name":"TimeZone","span":{"filename":"src/offset/mod.rs","begin":[215,0],"end":[550,1]},"visibility":"public","docs":"The time zone.\n\nThe methods here are the primary constructors for [`Date`] and [`DateTime`] types.","links":{"`DateTime`":"0:2154:2153","`Date`":"0:2147:2148"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:1935:2164","0:1936:3249","0:1938:3763","0:1939:5836","0:1940:7235","0:1941:5838","0:1942:7241","0:1943:5841","0:1944:2857","0:1945:3229","0:1946:2864","0:1947:3234","0:1948:2878","0:1949:2870","0:1950:7284","0:1951:2702","0:1952:7287","0:1953:7289","0:1954:2731","0:1956:2647","0:1957:7296","0:1958:4031","0:1959:2708","0:1960:2906"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:1592","0:1873","0:1900"]}}},"2:12896:38558":{"id":"2:12896:38558","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12895:38560"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44522:8811","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:2355:2793":{"id":"b:2:2754-0:2355:2793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1107:206":{"id":"0:1107:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1994,4],"end":[1994,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:203:2749":{"id":"0:203:2749","crate_id":0,"name":"day","span":{"filename":"src/date.rs","begin":[408,4],"end":[410,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:514:206":{"id":"0:514:206","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1480,4],"end":[1480,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:5:687-0:2488:3453":{"id":"b:5:687-0:2488:3453","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2538:668":{"id":"0:2538:668","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[325,16],"end":[325,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2748-0:2161:2604":{"id":"b:2:2748-0:2161:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:56:2465":{"id":"0:56:2465","crate_id":0,"name":"min_value","span":{"filename":"src/duration.rs","begin":[310,4],"end":[312,5]},"visibility":"public","docs":"The minimum possible `Duration`: `-i64::MAX` milliseconds.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42476:9167-0:3047:2160":{"id":"a:2:42476:9167-0:3047:2160","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:689:9597":{"id":"5:689:9597","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:3230":{"id":"0:3230","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[245,16],"end":[245,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:0:1983-0:2746:2163":{"id":"b:0:1983-0:2746:2163","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[49,0],"end":[77,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Timelike","id":"0:2089:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"SubsecRound","id":"0:1980:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1985:8123","0:1986:8128"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32825:244-0:3152:2156":{"id":"a:2:32825:244-0:3152:2156","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2282":{"id":"0:2282","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[77,37],"end":[77,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2283:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:79:206":{"id":"0:79:206","crate_id":0,"name":"Output","span":{"filename":"src/duration.rs","begin":[416,4],"end":[416,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2177:3645":{"id":"0:2177:3645","crate_id":0,"name":"Nanos","span":{"filename":"src/format/formatting.rs","begin":[522,4],"end":[522,9]},"visibility":"default","docs":"Use fixed 9 subsecond digits. This corresponds to [Fixed::Nanosecond9].","links":{"Fixed::Nanosecond9":"0:2374:3405"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2589":{"id":"0:2589","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[379,34],"end":[379,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3191:668":{"id":"0:3191:668","crate_id":0,"name":"eq","span":{"filename":"src/month.rs","begin":[31,9],"end":[31,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1094:301":{"id":"0:1094:301","crate_id":0,"name":"add","span":{"filename":"src/naive/date.rs","begin":[1891,4],"end":[1893,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2744-0:3226:2187":{"id":"b:2:2744-0:3226:2187","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12997:16370":{"id":"2:12997:16370","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4739:16370"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44547:8809","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3152:2156":{"id":"0:3152:2156","crate_id":0,"name":"Month","span":{"filename":"src/month.rs","begin":[41,0],"end":[66,1]},"visibility":"public","docs":"The month of the year.\n\nThis enum is just a convenience implementation.\nThe month in dates created by DateLike objects does not return this enum.\n\nIt is possible to convert from a date to a month independently\n```\nuse chrono::prelude::*;\nlet date = Utc.with_ymd_and_hms(2019, 10, 28, 9, 10, 11).unwrap();\n// `2019-10-28T09:10:11Z`\nlet month = Month::try_from(u8::try_from(date.month()).unwrap()).ok();\nassert_eq!(month, Some(Month::October))\n```\nOr from a Month to an integer usable by dates\n```\n# use chrono::prelude::*;\nlet month = Month::January;\nlet dt = Utc.with_ymd_and_hms(2019, month.number_from_month(), 28, 9, 10, 11).unwrap();\nassert_eq!((dt.year(), dt.month(), dt.day()), (2019, 1, 28));\n```\nAllows mapping from and to month, from 1-January to 12-December.\nCan be Serialized/Deserialized with serde","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:3153:3556","0:3156:3557","0:3159:3558","0:3162:3559","0:3165:3560","0:3168:3561","0:3171:3562","0:3174:3563","0:3177:3564","0:3180:3565","0:3183:3566","0:3186:3568"],"impls":["0:2042","a:2:42477:9166-0:3152:2156","a:2:2966:253-0:3152:2156","a:2:32825:244-0:3152:2156","a:2:32882:9016-0:3152:2156","a:2:42476:9167-0:3152:2156","b:2:2754-0:3152:2156","b:2:2744-0:3152:2156","b:2:2748-0:3152:2156","b:2:2441-0:3152:2156","b:2:2444-0:3152:2156","b:2:3558-0:3152:2156","b:2:2759-0:3152:2156","b:5:687-0:3152:2156","0:3190","0:3189","0:3194","0:947","0:3204","0:3199","0:3192","0:3195","0:2047","0:2050","0:3197","0:3202"]}}},"b:2:2754-0:2154:2153":{"id":"b:2:2754-0:2154:2153","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3194":{"id":"0:3194","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,24],"end":[31,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:41:2427":{"id":"0:41:2427","crate_id":0,"name":"milliseconds","span":{"filename":"src/duration.rs","begin":[170,4],"end":[174,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of milliseconds.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["milliseconds",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42477:9166-0:2234:2605":{"id":"a:2:42477:9166-0:2234:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2441-0:2729:2178":{"id":"b:2:2441-0:2729:2178","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[394,0],"end":[466,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["year_ce","num_days_from_ce"],"trait":{"name":"Datelike","id":"0:2070:2155","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:200:2747","0:201:2186","0:202:2748","0:203:2749","0:204:2750","0:205:2751","0:206:2752","0:207:2184","0:208:2753","0:209:2754","0:211:2755","0:213:2756","0:215:2757","0:217:2758","0:219:2759","0:221:2760"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3192":{"id":"0:3192","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,20],"end":[31,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2444-0:2154:2153":{"id":"b:2:2444-0:2154:2153","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2754-0:2764:2159":{"id":"b:2:2754-0:2764:2159","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3180:3565":{"id":"0:3180:3565","crate_id":0,"name":"October","span":{"filename":"src/month.rs","begin":[61,4],"end":[61,15]},"visibility":"default","docs":"October","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"9","value":"9"}}}},"2:3560:1643":{"id":"2:3560:1643","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:40123:13450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2966:253-0:2565:3498":{"id":"a:2:2966:253-0:2565:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:385":{"id":"0:385","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[748,0],"end":[755,1]},"visibility":"default","docs":"Convert a `DateTime<Local>` instance into a `DateTime<FixedOffset>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:386:752"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42476:9167-0:2267:3310":{"id":"a:2:42476:9167-0:2267:3310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1123":{"id":"0:1123","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2118,0],"end":[2118,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7995:5726","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:687-0:3047:2160":{"id":"b:5:687-0:3047:2160","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2087:2760":{"id":"0:2087:2760","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/traits.rs","begin":[234,4],"end":[234,59]},"visibility":"default","docs":"Makes a new value with the day of year (starting from 0) changed.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (`with_ordinal0(365)` in a non-leap year).\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n- The value for `ordinal0` is out of range.\n\n[`DateTime<Tz>`]: crate::DateTime","links":{"crate::DateTime":"0:2154:2153"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:3044:461":{"id":"0:3044:461","crate_id":0,"name":"clone","span":{"filename":"src/offset/local/mod.rs","begin":[106,15],"end":[106,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2758:1630":{"id":"2:2758:1630","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:463:468":{"id":"0:463:468","crate_id":0,"name":"cmp","span":{"filename":"src/datetime/mod.rs","begin":[1232,4],"end":[1234,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2304:3346":{"id":"0:2304:3346","crate_id":0,"name":"WeekFromSun","span":{"filename":"src/format/mod.rs","begin":[121,4],"end":[121,15]},"visibility":"default","docs":"Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1089:2759":{"id":"0:1089:2759","crate_id":0,"name":"with_ordinal","span":{"filename":"src/naive/date.rs","begin":[1826,4],"end":[1828,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of year (starting from 1) changed.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `ordinal` is\ninvalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().with_ordinal(60),\n           Some(NaiveDate::from_ymd_opt(2015, 3, 1).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().with_ordinal(366),\n           None); // 2015 had only 365 days\n\nassert_eq!(NaiveDate::from_ymd_opt(2016, 1, 1).unwrap().with_ordinal(60),\n           Some(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2016, 1, 1).unwrap().with_ordinal(366),\n           Some(NaiveDate::from_ymd_opt(2016, 12, 31).unwrap()));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1040:2682":{"id":"0:1040:2682","crate_id":0,"name":"and_hms_nano","span":{"filename":"src/naive/date.rs","begin":[997,4],"end":[999,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.\n\nThe nanosecond part is allowed to exceed 1,000,000,000 in order to represent a [leap second](\n./struct.NaiveTime.html#leap-second-handling), but only when `sec == 59`.\n\n# Panics\n\nPanics on invalid hour, minute, second and/or nanosecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `and_hms_nano_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `and_hms_nano_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:106-0:2170:2154":{"id":"0:106-0:2170:2154","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[503,30],"end":[503,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::SecondsFormat","name":"SecondsFormat","id":"0:2170:2154","glob":false}}},"0:2739:468":{"id":"0:2739:468","crate_id":0,"name":"cmp","span":{"filename":"src/naive/isoweek.rs","begin":[19,36],"end":[19,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2754":{"id":"0:2754","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[205,24],"end":[205,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2755:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3223:1146":{"id":"0:3223:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/month.rs","begin":[227,50],"end":[227,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:373":{"id":"0:373","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[683,0],"end":[687,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2795:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:374:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:66:206":{"id":"0:66:206","crate_id":0,"name":"Output","span":{"filename":"src/duration.rs","begin":[374,4],"end":[374,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:3558-0:2462:3450":{"id":"b:2:3558-0:2462:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2479:461":{"id":"0:2479:461","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[293,22],"end":[293,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:946:3219":{"id":"0:946:3219","crate_id":0,"name":"from_str","span":{"filename":"src/format/mod.rs","begin":[478,4],"end":[484,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12518:3218","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32882:9016-0:2170:2154":{"id":"a:2:32882:9016-0:2170:2154","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:687-0:2675:2162":{"id":"b:5:687-0:2675:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2744-0:2134:2146":{"id":"b:2:2744-0:2134:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:336:2878":{"id":"0:336:2878","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/datetime/mod.rs","begin":[253,4],"end":[256,5]},"visibility":"public","docs":"Returns the number of non-leap-nanoseconds since January 1, 1970 UTC.\n\n# Panics\n\nAn `i64` with nanosecond precision can span a range of ~584 years. This function panics on\nan out of range `DateTime`.\n\nThe dates that can be represented as nanoseconds are between 1677-09-21T00:12:43.145224192\nand 2262-04-11T23:47:16.854775807.","links":{},"attrs":["#[deprecated(since = \"0.4.31\", note = \"use `timestamp_nanos_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.31","note":"use `timestamp_nanos_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1491:302":{"id":"0:1491:302","crate_id":0,"name":"add_assign","span":{"filename":"src/naive/time/mod.rs","begin":[1181,4],"end":[1183,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1307:1565":{"id":"0:1307:1565","crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1910,4],"end":[1912,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2441-0:2764:2159":{"id":"b:2:2441-0:2764:2159","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2444-0:3143:2185":{"id":"b:2:2444-0:3143:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12892:3622":{"id":"2:12892:3622","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12055:457"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:44209:8793","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:356:2645":{"id":"0:356:2645","crate_id":0,"name":"naive_local","span":{"filename":"src/datetime/mod.rs","begin":[488,4],"end":[492,5]},"visibility":"public","docs":"Returns a view to the naive local datetime.\n\n# Panics\n\n[`DateTime`] internally stores the date and time in UTC with a [`NaiveDateTime`]. This\nmethod will panic if the offset from UTC would push the local datetime outside of the\nrepresentable range of a [`NaiveDateTime`].","links":{"`NaiveDateTime`":"0:2675:2162","`DateTime`":"0:2154:2153"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2184:461":{"id":"0:2184:461","crate_id":0,"name":"clone","span":{"filename":"src/format/formatting.rs","begin":[509,9],"end":[509,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:710:3952":{"id":"0:710:3952","crate_id":0,"name":"set_minute","span":{"filename":"src/format/parsed.rs","begin":[257,4],"end":[259,5]},"visibility":"public","docs":"Tries to set the [`minute`](#structfield.minute) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:493:1565":{"id":"0:493:1565","crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1375,4],"end":[1377,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5828-0:2161:2604":{"id":"b:5:5828-0:2161:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5826:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["5:5830:1605"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2194:789":{"id":"0:2194:789","crate_id":0,"name":"hash","span":{"filename":"src/format/formatting.rs","begin":[509,44],"end":[509,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1237:2393":{"id":"0:1237:2393","crate_id":0,"name":"MIN","span":{"filename":"src/naive/datetime/mod.rs","begin":[1074,4],"end":[1074,78]},"visibility":"public","docs":"The minimum possible `NaiveDateTime`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:2734":{"id":"0:2734","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,20],"end":[19,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2732":{"id":"0:2732","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,9],"end":[19,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2733:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2754-0:3040:2149":{"id":"b:2:2754-0:3040:2149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2547:789":{"id":"0:2547:789","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[325,38],"end":[325,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2005":{"id":"0:2005","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[279,0],"end":[293,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2006:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2007":{"id":"0:2007","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[296,0],"end":[301,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","description","source","cause","type_id"],"trait":{"name":"Error","id":"2:2806:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2008:2511"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1266":{"id":"0:1266","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1430,0],"end":[1601,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hour12","num_seconds_from_midnight"],"trait":{"name":"Timelike","id":"0:2089:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1267:2653","0:1268:3132","0:1269:3133","0:1270:3134","0:1271:3138","0:1273:3142","0:1275:3148","0:1277:3155"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3100":{"id":"0:3100","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[240,16],"end":[240,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3101:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2483":{"id":"0:2483","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[293,40],"end":[293,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2754-0:3047:2160":{"id":"b:2:2754-0:3047:2160","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:474:206":{"id":"0:474:206","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1273,4],"end":[1273,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:1537-0:1007:2167":{"id":"0:1537-0:1007:2167","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[15,21],"end":[15,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"self::date::MAX_DATE","name":"MAX_DATE","id":"0:1007:2167","glob":false}}},"0:153:2639":{"id":"0:153:2639","crate_id":0,"name":"from_utc","span":{"filename":"src/date.rs","begin":[79,4],"end":[81,5]},"visibility":"public","docs":"Makes a new `Date` with given *UTC* date and offset.\nThe local date should be constructed via the `TimeZone` trait.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["date",{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["offset",{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1934:2165","args":null}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2380:3416":{"id":"0:2380:3416","crate_id":0,"name":"TimezoneOffsetDoubleColon","span":{"filename":"src/format/mod.rs","begin":[222,4],"end":[222,29]},"visibility":"default","docs":"Offset from the local time to UTC with seconds (`+09:00:00` or `-04:00:00` or `+00:00:00`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace.\nThe offset is limited from `-24:00:00` to `+24:00:00`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2636:461":{"id":"0:2636:461","crate_id":0,"name":"clone","span":{"filename":"src/naive/date.rs","begin":[191,53],"end":[191,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2759-0:3060:2180":{"id":"b:2:2759-0:3060:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1139:725":{"id":"0:1139:725","crate_id":0,"name":"fmt","span":{"filename":"src/naive/date.rs","begin":[2230,4],"end":[2232,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1998:134":{"id":"0:1998:134","crate_id":0,"name":"Err","span":{"filename":"src/round.rs","begin":[160,4],"end":[160,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2610":{"id":"0:2610","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[133,33],"end":[133,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2611:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2441-0:2234:2605":{"id":"b:2:2441-0:2234:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2475":{"id":"0:2475","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[293,9],"end":[293,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2476:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2477":{"id":"0:2477","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[293,16],"end":[293,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:243":{"id":"0:243","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[498,0],"end":[505,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:245:206","0:246:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1282":{"id":"0:1282","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1674,0],"end":[1683,1]},"visibility":"default","docs":"Add `std::time::Duration` to `NaiveDateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDateTime::checked_add_signed`] to get an `Option` instead.","links":{"`NaiveDateTime::checked_add_signed`":"0:1218:2711"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1283:206","0:1284:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:468":{"id":"0:468","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1253,0],"end":[1260,1]},"visibility":"default","docs":"Add `chrono::Duration` to `DateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`DateTime<Tz>::checked_add_signed`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_add_signed`":"0:347:2711"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:470:206","0:471:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:233":{"id":"0:233","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[480,0],"end":[484,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2546:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:235:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2966:253-0:2267:3310":{"id":"a:2:2966:253-0:2267:3310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1224:2927":{"id":"0:1224:2927","crate_id":0,"name":"checked_sub_months","span":{"filename":"src/naive/datetime/mod.rs","begin":[893,4],"end":[895,5]},"visibility":"public","docs":"Subtracts given `Months` from the current date and time.\n\nUses the last day of the month if the day does not exist in the resulting month.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Months, NaiveDate};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(1, 0, 0).unwrap()\n        .checked_sub_months(Months::new(1)),\n    Some(NaiveDate::from_ymd_opt(2013, 12, 1).unwrap().and_hms_opt(1, 0, 0).unwrap())\n);\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(1, 0, 0).unwrap()\n        .checked_sub_months(Months::new(core::i32::MAX as u32 + 1)),\n    None\n);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2198:3876":{"id":"0:2198:3876","crate_id":0,"name":"year_div_100","span":{"filename":"src/format/parsed.rs","begin":[34,4],"end":[34,33]},"visibility":"public","docs":"Year divided by 100. Implies that the year is >= 1 BCE when set.\n\nDue to the common usage, if this field is missing but\n[`year_mod_100`](#structfield.year_mod_100) is present,\nit is inferred to 19 when `year_mod_100 >= 70` and 20 otherwise.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}}}},"2:12897:15658":{"id":"2:12897:15658","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44493:8794","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3078:668":{"id":"0:3078:668","crate_id":0,"name":"eq","span":{"filename":"src/offset/mod.rs","begin":[41,16],"end":[41,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3150":{"id":"0:3150","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[230,27],"end":[230,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1906:4031":{"id":"0:1906:4031","crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/utc.rs","begin":[133,4],"end":[135,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3092:8156":{"id":"0:3092:8156","crate_id":0,"name":"DurationExceedsTimestamp","span":{"filename":"src/round.rs","begin":[253,4],"end":[253,28]},"visibility":"default","docs":"Error when the Duration exceeds the Duration from or until the Unix epoch.\n\n``` rust\n# use chrono::{DurationRound, Duration, RoundingError, TimeZone, Utc};\nlet dt = Utc.with_ymd_and_hms(1970, 12, 12, 0, 0, 0).unwrap();\n\nassert_eq!(\n    dt.duration_round(Duration::days(365)),\n    Err(RoundingError::DurationExceedsTimestamp),\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:3052":{"id":"0:3052","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,22],"end":[43,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2444-0:2637:5109":{"id":"b:2:2444-0:2637:5109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1980:2152":{"id":"0:1980:2152","crate_id":0,"name":"SubsecRound","span":{"filename":"src/round.rs","begin":[22,0],"end":[47,1]},"visibility":"public","docs":"Extension trait for subsecond rounding or truncation to a maximum number\nof digits. Rounding can be used to decrease the error variance when\nserializing/persisting to lower precision. Truncation is the default\nbehavior in Chrono display formatting.  Either can be used to guarantee\nequality (e.g. for testing) when round-tripping through a lower precision\nformat.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:1981:8123","0:1982:8128"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:1983"]}}},"0:2324:3367":{"id":"0:2324:3367","crate_id":0,"name":"Nanosecond","span":{"filename":"src/format/mod.rs","begin":[143,4],"end":[143,14]},"visibility":"default","docs":"The number of nanoseconds since the last whole second (FW=PW=9).\nNote that this is *not* left-aligned;\nsee also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2754-0:3143:2185":{"id":"b:2:2754-0:3143:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2112:129":{"id":"0:2112:129","crate_id":0,"name":"Duration","span":{"filename":"src/duration.rs","begin":[61,0],"end":[64,1]},"visibility":"public","docs":"ISO 8601 time duration with nanosecond precision.\n\nThis also allows for the negative duration; see individual methods for details.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:30","a:2:42477:9166-0:2112:129","a:2:2966:253-0:2112:129","a:2:32825:244-0:2112:129","a:2:32882:9016-0:2112:129","a:2:42476:9167-0:2112:129","b:2:2754-0:2112:129","b:2:2744-0:2112:129","b:2:2748-0:2112:129","b:2:2441-0:2112:129","b:2:2444-0:2112:129","b:2:3558-0:2112:129","b:2:2759-0:2112:129","b:5:687-0:2112:129","b:5:5828-0:2112:129","0:1490","0:71","0:86","0:2115","0:247","0:2118","0:1301","0:73","0:65","0:1095","0:1503","0:1295","0:2129","0:498","0:68","0:81","0:2131","0:1279","0:2117","0:2120","0:2125","0:476","0:1109","0:75","0:254","0:1092","0:78","0:2121","0:1285","0:62","0:250","0:1487","0:2123","0:1500","0:490","0:468","0:243","0:1112","0:2127","0:90"]}}},"0:1104:206":{"id":"0:1104:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1980,4],"end":[1980,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:101-0:2147:2148":{"id":"0:101-0:2147:2148","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[497,4],"end":[497,24]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::Date","name":"Date","id":"0:2147:2148","glob":false}}},"0:2142":{"id":"0:2142","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[487,29],"end":[487,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2086:2759":{"id":"0:2086:2759","crate_id":0,"name":"with_ordinal","span":{"filename":"src/traits.rs","begin":[220,4],"end":[220,57]},"visibility":"default","docs":"Makes a new value with the day of year (starting from 1) changed.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (`with_ordinal(366)` in a non-leap year).\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n- The value for `ordinal` is out of range.\n\n[`DateTime<Tz>`]: crate::DateTime","links":{"crate::DateTime":"0:2154:2153"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2748-0:2287:3327":{"id":"b:2:2748-0:2287:3327","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:510:206":{"id":"0:510:206","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1472,4],"end":[1472,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:1590:134":{"id":"0:1590:134","crate_id":0,"name":"Err","span":{"filename":"src/offset/fixed.rs","begin":[122,4],"end":[122,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2118":{"id":"0:2118","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,22],"end":[53,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2795:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2119:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:922":{"id":"0:922","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[161,0],"end":[165,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:923:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2616":{"id":"0:2616","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[133,50],"end":[133,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2546:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2617:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42477:9166-0:2675:2162":{"id":"a:2:42477:9166-0:2675:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3558-0:2488:3453":{"id":"b:2:3558-0:2488:3453","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12898:41057":{"id":"2:12898:41057","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44503:8796","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215:2757":{"id":"0:215:2757","crate_id":0,"name":"with_day","span":{"filename":"src/date.rs","begin":[448,4],"end":[450,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2744-0:2656:5110":{"id":"b:2:2744-0:2656:5110","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2382:3419":{"id":"0:2382:3419","crate_id":0,"name":"TimezoneOffsetTripleColon","span":{"filename":"src/format/mod.rs","begin":[228,4],"end":[228,29]},"visibility":"default","docs":"Offset from the local time to UTC without minutes (`+09` or `-04` or `+00`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace.\nThe offset is limited from `-24` to `+24`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2331":{"id":"0:2331","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[100,9],"end":[100,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2332:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2333":{"id":"0:2333","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[100,16],"end":[100,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5828-0:2549:2174":{"id":"b:5:5828-0:2549:2174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5826:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5830:1605"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:687-0:2287:3327":{"id":"b:5:687-0:2287:3327","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2759-0:2508:171":{"id":"b:2:2759-0:2508:171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1409:2747":{"id":"0:1409:2747","crate_id":0,"name":"year","span":{"filename":"src/naive/isoweek.rs","begin":[81,4],"end":[83,5]},"visibility":"public","docs":"Returns the year number for this ISO week.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nlet d = NaiveDate::from_isoywd_opt(2015, 1, Weekday::Mon).unwrap();\nassert_eq!(d.iso_week().year(), 2015);\n```\n\nThis year number might not match the calendar year number.\nContinuing the example...\n\n```\n# use chrono::{NaiveDate, Datelike, Weekday};\n# let d = NaiveDate::from_isoywd_opt(2015, 1, Weekday::Mon).unwrap();\nassert_eq!(d.year(), 2014);\nassert_eq!(d, NaiveDate::from_ymd_opt(2014, 12, 29).unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3084":{"id":"0:3084","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,40],"end":[41,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1586:2780":{"id":"0:1586:2780","crate_id":0,"name":"west_opt","span":{"filename":"src/offset/fixed.rs","begin":[99,4],"end":[105,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.\n\nReturns `None` on the out-of-bound `secs`.\n\n# Example\n\n```\nuse chrono::{FixedOffset, TimeZone};\nlet hour = 3600;\nlet datetime = FixedOffset::west_opt(5 * hour)\n    .unwrap()\n    .with_ymd_and_hms(2016, 11, 08, 0, 0, 0)\n    .unwrap();\nassert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00-05:00\")\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["secs",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32882:9016-0:2508:171":{"id":"a:2:32882:9016-0:2508:171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:526:206":{"id":"0:526:206","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1526,4],"end":[1526,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"a:2:42477:9166-0:2267:3310":{"id":"a:2:42477:9166-0:2267:3310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2536":{"id":"0:2536","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[325,16],"end":[325,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2538:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42476:9167-0:2565:3498":{"id":"a:2:42476:9167-0:2565:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1099:301":{"id":"0:1099:301","crate_id":0,"name":"add","span":{"filename":"src/naive/date.rs","begin":[1939,4],"end":[1941,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["months",{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3012:2347","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1286:302":{"id":"0:1286:302","crate_id":0,"name":"add_assign","span":{"filename":"src/naive/datetime/mod.rs","begin":[1697,4],"end":[1699,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2448:3457":{"id":"0:2448:3457","crate_id":0,"name":"padding","span":{"filename":"src/format/mod.rs","begin":[289,4],"end":[289,20]},"visibility":"public","docs":"Pad the hour value to two digits.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1130:5724":{"id":"0:1130:5724","crate_id":0,"name":"size_hint","span":{"filename":"src/naive/date.rs","begin":[2146,4],"end":[2149,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1446:6847":{"id":"0:1446:6847","crate_id":0,"name":"from_hms","span":{"filename":"src/naive/time/mod.rs","begin":[246,4],"end":[248,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute and second.\n\nNo [leap second](#leap-second-handling) is allowed here;\nuse `NaiveTime::from_hms_*` methods with a subsecond parameter instead.\n\n# Panics\n\nPanics on invalid hour, minute and/or second.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_hms_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_hms_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2300:2156":{"id":"0:2300:2156","crate_id":0,"name":"Month","span":{"filename":"src/format/mod.rs","begin":[117,4],"end":[117,9]},"visibility":"default","docs":"Month (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2444-0:3040:2149":{"id":"b:2:2444-0:3040:2149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3174:3563":{"id":"0:3174:3563","crate_id":0,"name":"August","span":{"filename":"src/month.rs","begin":[57,4],"end":[57,14]},"visibility":"default","docs":"August","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"7","value":"7"}}}},"2:12889:36611":{"id":"2:12889:36611","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:12890:36612"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:201:2186":{"id":"0:201:2186","crate_id":0,"name":"month","span":{"filename":"src/date.rs","begin":[400,4],"end":[402,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32825:244-0:2637:5109":{"id":"a:2:32825:244-0:2637:5109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2021:3997":{"id":"0:2021:3997","crate_id":0,"name":"num_days_from_monday","span":{"filename":"src/weekday.rs","begin":[137,4],"end":[139,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Monday = 0.\n\n`w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n--------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.num_days_from_monday()`: | 0     | 1     | 2     | 3     | 4     | 5     | 6\n\n# Example\n\n```rust\n# use chrono::{Local, Datelike};\n// MTWRFSU is occasionally used as a single-letter abbreviation of the weekdays.\n// Use `num_days_from_monday` to index into the array.\nconst MTWRFSU: [char; 7] = ['M', 'T', 'W', 'R', 'F', 'S', 'U'];\n\nlet today = Local::now().weekday();\nprintln!(\"{}\", MTWRFSU[today.num_days_from_monday() as usize]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1460:6183":{"id":"0:1460:6183","crate_id":0,"name":"overflowing_add_signed","span":{"filename":"src/naive/time/mod.rs","begin":[585,4],"end":[646,5]},"visibility":"public","docs":"Adds given `Duration` to the current time, and also returns the number of *seconds*\nin the integral number of days ignored from the addition.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hms = |h, m, s| { NaiveTime::from_hms_opt(h, m, s).unwrap() };\n\nassert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(11)),\n           (from_hms(14, 4, 5), 0));\nassert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(23)),\n           (from_hms(2, 4, 5), 86_400));\nassert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(-7)),\n           (from_hms(20, 4, 5), -86_400));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"tuple":[{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"primitive":"i64"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2744-0:3060:2180":{"id":"b:2:2744-0:3060:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5830:1605":{"id":"5:5830:1605","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5828-0:3235:2221":{"id":"b:5:5828-0:3235:2221","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5826:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5830:1605"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1034:2652":{"id":"0:1034:2652","crate_id":0,"name":"and_hms","span":{"filename":"src/naive/date.rs","begin":[841,4],"end":[843,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute and second.\n\nNo [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;\nuse `NaiveDate::and_hms_*` methods with a subsecond parameter instead.\n\n# Panics\n\nPanics on invalid hour, minute and/or second.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `and_hms_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `and_hms_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2091:3604":{"id":"0:2091:3604","crate_id":0,"name":"hour12","span":{"filename":"src/traits.rs","begin":[274,4],"end":[281,5]},"visibility":"default","docs":"Returns the hour number from 1 to 12 with a boolean flag,\nwhich is false for AM and true for PM.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"bool"},{"primitive":"u32"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1219:2922":{"id":"0:1219:2922","crate_id":0,"name":"checked_add_months","span":{"filename":"src/naive/datetime/mod.rs","begin":[740,4],"end":[742,5]},"visibility":"public","docs":"Adds given `Months` to the current date and time.\n\nUses the last day of the month if the day does not exist in the resulting month.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Months, NaiveDate};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(1, 0, 0).unwrap()\n        .checked_add_months(Months::new(1)),\n    Some(NaiveDate::from_ymd_opt(2014, 2, 1).unwrap().and_hms_opt(1, 0, 0).unwrap())\n);\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(1, 0, 0).unwrap()\n        .checked_add_months(Months::new(core::i32::MAX as u32 + 1)),\n    None\n);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42477:9166-0:3143:2185":{"id":"a:2:42477:9166-0:3143:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5554":{"id":"5:5554","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5555:41758","5:5556:9365","5:5559:41759","5:5562:3624","5:5570:41760","5:5571:41761","5:5572:7799","5:5573:34276","5:5574:34277"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12960:41064":{"id":"2:12960:41064","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:719:3969":{"id":"0:719:3969","crate_id":0,"name":"to_naive_date","span":{"filename":"src/format/parsed.rs","begin":[296,4],"end":[491,5]},"visibility":"public","docs":"Returns a parsed naive date out of given fields.\n\nThis method is able to determine the date from given subset of fields:\n\n- Year, month, day.\n- Year, day of the year (ordinal).\n- Year, week number counted from Sunday or Monday, day of the week.\n- ISO week date.\n\nGregorian year and ISO week date year can have their century number (`*_div_100`) omitted,\nthe two-digit year is used to guess the century number then.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:351:2929":{"id":"0:351:2929","crate_id":0,"name":"checked_add_days","span":{"filename":"src/datetime/mod.rs","begin":[438,4],"end":[443,5]},"visibility":"public","docs":"Add a duration in [`Days`] to the date part of the `DateTime`.\n\n# Errors\n\nReturns `None` if:\n- The resulting date would be out of range.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`Days`":"0:2600:2177"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1316:301":{"id":"0:1316:301","crate_id":0,"name":"add","span":{"filename":"src/naive/datetime/mod.rs","begin":[2008,4],"end":[2010,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3012:2347","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2441-0:2196:2794":{"id":"b:2:2441-0:2196:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2078:2752":{"id":"0:2078:2752","crate_id":0,"name":"ordinal0","span":{"filename":"src/traits.rs","begin":[75,4],"end":[75,30]},"visibility":"default","docs":"Returns the day of year starting from 0.\n\nThe return value ranges from 0 to 365. (The last day of year differs by years.)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"5:5559:41759":{"id":"5:5559:41759","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7571:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2744-0:2112:129":{"id":"b:2:2744-0:2112:129","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2353":{"id":"0:2353","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[156,26],"end":[156,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2354:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2687:1146":{"id":"0:2687:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/datetime/mod.rs","begin":[76,30],"end":[76,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1529:60":{"id":"0:1529:60","crate_id":0,"name":"default","span":{"filename":"src/naive/time/mod.rs","begin":[1544,4],"end":[1546,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1873":{"id":"0:1873","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[158,0],"end":[184,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["timestamp_opt","from_utc_datetime","from_local_datetime","datetime_from_str","isoywd_opt","with_ymd_and_hms","yo_opt","from_local_date","from_utc_date","timestamp_millis_opt","timestamp_micros","ymd","timestamp_millis","timestamp_nanos","ymd_opt","isoywd","timestamp","yo"],"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1874:2164","0:1875:2702","0:1876:7287","0:1877:7289","0:1878:7296","0:1879:4031"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1940:7235":{"id":"0:1940:7235","crate_id":0,"name":"yo","span":{"filename":"src/offset/mod.rs","begin":[283,4],"end":[285,5]},"visibility":"default","docs":"Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date and/or invalid DOY.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_local_datetime()` with a `NaiveDateTime` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` with a `NaiveDateTime` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42477:9166-0:2565:3498":{"id":"a:2:42477:9166-0:2565:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:687-0:3152:2156":{"id":"b:5:687-0:3152:2156","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[470,0],"end":[470,83]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2584":{"id":"0:2584","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[379,16],"end":[379,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2585:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1100":{"id":"0:1100","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1965,0],"end":[1971,1]},"visibility":"default","docs":"Subtract `Months` from `NaiveDate`.\n\nThe result will be clamped to valid days in the resulting month, see `checked_sub_months` for\ndetails.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using `NaiveDate::checked_sub_months` to get an `Option` instead.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Months};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nassert_eq!(from_ymd(2014, 1, 1) - Months::new(11), from_ymd(2013, 2, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Months::new(12), from_ymd(2013, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Months::new(13), from_ymd(2012, 12, 1));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1101:206","0:1102:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42476:9167-0:3206:2188":{"id":"a:2:42476:9167-0:3206:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12982:41069":{"id":"2:12982:41069","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:8766"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:8782","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:2746:2163":{"id":"b:5:687-0:2746:2163","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2312:3353":{"id":"0:2312:3353","crate_id":0,"name":"WeekdayFromMon","span":{"filename":"src/format/mod.rs","begin":[129,4],"end":[129,18]},"visibility":"default","docs":"Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12894:2598":{"id":"2:12894:2598","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:44225:8791","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1271:3138":{"id":"0:1271:3138","crate_id":0,"name":"with_hour","span":{"filename":"src/naive/datetime/mod.rs","begin":[1520,4],"end":[1522,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the hour number changed.\n\nSee also the [`NaiveTime::with_hour`] method.\n\n# Errors\n\nReturns `None` if the value for `hour` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.with_hour(7),\n           Some(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(7, 34, 56, 789).unwrap()));\nassert_eq!(dt.with_hour(24), None);\n```","links":{"`NaiveTime::with_hour`":"0:1482:3138"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12998:41071":{"id":"2:12998:41071","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4736:41071"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44556:8810","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1947:3234":{"id":"0:1947:3234","crate_id":0,"name":"timestamp_millis_opt","span":{"filename":"src/offset/mod.rs","begin":[416,4],"end":[421,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap milliseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\n\nReturns `LocalResult::None` on out-of-range number of milliseconds\nand/or invalid nanosecond, otherwise always returns\n`LocalResult::Single`.\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone, LocalResult};\nmatch Utc.timestamp_millis_opt(1431648000) {\n    LocalResult::Single(dt) => assert_eq!(dt.timestamp(), 1431648),\n    _ => panic!(\"Incorrect timestamp_millis\"),\n};\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["millis",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2441-0:3235:2221":{"id":"b:2:2441-0:3235:2221","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1502:1565":{"id":"0:1502:1565","crate_id":0,"name":"sub","span":{"filename":"src/naive/time/mod.rs","begin":[1280,4],"end":[1282,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:400":{"id":"0:400","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[889,0],"end":[963,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1934:2165","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:402:2733","0:406:737"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12956:41063":{"id":"2:12956:41063","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:32:2400":{"id":"0:32:2400","crate_id":0,"name":"try_weeks","span":{"filename":"src/duration.rs","begin":[92,4],"end":[94,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nReturns `None` when the duration is out of bounds.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["weeks",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2775":{"id":"0:2775","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[22,36],"end":[22,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2776:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1542-0:1193:2172":{"id":"0:1542-0:1193:2172","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[20,54],"end":[20,66]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"self::datetime::MIN_DATETIME","name":"MIN_DATETIME","id":"0:1193:2172","glob":false}}},"0:704:3941":{"id":"0:704:3941","crate_id":0,"name":"set_day","span":{"filename":"src/format/parsed.rs","begin":[224,4],"end":[226,5]},"visibility":"public","docs":"Tries to set the [`day`](#structfield.day) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:7908-0:2656:5110":{"id":"b:2:7908-0:2656:5110","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8051:176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7904:163","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:7910:171","2:7911:9557","2:7912:847"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:2234:2605":{"id":"0:2234:2605","crate_id":0,"name":"StrftimeItems","span":{"filename":"src/format/strftime.rs","begin":[166,0],"end":[176,1]},"visibility":"public","docs":"Parsing iterator for `strftime`-like format strings.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:873","a:2:42477:9166-0:2234:2605","a:2:2966:253-0:2234:2605","a:2:32825:244-0:2234:2605","a:2:32882:9016-0:2234:2605","a:2:42476:9167-0:2234:2605","b:2:2754-0:2234:2605","b:2:2744-0:2234:2605","b:2:2748-0:2234:2605","b:2:2441-0:2234:2605","b:2:2444-0:2234:2605","b:2:3558-0:2234:2605","b:2:7908-0:2234:2605","b:2:2759-0:2234:2605","b:5:687-0:2234:2605","0:2238","0:877","0:2241"]}}},"b:2:2748-0:2134:2146":{"id":"b:2:2748-0:2134:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2759-0:2267:3310":{"id":"b:2:2759-0:2267:3310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2759-0:2595:2179":{"id":"b:2:2759-0:2595:2179","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2595:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2018:2697":{"id":"0:2018:2697","crate_id":0,"name":"pred","span":{"filename":"src/weekday.rs","begin":[86,4],"end":[96,5]},"visibility":"public","docs":"The previous day in the week.\n\n`w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.pred()`: | `Sun` | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat`","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:500:1566":{"id":"0:500:1566","crate_id":0,"name":"sub_assign","span":{"filename":"src/datetime/mod.rs","begin":[1415,4],"end":[1420,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2285:789":{"id":"0:2285:789","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[77,44],"end":[77,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2444-0:2147:2148":{"id":"b:2:2444-0:2147:2148","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1017:3998":{"id":"0:1017:3998","crate_id":0,"name":"from_isoywd_opt","span":{"filename":"src/naive/date.rs","begin":[410,4],"end":[440,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ISO week date](#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.\n\n# Errors\n\nReturns `None` if:\n- The specified week does not exist in that year (for example 2023 week 53).\n- The value for `week` is invalid (for example: `0`, `60`).\n- If the resulting date is out of range for `NaiveDate`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\nlet from_isoywd_opt = NaiveDate::from_isoywd_opt;\n\nassert_eq!(from_isoywd_opt(2015, 0, Weekday::Sun), None);\nassert_eq!(from_isoywd_opt(2015, 10, Weekday::Sun), Some(from_ymd(2015, 3, 8)));\nassert_eq!(from_isoywd_opt(2015, 30, Weekday::Mon), Some(from_ymd(2015, 7, 20)));\nassert_eq!(from_isoywd_opt(2015, 60, Weekday::Mon), None);\n\nassert_eq!(from_isoywd_opt(400000, 10, Weekday::Fri), None);\nassert_eq!(from_isoywd_opt(-400000, 10, Weekday::Sat), None);\n```\n\nThe year number of ISO week date may differ from that of the calendar date.\n\n```\n# use chrono::{NaiveDate, Weekday};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n# let from_isoywd_opt = NaiveDate::from_isoywd_opt;\n//           Mo Tu We Th Fr Sa Su\n// 2014-W52  22 23 24 25 26 27 28    has 4+ days of new year,\n// 2015-W01  29 30 31  1  2  3  4 <- so this is the first week\nassert_eq!(from_isoywd_opt(2014, 52, Weekday::Sun), Some(from_ymd(2014, 12, 28)));\nassert_eq!(from_isoywd_opt(2014, 53, Weekday::Mon), None);\nassert_eq!(from_isoywd_opt(2015, 1, Weekday::Mon), Some(from_ymd(2014, 12, 29)));\n\n// 2015-W52  21 22 23 24 25 26 27    has 4+ days of old year,\n// 2015-W53  28 29 30 31  1  2  3 <- so this is the last week\n// 2016-W01   4  5  6  7  8  9 10\nassert_eq!(from_isoywd_opt(2015, 52, Weekday::Sun), Some(from_ymd(2015, 12, 27)));\nassert_eq!(from_isoywd_opt(2015, 53, Weekday::Sun), Some(from_ymd(2016, 1, 3)));\nassert_eq!(from_isoywd_opt(2015, 54, Weekday::Mon), None);\nassert_eq!(from_isoywd_opt(2016, 1, Weekday::Mon), Some(from_ymd(2016, 1, 4)));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["year",{"primitive":"i32"}],["week",{"primitive":"u32"}],["weekday",{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1455:6045":{"id":"0:1455:6045","crate_id":0,"name":"from_num_seconds_from_midnight_opt","span":{"filename":"src/naive/time/mod.rs","begin":[471,4],"end":[476,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.\n\nThe nanosecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `secs % 60 == 59`.\n\n# Errors\n\nReturns `None` on invalid number of seconds and/or nanosecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_nsecs_opt = NaiveTime::from_num_seconds_from_midnight_opt;\n\nassert!(from_nsecs_opt(0, 0).is_some());\nassert!(from_nsecs_opt(86399, 999_999_999).is_some());\nassert!(from_nsecs_opt(86399, 1_999_999_999).is_some()); // a leap second after 23:59:59\nassert!(from_nsecs_opt(86_400, 0).is_none());\nassert!(from_nsecs_opt(86399, 2_000_000_000).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["secs",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1899:1779":{"id":"0:1899:1779","crate_id":0,"name":"now","span":{"filename":"src/offset/utc.rs","begin":[95,4],"end":[101,5]},"visibility":"public","docs":"Returns a `DateTime<Utc>` which corresponds to the current date and time in UTC.\n\nSee also the similar [`Local::now()`] which returns `DateTime<Local>`, i.e. the local date\nand time including offset from UTC.\n\n[`Local::now()`]: crate::Local::now\n\n# Example\n\n```\n# #![allow(unused_variables)]\n# use chrono::{FixedOffset, Utc};\n// Current time in UTC\nlet now_utc = Utc::now();\n\n// Current date in UTC\nlet today_utc = now_utc.date_naive();\n\n// Current time in some timezone (let's use +05:00)\nlet offset = FixedOffset::east_opt(5 * 60 * 60).unwrap();\nlet now_with_offset = Utc::now().with_timezone(&offset);\n```","links":{"crate::Local::now":"0:1872:1779"},"attrs":["#[cfg(not(all(target_arch = \"wasm32\", feature = \"wasmbind\",\nnot(any(target_os = \"emscripten\", target_os = \"wasi\")))))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:522:206":{"id":"0:522:206","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1508,4],"end":[1508,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:2320:3361":{"id":"0:2320:3361","crate_id":0,"name":"Minute","span":{"filename":"src/format/mod.rs","begin":[137,4],"end":[137,10]},"visibility":"default","docs":"The number of minutes since the last whole hour (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2510:3482":{"id":"0:2510:3482","crate_id":0,"name":"Literal","span":{"filename":"src/format/mod.rs","begin":[328,4],"end":[328,20]},"visibility":"default","docs":"A literally printed and parsed text.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2512:1764"]},"discriminant":null}}},"0:3237":{"id":"0:3237","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[598,9],"end":[598,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3238:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12893:13661":{"id":"2:12893:13661","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12055:457"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:44215:8792","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1512:1565":{"id":"0:1512:1565","crate_id":0,"name":"sub","span":{"filename":"src/naive/time/mod.rs","begin":[1333,4],"end":[1335,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2659:725":{"id":"0:2659:725","crate_id":0,"name":"fmt","span":{"filename":"src/naive/date.rs","begin":[2132,9],"end":[2132,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2151":{"id":"0:2151","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[58,9],"end":[58,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1934:2165","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:2153:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1981:8123":{"id":"0:1981:8123","crate_id":0,"name":"round_subsecs","span":{"filename":"src/round.rs","begin":[34,4],"end":[34,48]},"visibility":"default","docs":"Return a copy rounded to the specified number of subsecond digits. With\n9 or more digits, self is returned unmodified. Halfway values are\nrounded up (away from zero).\n\n# Example\n``` rust\n# use chrono::{SubsecRound, Timelike, Utc, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 11).unwrap().and_hms_milli_opt(12, 0, 0, 154).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.round_subsecs(2).nanosecond(), 150_000_000);\nassert_eq!(dt.round_subsecs(1).nanosecond(), 200_000_000);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["digits",{"primitive":"u16"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1102:1565":{"id":"0:1102:1565","crate_id":0,"name":"sub","span":{"filename":"src/naive/date.rs","begin":[1968,4],"end":[1970,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["months",{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3017:2352","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1232:737":{"id":"0:1232:737","crate_id":0,"name":"format","span":{"filename":"src/naive/datetime/mod.rs","begin":[1029,4],"end":[1031,5]},"visibility":"public","docs":"Formats the combined date and time with the specified format string.\nSee the [`format::strftime` module](crate::format::strftime)\non the supported escape sequences.\n\nThis returns a `DelayedFormat`,\nwhich gets converted to a string only when actual formatting happens.\nYou may use the `to_string` method to get a `String`,\nor just feed it into `print!` and other formatting macros.\n(In this way it avoids the redundant memory allocation.)\n\nA wrong format string does *not* issue an error immediately.\nRather, converting or formatting the `DelayedFormat` fails.\nYou are recommended to immediately use `DelayedFormat` for this reason.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2015-09-05 23:56:04\");\nassert_eq!(dt.format(\"around %l %p on %b %-d\").to_string(), \"around 11 PM on Sep 5\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# let dt = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(format!(\"{}\", dt.format(\"%Y-%m-%d %H:%M:%S\")), \"2015-09-05 23:56:04\");\nassert_eq!(format!(\"{}\", dt.format(\"around %l %p on %b %-d\")), \"around 11 PM on Sep 5\");\n```","links":{"crate::format::strftime":"0:860:3302"},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2025:725":{"id":"0:2025:725","crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[163,4],"end":[173,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:192:2733":{"id":"0:192:2733","crate_id":0,"name":"format_with_items","span":{"filename":"src/date.rs","begin":[339,4],"end":[345,5]},"visibility":"public","docs":"Formats the date with the specified formatting items.","links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8051:176","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2378:3413":{"id":"0:2378:3413","crate_id":0,"name":"TimezoneOffsetColon","span":{"filename":"src/format/mod.rs","begin":[216,4],"end":[216,23]},"visibility":"default","docs":"Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace.\nThe offset is limited from `-24:00` to `+24:00`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12923:36616":{"id":"2:12923:36616","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12558:8766","`DoubleEndedIterator`":"2:7942:128","prim@char":"1:12055:457","str::split":"2:12917:33500"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44257:8797","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:8782","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:460:1146":{"id":"0:460:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/datetime/mod.rs","begin":[1226,4],"end":[1228,5]},"visibility":"default","docs":"Compare two DateTimes based on their true time, ignoring time zones\n\n# Example\n\n```\nuse chrono::prelude::*;\n\nlet earlier = Utc.with_ymd_and_hms(2015, 5, 15, 2, 0, 0).unwrap().with_timezone(&FixedOffset::west_opt(1 * 3600).unwrap());\nlet later   = Utc.with_ymd_and_hms(2015, 5, 15, 3, 0, 0).unwrap().with_timezone(&FixedOffset::west_opt(5 * 3600).unwrap());\n\nassert_eq!(earlier.to_string(), \"2015-05-15 01:00:00 -01:00\");\nassert_eq!(later.to_string(), \"2015-05-14 22:00:00 -05:00\");\n\nassert!(later > earlier);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2673":{"id":"0:2673","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2132,62],"end":[2132,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2540:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2674:468"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2966:253-0:2656:5110":{"id":"a:2:2966:253-0:2656:5110","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3156:3557":{"id":"0:3156:3557","crate_id":0,"name":"February","span":{"filename":"src/month.rs","begin":[45,4],"end":[45,16]},"visibility":"default","docs":"February","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"1","value":"1"}}}},"0:1300:1565":{"id":"0:1300:1565","crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1857,4],"end":[1861,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:2462:3450":{"id":"b:2:2754-0:2462:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:219:2759":{"id":"0:219:2759","crate_id":0,"name":"with_ordinal","span":{"filename":"src/date.rs","begin":[458,4],"end":[460,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2107":{"id":"0:2107","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[615,0],"end":[619,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2108:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1948:2878":{"id":"0:1948:2878","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/offset/mod.rs","begin":[436,4],"end":[443,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap nanoseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\nUnlike [`timestamp_millis`](#method.timestamp_millis), this never\npanics.\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.timestamp_nanos(1431648000000000).timestamp(), 1431648);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["nanos",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2105":{"id":"0:2105","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[609,0],"end":[613,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2106:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2625":{"id":"0:2625","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[191,20],"end":[191,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2627":{"id":"0:2627","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[191,24],"end":[191,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2628:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:523:301":{"id":"0:523:301","crate_id":0,"name":"add","span":{"filename":"src/datetime/mod.rs","begin":[1510,4],"end":[1512,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3012:2347","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1026:2922":{"id":"0:1026:2922","crate_id":0,"name":"checked_add_months","span":{"filename":"src/naive/date.rs","begin":[636,4],"end":[645,5]},"visibility":"public","docs":"Add a duration in [`Months`] to the date\n\nUses the last day of the month if the day does not exist in the resulting month.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\n# use chrono::{NaiveDate, Months};\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_add_months(Months::new(6)),\n    Some(NaiveDate::from_ymd_opt(2022, 8, 20).unwrap())\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 7, 31).unwrap().checked_add_months(Months::new(2)),\n    Some(NaiveDate::from_ymd_opt(2022, 9, 30).unwrap())\n);\n```","links":{"`Months`":"0:3206:2188"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["months",{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1058:737":{"id":"0:1058:737","crate_id":0,"name":"format","span":{"filename":"src/naive/date.rs","begin":[1317,4],"end":[1319,5]},"visibility":"public","docs":"Formats the date with the specified format string.\nSee the [`format::strftime` module](crate::format::strftime)\non the supported escape sequences.\n\nThis returns a `DelayedFormat`,\nwhich gets converted to a string only when actual formatting happens.\nYou may use the `to_string` method to get a `String`,\nor just feed it into `print!` and other formatting macros.\n(In this way it avoids the redundant memory allocation.)\n\nA wrong format string does *not* issue an error immediately.\nRather, converting or formatting the `DelayedFormat` fails.\nYou are recommended to immediately use `DelayedFormat` for this reason.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(d.format(\"%Y-%m-%d\").to_string(), \"2015-09-05\");\nassert_eq!(d.format(\"%A, %-d %B, %C%y\").to_string(), \"Saturday, 5 September, 2015\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# let d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(format!(\"{}\", d.format(\"%Y-%m-%d\")), \"2015-09-05\");\nassert_eq!(format!(\"{}\", d.format(\"%A, %-d %B, %C%y\")), \"Saturday, 5 September, 2015\");\n```","links":{"crate::format::strftime":"0:860:3302"},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2054":{"id":"0:2054","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[231,0],"end":[242,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2055:1048","0:2056:8388"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:253:1565":{"id":"0:253:1565","crate_id":0,"name":"sub","span":{"filename":"src/date.rs","begin":[518,4],"end":[520,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2183":{"id":"0:2183","crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[509,9],"end":[509,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2184:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1118:752":{"id":"0:1118:752","crate_id":0,"name":"from","span":{"filename":"src/naive/date.rs","begin":[2090,4],"end":[2092,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["naive_datetime",{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2741":{"id":"0:2741","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,47],"end":[19,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2742:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2966:253-0:3235:2221":{"id":"a:2:2966:253-0:3235:2221","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:182:2645":{"id":"0:182:2645","crate_id":0,"name":"naive_local","span":{"filename":"src/date.rs","begin":[307,4],"end":[309,5]},"visibility":"public","docs":"Returns a view to the naive local date.\n\nThis is technically the same as [`naive_utc`](#method.naive_utc)\nbecause the offset is restricted to never exceed one day,\nbut provided for the consistency.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:31:2399":{"id":"0:31:2399","crate_id":0,"name":"weeks","span":{"filename":"src/duration.rs","begin":[84,4],"end":[86,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["weeks",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42476:9167-0:2161:2604":{"id":"a:2:42476:9167-0:2161:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1134":{"id":"0:1134","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2162,0],"end":[2162,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:8360:5119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2759-0:3108:2158":{"id":"b:2:2759-0:3108:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:447":{"id":"0:447","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1199,0],"end":[1199,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1221:3192":{"id":"0:1221:3192","crate_id":0,"name":"checked_sub_offset","span":{"filename":"src/naive/datetime/mod.rs","begin":[765,4],"end":[773,5]},"visibility":"public","docs":"Subtracts given `FixedOffset` from the current datetime.\nReturns `None` if the result would be outside the valid range for [`NaiveDateTime`].\n\nThis method is similar to [`checked_sub_signed`](#method.checked_sub_signed), but preserves\nleap seconds.","links":{"`NaiveDateTime`":"0:2675:2162"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:334:2864":{"id":"0:334:2864","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/datetime/mod.rs","begin":[218,4],"end":[220,5]},"visibility":"public","docs":"Returns the number of non-leap-milliseconds since January 1, 1970 UTC.\n\n# Example\n\n```\nuse chrono::{Utc, NaiveDate};\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_milli_opt(0, 0, 1, 444).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_millis(), 1_444);\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_milli_opt(1, 46, 40, 555).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_millis(), 1_000_000_000_555);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3205:468":{"id":"0:3205:468","crate_id":0,"name":"cmp","span":{"filename":"src/month.rs","begin":[31,62],"end":[31,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:348:2922":{"id":"0:348:2922","crate_id":0,"name":"checked_add_months","span":{"filename":"src/datetime/mod.rs","begin":[389,4],"end":[394,5]},"visibility":"public","docs":"Adds given `Months` to the current date and time.\n\nUses the last day of the month if the day does not exist in the resulting month.\n\nSee [`NaiveDate::checked_add_months`] for more details on behavior.\n\n# Errors\n\nReturns `None` if:\n- The resulting date would be out of range.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::checked_add_months`":"0:1026:2922"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1021:5310":{"id":"0:1021:5310","crate_id":0,"name":"from_weekday_of_month_opt","span":{"filename":"src/naive/date.rs","begin":[529,4],"end":[542,5]},"visibility":"public","docs":"Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\nsince the beginning of the given month. For instance, if you want the 2nd Friday of March\n2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.\n\n`n` is 1-indexed.\n\n# Errors\n\nReturns `None` if:\n- The specified day does not exist in that month (for example the 5th Monday of Apr. 2023).\n- The value for `month` or `n` is invalid.\n- `year` is out of range for `NaiveDate`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Weekday};\nassert_eq!(NaiveDate::from_weekday_of_month_opt(2017, 3, Weekday::Fri, 2),\n           NaiveDate::from_ymd_opt(2017, 3, 10))\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["weekday",{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["n",{"primitive":"u8"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1582":{"id":"0:1582","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[34,0],"end":[118,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1583:7344","0:1584:2779","0:1585:7356","0:1586:2780","0:1587:3605","0:1588:7362"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:687-0:3226:2187":{"id":"b:5:687-0:3226:2187","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2748-0:3047:2160":{"id":"b:2:2748-0:3047:2160","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32825:244-0:2287:3327":{"id":"a:2:32825:244-0:2287:3327","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:171:2698":{"id":"0:171:2698","crate_id":0,"name":"pred_opt","span":{"filename":"src/date.rs","begin":[236,4],"end":[238,5]},"visibility":"public","docs":"Makes a new `Date` for the prior date.\n\nReturns `None` when `self` is the first representable date.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:2444:3447":{"id":"b:5:687-0:2444:3447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3053":{"id":"0:3053","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,22],"end":[43,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3054:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2441-0:2355:2793":{"id":"b:2:2441-0:2355:2793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:392":{"id":"0:392","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[767,0],"end":[887,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:393:3058","0:395:3074","0:396:3087","0:397:2791"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2680:668":{"id":"0:2680:668","crate_id":0,"name":"eq","span":{"filename":"src/naive/datetime/mod.rs","begin":[76,9],"end":[76,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2330:1764":{"id":"0:2330:1764","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[152,13],"end":[152,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:3064:4023":{"id":"0:3064:4023","crate_id":0,"name":"Single","span":{"filename":"src/offset/mod.rs","begin":[47,4],"end":[47,13]},"visibility":"default","docs":"Given local time representation has a single unique result.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:3066:1764"]},"discriminant":null}}},"0:349:2713":{"id":"0:349:2713","crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/datetime/mod.rs","begin":[403,4],"end":[407,5]},"visibility":"public","docs":"Subtracts given `Duration` from the current date and time.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:423:2756":{"id":"0:423:2756","crate_id":0,"name":"with_month0","span":{"filename":"src/datetime/mod.rs","begin":[1047,4],"end":[1049,5]},"visibility":"default","docs":"Makes a new `DateTime` with the month number (starting from 0) changed.\n\nSee also the [`NaiveDate::with_month0`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist.\n- The value for `month0` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_month0`":"0:1086:2756"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2545":{"id":"0:2545","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[325,38],"end":[325,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2547:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:179:2718":{"id":"0:179:2718","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/date.rs","begin":[289,4],"end":[291,5]},"visibility":"public","docs":"Subtracts another `Date` from the current date.\nReturns a `Duration` of integral numbers.\n\nThis does not overflow or underflow at all,\nas all possible output fits in the range of `Duration`.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32825:244-0:3060:2180":{"id":"a:2:32825:244-0:3060:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1048:2697":{"id":"0:1048:2697","crate_id":0,"name":"pred","span":{"filename":"src/naive/date.rs","begin":[1109,4],"end":[1111,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the previous calendar date.\n\n# Panics\n\nPanics when `self` is the first representable date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `pred_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `pred_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:238:468":{"id":"0:238:468","crate_id":0,"name":"cmp","span":{"filename":"src/date.rs","begin":[487,4],"end":[489,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2061:725":{"id":"0:2061:725","crate_id":0,"name":"fmt","span":{"filename":"src/month.rs","begin":[260,4],"end":[262,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2402":{"id":"0:2402","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[171,27],"end":[171,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2404":{"id":"0:2404","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[171,31],"end":[171,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2405:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:435:2653":{"id":"0:435:2653","crate_id":0,"name":"hour","span":{"filename":"src/datetime/mod.rs","begin":[1118,4],"end":[1120,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2346:461":{"id":"0:2346:461","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[156,9],"end":[156,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1027:2927":{"id":"0:1027:2927","crate_id":0,"name":"checked_sub_months","span":{"filename":"src/naive/date.rs","begin":[671,4],"end":[681,5]},"visibility":"public","docs":"Subtract a duration in [`Months`] from the date\n\nUses the last day of the month if the day does not exist in the resulting month.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\n# use chrono::{NaiveDate, Months};\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_sub_months(Months::new(6)),\n    Some(NaiveDate::from_ymd_opt(2021, 8, 20).unwrap())\n);\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap()\n        .checked_sub_months(Months::new(core::i32::MAX as u32 + 1)),\n    None\n);\n```","links":{"`Months`":"0:3206:2188"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["months",{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2749":{"id":"0:2749","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[205,9],"end":[205,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2042":{"id":"0:2042","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[68,0],"end":[165,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2043:2690","0:2044:2697","0:2045:8377","0:2046:1025"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2089:2157":{"id":"0:2089:2157","crate_id":0,"name":"Timelike","span":{"filename":"src/traits.rs","begin":[267,0],"end":[328,1]},"visibility":"public","docs":"The common set of methods for time component.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:2090:2653","0:2091:3604","0:2092:3132","0:2093:3133","0:2094:3134","0:2095:3138","0:2096:3142","0:2097:3148","0:2098:3155","0:2099:6103"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:1266","0:433","0:1477"]}}},"0:2132:789":{"id":"0:2132:789","crate_id":0,"name":"hash","span":{"filename":"src/duration.rs","begin":[53,70],"end":[53,74]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2444-0:2267:3310":{"id":"b:2:2444-0:2267:3310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:396:3087":{"id":"0:396:3087","crate_id":0,"name":"parse_from_str","span":{"filename":"src/datetime/mod.rs","begin":[848,4],"end":[852,5]},"visibility":"public","docs":"Parses a string from a user-specified format into a `DateTime<FixedOffset>` value.\n\nNote that this method *requires a timezone* in the input string. See\n[`NaiveDateTime::parse_from_str`](./naive/struct.NaiveDateTime.html#method.parse_from_str)\nfor a version that does not require a timezone in the to-be-parsed str. The returned\n[`DateTime`] value will have a [`FixedOffset`] reflecting the parsed timezone.\n\nSee the [`format::strftime` module](./format/strftime/index.html) for supported format\nsequences.\n\n# Example\n\n```rust\nuse chrono::{DateTime, FixedOffset, TimeZone, NaiveDate};\n\nlet dt = DateTime::parse_from_str(\n    \"1983 Apr 13 12:09:14.274 +0000\", \"%Y %b %d %H:%M:%S%.3f %z\");\nassert_eq!(dt, Ok(FixedOffset::east_opt(0).unwrap().from_local_datetime(&NaiveDate::from_ymd_opt(1983, 4, 13).unwrap().and_hms_milli_opt(12, 9, 14, 274).unwrap()).unwrap()));\n```","links":{"`DateTime`":"0:2154:2153","`FixedOffset`":"0:2764:2159"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2478":{"id":"0:2478","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[293,22],"end":[293,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2479:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:205:2751":{"id":"0:205:2751","crate_id":0,"name":"ordinal","span":{"filename":"src/date.rs","begin":[416,4],"end":[418,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1264:2760":{"id":"0:1264:2760","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1425,4],"end":[1427,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of year (starting from 0) changed.\n\nSee also the [`NaiveDate::with_ordinal0`] method.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `ordinal0` is\ninvalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_ordinal0(59),\n           Some(NaiveDate::from_ymd_opt(2015, 3, 1).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_ordinal0(365), None); // 2015 had only 365 days\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2016, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_ordinal0(59),\n           Some(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_ordinal0(365),\n           Some(NaiveDate::from_ymd_opt(2016, 12, 31).unwrap().and_hms_opt(12, 34, 56).unwrap()));\n```","links":{"`NaiveDate::with_ordinal0`":"0:1091:2760"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2016":{"id":"0:2016","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[59,0],"end":[160,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2017:2690","0:2018:2697","0:2019:3603","0:2020:8276","0:2021:3997","0:2022:3602"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2675:2162":{"id":"0:2675:2162","crate_id":0,"name":"NaiveDateTime","span":{"filename":"src/naive/datetime/mod.rs","begin":[85,0],"end":[88,1]},"visibility":"public","docs":"ISO 8601 combined date and time without timezone.\n\n# Example\n\n`NaiveDateTime` is commonly created from [`NaiveDate`].\n\n```\nuse chrono::{NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(9, 10, 11).unwrap();\n# let _ = dt;\n```\n\nYou can use typical [date-like](Datelike) and [time-like](Timelike) methods,\nprovided that relevant traits are in the scope.\n\n```\n# use chrono::{NaiveDate, NaiveDateTime};\n# let dt: NaiveDateTime = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(9, 10, 11).unwrap();\nuse chrono::{Datelike, Timelike, Weekday};\n\nassert_eq!(dt.weekday(), Weekday::Fri);\nassert_eq!(dt.num_seconds_from_midnight(), 33011);\n```","links":{"Timelike":"0:2089:2157","`NaiveDate`":"0:2620:2161","Datelike":"0:2070:2155"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:1195","a:2:42477:9166-0:2675:2162","a:2:2966:253-0:2675:2162","a:2:32825:244-0:2675:2162","a:2:32882:9016-0:2675:2162","a:2:42476:9167-0:2675:2162","b:0:1983-0:2675:2162","b:2:2754-0:2675:2162","b:2:2744-0:2675:2162","b:2:2748-0:2675:2162","b:2:2441-0:2675:2162","b:2:2444-0:2675:2162","b:2:3558-0:2675:2162","b:2:2759-0:2675:2162","b:5:687-0:2675:2162","b:5:5828-0:2675:2162","0:1266","0:1305","0:2688","0:1308","0:1301","0:2690","0:1287","0:2678","0:1311","0:1295","0:2679","0:1317","0:1314","0:1240","0:1320","0:2681","0:1289","0:1997","0:1279","0:1292","0:1298","0:1282","0:2686","0:1303","0:1322","0:1285","0:1328","0:2691","0:1117","0:1324","0:2683","0:1242"]}}},"a:2:32825:244-0:3091:2183":{"id":"a:2:32825:244-0:3091:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:57:2466":{"id":"0:57:2466","crate_id":0,"name":"max_value","span":{"filename":"src/duration.rs","begin":[316,4],"end":[318,5]},"visibility":"public","docs":"The maximum possible `Duration`: `i64::MAX` milliseconds.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2193":{"id":"0:2193","crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[509,44],"end":[509,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2194:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1289":{"id":"0:1289","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1725,0],"end":[1732,1]},"visibility":"default","docs":"Add `FixedOffset` to `NaiveDateTime`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using `checked_add_offset` to get an `Option` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1290:206","0:1291:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1552-0:2595:2179":{"id":"0:1552-0:2595:2179","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[534,25],"end":[534,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"naive::NaiveWeek","name":"NaiveWeek","id":"0:2595:2179","glob":false}}},"0:2207:2184":{"id":"0:2207:2184","crate_id":0,"name":"weekday","span":{"filename":"src/format/parsed.rs","begin":[73,4],"end":[73,32]},"visibility":"public","docs":"Day of the week.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:2388:3428":{"id":"0:2388:3428","crate_id":0,"name":"TimezoneOffsetZ","span":{"filename":"src/format/mod.rs","begin":[241,4],"end":[241,19]},"visibility":"default","docs":"Same as [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.\nParsing allows an optional colon.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:208:2753":{"id":"0:208:2753","crate_id":0,"name":"iso_week","span":{"filename":"src/date.rs","begin":[428,4],"end":[430,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3177:3564":{"id":"0:3177:3564","crate_id":0,"name":"September","span":{"filename":"src/month.rs","begin":[59,4],"end":[59,17]},"visibility":"default","docs":"September","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"8","value":"8"}}}},"a:2:42476:9167-0:2147:2148":{"id":"a:2:42476:9167-0:2147:2148","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2350:789":{"id":"0:2350:789","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[156,20],"end":[156,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2553:725":{"id":"0:2553:725","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[367,9],"end":[367,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42476:9167-0:2729:2178":{"id":"a:2:42476:9167-0:2729:2178","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2444-0:2508:171":{"id":"b:2:2444-0:2508:171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2620:2161":{"id":"0:2620:2161","crate_id":0,"name":"NaiveDate","span":{"filename":"src/naive/date.rs","begin":[199,0],"end":[201,1]},"visibility":"public","docs":"ISO 8601 calendar date without timezone.\nAllows for every [proleptic Gregorian date] from Jan 1, 262145 BCE to Dec 31, 262143 CE.\nAlso supports the conversion from ISO 8601 ordinal and week date.\n\n# Calendar Date\n\nThe ISO 8601 **calendar date** follows the proleptic Gregorian calendar.\nIt is like a normal civil calendar but note some slight differences:\n\n* Dates before the Gregorian calendar's inception in 1582 are defined via the extrapolation.\n  Be careful, as historical dates are often noted in the Julian calendar and others\n  and the transition to Gregorian may differ across countries (as late as early 20C).\n\n  (Some example: Both Shakespeare from Britain and Cervantes from Spain seemingly died\n  on the same calendar date---April 23, 1616---but in the different calendar.\n  Britain used the Julian calendar at that time, so Shakespeare's death is later.)\n\n* ISO 8601 calendars has the year 0, which is 1 BCE (a year before 1 CE).\n  If you need a typical BCE/BC and CE/AD notation for year numbers,\n  use the [`Datelike::year_ce`] method.\n\n# Week Date\n\nThe ISO 8601 **week date** is a triple of year number, week number\nand [day of the week](Weekday) with the following rules:\n\n* A week consists of Monday through Sunday, and is always numbered within some year.\n  The week number ranges from 1 to 52 or 53 depending on the year.\n\n* The week 1 of given year is defined as the first week containing January 4 of that year,\n  or equivalently, the first week containing four or more days in that year.\n\n* The year number in the week date may *not* correspond to the actual Gregorian year.\n  For example, January 3, 2016 (Sunday) was on the last (53rd) week of 2015.\n\nChrono's date types default to the ISO 8601 [calendar date](#calendar-date), but\n[`Datelike::iso_week`] and [`Datelike::weekday`] methods can be used to get the corresponding\nweek date.\n\n# Ordinal Date\n\nThe ISO 8601 **ordinal date** is a pair of year number and day of the year (\"ordinal\").\nThe ordinal number ranges from 1 to 365 or 366 depending on the year.\nThe year number is the same as that of the [calendar date](#calendar-date).\n\nThis is currently the internal format of Chrono's date types.\n\n[proleptic Gregorian date]: crate::NaiveDate#calendar-date","links":{"`Datelike::iso_week`":"0:2080:2753","crate::NaiveDate#calendar-date":"0:2620:2161","`Datelike::weekday`":"0:2079:2184","`Datelike::year_ce`":"0:2072:8456","Weekday":"0:3108:2158"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:1008","a:2:42477:9166-0:2620:2161","a:2:2966:253-0:2620:2161","a:2:32825:244-0:2620:2161","a:2:32882:9016-0:2620:2161","a:2:42476:9167-0:2620:2161","b:2:2754-0:2620:2161","b:2:2744-0:2620:2161","b:2:2748-0:2620:2161","b:2:2441-0:2620:2161","b:2:2444-0:2620:2161","b:2:3558-0:2620:2161","b:2:2759-0:2620:2161","b:5:687-0:2620:2161","b:5:5828-0:2620:2161","0:1135","0:1114","0:1103","0:2622","0:2625","0:1097","0:1138","0:1074","0:1095","0:2623","0:1240","0:2635","0:1144","0:1106","0:2632","0:2627","0:1109","0:1092","0:2634","0:1140","0:2630","0:1117","0:1100","0:1112"]}}},"0:680:1048":{"id":"0:680:1048","crate_id":0,"name":"new","span":{"filename":"src/format/parsed.rs","begin":[128,4],"end":[130,5]},"visibility":"public","docs":"Returns the initial value of parsed parts.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2094:3134":{"id":"0:2094:3134","crate_id":0,"name":"nanosecond","span":{"filename":"src/traits.rs","begin":[292,4],"end":[292,32]},"visibility":"default","docs":"Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./naive/struct.NaiveTime.html#leap-second-handling).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:2340":{"id":"0:2340","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[100,38],"end":[100,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2341:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2444-0:2355:2793":{"id":"b:2:2444-0:2355:2793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:74:1566":{"id":"0:74:1566","crate_id":0,"name":"sub_assign","span":{"filename":"src/duration.rs","begin":[397,4],"end":[400,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1989:134":{"id":"0:1989:134","crate_id":0,"name":"Err","span":{"filename":"src/round.rs","begin":[106,4],"end":[106,32]},"visibility":"default","docs":"Error that can occur in rounding or truncating","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"std::error::Error","id":"2:2806:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:3143:2185":{"id":"0:3143:2185","crate_id":0,"name":"ParseWeekdayError","span":{"filename":"src/weekday.rs","begin":[231,0],"end":[233,1]},"visibility":"public","docs":"An error resulting from reading `Weekday` value with `FromStr`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42477:9166-0:3143:2185","a:2:2966:253-0:3143:2185","a:2:32825:244-0:3143:2185","a:2:32882:9016-0:3143:2185","a:2:42476:9167-0:3143:2185","b:2:2754-0:3143:2185","b:2:2744-0:3143:2185","b:2:2748-0:3143:2185","b:2:2441-0:3143:2185","b:2:2444-0:3143:2185","b:2:3558-0:3143:2185","b:2:2759-0:3143:2185","b:5:687-0:3143:2185","b:5:5828-0:3143:2185","0:3148","0:2035","0:2032","0:3150","0:3145","0:2033","0:3147"]}}},"a:2:32825:244-0:2565:3498":{"id":"a:2:32825:244-0:2565:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32825:244-0:3108:2158":{"id":"a:2:32825:244-0:3108:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1246:2749":{"id":"0:1246:2749","crate_id":0,"name":"day","span":{"filename":"src/naive/datetime/mod.rs","begin":[1171,4],"end":[1173,5]},"visibility":"default","docs":"Returns the day of month starting from 1.\n\nThe return value ranges from 1 to 31. (The last day of month differs by months.)\n\nSee also the [`NaiveDate::day`](./struct.NaiveDate.html#method.day) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.day(), 25);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2549:2174":{"id":"0:2549:2174","crate_id":0,"name":"ParseError","span":{"filename":"src/format/mod.rs","begin":[368,0],"end":[368,38]},"visibility":"public","docs":"An error from the `parse` function.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:929","a:2:42477:9166-0:2549:2174","a:2:2966:253-0:2549:2174","a:2:32825:244-0:2549:2174","a:2:32882:9016-0:2549:2174","a:2:42476:9167-0:2549:2174","b:2:2754-0:2549:2174","b:2:2744-0:2549:2174","b:2:2748-0:2549:2174","b:2:2441-0:2549:2174","b:2:2444-0:2549:2174","b:2:3558-0:2549:2174","b:2:2759-0:2549:2174","b:5:687-0:2549:2174","b:5:5828-0:2549:2174","0:2556","0:2559","0:933","0:935","0:2557","0:2552","0:2562","0:2561","0:2554"]}}},"a:2:42476:9167-0:2170:2154":{"id":"a:2:42476:9167-0:2170:2154","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:528":{"id":"0:528","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1533,0],"end":[1538,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:530:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2441-0:2675:2162":{"id":"b:2:2441-0:2675:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1511:206":{"id":"0:1511:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1330,4],"end":[1330,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:5:687-0:2549:2174":{"id":"b:5:687-0:2549:2174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:879:171":{"id":"0:879:171","crate_id":0,"name":"Item","span":{"filename":"src/format/strftime.rs","begin":[203,4],"end":[203,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}},"0:2339:725":{"id":"0:2339:725","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[100,31],"end":[100,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:2595:2179":{"id":"b:2:2754-0:2595:2179","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2595:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1449:2668":{"id":"0:1449:2668","crate_id":0,"name":"from_hms_milli_opt","span":{"filename":"src/naive/time/mod.rs","begin":[319,4],"end":[327,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and millisecond.\n\nThe millisecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute, second and/or millisecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hmsm_opt = NaiveTime::from_hms_milli_opt;\n\nassert!(from_hmsm_opt(0, 0, 0, 0).is_some());\nassert!(from_hmsm_opt(23, 59, 59, 999).is_some());\nassert!(from_hmsm_opt(23, 59, 59, 1_999).is_some()); // a leap second after 23:59:59\nassert!(from_hmsm_opt(24, 0, 0, 0).is_none());\nassert!(from_hmsm_opt(23, 60, 0, 0).is_none());\nassert!(from_hmsm_opt(23, 59, 60, 0).is_none());\nassert!(from_hmsm_opt(23, 59, 59, 2_000).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:114-0:3047:2160":{"id":"0:114-0:3047:2160","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[505,33],"end":[505,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::Utc","name":"Utc","id":"0:3047:2160","glob":false}}},"0:2328:3374":{"id":"0:2328:3374","crate_id":0,"name":"Internal","span":{"filename":"src/format/mod.rs","begin":[152,4],"end":[152,29]},"visibility":"default","docs":"Internal uses only.\n\nThis item exists so that one can add additional internal-only formatting\nwithout breaking major compatibility (as enum variants cannot be selectively private).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2330:1764"]},"discriminant":null}}},"0:121-0:1934:2165":{"id":"0:121-0:1934:2165","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[507,28],"end":[507,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::TimeZone","name":"TimeZone","id":"0:1934:2165","glob":false}}},"0:381":{"id":"0:381","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[724,0],"end":[732,1]},"visibility":"default","docs":"Convert a `DateTime<FixedOffset>` instance into a `DateTime<Local>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:382:752"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:355:2720":{"id":"0:355:2720","crate_id":0,"name":"naive_utc","span":{"filename":"src/datetime/mod.rs","begin":[475,4],"end":[477,5]},"visibility":"public","docs":"Returns a view to the naive UTC datetime.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3238:461":{"id":"0:3238:461","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[598,9],"end":[598,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32882:9016-0:2675:2162":{"id":"a:2:32882:9016-0:2675:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2027:135":{"id":"0:2027:135","crate_id":0,"name":"Error","span":{"filename":"src/weekday.rs","begin":[180,4],"end":[180,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:183:2726":{"id":"0:183:2726","crate_id":0,"name":"years_since","span":{"filename":"src/date.rs","begin":[313,4],"end":[315,5]},"visibility":"public","docs":"Returns the number of whole years from the given `base` until `self`.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["base",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:200:2747":{"id":"0:200:2747","crate_id":0,"name":"year","span":{"filename":"src/date.rs","begin":[396,4],"end":[398,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1996:8151":{"id":"0:1996:8151","crate_id":0,"name":"duration_trunc","span":{"filename":"src/round.rs","begin":[154,4],"end":[156,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["duration",{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1988:2182","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3222":{"id":"0:3222","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[227,50],"end":[227,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2546:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3223:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2175:3643":{"id":"0:2175:3643","crate_id":0,"name":"Micros","span":{"filename":"src/format/formatting.rs","begin":[519,4],"end":[519,10]},"visibility":"default","docs":"Use fixed 6 subsecond digits. This corresponds to [Fixed::Nanosecond6].","links":{"Fixed::Nanosecond6":"0:2372:3403"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:3220":{"id":"0:3220","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[227,39],"end":[227,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3221:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1933:2832":{"id":"0:1933:2832","crate_id":0,"name":"fix","span":{"filename":"src/offset/mod.rs","begin":[209,4],"end":[209,33]},"visibility":"default","docs":"Returns the fixed offset from UTC to the local time stored.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1548-0:2675:2162":{"id":"0:1548-0:2675:2162","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[533,33],"end":[533,46]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"inner":{"import":{"source":"naive::NaiveDateTime","name":"NaiveDateTime","id":"0:2675:2162","glob":false}}},"0:266:725":{"id":"0:266:725","crate_id":0,"name":"fmt","span":{"filename":"src/date.rs","begin":[550,4],"end":[553,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1002:5140":{"id":"0:1002:5140","crate_id":0,"name":"last_day","span":{"filename":"src/naive/date.rs","begin":[92,4],"end":[100,5]},"visibility":"public","docs":"Returns a date representing the last day of the week.\n\n# Panics\n\nPanics if the last day of the week happens to fall just out of range of `NaiveDate`\n(more than ca. 262,000 years away from common era).\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet date = NaiveDate::from_ymd_opt(2022, 4, 18).unwrap();\nlet week = date.week(Weekday::Mon);\nassert!(week.last_day() >= date);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2747:3255":{"id":"2:2747:3255","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2721:142"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2768:668":{"id":"0:2768:668","crate_id":0,"name":"eq","span":{"filename":"src/offset/fixed.rs","begin":[22,9],"end":[22,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2763:1628":{"id":"2:2763:1628","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2418":{"id":"0:2418","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[255,34],"end":[255,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:164:2682":{"id":"0:164:2682","crate_id":0,"name":"and_hms_nano","span":{"filename":"src/date.rs","begin":[181,4],"end":[183,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute, second and/or nanosecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use and_hms_nano_opt() instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use and_hms_nano_opt() instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:109-0:3152:2156":{"id":"0:109-0:3152:2156","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[504,30],"end":[504,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::Month","name":"Month","id":"0:3152:2156","glob":false}}},"b:2:2759-0:2746:2163":{"id":"b:2:2759-0:2746:2163","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1268:3132":{"id":"0:1268:3132","crate_id":0,"name":"minute","span":{"filename":"src/naive/datetime/mod.rs","begin":[1461,4],"end":[1463,5]},"visibility":"default","docs":"Returns the minute number from 0 to 59.\n\nSee also the [`NaiveTime::minute`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.minute(), 34);\n```","links":{"`NaiveTime::minute`":"0:1479:3132"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12875:339":{"id":"2:12875:339","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12876:36586","`u8`":"1:12072:1652"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1216:2900":{"id":"0:1216:2900","crate_id":0,"name":"timestamp_subsec_micros","span":{"filename":"src/naive/datetime/mod.rs","begin":[608,4],"end":[610,5]},"visibility":"public","docs":"Returns the number of microseconds since the last whole non-leap second.\n\nThe return value ranges from 0 to 999,999,\nor for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_nano_opt(9, 10, 11, 123_456_789).unwrap();\nassert_eq!(dt.timestamp_subsec_micros(), 123_456);\n\nlet dt = NaiveDate::from_ymd_opt(2015, 7, 1).unwrap().and_hms_nano_opt(8, 59, 59, 1_234_567_890).unwrap();\nassert_eq!(dt.timestamp_subsec_micros(), 1_234_567);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3067:4024":{"id":"0:3067:4024","crate_id":0,"name":"Ambiguous","span":{"filename":"src/offset/mod.rs","begin":[50,4],"end":[50,35]},"visibility":"default","docs":"Given local time representation has multiple results and thus ambiguous.\nThis can occur when, for example, the negative timezone transition.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:3069:1764","0:3070:1765"]},"discriminant":null}}},"0:1006:2168":{"id":"0:1006:2168","crate_id":0,"name":"MIN_DATE","span":{"filename":"src/naive/date.rs","begin":[205,0],"end":[205,47]},"visibility":"public","docs":"The minimum possible `NaiveDate` (January 1, 262145 BCE).","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDate::MIN instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDate::MIN instead"},"inner":{"constant":{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"NaiveDate::MIN","value":null,"is_literal":false}}},"b:2:2754-0:2675:2162":{"id":"b:2:2754-0:2675:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3047:2160":{"id":"0:3047:2160","crate_id":0,"name":"Utc","span":{"filename":"src/offset/utc.rs","begin":[52,0],"end":[52,15]},"visibility":"public","docs":"The UTC time zone. This is the most efficient time zone when you don't need the local time.\nIt is also used as an offset (which is also a dummy type).\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non the UTC struct is the preferred way to construct `DateTime<Utc>`\ninstances.\n\n# Example\n\n```\nuse chrono::{TimeZone, NaiveDateTime, Utc};\n\nlet dt = Utc.from_utc_datetime(&NaiveDateTime::from_timestamp_opt(61, 0).unwrap());\n\nassert_eq!(Utc.timestamp_opt(61, 0).unwrap(), dt);\nassert_eq!(Utc.with_ymd_and_hms(1970, 1, 1, 0, 1, 1).unwrap(), dt);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["0:1897","a:2:42477:9166-0:3047:2160","a:2:2966:253-0:3047:2160","a:2:32825:244-0:3047:2160","a:2:32882:9016-0:3047:2160","a:2:42476:9167-0:3047:2160","b:2:2754-0:3047:2160","b:2:2744-0:3047:2160","b:2:2748-0:3047:2160","b:2:2441-0:3047:2160","b:2:2444-0:3047:2160","b:2:3558-0:3047:2160","b:2:2759-0:3047:2160","b:5:687-0:3047:2160","b:5:5828-0:3047:2160","0:1907","0:3057","0:3050","0:1909","0:1900","0:3053","0:3055","0:1911","0:3052","0:3049"]}}},"0:1902:2702":{"id":"0:1902:2702","crate_id":0,"name":"from_offset","span":{"filename":"src/offset/utc.rs","begin":[119,4],"end":[121,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_state",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3212":{"id":"0:3212","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[227,22],"end":[227,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3213:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:151":{"id":"0:151","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[74,0],"end":[321,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:153:2639","0:154:2643","0:155:2652","0:156:2656","0:158:2664","0:159:2666","0:161:2673","0:162:2675","0:164:2682","0:165:2684","0:167:2690","0:168:2691","0:170:2697","0:171:2698","0:173:1099","0:174:2646","0:175:2705","0:177:2711","0:178:2713","0:179:2718","0:181:2720","0:182:2645","0:183:2726","0:184:2633","0:185:2636"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2744-0:2343:3375":{"id":"b:2:2744-0:2343:3375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12938:36622":{"id":"2:12938:36622","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1411:6693":{"id":"0:1411:6693","crate_id":0,"name":"week0","span":{"filename":"src/naive/isoweek.rs","begin":[115,4],"end":[117,5]},"visibility":"public","docs":"Returns the ISO week number starting from 0.\n\nThe return value ranges from 0 to 52. (The last week of year differs by years.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nlet d = NaiveDate::from_isoywd_opt(2015, 15, Weekday::Mon).unwrap();\nassert_eq!(d.iso_week().week0(), 14);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12991:34279":{"id":"2:12991:34279","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2516:3315":{"id":"0:2516:3315","crate_id":0,"name":"Space","span":{"filename":"src/format/mod.rs","begin":[333,4],"end":[333,18]},"visibility":"default","docs":"Whitespace. Prints literally but reads zero or more whitespace.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2518:1764"]},"discriminant":null}}},"0:77:1017":{"id":"0:77:1017","crate_id":0,"name":"mul","span":{"filename":"src/duration.rs","begin":[406,4],"end":[412,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2513:3484":{"id":"0:2513:3484","crate_id":0,"name":"OwnedLiteral","span":{"filename":"src/format/mod.rs","begin":[331,4],"end":[331,26]},"visibility":"default","docs":"Same as `Literal` but with the string owned by the item.","links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2515:1764"]},"discriminant":null}}},"0:1290:206":{"id":"0:1290:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1726,4],"end":[1726,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2441-0:2112:129":{"id":"b:2:2441-0:2112:129","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2748-0:2147:2148":{"id":"b:2:2748-0:2147:2148","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1447:2659":{"id":"0:1447:2659","crate_id":0,"name":"from_hms_opt","span":{"filename":"src/naive/time/mod.rs","begin":[274,4],"end":[276,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute and second.\n\nThe millisecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute and/or second.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hms_opt = NaiveTime::from_hms_opt;\n\nassert!(from_hms_opt(0, 0, 0).is_some());\nassert!(from_hms_opt(23, 59, 59).is_some());\nassert!(from_hms_opt(24, 0, 0).is_none());\nassert!(from_hms_opt(23, 60, 0).is_none());\nassert!(from_hms_opt(23, 59, 60).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3228":{"id":"0:3228","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[245,9],"end":[245,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3229:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2196:2794":{"id":"0:2196:2794","crate_id":0,"name":"Parsed","span":{"filename":"src/format/parsed.rs","begin":[22,0],"end":[107,1]},"visibility":"public","docs":"Parsed parts of date and time. There are two classes of methods:\n\n- `set_*` methods try to set given field(s) while checking for the consistency.\n  It may or may not check for the range constraint immediately (for efficiency reasons).\n\n- `to_*` methods try to make a concrete date and time value out of set fields.\n  It fully checks any remaining out-of-range conditions and inconsistent/impossible fields.","links":{},"attrs":["#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:2197:2747","0:2198:3876","0:2199:3878","0:2200:3882","0:2201:3887","0:2202:3889","0:2203:2186","0:2204:3594","0:2205:3597","0:2206:2210","0:2207:2184","0:2208:2751","0:2209:2749","0:2210:3900","0:2211:3902","0:2212:3132","0:2213:3133","0:2214:3134","0:2215:2857","0:2216:1099"],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:679","a:2:42477:9166-0:2196:2794","a:2:2966:253-0:2196:2794","a:2:32825:244-0:2196:2794","a:2:32882:9016-0:2196:2794","a:2:42476:9167-0:2196:2794","b:2:2754-0:2196:2794","b:2:2744-0:2196:2794","b:2:2748-0:2196:2794","b:2:2441-0:2196:2794","b:2:2444-0:2196:2794","b:2:3558-0:2196:2794","b:2:2759-0:2196:2794","b:5:687-0:2196:2794","0:2229","0:2220","0:2225","0:2223","0:2218","0:2227","0:2221"]}}},"0:471:301":{"id":"0:471:301","crate_id":0,"name":"add","span":{"filename":"src/datetime/mod.rs","begin":[1257,4],"end":[1259,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:475:301":{"id":"0:475:301","crate_id":0,"name":"add","span":{"filename":"src/datetime/mod.rs","begin":[1276,4],"end":[1280,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:0:1983-0:2675:2162":{"id":"b:0:1983-0:2675:2162","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[49,0],"end":[77,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Timelike","id":"0:2089:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"SubsecRound","id":"0:1980:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1985:8123","0:1986:8128"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2759-0:2549:2174":{"id":"b:2:2759-0:2549:2174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1492":{"id":"0:1492","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1190,0],"end":[1202,1]},"visibility":"default","docs":"Add `std::time::Duration` to `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the addition ignores integral number of days.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1493:206","0:1494:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2218":{"id":"0:2218","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[21,9],"end":[21,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2219:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2650":{"id":"0:2650","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2096,46],"end":[2096,56]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2546:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2651:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2754-0:2147:2148":{"id":"b:2:2754-0:2147:2148","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1078:2749":{"id":"0:1078:2749","crate_id":0,"name":"day","span":{"filename":"src/naive/date.rs","begin":[1582,4],"end":[1584,5]},"visibility":"default","docs":"Returns the day of month starting from 1.\n\nThe return value ranges from 1 to 31. (The last day of month differs by months.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().day(), 8);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().day(), 14);\n```\n\nCombined with [`NaiveDate::pred`](#method.pred),\none can determine the number of days in a particular month.\n(Note that this panics when `year` is out of range.)\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nfn ndays_in_month(year: i32, month: u32) -> u32 {\n    // the first day of the next month...\n    let (y, m) = if month == 12 { (year + 1, 1) } else { (year, month + 1) };\n    let d = NaiveDate::from_ymd_opt(y, m, 1).unwrap();\n\n    // ...is preceded by the last day of the original month\n    d.pred_opt().unwrap().day()\n}\n\nassert_eq!(ndays_in_month(2015, 8), 31);\nassert_eq!(ndays_in_month(2015, 9), 30);\nassert_eq!(ndays_in_month(2015, 12), 31);\nassert_eq!(ndays_in_month(2016, 2), 29);\nassert_eq!(ndays_in_month(2017, 2), 28);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2093:3133":{"id":"0:2093:3133","crate_id":0,"name":"second","span":{"filename":"src/traits.rs","begin":[287,4],"end":[287,28]},"visibility":"default","docs":"Returns the second number from 0 to 59.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:44:2436":{"id":"0:44:2436","crate_id":0,"name":"num_weeks","span":{"filename":"src/duration.rs","begin":[193,4],"end":[195,5]},"visibility":"public","docs":"Returns the total number of whole weeks in the duration.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2686":{"id":"0:2686","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[76,30],"end":[76,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2546:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2687:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:7910:171":{"id":"2:7910:171","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"Iterator","id":"2:8051:176","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:1242":{"id":"0:1242","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1100,0],"end":[1428,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["year_ce","num_days_from_ce"],"trait":{"name":"Datelike","id":"0:2070:2155","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1243:2747","0:1244:2186","0:1245:2748","0:1246:2749","0:1247:2750","0:1248:2751","0:1249:2752","0:1250:2184","0:1251:2753","0:1252:2754","0:1254:2755","0:1256:2756","0:1258:2757","0:1260:2758","0:1262:2759","0:1264:2760"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2095:3138":{"id":"0:2095:3138","crate_id":0,"name":"with_hour","span":{"filename":"src/traits.rs","begin":[297,4],"end":[297,51]},"visibility":"default","docs":"Makes a new value with the hour number changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:2037-0:3143:2185":{"id":"0:2037-0:3143:2185","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[549,0],"end":[549,35]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"weekday::ParseWeekdayError","name":"ParseWeekdayError","id":"0:3143:2185","glob":false}}},"0:3244":{"id":"0:3244","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[598,28],"end":[598,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3245:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2444-0:3091:2183":{"id":"b:2:2444-0:3091:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2447:3455":{"id":"0:2447:3455","crate_id":0,"name":"allow_zulu","span":{"filename":"src/format/mod.rs","begin":[287,4],"end":[287,24]},"visibility":"public","docs":"Represent `+00:00` as `Z`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"b:5:687-0:3143:2185":{"id":"b:5:687-0:3143:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1968:2181":{"id":"0:1968:2181","crate_id":0,"name":"round","span":{"filename":"src/round.rs","begin":[4,0],"end":[776,1]},"visibility":"public","docs":"Functionality for rounding or truncating a `DateTime` by a `Duration`.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:1980:2152","0:1988:2182","0:3091:2183"],"is_stripped":false}}},"b:2:2444-0:3235:2221":{"id":"b:2:2444-0:3235:2221","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42477:9166-0:2355:2793":{"id":"a:2:42477:9166-0:2355:2793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1203:2791":{"id":"0:1203:2791","crate_id":0,"name":"parse_and_remainder","span":{"filename":"src/naive/datetime/mod.rs","begin":[376,4],"end":[380,5]},"visibility":"public","docs":"Parses a string with the specified format string and returns a new `NaiveDateTime`, and a\nslice with the remaining portion of the string.\nSee the [`format::strftime` module](crate::format::strftime)\non the supported escape sequences.\n\nSimilar to [`parse_from_str`](#method.parse_from_str).\n\n# Example\n\n```rust\n# use chrono::{NaiveDate, NaiveDateTime};\nlet (datetime, remainder) = NaiveDateTime::parse_and_remainder(\n    \"2015-02-18 23:16:09 trailing text\", \"%Y-%m-%d %H:%M:%S\").unwrap();\nassert_eq!(\n    datetime,\n    NaiveDate::from_ymd_opt(2015, 2, 18).unwrap().and_hms_opt(23, 16, 9).unwrap()\n);\nassert_eq!(remainder, \" trailing text\");\n```","links":{"crate::format::strftime":"0:860:3302"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3171:3562":{"id":"0:3171:3562","crate_id":0,"name":"July","span":{"filename":"src/month.rs","begin":[55,4],"end":[55,12]},"visibility":"default","docs":"July","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"6","value":"6"}}}},"a:2:2966:253-0:2600:2177":{"id":"a:2:2966:253-0:2600:2177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:347:2711":{"id":"0:347:2711","crate_id":0,"name":"checked_add_signed","span":{"filename":"src/datetime/mod.rs","begin":[370,4],"end":[374,5]},"visibility":"public","docs":"Adds given `Duration` to the current date and time.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1091:2760":{"id":"0:1091:2760","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/naive/date.rs","begin":[1853,4],"end":[1856,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of year (starting from 0) changed.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `ordinal0` is\ninvalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().with_ordinal0(59),\n           Some(NaiveDate::from_ymd_opt(2015, 3, 1).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().with_ordinal0(365),\n           None); // 2015 had only 365 days\n\nassert_eq!(NaiveDate::from_ymd_opt(2016, 1, 1).unwrap().with_ordinal0(59),\n           Some(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2016, 1, 1).unwrap().with_ordinal0(365),\n           Some(NaiveDate::from_ymd_opt(2016, 12, 31).unwrap()));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2343:3375":{"id":"0:2343:3375","crate_id":0,"name":"InternalNumeric","span":{"filename":"src/format/mod.rs","begin":[157,0],"end":[159,1]},"visibility":"public","docs":"An opaque type representing numeric item types for internal uses only.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42477:9166-0:2343:3375","a:2:2966:253-0:2343:3375","a:2:32825:244-0:2343:3375","a:2:32882:9016-0:2343:3375","a:2:42476:9167-0:2343:3375","b:2:2754-0:2343:3375","b:2:2744-0:2343:3375","b:2:2748-0:2343:3375","b:2:2441-0:2343:3375","b:2:2444-0:2343:3375","b:2:3558-0:2343:3375","b:2:2759-0:2343:3375","b:5:687-0:2343:3375","0:922","0:2345","0:2349","0:2352","0:2353","0:2347"]}}},"0:1515:1565":{"id":"0:1515:1565","crate_id":0,"name":"sub","span":{"filename":"src/naive/time/mod.rs","begin":[1387,4],"end":[1389,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2376:3408":{"id":"0:2376:3408","crate_id":0,"name":"TimezoneName","span":{"filename":"src/format/mod.rs","begin":[210,4],"end":[210,16]},"visibility":"default","docs":"Timezone name.\n\nIt does not support parsing, its use in the parser is an immediate failure.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:5:5828-0:3047:2160":{"id":"b:5:5828-0:3047:2160","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5826:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5830:1605"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12941:36623":{"id":"2:12941:36623","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:8782","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5555:41758":{"id":"5:5555:41758","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:3299","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:281:3299","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3066:1764":{"id":"0:3066:1764","crate_id":0,"name":"0","span":{"filename":"src/offset/mod.rs","begin":[47,11],"end":[47,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"b:2:2444-0:2287:3327":{"id":"b:2:2444-0:2287:3327","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2441-0:3060:2180":{"id":"b:2:2441-0:3060:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:358:2726":{"id":"0:358:2726","crate_id":0,"name":"years_since","span":{"filename":"src/datetime/mod.rs","begin":[511,4],"end":[525,5]},"visibility":"public","docs":"Retrieve the elapsed years from now to the given [`DateTime`].\n\n# Errors\n\nReturns `None` if `base < self`.","links":{"`DateTime`":"0:2154:2153"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["base",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:371":{"id":"0:371","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[677,0],"end":[681,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2795:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:372:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2622":{"id":"0:2622","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[191,9],"end":[191,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12935:36620":{"id":"2:12935:36620","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12055:457","str::splitn":"2:12932:36618","self::pattern":"2:12558:8766"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44361:8801","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:8782","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2966:253-0:2170:2154":{"id":"a:2:2966:253-0:2170:2154","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:687-0:2147:2148":{"id":"b:5:687-0:2147:2148","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2658":{"id":"0:2658","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2132,9],"end":[2132,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2659:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3058:789":{"id":"0:3058:789","crate_id":0,"name":"hash","span":{"filename":"src/offset/utc.rs","begin":[43,37],"end":[43,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1135":{"id":"0:1135","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2186,0],"end":[2205,1]},"visibility":"default","docs":"The `Debug` output of the naive date `d` is the same as\n[`d.format(\"%Y-%m-%d\")`](crate::format::strftime).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(2015,  9,  5).unwrap()), \"2015-09-05\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(   0,  1,  1).unwrap()), \"0000-01-01\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(9999, 12, 31).unwrap()), \"9999-12-31\");\n```\n\nISO 8601 requires an explicit sign for years before 1 BCE or after 9999 CE.\n\n```\n# use chrono::NaiveDate;\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(   -1,  1,  1).unwrap()),  \"-0001-01-01\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(10000, 12, 31).unwrap()), \"+10000-12-31\");\n```","links":{"crate::format::strftime":"0:860:3302"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1136:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2744-0:2444:3447":{"id":"b:2:2744-0:2444:3447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1479:3132":{"id":"0:1479:3132","crate_id":0,"name":"minute","span":{"filename":"src/naive/time/mod.rs","begin":[920,4],"end":[922,5]},"visibility":"default","docs":"Returns the minute number from 0 to 59.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(0, 0, 0).unwrap().minute(), 0);\nassert_eq!(NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().minute(), 56);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1108:1565":{"id":"0:1108:1565","crate_id":0,"name":"sub","span":{"filename":"src/naive/date.rs","begin":[1996,4],"end":[1998,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3017:2352","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2759-0:2637:5109":{"id":"b:2:2759-0:2637:5109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2204:3594":{"id":"0:2204:3594","crate_id":0,"name":"week_from_sun","span":{"filename":"src/format/parsed.rs","begin":[62,4],"end":[62,34]},"visibility":"public","docs":"Week number, where the week 1 starts at the first Sunday of January\n(0--53, 1--53 or 1--52 depending on the year).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"0:1454:6899":{"id":"0:1454:6899","crate_id":0,"name":"from_num_seconds_from_midnight","span":{"filename":"src/naive/time/mod.rs","begin":[443,4],"end":[445,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.\n\nThe nanosecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `secs % 60 == 59`.\n\n# Panics\n\nPanics on invalid number of seconds and/or nanosecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_num_seconds_from_midnight_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_num_seconds_from_midnight_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["secs",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:921-0:2234:2605":{"id":"0:921-0:2234:2605","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[70,0],"end":[70,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"strftime::StrftimeItems","name":"StrftimeItems","id":"0:2234:2605","glob":false}}},"2:12887:36607":{"id":"2:12887:36607","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:12889:36611","str::split_at_mut":"2:12888:36608"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2354:668":{"id":"0:2354:668","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[156,26],"end":[156,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1519":{"id":"0:1519","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1476,0],"end":[1480,1]},"visibility":"default","docs":"The `Display` output of the naive time `t` is the same as\n[`t.format(\"%H:%M:%S%.f\")`](crate::format::strftime).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_opt(23, 56, 4).unwrap()),              \"23:56:04\");\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_milli_opt(23, 56, 4, 12).unwrap()),    \"23:56:04.012\");\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_micro_opt(23, 56, 4, 1234).unwrap()),  \"23:56:04.001234\");\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_nano_opt(23, 56, 4, 123456).unwrap()), \"23:56:04.000123456\");\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveTime;\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_milli_opt(6, 59, 59, 1_500).unwrap()), \"06:59:60.500\");\n```","links":{"crate::format::strftime":"0:860:3302"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1520:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1085:2755":{"id":"0:1085:2755","crate_id":0,"name":"with_month","span":{"filename":"src/naive/date.rs","begin":[1733,4],"end":[1735,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the month number (starting from 1) changed.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `month` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_month(10),\n           Some(NaiveDate::from_ymd_opt(2015, 10, 8).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_month(13), None); // no month 13\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().with_month(2), None); // no February 30\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2000:8151":{"id":"0:2000:8151","crate_id":0,"name":"duration_trunc","span":{"filename":"src/round.rs","begin":[166,4],"end":[168,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["duration",{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1988:2182","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:2656:5110":{"id":"b:5:687-0:2656:5110","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32882:9016-0:2462:3450":{"id":"a:2:32882:9016-0:2462:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2085:2758":{"id":"0:2085:2758","crate_id":0,"name":"with_day0","span":{"filename":"src/traits.rs","begin":[206,4],"end":[206,51]},"visibility":"default","docs":"Makes a new value with the day of month (starting from 0) changed.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (for example `day0(30)` in April).\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n- The value for `day0` is out of range.\n\n[`DateTime<Tz>`]: crate::DateTime","links":{"crate::DateTime":"0:2154:2153"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:5:5828-0:2147:2148":{"id":"b:5:5828-0:2147:2148","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5826:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["5:5830:1605"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:780:2791":{"id":"0:780:2791","crate_id":0,"name":"parse_and_remainder","span":{"filename":"src/format/parse.rs","begin":[265,0],"end":[279,1]},"visibility":"public","docs":"Tries to parse given string into `parsed` with given formatting items.\nReturns `Ok` with a slice of the unparsed remainder.\n\nThis particular date and time parser is:\n\n- Greedy. It will consume the longest possible prefix.\n  For example, `April` is always consumed entirely when the long month name is requested;\n  it equally accepts `Apr`, but prefers the longer prefix in this case.\n\n- Padding-agnostic (for numeric items).\n  The [`Pad`](./enum.Pad.html) field is completely ignored,\n  so one can prepend any number of zeroes before numbers.\n\n- (Still) obeying the intrinsic parsing width. This allows, for example, parsing `HHMMSS`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["parsed",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"super::Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["s",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"primitive":"str"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"super::ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8051:176","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"super::Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2335:668":{"id":"0:2335:668","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[100,16],"end":[100,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2966:253-0:2154:2153":{"id":"a:2:2966:253-0:2154:2153","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2455":{"id":"0:2455","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[280,29],"end":[280,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2456:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2759-0:2600:2177":{"id":"b:2:2759-0:2600:2177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2186":{"id":"0:2186","crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[509,22],"end":[509,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2187:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1260:2758":{"id":"0:1260:2758","crate_id":0,"name":"with_day0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1365,4],"end":[1367,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of month (starting from 0) changed.\n\nSee also the [`NaiveDate::with_day0`] method.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `day0` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_day0(29), Some(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_day0(30), None); // no September 31\n```","links":{"`NaiveDate::with_day0`":"0:1088:2758"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:231":{"id":"0:231","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[478,0],"end":[478,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42477:9166-0:2764:2159":{"id":"a:2:42477:9166-0:2764:2159","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:402:2733":{"id":"0:402:2733","crate_id":0,"name":"format_with_items","span":{"filename":"src/datetime/mod.rs","begin":[897,4],"end":[904,5]},"visibility":"public","docs":"Formats the combined date and time with the specified formatting items.","links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8051:176","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:412:2748":{"id":"0:412:2748","crate_id":0,"name":"month0","span":{"filename":"src/datetime/mod.rs","begin":[975,4],"end":[977,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3558-0:2267:3310":{"id":"b:2:3558-0:2267:3310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1291:301":{"id":"0:1291:301","crate_id":0,"name":"add","span":{"filename":"src/naive/datetime/mod.rs","begin":[1729,4],"end":[1731,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3076":{"id":"0:3076","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,16],"end":[41,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:3078:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12950:41061":{"id":"2:12950:41061","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12558:8766","`DoubleEndedIterator`":"2:7942:128","prim@char":"1:12055:457","str::rmatch_indices":"2:12953:41062"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44389:8805","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2748-0:2196:2794":{"id":"b:2:2748-0:2196:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1277:3155":{"id":"0:1277:3155","crate_id":0,"name":"with_nanosecond","span":{"filename":"src/naive/datetime/mod.rs","begin":[1598,4],"end":[1600,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with nanoseconds since the whole non-leap second changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\nAs with the [`NaiveDateTime::nanosecond`] method,\nthe input range can exceed 1,000,000,000 for leap seconds.\n\nSee also the [`NaiveTime::with_nanosecond`] method.\n\n# Errors\n\nReturns `None` if `nanosecond >= 2,000,000,000`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 59, 789).unwrap();\nassert_eq!(dt.with_nanosecond(333_333_333),\n           Some(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_nano_opt(12, 34, 59, 333_333_333).unwrap()));\nassert_eq!(dt.with_nanosecond(1_333_333_333), // leap second\n           Some(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_nano_opt(12, 34, 59, 1_333_333_333).unwrap()));\nassert_eq!(dt.with_nanosecond(2_000_000_000), None);\n```","links":{"`NaiveTime::with_nanosecond`":"0:1485:3155","`NaiveDateTime::nanosecond`":"0:1270:3134"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:931:2175":{"id":"0:931:2175","crate_id":0,"name":"ParseResult","span":{"filename":"src/format/mod.rs","begin":[415,0],"end":[415,48]},"visibility":"public","docs":"Same as `Result<T, ParseError>`.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"b:2:2444-0:2549:2174":{"id":"b:2:2444-0:2549:2174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2199:3878":{"id":"0:2199:3878","crate_id":0,"name":"year_mod_100","span":{"filename":"src/format/parsed.rs","begin":[37,4],"end":[37,33]},"visibility":"public","docs":"Year modulo 100. Implies that the year is >= 1 BCE when set.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}}}},"0:2267:3310":{"id":"0:2267:3310","crate_id":0,"name":"Pad","span":{"filename":"src/format/mod.rs","begin":[78,0],"end":[85,1]},"visibility":"public","docs":"Padding characters for numeric items.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2268:198","0:2270:3313","0:2272:3315"],"impls":["a:2:42477:9166-0:2267:3310","a:2:2966:253-0:2267:3310","a:2:32825:244-0:2267:3310","a:2:32882:9016-0:2267:3310","a:2:42476:9167-0:2267:3310","b:2:2754-0:2267:3310","b:2:2744-0:2267:3310","b:2:2748-0:2267:3310","b:2:2441-0:2267:3310","b:2:2444-0:2267:3310","b:2:3558-0:2267:3310","b:2:2759-0:2267:3310","b:5:687-0:2267:3310","0:2277","0:2274","0:2275","0:2282","0:2280","0:2284","0:2278"]}}},"0:1589":{"id":"0:1589","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[121,0],"end":[127,1]},"visibility":"default","docs":"Parsing a `str` into a `FixedOffset` uses the format [`%z`](crate::format::strftime).","links":{"crate::format::strftime":"0:860:3302"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12518:3218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1590:134","0:1591:3219"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1016:5244":{"id":"0:1016:5244","crate_id":0,"name":"from_isoywd","span":{"filename":"src/naive/date.rs","begin":[356,4],"end":[358,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ISO week date](#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.\n\n# Panics\n\nPanics if the specified week does not exist in that year, on invalid values for `week`, or\nif the resulting date is out of range for `NaiveDate`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_isoywd_opt()` instead\")]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_isoywd_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["year",{"primitive":"i32"}],["week",{"primitive":"u32"}],["weekday",{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2316:3357":{"id":"0:2316:3357","crate_id":0,"name":"Hour","span":{"filename":"src/format/mod.rs","begin":[133,4],"end":[133,8]},"visibility":"default","docs":"Hour number in the 24-hour clocks (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:42477:9166-0:2656:5110":{"id":"a:2:42477:9166-0:2656:5110","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:516":{"id":"0:516","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1488,0],"end":[1495,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:518:206","0:519:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2444-0:2729:2178":{"id":"b:2:2444-0:2729:2178","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:697:3933":{"id":"0:697:3933","crate_id":0,"name":"set_week_from_mon","span":{"filename":"src/format/parsed.rs","begin":[200,4],"end":[202,5]},"visibility":"public","docs":"Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42477:9166-0:2746:2163":{"id":"a:2:42477:9166-0:2746:2163","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1494:301":{"id":"0:1494:301","crate_id":0,"name":"add","span":{"filename":"src/naive/time/mod.rs","begin":[1194,4],"end":[1201,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2215:2857":{"id":"0:2215:2857","crate_id":0,"name":"timestamp","span":{"filename":"src/format/parsed.rs","begin":[99,4],"end":[99,30]},"visibility":"public","docs":"The number of non-leap seconds since the midnight UTC on January 1, 1970.\n\nThis can be off by one if [`second`](#structfield.second) is 60 (a leap second).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i64"}}],"bindings":[]}}}}}},"0:1485:3155":{"id":"0:1485:3155","crate_id":0,"name":"with_nanosecond","span":{"filename":"src/naive/time/mod.rs","begin":[1087,4],"end":[1092,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with nanoseconds since the whole non-leap second changed.\n\nAs with the [`nanosecond`](#method.nanosecond) method,\nthe input range can exceed 1,000,000,000 for leap seconds.\n\n# Errors\n\nReturns `None` if `nanosecond >= 2,000,000,000`.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(dt.with_nanosecond(333_333_333),\n           Some(NaiveTime::from_hms_nano_opt(23, 56, 4, 333_333_333).unwrap()));\nassert_eq!(dt.with_nanosecond(2_000_000_000), None);\n```\n\nLeap seconds can theoretically follow *any* whole second.\nThe following would be a proper leap second at the time zone offset of UTC-00:03:57\n(there are several historical examples comparable to this \"non-sense\" offset),\nand therefore is allowed.\n\n```\n# use chrono::{NaiveTime, Timelike};\nlet dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nlet strange_leap_second = dt.with_nanosecond(1_333_333_333).unwrap();\nassert_eq!(strange_leap_second.nanosecond(), 1_333_333_333);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3558-0:2549:2174":{"id":"b:2:3558-0:2549:2174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1505":{"id":"0:1505","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1300,0],"end":[1312,1]},"visibility":"default","docs":"Subtract `std::time::Duration` from `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the subtraction ignores integral number of days.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1506:206","0:1507:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2759-0:3143:2185":{"id":"b:2:2759-0:3143:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2444-0:3226:2187":{"id":"b:2:2444-0:3226:2187","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2074:2748":{"id":"0:2074:2748","crate_id":0,"name":"month0","span":{"filename":"src/traits.rs","begin":[55,4],"end":[55,28]},"visibility":"default","docs":"Returns the month number starting from 0.\n\nThe return value ranges from 0 to 11.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:2772:789":{"id":"0:2772:789","crate_id":0,"name":"hash","span":{"filename":"src/offset/fixed.rs","begin":[22,24],"end":[22,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1916:2648":{"id":"0:1916:2648","crate_id":0,"name":"single","span":{"filename":"src/offset/mod.rs","begin":[56,4],"end":[61,5]},"visibility":"public","docs":"Returns `Some` only when the conversion result is unique, or `None` otherwise.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1939:5836":{"id":"0:1939:5836","crate_id":0,"name":"ymd_opt","span":{"filename":"src/offset/mod.rs","begin":[264,4],"end":[269,5]},"visibility":"default","docs":"Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date, invalid month and/or day.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `with_ymd_and_hms()` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `with_ymd_and_hms()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2966:253-0:2196:2794":{"id":"a:2:2966:253-0:2196:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:687-0:2170:2154":{"id":"b:5:687-0:2170:2154","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2098:3155":{"id":"0:2098:3155","crate_id":0,"name":"with_nanosecond","span":{"filename":"src/traits.rs","begin":[316,4],"end":[316,57]},"visibility":"default","docs":"Makes a new value with nanoseconds since the whole non-leap second changed.\n\nReturns `None` when the resulting value would be invalid.\nAs with the [`nanosecond`](#tymethod.nanosecond) method,\nthe input range can exceed 1,000,000,000 for leap seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:2047":{"id":"0:2047","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[167,0],"end":[187,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2048:135","0:2049:1628"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:213:2756":{"id":"0:213:2756","crate_id":0,"name":"with_month0","span":{"filename":"src/date.rs","begin":[443,4],"end":[445,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1218:2711":{"id":"0:1218:2711","crate_id":0,"name":"checked_add_signed","span":{"filename":"src/naive/datetime/mod.rs","begin":[702,4],"end":[712,5]},"visibility":"public","docs":"Adds given `Duration` to the current date and time.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe addition assumes that **there is no leap second ever**,\nexcept when the `NaiveDateTime` itself represents a leap second\nin which case the assumption becomes that **there is exactly a single leap second ever**.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::zero()),\n           Some(hms(3, 5, 7)));\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(1)),\n           Some(hms(3, 5, 8)));\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(-1)),\n           Some(hms(3, 5, 6)));\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(3600 + 60)),\n           Some(hms(4, 6, 7)));\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(86_400)),\n           Some(from_ymd(2016, 7, 9).and_hms_opt(3, 5, 7).unwrap()));\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli_opt(h, m, s, milli).unwrap();\nassert_eq!(hmsm(3, 5, 7, 980).checked_add_signed(Duration::milliseconds(450)),\n           Some(hmsm(3, 5, 8, 430)));\n```\n\nOverflow returns `None`.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let hms = |h, m, s| NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::days(1_000_000_000)), None);\n```\n\nLeap seconds are handled,\nbut the addition assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli_opt(h, m, s, milli).unwrap();\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap.checked_add_signed(Duration::zero()),\n           Some(hmsm(3, 5, 59, 1_300)));\nassert_eq!(leap.checked_add_signed(Duration::milliseconds(-500)),\n           Some(hmsm(3, 5, 59, 800)));\nassert_eq!(leap.checked_add_signed(Duration::milliseconds(500)),\n           Some(hmsm(3, 5, 59, 1_800)));\nassert_eq!(leap.checked_add_signed(Duration::milliseconds(800)),\n           Some(hmsm(3, 6, 0, 100)));\nassert_eq!(leap.checked_add_signed(Duration::seconds(10)),\n           Some(hmsm(3, 6, 9, 300)));\nassert_eq!(leap.checked_add_signed(Duration::seconds(-10)),\n           Some(hmsm(3, 5, 50, 300)));\nassert_eq!(leap.checked_add_signed(Duration::days(1)),\n           Some(from_ymd(2016, 7, 9).and_hms_milli_opt(3, 5, 59, 300).unwrap()));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32825:244-0:2134:2146":{"id":"a:2:32825:244-0:2134:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:39:2423":{"id":"0:39:2423","crate_id":0,"name":"seconds","span":{"filename":"src/duration.rs","begin":[152,4],"end":[154,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `-i64::MAX` milliseconds.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seconds",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32882:9016-0:2267:3310":{"id":"a:2:32882:9016-0:2267:3310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32882:9016-0:2409:3432":{"id":"a:2:32882:9016-0:2409:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2500":{"id":"0:2500","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[314,29],"end":[314,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2106:725":{"id":"0:2106:725","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[610,4],"end":[612,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1584:2779":{"id":"0:1584:2779","crate_id":0,"name":"east_opt","span":{"filename":"src/offset/fixed.rs","begin":[63,4],"end":[69,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.\n\nReturns `None` on the out-of-bound `secs`.\n\n# Example\n\n```\nuse chrono::{FixedOffset, TimeZone};\nlet hour = 3600;\nlet datetime = FixedOffset::east_opt(5 * hour)\n    .unwrap()\n    .with_ymd_and_hms(2016, 11, 08, 0, 0, 0)\n    .unwrap();\nassert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00+05:00\")\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["secs",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2153:461":{"id":"0:2153:461","crate_id":0,"name":"clone","span":{"filename":"src/date.rs","begin":[58,9],"end":[58,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1945:3229":{"id":"0:1945:3229","crate_id":0,"name":"timestamp_opt","span":{"filename":"src/offset/mod.rs","begin":[382,4],"end":[387,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nThe nanosecond part can exceed 1,000,000,000 in order to represent a\n[leap second](NaiveTime#leap-second-handling), but only when `secs % 60 == 59`.\n(The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)\n\n# Errors\n\nReturns `LocalResult::None` on out-of-range number of seconds and/or\ninvalid nanosecond, otherwise always returns `LocalResult::Single`.\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.timestamp_opt(1431648000, 0).unwrap().to_string(), \"2015-05-15 00:00:00 UTC\");\n```","links":{"NaiveTime#leap-second-handling":"0:2746:2163"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["secs",{"primitive":"i64"}],["nsecs",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:596:2736":{"id":"0:596:2736","crate_id":0,"name":"new_with_offset","span":{"filename":"src/format/formatting.rs","begin":[69,4],"end":[87,5]},"visibility":"public","docs":"Makes a new `DelayedFormat` value out of local date and time and UTC offset.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["date",{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["time",{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["offset",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Off"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Off","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Off"},"bounds":[{"trait_bound":{"trait":{"name":"Offset","id":"0:1932:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2556":{"id":"0:2556","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[367,23],"end":[367,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:71":{"id":"0:71","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[389,0],"end":[394,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:33908:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:72:302"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:78":{"id":"0:78","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[415,0],"end":[433,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Div","id":"2:33488:2349","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:79:206","0:80:620"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2598":{"id":"0:2598","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[39,9],"end":[39,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2595:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2599:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1207:2212":{"id":"0:1207:2212","crate_id":0,"name":"time","span":{"filename":"src/naive/datetime/mod.rs","begin":[408,4],"end":[410,5]},"visibility":"public","docs":"Retrieves a time component.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveTime};\n\nlet dt = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(9, 10, 11).unwrap();\nassert_eq!(dt.time(), NaiveTime::from_hms_opt(9, 10, 11).unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2460:789":{"id":"0:2460:789","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[280,44],"end":[280,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2049:1628":{"id":"0:2049:1628","crate_id":0,"name":"try_from","span":{"filename":"src/month.rs","begin":[170,4],"end":[186,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"primitive":"u8"}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2728:263","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2126:1146":{"id":"0:2126:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/duration.rs","begin":[53,46],"end":[53,56]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:923:725":{"id":"0:923:725","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[162,4],"end":[164,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2506:789":{"id":"0:2506:789","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[314,44],"end":[314,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1498:206":{"id":"0:1498:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1220,4],"end":[1220,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2764:2159":{"id":"0:2764:2159","crate_id":0,"name":"FixedOffset","span":{"filename":"src/offset/fixed.rs","begin":[30,0],"end":[32,1]},"visibility":"public","docs":"The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non a `FixedOffset` struct is the preferred way to construct\n`DateTime<FixedOffset>` instances. See the [`east_opt`](#method.east_opt) and\n[`west_opt`](#method.west_opt) methods for examples.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:1582","a:2:42477:9166-0:2764:2159","a:2:2966:253-0:2764:2159","a:2:32825:244-0:2764:2159","a:2:32882:9016-0:2764:2159","a:2:42476:9167-0:2764:2159","b:2:2754-0:2764:2159","b:2:2744-0:2764:2159","b:2:2748-0:2764:2159","b:2:2441-0:2764:2159","b:2:2444-0:2764:2159","b:2:3558-0:2764:2159","b:2:2759-0:2764:2159","b:5:687-0:2764:2159","b:5:5828-0:2764:2159","0:2766","0:1305","0:2767","0:1510","0:1589","0:2769","0:1603","0:1592","0:482","0:2775","0:504","0:1599","0:1601","0:1289","0:1497","0:2771","0:2774"]}}},"0:3101:461":{"id":"0:3101:461","crate_id":0,"name":"clone","span":{"filename":"src/round.rs","begin":[240,16],"end":[240,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3042":{"id":"0:3042","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[106,9],"end":[106,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2345":{"id":"0:2345","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[156,9],"end":[156,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2346:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2441-0:2343:3375":{"id":"b:2:2441-0:2343:3375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2347":{"id":"0:2347","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[156,16],"end":[156,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2748-0:2355:2793":{"id":"b:2:2748-0:2355:2793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:464":{"id":"0:464","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1237,0],"end":[1241,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:466:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2754-0:2409:3432":{"id":"b:2:2754-0:2409:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2441-0:2600:2177":{"id":"b:2:2441-0:2600:2177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1120:171":{"id":"0:1120:171","crate_id":0,"name":"Item","span":{"filename":"src/naive/date.rs","begin":[2102,4],"end":[2102,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1311":{"id":"0:1311","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1990,0],"end":[1997,1]},"visibility":"default","docs":"Subtracts another `NaiveDateTime` from the current date and time.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveDateTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\nThe implementation is a wrapper around [`NaiveDateTime::signed_duration_since`].\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nlet d = from_ymd(2016, 7, 8);\nassert_eq!(d.and_hms_opt(3, 5, 7).unwrap() - d.and_hms_opt(2, 4, 6).unwrap(), Duration::seconds(3600 + 60 + 1));\n\n// July 8 is 190th day in the year 2016\nlet d0 = from_ymd(2016, 1, 1);\nassert_eq!(d.and_hms_milli_opt(0, 7, 6, 500).unwrap() - d0.and_hms_opt(0, 0, 0).unwrap(),\n           Duration::seconds(189 * 86_400 + 7 * 60 + 6) + Duration::milliseconds(500));\n```\n\nLeap seconds are handled, but the subtraction assumes that no other leap\nseconds happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\nlet leap = from_ymd(2015, 6, 30).and_hms_milli_opt(23, 59, 59, 1_500).unwrap();\nassert_eq!(leap - from_ymd(2015, 6, 30).and_hms_opt(23, 0, 0).unwrap(),\n           Duration::seconds(3600) + Duration::milliseconds(500));\nassert_eq!(from_ymd(2015, 7, 1).and_hms_opt(1, 0, 0).unwrap() - leap,\n           Duration::seconds(3600) - Duration::milliseconds(500));\n```","links":{"`NaiveDateTime::signed_duration_since`":"0:1227:2718"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1312:206","0:1313:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2441-0:2170:2154":{"id":"b:2:2441-0:2170:2154","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3046:725":{"id":"0:3046:725","crate_id":0,"name":"fmt","span":{"filename":"src/offset/local/mod.rs","begin":[106,22],"end":[106,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2053:8384":{"id":"0:2053:8384","crate_id":0,"name":"from_u32","span":{"filename":"src/month.rs","begin":[207,4],"end":[223,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["n",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2122:668":{"id":"0:2122:668","crate_id":0,"name":"eq","span":{"filename":"src/duration.rs","begin":[53,31],"end":[53,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3558-0:3143:2185":{"id":"b:2:3558-0:3143:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3094:8153":{"id":"0:3094:8153","crate_id":0,"name":"DurationExceedsLimit","span":{"filename":"src/round.rs","begin":[266,4],"end":[266,24]},"visibility":"default","docs":"Error when `Duration.num_nanoseconds` exceeds the limit.\n\n``` rust\n# use chrono::{DurationRound, Duration, RoundingError, Utc, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2260, 12, 31).unwrap().and_hms_nano_opt(23, 59, 59, 1_75_500_000).unwrap().and_local_timezone(Utc).unwrap();\n\nassert_eq!(\n    dt.duration_round(Duration::days(300 * 365)),\n    Err(RoundingError::DurationExceedsLimit)\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2748-0:2595:2179":{"id":"b:2:2748-0:2595:2179","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2595:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3183:3566":{"id":"0:3183:3566","crate_id":0,"name":"November","span":{"filename":"src/month.rs","begin":[63,4],"end":[63,17]},"visibility":"default","docs":"November","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"10","value":"10"}}}},"a:2:2966:253-0:3206:2188":{"id":"a:2:2966:253-0:3206:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3558-0:3152:2156":{"id":"b:2:3558-0:3152:2156","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:83:2488":{"id":"0:83:2488","crate_id":0,"name":"sum","span":{"filename":"src/duration.rs","begin":[436,4],"end":[438,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iter",{"generic":"I"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8051:176","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:809:3219":{"id":"0:809:3219","crate_id":0,"name":"from_str","span":{"filename":"src/format/parse.rs","begin":[530,4],"end":[537,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2356:3384":{"id":"0:2356:3384","crate_id":0,"name":"ShortMonthName","span":{"filename":"src/format/mod.rs","begin":[176,4],"end":[176,18]},"visibility":"default","docs":"Abbreviated month names.\n\nPrints a three-letter-long name in the title case, reads the same name in any case.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2386:3426":{"id":"0:2386:3426","crate_id":0,"name":"TimezoneOffset","span":{"filename":"src/format/mod.rs","begin":[238,4],"end":[238,18]},"visibility":"default","docs":"Same as [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.\nParsing allows an optional colon.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:954:2176":{"id":"0:954:2176","crate_id":0,"name":"naive","span":{"filename":"src/naive/mod.rs","begin":[1,0],"end":[39,1]},"visibility":"public","docs":"Date and time types unconcerned with timezones.\n\nThey are primarily building blocks for other types\n(e.g. [`TimeZone`](../offset/trait.TimeZone.html)),\nbut can be also used for the simpler date and time handling.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:1531-0:2600:2177","0:1532-0:2620:2161","0:1533-0:2637:5109","0:1534-0:2656:5110","0:1535-0:2595:2179","0:1537-0:1007:2167","0:1538-0:1006:2168","0:1540-0:2675:2162","0:1541-0:1194:2171","0:1542-0:1193:2172","0:1543-0:2729:2178","0:1544-0:2746:2163"],"is_stripped":false}}},"0:3209":{"id":"0:3209","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[227,9],"end":[227,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3210:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2161:2604":{"id":"0:2161:2604","crate_id":0,"name":"DelayedFormat","span":{"filename":"src/format/formatting.rs","begin":[36,0],"end":[50,1]},"visibility":"public","docs":"A *temporary* object which can be used as an argument to `format!` or others.\nThis is normally constructed via `format` methods of each date and time type.","links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:591","a:2:42477:9166-0:2161:2604","a:2:2966:253-0:2161:2604","a:2:32825:244-0:2161:2604","a:2:32882:9016-0:2161:2604","a:2:42476:9167-0:2161:2604","b:2:2754-0:2161:2604","b:2:2744-0:2161:2604","b:2:2748-0:2161:2604","b:2:2441-0:2161:2604","b:2:2444-0:2161:2604","b:2:3558-0:2161:2604","b:2:2759-0:2161:2604","b:5:5828-0:2161:2604","0:2167","0:598"]}}},"0:454:668":{"id":"0:454:668","crate_id":0,"name":"eq","span":{"filename":"src/datetime/mod.rs","begin":[1203,4],"end":[1205,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2441-0:2444:3447":{"id":"b:2:2441-0:2444:3447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:65":{"id":"0:65","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[373,0],"end":[379,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:66:206","0:67:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:374:60":{"id":"0:374:60","crate_id":0,"name":"default","span":{"filename":"src/datetime/mod.rs","begin":[684,4],"end":[686,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:2729:2178":{"id":"b:5:687-0:2729:2178","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:687-0:2508:171":{"id":"b:5:687-0:2508:171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:185:2636":{"id":"0:185:2636","crate_id":0,"name":"MAX_UTC","span":{"filename":"src/date.rs","begin":[320,4],"end":[320,78]},"visibility":"public","docs":"The maximum possible `Date`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"default":"_"}}},"0:364":{"id":"0:364","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[594,0],"end":[668,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:365:2995","0:366:3007","0:368:2789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3558-0:2112:129":{"id":"b:2:3558-0:2112:129","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1001:5134":{"id":"0:1001:5134","crate_id":0,"name":"first_day","span":{"filename":"src/naive/date.rs","begin":[64,4],"end":[72,5]},"visibility":"public","docs":"Returns a date representing the first day of the week.\n\n# Panics\n\nPanics if the first day of the week happens to fall just out of range of `NaiveDate`\n(more than ca. 262,000 years away from common era).\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet date = NaiveDate::from_ymd_opt(2022, 4, 18).unwrap();\nlet week = date.week(Weekday::Mon);\nassert!(week.first_day() <= date);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3211":{"id":"0:3211","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[227,16],"end":[227,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:178:2713":{"id":"0:178:2713","crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/date.rs","begin":[277,4],"end":[280,5]},"visibility":"public","docs":"Subtracts given `Duration` from the current date.\n\nReturns `None` when it will result in overflow.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2230:789":{"id":"0:2230:789","crate_id":0,"name":"hash","span":{"filename":"src/format/parsed.rs","begin":[21,47],"end":[21,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32825:244-0:2675:2162":{"id":"a:2:32825:244-0:2675:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1583:7344":{"id":"0:1583:7344","crate_id":0,"name":"east","span":{"filename":"src/offset/fixed.rs","begin":[41,4],"end":[43,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.\n\nPanics on the out-of-bound `secs`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `east_opt()` instead\")]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `east_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["secs",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2662:461":{"id":"0:2662:461","crate_id":0,"name":"clone","span":{"filename":"src/naive/date.rs","begin":[2132,22],"end":[2132,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2684:789":{"id":"0:2684:789","crate_id":0,"name":"hash","span":{"filename":"src/naive/datetime/mod.rs","begin":[76,24],"end":[76,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2748-0:2409:3432":{"id":"b:2:2748-0:2409:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2453:461":{"id":"0:2453:461","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[280,22],"end":[280,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1317":{"id":"0:1317","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[2019,0],"end":[2025,1]},"visibility":"default","docs":"Subtract `Days` from `NaiveDateTime`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using `checked_sub_days` to get an `Option` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1318:206","0:1319:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:235:1146":{"id":"0:235:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/date.rs","begin":[481,4],"end":[483,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:508":{"id":"0:508","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1471,0],"end":[1477,1]},"visibility":"default","docs":"Subtract `Months` from `DateTime`.\n\nThe result will be clamped to valid days in the resulting month, see\n[`DateTime<Tz>::checked_sub_months`] for details.\n\n# Panics\n\nPanics if:\n- The resulting date would be out of range.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.\n\nStrongly consider using [`DateTime<Tz>::checked_sub_months`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_sub_months`":"0:350:2927"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:510:206","0:511:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2075:2749":{"id":"0:2075:2749","crate_id":0,"name":"day","span":{"filename":"src/traits.rs","begin":[60,4],"end":[60,25]},"visibility":"default","docs":"Returns the day of month starting from 1.\n\nThe return value ranges from 1 to 31. (The last day of month differs by months.)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2748-0:2620:2161":{"id":"b:2:2748-0:2620:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12989:4182":{"id":"2:12989:4182","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2759-0:2112:129":{"id":"b:2:2759-0:2112:129","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2372:3403":{"id":"0:2372:3403","crate_id":0,"name":"Nanosecond6","span":{"filename":"src/format/mod.rs","begin":[204,4],"end":[204,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1475:2393":{"id":"0:1475:2393","crate_id":0,"name":"MIN","span":{"filename":"src/naive/time/mod.rs","begin":[889,4],"end":[889,52]},"visibility":"public","docs":"The earliest possible `NaiveTime`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:3133":{"id":"0:3133","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,20],"end":[32,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32825:244-0:2170:2154":{"id":"a:2:32825:244-0:2170:2154","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2072:8456":{"id":"0:2072:8456","crate_id":0,"name":"year_ce","span":{"filename":"src/traits.rs","begin":[38,4],"end":[45,5]},"visibility":"default","docs":"Returns the absolute year number starting from 1 with a boolean flag,\nwhich is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"bool"},{"primitive":"u32"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:498":{"id":"0:498","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1413,0],"end":[1421,1]},"visibility":"default","docs":"Subtract-assign `chrono::Duration` from `DateTime`.\n\nThis is the same as the addition with a negated `Duration`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `DateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`DateTime<Tz>::checked_sub_signed`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_sub_signed`":"0:349:2713"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:33967:2353","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:500:1566"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1549-0:2746:2163":{"id":"0:1549-0:2746:2163","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[533,48],"end":[533,57]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"inner":{"import":{"source":"naive::NaiveTime","name":"NaiveTime","id":"0:2746:2163","glob":false}}},"a:2:42476:9167-0:2112:129":{"id":"a:2:42476:9167-0:2112:129","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:341:1099":{"id":"0:341:1099","crate_id":0,"name":"offset","span":{"filename":"src/datetime/mod.rs","begin":[327,4],"end":[329,5]},"visibility":"public","docs":"Retrieves an associated offset from UTC.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1934:2165","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3243":{"id":"0:3243","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[598,28],"end":[598,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3558-0:2196:2794":{"id":"b:2:3558-0:2196:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1900":{"id":"0:1900","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[116,0],"end":[136,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["timestamp_opt","from_utc_datetime","from_local_datetime","datetime_from_str","isoywd_opt","with_ymd_and_hms","yo_opt","from_local_date","from_utc_date","timestamp_millis_opt","timestamp_micros","ymd","timestamp_millis","timestamp_nanos","ymd_opt","isoywd","timestamp","yo"],"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1901:2164","0:1902:2702","0:1903:7287","0:1904:7289","0:1905:7296","0:1906:4031"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2603":{"id":"0:2603","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[133,9],"end":[133,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2604:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3054:668":{"id":"0:3054:668","crate_id":0,"name":"eq","span":{"filename":"src/offset/utc.rs","begin":[43,22],"end":[43,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1480:3133":{"id":"0:1480:3133","crate_id":0,"name":"second","span":{"filename":"src/naive/time/mod.rs","begin":[947,4],"end":[949,5]},"visibility":"default","docs":"Returns the second number from 0 to 59.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(0, 0, 0).unwrap().second(), 0);\nassert_eq!(NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().second(), 4);\n```\n\nThis method never returns 60 even when it is a leap second.\n([Why?](#leap-second-handling))\nUse the proper [formatting method](#method.format) to get a human-readable representation.\n\n```\n# use chrono::{NaiveTime, Timelike};\nlet leap = NaiveTime::from_hms_milli_opt(23, 59, 59, 1_000).unwrap();\nassert_eq!(leap.second(), 59);\nassert_eq!(leap.format(\"%H:%M:%S\").to_string(), \"23:59:60\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12993:36505":{"id":"2:12993:36505","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:910:7567"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:2444:3447":{"id":"b:2:2754-0:2444:3447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:436:3132":{"id":"0:436:3132","crate_id":0,"name":"minute","span":{"filename":"src/datetime/mod.rs","begin":[1122,4],"end":[1124,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:2637:5109":{"id":"b:2:2754-0:2637:5109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3219":{"id":"0:3219","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[227,39],"end":[227,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3199":{"id":"0:3199","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,44],"end":[31,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3200:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2966:253-0:3047:2160":{"id":"a:2:2966:253-0:3047:2160","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2748-0:2234:2605":{"id":"b:2:2748-0:2234:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2966:253-0:3060:2180":{"id":"a:2:2966:253-0:3060:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3558-0:2600:2177":{"id":"b:2:3558-0:2600:2177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2318:3359":{"id":"0:2318:3359","crate_id":0,"name":"Hour12","span":{"filename":"src/format/mod.rs","begin":[135,4],"end":[135,10]},"visibility":"default","docs":"Hour number in the 12-hour clocks (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1112":{"id":"0:1112","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2049,0],"end":[2054,1]},"visibility":"default","docs":"Subtract-assign `chrono::Duration` from `NaiveDate`.\n\nThis discards the fractional days in `Duration`, rounding to the closest integral number of days\ntowards `Duration::zero()`.\nIt is the same as the addition with a negated `Duration`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDate::checked_sub_signed`] to get an `Option` instead.","links":{"`NaiveDate::checked_sub_signed`":"0:1051:2713"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:33967:2353","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1113:1566"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1052:2718":{"id":"0:1052:2718","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/naive/date.rs","begin":[1212,4],"end":[1222,5]},"visibility":"public","docs":"Subtracts another `NaiveDate` from the current date.\nReturns a `Duration` of integral numbers.\n\nThis does not overflow or underflow at all,\nas all possible output fits in the range of `Duration`.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\nlet since = NaiveDate::signed_duration_since;\n\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 1)), Duration::zero());\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 12, 31)), Duration::days(1));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 2)), Duration::days(-1));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 9, 23)), Duration::days(100));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 1, 1)), Duration::days(365));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2010, 1, 1)), Duration::days(365*4 + 1));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(1614, 1, 1)), Duration::days(365*400 + 97));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1305":{"id":"0:1305","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1906,0],"end":[1913,1]},"visibility":"default","docs":"Subtract `FixedOffset` from `NaiveDateTime`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using `checked_sub_offset` to get an `Option` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1306:206","0:1307:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1126":{"id":"0:1126","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2129,0],"end":[2129,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:8360:5119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2444-0:2170:2154":{"id":"b:2:2444-0:2170:2154","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1910:725":{"id":"0:1910:725","crate_id":0,"name":"fmt","span":{"filename":"src/offset/utc.rs","begin":[145,4],"end":[147,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1504:1566":{"id":"0:1504:1566","crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/time/mod.rs","begin":[1291,4],"end":[1293,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2225":{"id":"0:2225","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[21,31],"end":[21,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2226:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1499:301":{"id":"0:1499:301","crate_id":0,"name":"add","span":{"filename":"src/naive/time/mod.rs","begin":[1223,4],"end":[1225,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2480":{"id":"0:2480","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[293,29],"end":[293,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32882:9016-0:2656:5110":{"id":"a:2:32882:9016-0:2656:5110","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1079:2750":{"id":"0:1079:2750","crate_id":0,"name":"day0","span":{"filename":"src/naive/date.rs","begin":[1599,4],"end":[1601,5]},"visibility":"default","docs":"Returns the day of month starting from 0.\n\nThe return value ranges from 0 to 30. (The last day of month differs by months.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().day0(), 7);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().day0(), 13);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1965-0:1932:2164":{"id":"0:1965-0:1932:2164","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[542,30],"end":[542,36]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"inner":{"import":{"source":"offset::Offset","name":"Offset","id":"0:1932:2164","glob":false}}},"b:5:5828-0:3108:2158":{"id":"b:5:5828-0:3108:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5826:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5830:1605"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12947:41060":{"id":"2:12947:41060","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12558:8766","`DoubleEndedIterator`":"2:7942:128","prim@char":"1:12055:457","str::matches":"2:12944:7676"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44461:8804","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:8782","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1905:7296":{"id":"0:1905:7296","crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/utc.rs","begin":[130,4],"end":[132,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1964-0:2764:2159":{"id":"0:1964-0:2764:2159","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[542,17],"end":[542,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"inner":{"import":{"source":"offset::FixedOffset","name":"FixedOffset","id":"0:2764:2159","glob":false}}},"0:534":{"id":"0:534","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1589,0],"end":[1595,1]},"visibility":"default","docs":"Accepts a relaxed form of RFC3339.\nA space or a 'T' are accepted as the separator between the date and time\nparts.\n\nAll of these examples are equivalent:\n```\n# use chrono::{DateTime, Utc};\n\"2012-12-12T12:12:12Z\".parse::<DateTime<Utc>>()?;\n\"2012-12-12 12:12:12Z\".parse::<DateTime<Utc>>()?;\n\"2012-12-12 12:12:12+0000\".parse::<DateTime<Utc>>()?;\n\"2012-12-12 12:12:12+00:00\".parse::<DateTime<Utc>>()?;\n# Ok::<(), chrono::ParseError>(())\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12518:3218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:535:134","0:536:3219"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2607:725":{"id":"0:2607:725","crate_id":0,"name":"fmt","span":{"filename":"src/naive/date.rs","begin":[133,22],"end":[133,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2125":{"id":"0:2125","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,46],"end":[53,56]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2546:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2126:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:217:2758":{"id":"0:217:2758","crate_id":0,"name":"with_day0","span":{"filename":"src/date.rs","begin":[453,4],"end":[455,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2306:3348":{"id":"0:2306:3348","crate_id":0,"name":"WeekFromMon","span":{"filename":"src/format/mod.rs","begin":[123,4],"end":[123,15]},"visibility":"default","docs":"Week number, where the week 1 starts at the first Monday of January (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:221:2760":{"id":"0:221:2760","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/date.rs","begin":[463,4],"end":[465,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:527:1565":{"id":"0:527:1565","crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1528,4],"end":[1530,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3017:2352","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2032":{"id":"0:2032","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[236,0],"end":[236,47]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","description","source","cause","type_id"],"trait":{"name":"Error","id":"2:2806:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1087:2757":{"id":"0:1087:2757","crate_id":0,"name":"with_day","span":{"filename":"src/naive/date.rs","begin":[1777,4],"end":[1779,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of month (starting from 1) changed.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `day` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_day(30),\n           Some(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_day(31),\n           None); // no September 31\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1961-0:3040:2149":{"id":"0:1961-0:3040:2149","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[539,0],"end":[539,22]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]","#[doc(inline)]"],"deprecation":null,"inner":{"import":{"source":"offset::Local","name":"Local","id":"0:3040:2149","glob":false}}},"b:2:2748-0:2764:2159":{"id":"b:2:2748-0:2764:2159","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12876:36586":{"id":"2:12876:36586","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12072:1652"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2529:135":{"id":"0:2529:135","crate_id":0,"name":"Error","span":{"filename":"src/format/mod.rs","begin":[343,4],"end":[343,9]},"visibility":"default","docs":"Issues a formatting error. Used to signal an invalid format string.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2277":{"id":"0:2277","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[77,22],"end":[77,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1036:2664":{"id":"0:1036:2664","crate_id":0,"name":"and_hms_milli","span":{"filename":"src/naive/date.rs","begin":[883,4],"end":[885,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.\n\nThe millisecond part is allowed to exceed 1,000,000,000 in order to represent a [leap second](\n./struct.NaiveTime.html#leap-second-handling), but only when `sec == 59`.\n\n# Panics\n\nPanics on invalid hour, minute, second and/or millisecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `and_hms_milli_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `and_hms_milli_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:691:3927":{"id":"0:691:3927","crate_id":0,"name":"set_isoyear_mod_100","span":{"filename":"src/format/parsed.rs","begin":[176,4],"end":[184,5]},"visibility":"public","docs":"Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1543-0:2729:2178":{"id":"0:1543-0:2729:2178","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[21,0],"end":[21,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::isoweek::IsoWeek","name":"IsoWeek","id":"0:2729:2178","glob":false}}},"2:12992:36504":{"id":"2:12992:36504","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:910:7567"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2663":{"id":"0:2663","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2132,29],"end":[2132,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2664:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3107":{"id":"0:3107","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[240,38],"end":[240,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2065-0:3206:2188":{"id":"0:2065-0:3206:2188","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[555,23],"end":[555,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"month::Months","name":"Months","id":"0:3206:2188","glob":false}}},"b:2:3558-0:3235:2221":{"id":"b:2:3558-0:3235:2221","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[514,0],"end":[521,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:252:206","0:253:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2141":{"id":"0:2141","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[487,23],"end":[487,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1212:2878":{"id":"0:1212:2878","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/naive/datetime/mod.rs","begin":[507,4],"end":[510,5]},"visibility":"public","docs":"Returns the number of non-leap *nanoseconds* since midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\n# Panics\n\nAn `i64` with nanosecond precision can span a range of ~584 years. This function panics on\nan out of range `NaiveDateTime`.\n\nThe dates that can be represented as nanoseconds are between 1677-09-21T00:12:43.145224192\nand 2262-04-11T23:47:16.854775807.","links":{},"attrs":["#[deprecated(since = \"0.4.31\", note = \"use `timestamp_nanos_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.31","note":"use `timestamp_nanos_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12895:38560":{"id":"2:12895:38560","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12896:38558"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44513:8795","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2759-0:2234:2605":{"id":"b:2:2759-0:2234:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2522:3327":{"id":"0:2522:3327","crate_id":0,"name":"Numeric","span":{"filename":"src/format/mod.rs","begin":[339,4],"end":[339,25]},"visibility":"default","docs":"Numeric item. Can be optionally padded to the maximal length (if any) when formatting;\nthe parser simply ignores any padded whitespace and zeroes.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2524:1764","0:2525:1765"]},"discriminant":null}}},"0:2117":{"id":"0:2117","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,16],"end":[53,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2070:2155":{"id":"0:2070:2155","crate_id":0,"name":"Datelike","span":{"filename":"src/traits.rs","begin":[31,0],"end":[264,1]},"visibility":"public","docs":"The common set of methods for date component.\n\nMethods such as [`year`], [`month`], [`day`] and [`weekday`] can be used to get basic\ninformation about the date.\n\nThe `with_*` methods can change the date.\n\n# Warning\n\nThe `with_*` methods can be convenient to change a single component of a date, but they must be\nused with some care. Examples to watch out for:\n\n- [`with_year`] changes the year component of a year-month-day value. Don't use this method if\n  you want the ordinal to stay the same after changing the year, of if you want the week and\n  weekday values to stay the same.\n- Don't combine two `with_*` methods to change two components of the date. For example to\n  change both the year and month components of a date. This could fail because an intermediate\n  value does not exist, while the final date would be valid.\n\nFor more complex changes to a date, it is best to use the methods on [`NaiveDate`] to create a\nnew value instead of altering an existing date.\n\n[`year`]: Datelike::year\n[`month`]: Datelike::month\n[`day`]: Datelike::day\n[`weekday`]: Datelike::weekday\n[`with_year`]: Datelike::with_year\n[`NaiveDate`]: crate::NaiveDate","links":{"Datelike::weekday":"0:2079:2184","Datelike::month":"0:2073:2186","Datelike::with_year":"0:2081:2754","Datelike::year":"0:2071:2747","crate::NaiveDate":"0:2620:2161","Datelike::day":"0:2075:2749"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:2071:2747","0:2072:8456","0:2073:2186","0:2074:2748","0:2075:2749","0:2076:2750","0:2077:2751","0:2078:2752","0:2079:2184","0:2080:2753","0:2081:2754","0:2082:2755","0:2083:2756","0:2084:2757","0:2085:2758","0:2086:2759","0:2087:2760","0:2088:5539"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:1074","0:198","0:408","0:1242"]}}},"a:2:42477:9166-0:2170:2154":{"id":"a:2:42477:9166-0:2170:2154","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1926:2666":{"id":"0:1926:2666","crate_id":0,"name":"and_hms_milli_opt","span":{"filename":"src/offset/mod.rs","begin":[131,4],"end":[144,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:46:2441":{"id":"0:46:2441","crate_id":0,"name":"num_hours","span":{"filename":"src/duration.rs","begin":[204,4],"end":[206,5]},"visibility":"public","docs":"Returns the total number of whole hours in the duration.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:433":{"id":"0:433","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1116,0],"end":[1196,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hour12","num_seconds_from_midnight"],"trait":{"name":"Timelike","id":"0:2089:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:435:2653","0:436:3132","0:437:3133","0:438:3134","0:439:3138","0:441:3142","0:443:3148","0:445:3155"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1506:206":{"id":"0:1506:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1301,4],"end":[1301,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2759-0:2462:3450":{"id":"b:2:2759-0:2462:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:486":{"id":"0:486","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1351,0],"end":[1357,1]},"visibility":"default","docs":"Add `Months` to `DateTime`.\n\nThe result will be clamped to valid days in the resulting month, see `checked_add_months` for\ndetails.\n\n# Panics\n\nPanics if:\n- The resulting date would be out of range.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.\n\nStrongly consider using [`DateTime<Tz>::checked_add_months`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_add_months`":"0:348:2922"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:488:206","0:489:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:270-0:149:2168":{"id":"0:270-0:149:2168","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[515,25],"end":[515,33]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]","#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"date::MIN_DATE","name":"MIN_DATE","id":"0:149:2168","glob":false}}},"b:2:2759-0:3152:2156":{"id":"b:2:2759-0:3152:2156","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2076:2750":{"id":"0:2076:2750","crate_id":0,"name":"day0","span":{"filename":"src/traits.rs","begin":[65,4],"end":[65,26]},"visibility":"default","docs":"Returns the day of month starting from 0.\n\nThe return value ranges from 0 to 30. (The last day of month differs by months.)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:2635":{"id":"0:2635","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[191,53],"end":[191,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2636:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3232:668":{"id":"0:3232:668","crate_id":0,"name":"eq","span":{"filename":"src/month.rs","begin":[245,16],"end":[245,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2578:3518":{"id":"0:2578:3518","crate_id":0,"name":"BadFormat","span":{"filename":"src/format/mod.rs","begin":[407,4],"end":[407,13]},"visibility":"default","docs":"There was an error on the formatting string, or there were non-supported formating items.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1019:5285":{"id":"0:1019:5285","crate_id":0,"name":"from_num_days_from_ce_opt","span":{"filename":"src/naive/date.rs","begin":[478,4],"end":[485,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\nJanuary 1, 1 being day 1.\n\n# Errors\n\nReturns `None` if the date is out of range.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet from_ndays_opt = NaiveDate::from_num_days_from_ce_opt;\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nassert_eq!(from_ndays_opt(730_000),      Some(from_ymd(1999, 9, 3)));\nassert_eq!(from_ndays_opt(1),            Some(from_ymd(1, 1, 1)));\nassert_eq!(from_ndays_opt(0),            Some(from_ymd(0, 12, 31)));\nassert_eq!(from_ndays_opt(-1),           Some(from_ymd(0, 12, 30)));\nassert_eq!(from_ndays_opt(100_000_000),  None);\nassert_eq!(from_ndays_opt(-100_000_000), None);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["days",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:2637:5109":{"id":"b:5:687-0:2637:5109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2748-0:3040:2149":{"id":"b:2:2748-0:3040:2149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12953:41062":{"id":"2:12953:41062","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12558:8766","`DoubleEndedIterator`":"2:7942:128","prim@char":"1:12055:457","str::match_indices":"2:12950:41061"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44407:8806","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:8782","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2326:3370":{"id":"0:2326:3370","crate_id":0,"name":"Timestamp","span":{"filename":"src/format/mod.rs","begin":[146,4],"end":[146,13]},"visibility":"default","docs":"The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).\nFor formatting, it assumes UTC upon the absence of time zone offset.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:3558-0:3206:2188":{"id":"b:2:3558-0:3206:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3558-0:2161:2604":{"id":"b:2:3558-0:2161:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2441-0:2656:5110":{"id":"b:2:2441-0:2656:5110","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2441-0:3152:2156":{"id":"b:2:2441-0:3152:2156","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2444-0:2656:5110":{"id":"b:2:2444-0:2656:5110","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:206:2752":{"id":"0:206:2752","crate_id":0,"name":"ordinal0","span":{"filename":"src/date.rs","begin":[420,4],"end":[422,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2444-0:3060:2180":{"id":"b:2:2444-0:3060:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2966:253-0:2508:171":{"id":"a:2:2966:253-0:2508:171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2441-0:3206:2188":{"id":"b:2:2441-0:3206:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1047:2691":{"id":"0:1047:2691","crate_id":0,"name":"succ_opt","span":{"filename":"src/naive/date.rs","begin":[1094,4],"end":[1099,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the next calendar date.\n\n# Errors\n\nReturns `None` when `self` is the last representable date.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 6, 3).unwrap().succ_opt(),\n           Some(NaiveDate::from_ymd_opt(2015, 6, 4).unwrap()));\nassert_eq!(NaiveDate::MAX.succ_opt(), None);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:860:3302":{"id":"0:860:3302","crate_id":0,"name":"strftime","span":{"filename":"src/format/strftime.rs","begin":[4,0],"end":[924,1]},"visibility":"public","docs":"`strftime`/`strptime`-inspired date and time formatting syntax.\n\n## Specifiers\n\nThe following specifiers are available both to formatting and parsing.\n\n| Spec. | Example  | Description                                                                |\n|-------|----------|----------------------------------------------------------------------------|\n|       |          | **DATE SPECIFIERS:**                                                       |\n| `%Y`  | `2001`   | The full proleptic Gregorian year, zero-padded to 4 digits. chrono supports years from -262144 to 262143. Note: years before 1 BCE or after 9999 CE, require an initial sign (+/-).|\n| `%C`  | `20`     | The proleptic Gregorian year divided by 100, zero-padded to 2 digits. [^1] |\n| `%y`  | `01`     | The proleptic Gregorian year modulo 100, zero-padded to 2 digits. [^1]     |\n|       |          |                                                                            |\n| `%m`  | `07`     | Month number (01--12), zero-padded to 2 digits.                            |\n| `%b`  | `Jul`    | Abbreviated month name. Always 3 letters.                                  |\n| `%B`  | `July`   | Full month name. Also accepts corresponding abbreviation in parsing.       |\n| `%h`  | `Jul`    | Same as `%b`.                                                              |\n|       |          |                                                                            |\n| `%d`  | `08`     | Day number (01--31), zero-padded to 2 digits.                              |\n| `%e`  | ` 8`     | Same as `%d` but space-padded. Same as `%_d`.                              |\n|       |          |                                                                            |\n| `%a`  | `Sun`    | Abbreviated weekday name. Always 3 letters.                                |\n| `%A`  | `Sunday` | Full weekday name. Also accepts corresponding abbreviation in parsing.     |\n| `%w`  | `0`      | Sunday = 0, Monday = 1, ..., Saturday = 6.                                 |\n| `%u`  | `7`      | Monday = 1, Tuesday = 2, ..., Sunday = 7. (ISO 8601)                       |\n|       |          |                                                                            |\n| `%U`  | `28`     | Week number starting with Sunday (00--53), zero-padded to 2 digits. [^2]   |\n| `%W`  | `27`     | Same as `%U`, but week 1 starts with the first Monday in that year instead.|\n|       |          |                                                                            |\n| `%G`  | `2001`   | Same as `%Y` but uses the year number in ISO 8601 week date. [^3]          |\n| `%g`  | `01`     | Same as `%y` but uses the year number in ISO 8601 week date. [^3]          |\n| `%V`  | `27`     | Same as `%U` but uses the week number in ISO 8601 week date (01--53). [^3] |\n|       |          |                                                                            |\n| `%j`  | `189`    | Day of the year (001--366), zero-padded to 3 digits.                       |\n|       |          |                                                                            |\n| `%D`  | `07/08/01`    | Month-day-year format. Same as `%m/%d/%y`.                            |\n| `%x`  | `07/08/01`    | Locale's date representation (e.g., 12/31/99).                        |\n| `%F`  | `2001-07-08`  | Year-month-day format (ISO 8601). Same as `%Y-%m-%d`.                 |\n| `%v`  | ` 8-Jul-2001` | Day-month-year format. Same as `%e-%b-%Y`.                            |\n|       |          |                                                                            |\n|       |          | **TIME SPECIFIERS:**                                                       |\n| `%H`  | `00`     | Hour number (00--23), zero-padded to 2 digits.                             |\n| `%k`  | ` 0`     | Same as `%H` but space-padded. Same as `%_H`.                              |\n| `%I`  | `12`     | Hour number in 12-hour clocks (01--12), zero-padded to 2 digits.           |\n| `%l`  | `12`     | Same as `%I` but space-padded. Same as `%_I`.                              |\n|       |          |                                                                            |\n| `%P`  | `am`     | `am` or `pm` in 12-hour clocks.                                            |\n| `%p`  | `AM`     | `AM` or `PM` in 12-hour clocks.                                            |\n|       |          |                                                                            |\n| `%M`  | `34`     | Minute number (00--59), zero-padded to 2 digits.                           |\n| `%S`  | `60`     | Second number (00--60), zero-padded to 2 digits. [^4]                      |\n| `%f`  | `26490000`    | Number of nanoseconds since last whole second. [^7]                   |\n| `%.f` | `.026490`| Decimal fraction of a second. Consumes the leading dot. [^7]               |\n| `%.3f`| `.026`        | Decimal fraction of a second with a fixed length of 3.                |\n| `%.6f`| `.026490`     | Decimal fraction of a second with a fixed length of 6.                |\n| `%.9f`| `.026490000`  | Decimal fraction of a second with a fixed length of 9.                |\n| `%3f` | `026`         | Decimal fraction of a second like `%.3f` but without the leading dot. |\n| `%6f` | `026490`      | Decimal fraction of a second like `%.6f` but without the leading dot. |\n| `%9f` | `026490000`   | Decimal fraction of a second like `%.9f` but without the leading dot. |\n|       |               |                                                                       |\n| `%R`  | `00:34`       | Hour-minute format. Same as `%H:%M`.                                  |\n| `%T`  | `00:34:60`    | Hour-minute-second format. Same as `%H:%M:%S`.                        |\n| `%X`  | `00:34:60`    | Locale's time representation (e.g., 23:13:48).                        |\n| `%r`  | `12:34:60 AM` | Locale's 12 hour clock time. (e.g., 11:11:04 PM). Falls back to `%X` if the locale does not have a 12 hour clock format. |\n|       |          |                                                                            |\n|       |          | **TIME ZONE SPECIFIERS:**                                                  |\n| `%Z`  | `ACST`   | Local time zone name. Skips all non-whitespace characters during parsing. Identical to `%:z` when formatting. [^8] |\n| `%z`  | `+0930`  | Offset from the local time to UTC (with UTC being `+0000`).                |\n| `%:z` | `+09:30` | Same as `%z` but with a colon.                                             |\n|`%::z`|`+09:30:00`| Offset from the local time to UTC with seconds.                            |\n|`%:::z`| `+09`    | Offset from the local time to UTC without minutes.                         |\n| `%#z` | `+09`    | *Parsing only:* Same as `%z` but allows minutes to be missing or present.  |\n|       |          |                                                                            |\n|       |          | **DATE & TIME SPECIFIERS:**                                                |\n|`%c`|`Sun Jul  8 00:34:60 2001`|Locale's date and time (e.g., Thu Mar  3 23:05:25 2005).       |\n| `%+`  | `2001-07-08T00:34:60.026490+09:30` | ISO 8601 / RFC 3339 date & time format. [^5]     |\n|       |               |                                                                       |\n| `%s`  | `994518299`   | UNIX timestamp, the number of seconds since 1970-01-01 00:00 UTC. [^6]|\n|       |          |                                                                            |\n|       |          | **SPECIAL SPECIFIERS:**                                                    |\n| `%t`  |          | Literal tab (`\\t`).                                                        |\n| `%n`  |          | Literal newline (`\\n`).                                                    |\n| `%%`  |          | Literal percent sign.                                                      |\n\nIt is possible to override the default padding behavior of numeric specifiers `%?`.\nThis is not allowed for other specifiers and will result in the `BAD_FORMAT` error.\n\nModifier | Description\n-------- | -----------\n`%-?`    | Suppresses any padding including spaces and zeroes. (e.g. `%j` = `012`, `%-j` = `12`)\n`%_?`    | Uses spaces as a padding. (e.g. `%j` = `012`, `%_j` = ` 12`)\n`%0?`    | Uses zeroes as a padding. (e.g. `%e` = ` 9`, `%0e` = `09`)\n\nNotes:\n\n[^1]: `%C`, `%y`:\n   This is floor division, so 100 BCE (year number -99) will print `-1` and `99` respectively.\n\n[^2]: `%U`:\n   Week 1 starts with the first Sunday in that year.\n   It is possible to have week 0 for days before the first Sunday.\n\n[^3]: `%G`, `%g`, `%V`:\n   Week 1 is the first week with at least 4 days in that year.\n   Week 0 does not exist, so this should be used with `%G` or `%g`.\n\n[^4]: `%S`:\n   It accounts for leap seconds, so `60` is possible.\n\n[^5]: `%+`: Same as `%Y-%m-%dT%H:%M:%S%.f%:z`, i.e. 0, 3, 6 or 9 fractional\n   digits for seconds and colons in the time zone offset.\n   <br>\n   <br>\n   This format also supports having a `Z` or `UTC` in place of `%:z`. They\n   are equivalent to `+00:00`.\n   <br>\n   <br>\n   Note that all `T`, `Z`, and `UTC` are parsed case-insensitively.\n   <br>\n   <br>\n   The typical `strftime` implementations have different (and locale-dependent)\n   formats for this specifier. While Chrono's format for `%+` is far more\n   stable, it is best to avoid this specifier if you want to control the exact\n   output.\n\n[^6]: `%s`:\n   This is not padded and can be negative.\n   For the purpose of Chrono, it only accounts for non-leap seconds\n   so it slightly differs from ISO C `strftime` behavior.\n\n[^7]: `%f`, `%.f`:\n   <br>\n   `%f` and `%.f` are notably different formatting specifiers.<br>\n   `%f` counts the number of nanoseconds since the last whole second, while `%.f` is a fraction of a\n   second.<br>\n   Example: 7μs is formatted as `7000` with `%f`, and formatted as `.000007` with `%.f`.\n\n[^8]: `%Z`:\n   Since `chrono` is not aware of timezones beyond their offsets, this specifier\n   **only prints the offset** when used for formatting. The timezone abbreviation\n   will NOT be printed. See [this issue](https://github.com/chronotope/chrono/issues/960)\n   for more information.\n   <br>\n   <br>\n   Offset will not be populated from the parsed data, nor will it be validated.\n   Timezone is completely ignored. Similar to the glibc `strptime` treatment of\n   this format code.\n   <br>\n   <br>\n   It is not possible to reliably convert from an abbreviation to an offset,\n   for example CDT can mean either Central Daylight Time (North America) or\n   China Daylight Time.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:2234:2605"],"is_stripped":false}}},"0:202:2748":{"id":"0:202:2748","crate_id":0,"name":"month0","span":{"filename":"src/date.rs","begin":[404,4],"end":[406,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:370:60":{"id":"0:370:60","crate_id":0,"name":"default","span":{"filename":"src/datetime/mod.rs","begin":[671,4],"end":[673,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:429:2759":{"id":"0:429:2759","crate_id":0,"name":"with_ordinal","span":{"filename":"src/datetime/mod.rs","begin":[1095,4],"end":[1097,5]},"visibility":"default","docs":"Makes a new `DateTime` with the day of year (starting from 1) changed.\n\nSee also the [`NaiveDate::with_ordinal`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist.\n- The value for `ordinal` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_ordinal`":"0:1089:2759"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1508":{"id":"0:1508","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1318,0],"end":[1323,1]},"visibility":"default","docs":"Subtract-assign `std::time::Duration` from `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the subtraction ignores integral number of days.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:33967:2353","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1509:1566"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:506:206":{"id":"0:506:206","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1448,4],"end":[1448,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:2334":{"id":"0:2334","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[100,16],"end":[100,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2335:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:687-0:2267:3310":{"id":"b:5:687-0:2267:3310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2754-0:2488:3453":{"id":"b:2:2754-0:2488:3453","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42476:9167-0:2234:2605":{"id":"a:2:42476:9167-0:2234:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2744-0:2675:2162":{"id":"b:2:2744-0:2675:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1990:8146":{"id":"0:1990:8146","crate_id":0,"name":"duration_round","span":{"filename":"src/round.rs","begin":[127,4],"end":[127,75]},"visibility":"default","docs":"Return a copy rounded by Duration.\n\n# Example\n``` rust\n# use chrono::{DurationRound, Duration, Utc, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 11).unwrap().and_hms_milli_opt(12, 0, 0, 154).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(\n    dt.duration_round(Duration::milliseconds(10)).unwrap().to_string(),\n    \"2018-01-11 12:00:00.150 UTC\"\n);\nassert_eq!(\n    dt.duration_round(Duration::days(1)).unwrap().to_string(),\n    \"2018-01-12 00:00:00 UTC\"\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["duration",{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1988:2182","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2441-0:2595:2179":{"id":"b:2:2441-0:2595:2179","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2595:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1018:5284":{"id":"0:1018:5284","crate_id":0,"name":"from_num_days_from_ce","span":{"filename":"src/naive/date.rs","begin":[451,4],"end":[453,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\nJanuary 1, 1 being day 1.\n\n# Panics\n\nPanics if the date is out of range.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_num_days_from_ce_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_num_days_from_ce_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["days",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1201:2997":{"id":"0:1201:2997","crate_id":0,"name":"from_timestamp_opt","span":{"filename":"src/naive/datetime/mod.rs","begin":[265,4],"end":[278,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` corresponding to a UTC date and time,\nfrom the number of non-leap seconds\nsince the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nThe nanosecond part can exceed 1,000,000,000 in order to represent a\n[leap second](NaiveTime#leap-second-handling), but only when `secs % 60 == 59`.\n(The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)\n\n# Errors\n\nReturns `None` if the number of seconds would be out of range for a `NaiveDateTime` (more\nthan ca. 262,000 years away from common era), and panics on an invalid nanosecond\n(2 seconds or more).\n\n# Example\n\n```\nuse chrono::NaiveDateTime;\nuse std::i64;\n\nlet from_timestamp_opt = NaiveDateTime::from_timestamp_opt;\n\nassert!(from_timestamp_opt(0, 0).is_some());\nassert!(from_timestamp_opt(0, 999_999_999).is_some());\nassert!(from_timestamp_opt(0, 1_500_000_000).is_none()); // invalid leap second\nassert!(from_timestamp_opt(59, 1_500_000_000).is_some()); // leap second\nassert!(from_timestamp_opt(59, 2_000_000_000).is_none());\nassert!(from_timestamp_opt(i64::MAX, 0).is_none());\n```","links":{"NaiveTime#leap-second-handling":"0:2746:2163"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["secs",{"primitive":"i64"}],["nsecs",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2046:1025":{"id":"0:2046:1025","crate_id":0,"name":"name","span":{"filename":"src/month.rs","begin":[149,4],"end":[164,5]},"visibility":"public","docs":"Get the name of the month\n\n```\nuse chrono::Month;\n\nassert_eq!(Month::January.name(), \"January\")\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2759-0:2161:2604":{"id":"b:2:2759-0:2161:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1275:3148":{"id":"0:1275:3148","crate_id":0,"name":"with_second","span":{"filename":"src/naive/datetime/mod.rs","begin":[1569,4],"end":[1571,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the second number changed.\n\nAs with the [`second`](#method.second) method,\nthe input range is restricted to 0 through 59.\n\nSee also the [`NaiveTime::with_second`] method.\n\n# Errors\n\nReturns `None` if the value for `second` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.with_second(17),\n           Some(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 17, 789).unwrap()));\nassert_eq!(dt.with_second(60), None);\n```","links":{"`NaiveTime::with_second`":"0:1484:3148"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1517:725":{"id":"0:1517:725","crate_id":0,"name":"fmt","span":{"filename":"src/naive/time/mod.rs","begin":[1421,4],"end":[1445,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:61:2479":{"id":"0:61:2479","crate_id":0,"name":"to_std","span":{"filename":"src/duration.rs","begin":[352,4],"end":[357,5]},"visibility":"public","docs":"Creates a `std::time::Duration` object from `time::Duration`\n\nThis function errors when duration is less than zero. As standard\nlibrary implementation is limited to non-negative values.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"StdDuration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2748-0:2600:2177":{"id":"b:2:2748-0:2600:2177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32882:9016-0:2234:2605":{"id":"a:2:32882:9016-0:2234:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3204":{"id":"0:3204","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,62],"end":[31,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2540:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3205:468"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[331,0],"end":[392,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1934:2165","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:192:2733","0:196:737"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2744-0:2147:2148":{"id":"b:2:2744-0:2147:2148","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:714:3956":{"id":"0:714:3956","crate_id":0,"name":"set_nanosecond","span":{"filename":"src/format/parsed.rs","begin":[269,4],"end":[271,5]},"visibility":"public","docs":"Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32882:9016-0:2595:2179":{"id":"a:2:32882:9016-0:2595:2179","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2595:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:70:1565":{"id":"0:70:1565","crate_id":0,"name":"sub","span":{"filename":"src/duration.rs","begin":[384,4],"end":[386,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:607:3306":{"id":"0:607:3306","crate_id":0,"name":"format_item","span":{"filename":"src/format/formatting.rs","begin":[171,0],"end":[187,1]},"visibility":"public","docs":"Formats single formatting item","links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[deprecated(since = \"0.4.32\", note = \"Use DelayedFormat::fmt instead\")]"],"deprecation":{"since":"0.4.32","note":"Use DelayedFormat::fmt instead"},"inner":{"function":{"decl":{"inputs":[["w",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["date",{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"crate::NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["time",{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"crate::NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["off",{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"tuple":[{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"crate::FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}}}],"bindings":[]}}}}],["item",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"super::Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2187:725":{"id":"0:2187:725","crate_id":0,"name":"fmt","span":{"filename":"src/format/formatting.rs","begin":[509,22],"end":[509,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12874:41054":{"id":"2:12874:41054","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1318:206":{"id":"0:1318:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[2020,4],"end":[2020,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1076:2186":{"id":"0:1076:2186","crate_id":0,"name":"month","span":{"filename":"src/naive/date.rs","begin":[1525,4],"end":[1527,5]},"visibility":"default","docs":"Returns the month number starting from 1.\n\nThe return value ranges from 1 to 12.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().month(), 9);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().month(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2444-0:2488:3453":{"id":"b:2:2444-0:2488:3453","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3558-0:2595:2179":{"id":"b:2:3558-0:2595:2179","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2595:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2737:1146":{"id":"0:2737:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/isoweek.rs","begin":[19,24],"end":[19,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1544-0:2746:2163":{"id":"0:1544-0:2746:2163","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[22,0],"end":[22,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::time::NaiveTime","name":"NaiveTime","id":"0:2746:2163","glob":false}}},"0:1116:1565":{"id":"0:1116:1565","crate_id":0,"name":"sub","span":{"filename":"src/naive/date.rs","begin":[2084,4],"end":[2086,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98-0:2134:2146":{"id":"0:98-0:2134:2146","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[490,0],"end":[490,34]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]","#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"duration::OutOfRangeError","name":"OutOfRangeError","id":"0:2134:2146","glob":false}}},"b:2:2441-0:2637:5109":{"id":"b:2:2441-0:2637:5109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42477:9166-0:3091:2183":{"id":"a:2:42477:9166-0:3091:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:492:206":{"id":"0:492:206","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1372,4],"end":[1372,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"b:2:2441-0:2620:2161":{"id":"b:2:2441-0:2620:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1985:8123":{"id":"0:1985:8123","crate_id":0,"name":"round_subsecs","span":{"filename":"src/round.rs","begin":[53,4],"end":[66,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["digits",{"primitive":"u16"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42477:9166-0:3060:2180":{"id":"a:2:42477:9166-0:3060:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3558-0:2746:2163":{"id":"b:2:3558-0:2746:2163","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2759-0:2154:2153":{"id":"b:2:2759-0:2154:2153","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2444-0:2444:3447":{"id":"b:2:2444-0:2444:3447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1509:1566":{"id":"0:1509:1566","crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/time/mod.rs","begin":[1320,4],"end":[1322,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32882:9016-0:2196:2794":{"id":"a:2:32882:9016-0:2196:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2219:461":{"id":"0:2219:461","crate_id":0,"name":"clone","span":{"filename":"src/format/parsed.rs","begin":[21,9],"end":[21,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2604:461":{"id":"0:2604:461","crate_id":0,"name":"clone","span":{"filename":"src/naive/date.rs","begin":[133,9],"end":[133,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2649:668":{"id":"0:2649:668","crate_id":0,"name":"eq","span":{"filename":"src/naive/date.rs","begin":[2096,35],"end":[2096,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3558-0:2764:2159":{"id":"b:2:3558-0:2764:2159","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1924:2643":{"id":"0:1924:2643","crate_id":0,"name":"and_time","span":{"filename":"src/offset/mod.rs","begin":[100,4],"end":[107,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["time",{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1872:1779":{"id":"0:1872:1779","crate_id":0,"name":"now","span":{"filename":"src/offset/local/mod.rs","begin":[153,4],"end":[155,5]},"visibility":"public","docs":"Returns a `DateTime<Local>` which corresponds to the current date, time and offset from\nUTC.\n\nSee also the similar [`Utc::now()`] which returns `DateTime<Utc>`, i.e. without the local\noffset.\n\n# Example\n\n```\n# #![allow(unused_variables)]\n# use chrono::{DateTime, FixedOffset, Local};\n// Current local time\nlet now = Local::now();\n\n// Current local date\nlet today = now.date_naive();\n\n// Current local time, converted to `DateTime<FixedOffset>`\nlet now_fixed_offset = Local::now().fixed_offset();\n// or\nlet now_fixed_offset: DateTime<FixedOffset> = Local::now().into();\n\n// Current time in some timezone (let's use +05:00)\n// Note that it is usually more efficient to use `Utc::now` for this use case.\nlet offset = FixedOffset::east_opt(5 * 60 * 60).unwrap();\nlet now_with_offset = Local::now().with_timezone(&offset);\n```","links":{"`Utc::now()`":"0:1899:1779"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3558-0:2234:2605":{"id":"b:2:3558-0:2234:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2489:198":{"id":"0:2489:198","crate_id":0,"name":"None","span":{"filename":"src/format/mod.rs","begin":[317,4],"end":[317,8]},"visibility":"default","docs":"No separator","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1244:2186":{"id":"0:1244:2186","crate_id":0,"name":"month","span":{"filename":"src/naive/datetime/mod.rs","begin":[1133,4],"end":[1135,5]},"visibility":"default","docs":"Returns the month number starting from 1.\n\nThe return value ranges from 1 to 12.\n\nSee also the [`NaiveDate::month`](./struct.NaiveDate.html#method.month) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.month(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3558-0:2729:2178":{"id":"b:2:3558-0:2729:2178","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2750":{"id":"0:2750","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[205,9],"end":[205,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2751:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2284":{"id":"0:2284","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[77,44],"end":[77,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2285:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[497,0],"end":[502,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","description","source","cause","type_id"],"trait":{"name":"Error","id":"2:2806:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:95:2511"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1012:5209":{"id":"0:1012:5209","crate_id":0,"name":"from_ymd","span":{"filename":"src/naive/date.rs","begin":[263,4],"end":[265,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n(year, month and day).\n\n# Panics\n\nPanics if the specified calendar day does not exist, on invalid values for `month` or `day`,\nor if `year` is out of range for `NaiveDate`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_ymd_opt()` instead\")]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_ymd_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1320":{"id":"0:1320","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[2054,0],"end":[2060,1]},"visibility":"default","docs":"The `Debug` output of the naive date and time `dt` is the same as\n[`dt.format(\"%Y-%m-%dT%H:%M:%S%.f\")`](crate::format::strftime).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 11, 15).unwrap().and_hms_opt(7, 39, 24).unwrap();\nassert_eq!(format!(\"{:?}\", dt), \"2016-11-15T07:39:24\");\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveDate;\nlet dt = NaiveDate::from_ymd_opt(2015, 6, 30).unwrap().and_hms_milli_opt(23, 59, 59, 1_500).unwrap();\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:59:60.500\");\n```","links":{"crate::format::strftime":"0:860:3302"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1321:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2394:3374":{"id":"0:2394:3374","crate_id":0,"name":"Internal","span":{"filename":"src/format/mod.rs","begin":[251,4],"end":[251,27]},"visibility":"default","docs":"Internal uses only.\n\nThis item exists so that one can add additional internal-only formatting\nwithout breaking major compatibility (as enum variants cannot be selectively private).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2396:1764"]},"discriminant":null}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[507,0],"end":[512,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:33908:2348","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:249:302"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1322":{"id":"0:1322","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[2087,0],"end":[2093,1]},"visibility":"default","docs":"The `Display` output of the naive date and time `dt` is the same as\n[`dt.format(\"%Y-%m-%d %H:%M:%S%.f\")`](crate::format::strftime).\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 11, 15).unwrap().and_hms_opt(7, 39, 24).unwrap();\nassert_eq!(format!(\"{}\", dt), \"2016-11-15 07:39:24\");\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveDate;\nlet dt = NaiveDate::from_ymd_opt(2015, 6, 30).unwrap().and_hms_milli_opt(23, 59, 59, 1_500).unwrap();\nassert_eq!(format!(\"{}\", dt), \"2015-06-30 23:59:60.500\");\n```","links":{"crate::format::strftime":"0:860:3302"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1323:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2759-0:2675:2162":{"id":"b:2:2759-0:2675:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1199:6025":{"id":"0:1199:6025","crate_id":0,"name":"from_timestamp_micros","span":{"filename":"src/naive/datetime/mod.rs","begin":[194,4],"end":[198,5]},"visibility":"public","docs":"Creates a new [NaiveDateTime] from microseconds since the UNIX epoch.\n\nThe UNIX epoch starts on midnight, January 1, 1970, UTC.\n\n# Errors\n\nReturns `None` if the number of microseconds would be out of range for a `NaiveDateTime`\n(more than ca. 262,000 years away from common era)\n\n# Example\n\n```\nuse chrono::NaiveDateTime;\nlet timestamp_micros: i64 = 1662921288000000; //Sunday, September 11, 2022 6:34:48 PM\nlet naive_datetime = NaiveDateTime::from_timestamp_micros(timestamp_micros);\nassert!(naive_datetime.is_some());\nassert_eq!(timestamp_micros, naive_datetime.unwrap().timestamp_micros());\n\n// Negative timestamps (before the UNIX epoch) are supported as well.\nlet timestamp_micros: i64 = -2208936075000000; //Mon Jan 01 1900 14:38:45 GMT+0000\nlet naive_datetime = NaiveDateTime::from_timestamp_micros(timestamp_micros);\nassert!(naive_datetime.is_some());\nassert_eq!(timestamp_micros, naive_datetime.unwrap().timestamp_micros());\n```","links":{"NaiveDateTime":"0:2675:2162"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["micros",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:162:2675":{"id":"0:162:2675","crate_id":0,"name":"and_hms_micro_opt","span":{"filename":"src/date.rs","begin":[163,4],"end":[171,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute, second and/or microsecond.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12873:4134":{"id":"2:12873:4134","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12106:7804"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:425:2757":{"id":"0:425:2757","crate_id":0,"name":"with_day","span":{"filename":"src/datetime/mod.rs","begin":[1063,4],"end":[1065,5]},"visibility":"default","docs":"Makes a new `DateTime` with the day of month (starting from 1) changed.\n\nSee also the [`NaiveDate::with_day`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist.\n- The value for `day` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_day`":"0:1087:2757"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1522:134":{"id":"0:1522:134","crate_id":0,"name":"Err","span":{"filename":"src/naive/time/mod.rs","begin":[1506,4],"end":[1506,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2238":{"id":"0:2238","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[165,9],"end":[165,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2240:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2748-0:2675:2162":{"id":"b:2:2748-0:2675:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:808:134":{"id":"0:808:134","crate_id":0,"name":"Err","span":{"filename":"src/format/parse.rs","begin":[528,4],"end":[528,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2754-0:3108:2158":{"id":"b:2:2754-0:3108:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1127":{"id":"0:1127","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2137,0],"end":[2150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["collect","partial_cmp","is_sorted_by","array_chunks","cycle","reduce","collect_into","map","flatten","for_each","size_hint","next_chunk","min_by","any","ge","is_sorted_by_key","all","sum","product","try_reduce","partition","map_windows","filter_map","advance_by","min_by_key","position","__iterator_get_unchecked","chain","cmp_by","find_map","skip","count","flat_map","fuse","peekable","partition_in_place","nth","min","max_by","ne","fold","partial_cmp_by","try_find","le","is_partitioned","scan","last","skip_while","inspect","step_by","max_by_key","eq","lt","take","max","eq_by","rposition","try_fold","by_ref","take_while","intersperse","cmp","enumerate","copied","find","rev","unzip","is_sorted","try_for_each","try_collect","map_while","intersperse_with","filter","gt","cloned","zip"],"trait":{"name":"Iterator","id":"2:8051:176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1128:171","0:1129:1062","0:1130:5724"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32882:9016-0:3206:2188":{"id":"a:2:32882:9016-0:3206:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1041:2684":{"id":"0:1041:2684","crate_id":0,"name":"and_hms_nano_opt","span":{"filename":"src/naive/date.rs","begin":[1025,4],"end":[1034,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.\n\nThe nanosecond part is allowed to exceed 1,000,000,000 in order to represent a [leap second](\n./struct.NaiveTime.html#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute, second and/or nanosecond.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nassert!(d.and_hms_nano_opt(12, 34, 56,   789_012_345).is_some());\nassert!(d.and_hms_nano_opt(12, 34, 59, 1_789_012_345).is_some()); // leap second\nassert!(d.and_hms_nano_opt(12, 34, 59, 2_789_012_345).is_none());\nassert!(d.and_hms_nano_opt(12, 34, 60,   789_012_345).is_none());\nassert!(d.and_hms_nano_opt(12, 60, 56,   789_012_345).is_none());\nassert!(d.and_hms_nano_opt(24, 34, 56,   789_012_345).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2624:668":{"id":"0:2624:668","crate_id":0,"name":"eq","span":{"filename":"src/naive/date.rs","begin":[191,9],"end":[191,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1918:7207":{"id":"0:1918:7207","crate_id":0,"name":"latest","span":{"filename":"src/offset/mod.rs","begin":[74,4],"end":[79,5]},"visibility":"public","docs":"Returns `Some` for the latest possible conversion result, or `None` if none.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2220":{"id":"0:2220","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[21,16],"end":[21,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2744-0:2508:171":{"id":"b:2:2744-0:2508:171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1217:2903":{"id":"0:1217:2903","crate_id":0,"name":"timestamp_subsec_nanos","span":{"filename":"src/naive/datetime/mod.rs","begin":[630,4],"end":[632,5]},"visibility":"public","docs":"Returns the number of nanoseconds since the last whole non-leap second.\n\nThe return value ranges from 0 to 999,999,999,\nor for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999,999.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_nano_opt(9, 10, 11, 123_456_789).unwrap();\nassert_eq!(dt.timestamp_subsec_nanos(), 123_456_789);\n\nlet dt = NaiveDate::from_ymd_opt(2015, 7, 1).unwrap().and_hms_nano_opt(8, 59, 59, 1_234_567_890).unwrap();\nassert_eq!(dt.timestamp_subsec_nanos(), 1_234_567_890);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1493:206":{"id":"0:1493:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1191,4],"end":[1191,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:260:1565":{"id":"0:260:1565","crate_id":0,"name":"sub","span":{"filename":"src/date.rs","begin":[534,4],"end":[536,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:947":{"id":"0:947","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[512,0],"end":[536,1]},"visibility":"default","docs":"Parsing a `str` into a `Month` uses the format [`%B`](./format/strftime/index.html).\n\n# Example\n\n```\nuse chrono::Month;\n\nassert_eq!(\"January\".parse::<Month>(), Ok(Month::January));\nassert!(\"any day\".parse::<Month>().is_err());\n```\n\nThe parsing is case-insensitive.\n\n```\n# use chrono::Month;\nassert_eq!(\"fEbruARy\".parse::<Month>(), Ok(Month::February));\n```\n\nOnly the shortest form (e.g. `jan`) and the longest form (e.g. `january`) is accepted.\n\n```\n# use chrono::Month;\nassert!(\"septem\".parse::<Month>().is_err());\nassert!(\"Augustin\".parse::<Month>().is_err());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12518:3218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:948:134","0:949:3219"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2444-0:2196:2794":{"id":"b:2:2444-0:2196:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:693:3929":{"id":"0:693:3929","crate_id":0,"name":"set_month","span":{"filename":"src/format/parsed.rs","begin":[188,4],"end":[190,5]},"visibility":"public","docs":"Tries to set the [`month`](#structfield.month) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1917:7205":{"id":"0:1917:7205","crate_id":0,"name":"earliest","span":{"filename":"src/offset/mod.rs","begin":[65,4],"end":[70,5]},"visibility":"public","docs":"Returns `Some` for the earliest possible conversion result, or `None` if none.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2759-0:2287:3327":{"id":"b:2:2759-0:2287:3327","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1907":{"id":"0:1907","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[138,0],"end":[142,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Offset","id":"0:1932:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1908:2832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[435,0],"end":[439,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sum","id":"2:7863:2487","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:83:2488"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1328":{"id":"0:1328","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[2153,0],"end":[2157,1]},"visibility":"default","docs":"The default value for a NaiveDateTime is one with epoch 0\nthat is, 1st of January 1970 at 00:00:00.\n\n# Example\n\n```rust\nuse chrono::NaiveDateTime;\n\nlet default_date = NaiveDateTime::default();\nassert_eq!(Some(default_date), NaiveDateTime::from_timestamp_opt(0, 0));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2795:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1329:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2744-0:2170:2154":{"id":"b:2:2744-0:2170:2154","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2029":{"id":"0:2029","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[199,0],"end":[227,1]},"visibility":"default","docs":"Any weekday can be represented as an integer from 0 to 6, which equals to\n[`Weekday::num_days_from_monday`](#method.num_days_from_monday) in this implementation.\nDo not heavily depend on this though; use explicit methods whenever possible.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_u32","from_u8","from_i16","from_f32","from_f64","from_u16","from_i32","from_isize","from_u128","from_i128","from_i8","from_usize"],"trait":{"name":"FromPrimitive","id":"21:162:8295","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2030:8296","0:2031:8297"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32825:244-0:2112:129":{"id":"a:2:32825:244-0:2112:129","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2754-0:2161:2604":{"id":"b:2:2754-0:2161:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2120":{"id":"0:2120","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,31],"end":[53,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:708:3950":{"id":"0:708:3950","crate_id":0,"name":"set_hour","span":{"filename":"src/format/parsed.rs","begin":[248,4],"end":[253,5]},"visibility":"public","docs":"Tries to set both [`hour_div_12`](#structfield.hour_div_12) and\n[`hour_mod_12`](#structfield.hour_mod_12) fields from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1983":{"id":"0:1983","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[49,0],"end":[77,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Timelike","id":"0:2089:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::duration::Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::duration::Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"SubsecRound","id":"0:1980:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"generic":"T"},"items":["0:1985:8123","0:1986:8128"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42476:9167-0:2675:2162":{"id":"a:2:42476:9167-0:2675:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2966:253-0:2287:3327":{"id":"a:2:2966:253-0:2287:3327","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1117":{"id":"0:1117","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2089,0],"end":[2093,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1118:752"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1119":{"id":"0:1119","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2101,0],"end":[2116,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["collect","partial_cmp","is_sorted_by","array_chunks","cycle","reduce","collect_into","map","flatten","for_each","size_hint","next_chunk","min_by","any","ge","is_sorted_by_key","all","sum","product","try_reduce","partition","map_windows","filter_map","advance_by","min_by_key","position","__iterator_get_unchecked","chain","cmp_by","find_map","skip","count","flat_map","fuse","peekable","partition_in_place","nth","min","max_by","ne","fold","partial_cmp_by","try_find","le","is_partitioned","scan","last","skip_while","inspect","step_by","max_by_key","eq","lt","take","max","eq_by","rposition","try_fold","by_ref","take_while","intersperse","cmp","enumerate","copied","find","rev","unzip","is_sorted","try_for_each","try_collect","map_while","intersperse_with","filter","gt","cloned","zip"],"trait":{"name":"Iterator","id":"2:8051:176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1120:171","0:1121:1062","0:1122:5724"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1999:8146":{"id":"0:1999:8146","crate_id":0,"name":"duration_round","span":{"filename":"src/round.rs","begin":[162,4],"end":[164,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["duration",{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1988:2182","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:702:3939":{"id":"0:702:3939","crate_id":0,"name":"set_ordinal","span":{"filename":"src/format/parsed.rs","begin":[218,4],"end":[220,5]},"visibility":"public","docs":"Tries to set the [`ordinal`](#structfield.ordinal) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5828-0:2154:2153":{"id":"b:5:5828-0:2154:2153","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5826:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["5:5830:1605"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1060:5518":{"id":"0:1060:5518","crate_id":0,"name":"iter_days","span":{"filename":"src/naive/date.rs","begin":[1379,4],"end":[1381,5]},"visibility":"public","docs":"Returns an iterator that steps by days across all representable dates.\n\n# Example\n\n```\n# use chrono::NaiveDate;\n\nlet expected = [\n    NaiveDate::from_ymd_opt(2016, 2, 27).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 2, 28).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 2, 29).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 3, 1).unwrap(),\n];\n\nlet mut count = 0;\nfor (idx, d) in NaiveDate::from_ymd_opt(2016, 2, 27).unwrap().iter_days().take(4).enumerate() {\n   assert_eq!(d, expected[idx]);\n   count += 1;\n}\nassert_eq!(count, 4);\n\nfor d in NaiveDate::from_ymd_opt(2016, 3, 1).unwrap().iter_days().rev().take(4) {\n    count -= 1;\n    assert_eq!(d, expected[count]);\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42477:9166-0:2409:3432":{"id":"a:2:42477:9166-0:2409:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2736":{"id":"0:2736","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,24],"end":[19,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2546:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2737:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2033":{"id":"0:2033","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[238,0],"end":[242,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2034:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:249:302":{"id":"0:249:302","crate_id":0,"name":"add_assign","span":{"filename":"src/date.rs","begin":[509,4],"end":[511,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:443:3148":{"id":"0:443:3148","crate_id":0,"name":"with_second","span":{"filename":"src/datetime/mod.rs","begin":[1177,4],"end":[1179,5]},"visibility":"default","docs":"Makes a new `DateTime` with the second number changed.\n\nAs with the [`second`](#method.second) method,\nthe input range is restricted to 0 through 59.\n\nSee also the [`NaiveTime::with_second`] method.\n\n# Errors\n\nReturns `None` if:\n- The value for `second` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveTime::with_second`":"0:1484:3148"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2451":{"id":"0:2451","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[280,16],"end":[280,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:934:725":{"id":"0:934:725","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[418,4],"end":[429,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1308":{"id":"0:1308","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1943,0],"end":[1949,1]},"visibility":"default","docs":"Subtract `Months` from `NaiveDateTime`.\n\nThe result will be clamped to valid days in the resulting month, see\n[`NaiveDateTime::checked_sub_months`] for details.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDateTime::checked_sub_months`] to get an `Option` instead.\n\n# Example\n\n```\nuse chrono::{Months, NaiveDate};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 01, 01).unwrap().and_hms_opt(01, 00, 00).unwrap() - Months::new(11),\n    NaiveDate::from_ymd_opt(2013, 02, 01).unwrap().and_hms_opt(01, 00, 00).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 01, 01).unwrap().and_hms_opt(00, 02, 00).unwrap() - Months::new(12),\n    NaiveDate::from_ymd_opt(2013, 01, 01).unwrap().and_hms_opt(00, 02, 00).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 01, 01).unwrap().and_hms_opt(00, 00, 03).unwrap() - Months::new(13),\n    NaiveDate::from_ymd_opt(2012, 12, 01).unwrap().and_hms_opt(00, 00, 03).unwrap()\n);\n```","links":{"`NaiveDateTime::checked_sub_months`":"0:1224:2927"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1309:206","0:1310:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2077:2751":{"id":"0:2077:2751","crate_id":0,"name":"ordinal","span":{"filename":"src/traits.rs","begin":[70,4],"end":[70,29]},"visibility":"default","docs":"Returns the day of year starting from 1.\n\nThe return value ranges from 1 to 366. (The last day of year differs by years.)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12926:41058":{"id":"2:12926:41058","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12558:8766","str::split":"2:12917:33500","prim@char":"1:12055:457","`DoubleEndedIterator`":"2:7942:128","str::rsplit_terminator":"2:12929:41059"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44289:8800","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:933":{"id":"0:933","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[417,0],"end":[430,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:934:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2660":{"id":"0:2660","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2132,16],"end":[2132,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3102":{"id":"0:3102","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[240,23],"end":[240,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:734:3062":{"id":"0:734:3062","crate_id":0,"name":"to_datetime","span":{"filename":"src/format/parsed.rs","begin":[627,4],"end":[642,5]},"visibility":"public","docs":"Returns a parsed timezone-aware date and time out of given fields.\n\nThis method is able to determine the combined date and time\nfrom date and time fields or a single [`timestamp`](#structfield.timestamp) field,\nplus a time zone offset.\nEither way those fields have to be consistent to each other.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2542":{"id":"0:2542","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[325,31],"end":[325,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2544:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1122:5724":{"id":"0:1122:5724","crate_id":0,"name":"size_hint","span":{"filename":"src/naive/date.rs","begin":[2112,4],"end":[2115,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:2746:2163":{"id":"b:2:2754-0:2746:2163","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:380:752":{"id":"0:380:752","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[717,4],"end":[719,5]},"visibility":"default","docs":"Convert this `DateTime<FixedOffset>` instance into a `DateTime<Utc>` instance.\n\nConversion is performed via [`DateTime::with_timezone`], accounting for the timezone\ndifference.","links":{"`DateTime::with_timezone`":"0:343:2705"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:2196:2794":{"id":"b:5:687-0:2196:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1413:725":{"id":"0:1413:725","crate_id":0,"name":"fmt","span":{"filename":"src/naive/isoweek.rs","begin":[142,4],"end":[151,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:2508:171":{"id":"b:2:2754-0:2508:171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2465:3465":{"id":"0:2465:3465","crate_id":0,"name":"Minutes","span":{"filename":"src/format/mod.rs","begin":[301,4],"end":[301,11]},"visibility":"default","docs":"Format offset from UTC as hours and minutes.\nAny seconds will be rounded to the nearest minute.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1960:2906":{"id":"0:1960:2906","crate_id":0,"name":"from_utc_datetime","span":{"filename":"src/offset/mod.rs","begin":[547,4],"end":[549,5]},"visibility":"default","docs":"Converts the UTC `NaiveDateTime` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).","links":{},"attrs":["#[allow(clippy::wrong_self_convention)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12979:41068":{"id":"2:12979:41068","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:8766"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:717:3960":{"id":"0:717:3960","crate_id":0,"name":"set_offset","span":{"filename":"src/format/parsed.rs","begin":[281,4],"end":[283,5]},"visibility":"public","docs":"Tries to set the [`offset`](#structfield.offset) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2482:668":{"id":"0:2482:668","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[293,29],"end":[293,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1061:5525":{"id":"0:1061:5525","crate_id":0,"name":"iter_weeks","span":{"filename":"src/naive/date.rs","begin":[1410,4],"end":[1412,5]},"visibility":"public","docs":"Returns an iterator that steps by weeks across all representable dates.\n\n# Example\n\n```\n# use chrono::NaiveDate;\n\nlet expected = [\n    NaiveDate::from_ymd_opt(2016, 2, 27).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 3, 5).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 3, 12).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 3, 19).unwrap(),\n];\n\nlet mut count = 0;\nfor (idx, d) in NaiveDate::from_ymd_opt(2016, 2, 27).unwrap().iter_weeks().take(4).enumerate() {\n   assert_eq!(d, expected[idx]);\n   count += 1;\n}\nassert_eq!(count, 4);\n\nfor d in NaiveDate::from_ymd_opt(2016, 3, 19).unwrap().iter_weeks().rev().take(4) {\n    count -= 1;\n    assert_eq!(d, expected[count]);\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38:2418":{"id":"0:38:2418","crate_id":0,"name":"try_minutes","span":{"filename":"src/duration.rs","begin":[143,4],"end":[145,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nReturns `None` when the duration is out of bounds.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["minutes",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2566:2221":{"id":"0:2566:2221","crate_id":0,"name":"OutOfRange","span":{"filename":"src/format/mod.rs","begin":[382,4],"end":[382,14]},"visibility":"default","docs":"Given field is out of permitted range.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1315:206":{"id":"0:1315:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[2006,4],"end":[2006,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2648":{"id":"0:2648","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2096,35],"end":[2096,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2649:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3069:1764":{"id":"0:3069:1764","crate_id":0,"name":"0","span":{"filename":"src/offset/mod.rs","begin":[50,14],"end":[50,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"2:12920:36614":{"id":"2:12920:36614","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:8766"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12374:8812","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42477:9166-0:2444:3447":{"id":"a:2:42477:9166-0:2444:3447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2441-0:3040:2149":{"id":"b:2:2441-0:3040:2149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:150:2167":{"id":"0:150:2167","crate_id":0,"name":"MAX_DATE","span":{"filename":"src/date.rs","begin":[72,0],"end":[72,53]},"visibility":"public","docs":"The maximum possible `Date`.","links":{},"attrs":["#[allow(deprecated)]","#[deprecated(since = \"0.4.20\", note = \"Use Date::MAX_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use Date::MAX_UTC instead"},"inner":{"constant":{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"expr":"Date<Utc>::MAX_UTC","value":null,"is_literal":false}}},"b:2:2754-0:2267:3310":{"id":"b:2:2754-0:2267:3310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2278":{"id":"0:2278","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[77,22],"end":[77,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2279:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2632":{"id":"0:2632","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[191,42],"end":[191,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2540:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2633:468"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2630":{"id":"0:2630","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[191,30],"end":[191,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2546:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2631:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1470:737":{"id":"0:1470:737","crate_id":0,"name":"format","span":{"filename":"src/naive/time/mod.rs","begin":[860,4],"end":[862,5]},"visibility":"public","docs":"Formats the time with the specified format string.\nSee the [`format::strftime` module](crate::format::strftime)\non the supported escape sequences.\n\nThis returns a `DelayedFormat`,\nwhich gets converted to a string only when actual formatting happens.\nYou may use the `to_string` method to get a `String`,\nor just feed it into `print!` and other formatting macros.\n(In this way it avoids the redundant memory allocation.)\n\nA wrong format string does *not* issue an error immediately.\nRather, converting or formatting the `DelayedFormat` fails.\nYou are recommended to immediately use `DelayedFormat` for this reason.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet t = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(t.format(\"%H:%M:%S\").to_string(), \"23:56:04\");\nassert_eq!(t.format(\"%H:%M:%S%.6f\").to_string(), \"23:56:04.012345\");\nassert_eq!(t.format(\"%-I:%M %p\").to_string(), \"11:56 PM\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveTime;\n# let t = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(format!(\"{}\", t.format(\"%H:%M:%S\")), \"23:56:04\");\nassert_eq!(format!(\"{}\", t.format(\"%H:%M:%S%.6f\")), \"23:56:04.012345\");\nassert_eq!(format!(\"{}\", t.format(\"%-I:%M %p\")), \"11:56 PM\");\n```","links":{"crate::format::strftime":"0:860:3302"},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2666":{"id":"0:2666","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2132,35],"end":[2132,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1946:2864":{"id":"0:1946:2864","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/offset/mod.rs","begin":[395,4],"end":[397,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap milliseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\nPanics on out-of-range number of milliseconds for a non-panicking\nversion see [`timestamp_millis_opt`](#method.timestamp_millis_opt).","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `timestamp_millis_opt()` instead\")]"],"deprecation":{"since":"0.4.23","note":"use `timestamp_millis_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["millis",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2450:725":{"id":"0:2450:725","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[280,9],"end":[280,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:2234:2605":{"id":"b:5:687-0:2234:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:60:2474":{"id":"0:60:2474","crate_id":0,"name":"from_std","span":{"filename":"src/duration.rs","begin":[336,4],"end":[346,5]},"visibility":"public","docs":"Creates a `time::Duration` object from `std::time::Duration`\n\nThis function errors when original duration is larger than the maximum\nvalue supported for this type.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["duration",{"resolved_path":{"name":"StdDuration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1944:2857":{"id":"0:1944:2857","crate_id":0,"name":"timestamp","span":{"filename":"src/offset/mod.rs","begin":[358,4],"end":[360,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nThe nanosecond part can exceed 1,000,000,000 in order to represent a\n[leap second](NaiveTime#leap-second-handling), but only when `secs % 60 == 59`.\n(The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)\n\n# Panics\n\nPanics on the out-of-range number of seconds and/or invalid nanosecond,\nfor a non-panicking version see [`timestamp_opt`](#method.timestamp_opt).","links":{"NaiveTime#leap-second-handling":"0:2746:2163"},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `timestamp_opt()` instead\")]"],"deprecation":{"since":"0.4.23","note":"use `timestamp_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["secs",{"primitive":"i64"}],["nsecs",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:239":{"id":"0:239","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[492,0],"end":[496,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:241:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2576:3516":{"id":"0:2576:3516","crate_id":0,"name":"TooLong","span":{"filename":"src/format/mod.rs","begin":[404,4],"end":[404,11]},"visibility":"default","docs":"All formatting items have been read but there is a remaining input.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2552":{"id":"0:2552","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[367,9],"end":[367,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2553:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1220:2938":{"id":"0:1220:2938","crate_id":0,"name":"checked_add_offset","span":{"filename":"src/naive/datetime/mod.rs","begin":[750,4],"end":[758,5]},"visibility":"public","docs":"Adds given `FixedOffset` to the current datetime.\nReturns `None` if the result would be outside the valid range for [`NaiveDateTime`].\n\nThis method is similar to [`checked_add_signed`](#method.checked_add_offset), but preserves\nleap seconds.","links":{"`NaiveDateTime`":"0:2675:2162"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:3152:2156":{"id":"b:2:2754-0:3152:2156","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2618":{"id":"0:2618","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[133,62],"end":[133,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2540:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2619:468"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2744-0:2409:3432":{"id":"b:2:2744-0:2409:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32825:244-0:2508:171":{"id":"a:2:32825:244-0:2508:171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32825:244-0:2355:2793":{"id":"a:2:32825:244-0:2355:2793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32825:244-0:2729:2178":{"id":"a:2:32825:244-0:2729:2178","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3096:8155":{"id":"0:3096:8155","crate_id":0,"name":"TimestampExceedsLimit","span":{"filename":"src/round.rs","begin":[276,4],"end":[276,25]},"visibility":"default","docs":"Error when `DateTime.timestamp_nanos` exceeds the limit.\n\n``` rust\n# use chrono::{DurationRound, Duration, RoundingError, TimeZone, Utc};\nlet dt = Utc.with_ymd_and_hms(2300, 12, 12, 0, 0, 0).unwrap();\n\nassert_eq!(dt.duration_round(Duration::days(1)), Err(RoundingError::TimestampExceedsLimit),);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:5:687-0:3206:2188":{"id":"b:5:687-0:3206:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2279:668":{"id":"0:2279:668","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[77,22],"end":[77,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1075:2747":{"id":"0:1075:2747","crate_id":0,"name":"year","span":{"filename":"src/naive/date.rs","begin":[1508,4],"end":[1510,5]},"visibility":"default","docs":"Returns the year number in the [calendar date](#calendar-date).\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().year(), 2015);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().year(), -308); // 309 BCE\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2355:2793":{"id":"0:2355:2793","crate_id":0,"name":"Fixed","span":{"filename":"src/format/mod.rs","begin":[172,0],"end":[252,1]},"visibility":"public","docs":"Fixed-format item types.\n\nThey have their own rules of formatting and parsing.\nOtherwise noted, they print in the specified cases but parse case-insensitively.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2356:3384","0:2358:3387","0:2360:3389","0:2362:3391","0:2364:3394","0:2366:3396","0:2368:3367","0:2370:3401","0:2372:3403","0:2374:3405","0:2376:3408","0:2378:3413","0:2380:3416","0:2382:3419","0:2384:3423","0:2386:3426","0:2388:3428","0:2390:3060","0:2392:3431","0:2394:3374"],"impls":["a:2:42477:9166-0:2355:2793","a:2:2966:253-0:2355:2793","a:2:32825:244-0:2355:2793","a:2:32882:9016-0:2355:2793","a:2:42476:9167-0:2355:2793","b:2:2754-0:2355:2793","b:2:2744-0:2355:2793","b:2:2748-0:2355:2793","b:2:2441-0:2355:2793","b:2:2444-0:2355:2793","b:2:3558-0:2355:2793","b:2:2759-0:2355:2793","b:5:687-0:2355:2793","0:2399","0:2397","0:2400","0:2402","0:2404","0:2406"]}}},"0:1193:2172":{"id":"0:1193:2172","crate_id":0,"name":"MIN_DATETIME","span":{"filename":"src/naive/datetime/mod.rs","begin":[47,0],"end":[47,59]},"visibility":"public","docs":"The minimum possible `NaiveDateTime`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDateTime::MIN instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDateTime::MIN instead"},"inner":{"constant":{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"NaiveDateTime::MIN","value":null,"is_literal":false}}},"0:1084:2754":{"id":"0:1084:2754","crate_id":0,"name":"with_year","span":{"filename":"src/naive/date.rs","begin":[1705,4],"end":[1714,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the year number changed, while keeping the same month and day.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or when the `NaiveDate` would be\nout of range.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_year(2016),\n           Some(NaiveDate::from_ymd_opt(2016, 9, 8).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_year(-308),\n           Some(NaiveDate::from_ymd_opt(-308, 9, 8).unwrap()));\n```\n\nA leap day (February 29) is a good example that this method can return `None`.\n\n```\n# use chrono::{NaiveDate, Datelike};\nassert!(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap().with_year(2015).is_none());\nassert!(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap().with_year(2020).is_some());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2441-0:2508:171":{"id":"b:2:2441-0:2508:171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1310:1565":{"id":"0:1310:1565","crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1946,4],"end":[1948,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3017:2352","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2441-0:3108:2158":{"id":"b:2:2441-0:3108:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:175:2705":{"id":"0:175:2705","crate_id":0,"name":"with_timezone","span":{"filename":"src/date.rs","begin":[258,4],"end":[260,5]},"visibility":"public","docs":"Changes the associated time zone.\nThis does not change the actual `Date` (but will change the string representation).","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["tz",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Tz2"}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:196:737":{"id":"0:196:737","crate_id":0,"name":"format","span":{"filename":"src/date.rs","begin":[353,4],"end":[355,5]},"visibility":"public","docs":"Formats the date with the specified format string.\nSee the [`crate::format::strftime`] module\non the supported escape sequences.","links":{"`crate::format::strftime`":"0:860:3302"},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2748-0:2154:2153":{"id":"b:2:2748-0:2154:2153","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2754-0:3235:2221":{"id":"b:2:2754-0:3235:2221","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1445":{"id":"0:1445","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[234,0],"end":[891,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1446:6847","0:1447:2659","0:1448:6861","0:1449:2668","0:1450:6873","0:1451:2677","0:1452:6885","0:1453:2686","0:1454:6899","0:1455:6045","0:1456:3087","0:1457:2791","0:1460:6183","0:1461:6219","0:1462:2718","0:1466:2733","0:1470:737","0:1475:2393"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3051:461":{"id":"0:3051:461","crate_id":0,"name":"clone","span":{"filename":"src/offset/utc.rs","begin":[43,15],"end":[43,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:167:2690":{"id":"0:167:2690","crate_id":0,"name":"succ","span":{"filename":"src/date.rs","begin":[208,4],"end":[210,5]},"visibility":"public","docs":"Makes a new `Date` for the next date.\n\nPanics when `self` is the last representable date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use succ_opt() instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use succ_opt() instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1591:3219":{"id":"0:1591:3219","crate_id":0,"name":"from_str","span":{"filename":"src/offset/fixed.rs","begin":[123,4],"end":[126,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12518:3218","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12879:36583":{"id":"2:12879:36583","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42354:198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10651:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10651:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2748-0:2170:2154":{"id":"b:2:2748-0:2170:2154","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2216:1099":{"id":"0:2216:1099","crate_id":0,"name":"offset","span":{"filename":"src/format/parsed.rs","begin":[102,4],"end":[102,27]},"visibility":"public","docs":"Offset from the local time to UTC, in seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}}}},"2:12864":{"id":"2:12864","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12865:882","2:12866:3075","2:12867:41051","2:12868:41052","2:12870:41053","2:12873:4134","2:12874:41054","2:12875:339","2:12876:36586","2:12877:7851","2:12879:36583","2:12881:36584","2:12883:36585","2:12885:41055","2:12886:41056","2:12887:36607","2:12888:36608","2:12889:36611","2:12890:36612","2:12892:3622","2:12893:13661","2:12894:2598","2:12895:38560","2:12896:38558","2:12897:15658","2:12898:41057","2:12899:38541","2:12900:3608","2:12903:4122","2:12906:7805","2:12909:4857","2:12913:9553","2:12917:33500","2:12920:36614","2:12923:36616","2:12926:41058","2:12929:41059","2:12932:36618","2:12935:36620","2:12938:36622","2:12941:36623","2:12944:7676","2:12947:41060","2:12950:41061","2:12953:41062","2:12956:41063","2:12958:4120","2:12960:41064","2:12962:41065","2:12963:41066","2:12964:7566","2:12967:4162","2:12970:33251","2:12973:36624","2:12976:41067","2:12979:41068","2:12982:41069","2:12985:2790","2:12987:34274","2:12988:36501","2:12989:4182","2:12990:34278","2:12991:34279","2:12992:36504","2:12993:36505","2:12994:36506","2:12995:41070","2:12997:16370","2:12998:41071"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1035:2656":{"id":"0:1035:2656","crate_id":0,"name":"and_hms_opt","span":{"filename":"src/naive/date.rs","begin":[867,4],"end":[870,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute and second.\n\nNo [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;\nuse `NaiveDate::and_hms_*_opt` methods with a subsecond parameter instead.\n\n# Errors\n\nReturns `None` on invalid hour, minute and/or second.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nassert!(d.and_hms_opt(12, 34, 56).is_some());\nassert!(d.and_hms_opt(12, 34, 60).is_none()); // use `and_hms_milli_opt` instead\nassert!(d.and_hms_opt(12, 60, 56).is_none());\nassert!(d.and_hms_opt(24, 34, 56).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2755:789":{"id":"0:2755:789","crate_id":0,"name":"hash","span":{"filename":"src/naive/time/mod.rs","begin":[205,24],"end":[205,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2288:3330":{"id":"0:2288:3330","crate_id":0,"name":"Year","span":{"filename":"src/format/mod.rs","begin":[104,4],"end":[104,8]},"visibility":"default","docs":"Full Gregorian year (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign (+/-).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:3558-0:2409:3432":{"id":"b:2:3558-0:2409:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1196:1048":{"id":"0:1196:1048","crate_id":0,"name":"new","span":{"filename":"src/naive/datetime/mod.rs","begin":[108,4],"end":[110,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from date and time components.\nEquivalent to [`date.and_time(time)`](./struct.NaiveDate.html#method.and_time)\nand many other helper constructors on `NaiveDate`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveTime, NaiveDateTime};\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nlet t = NaiveTime::from_hms_milli_opt(12, 34, 56, 789).unwrap();\n\nlet dt = NaiveDateTime::new(d, t);\nassert_eq!(dt.date(), d);\nassert_eq!(dt.time(), t);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["date",{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["time",{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5556:9365":{"id":"5:5556:9365","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7571:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:951-0:2549:2174":{"id":"0:951-0:2549:2174","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[529,17],"end":[529,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"format::ParseError","name":"ParseError","id":"0:2549:2174","glob":false}}},"0:1995:8146":{"id":"0:1995:8146","crate_id":0,"name":"duration_round","span":{"filename":"src/round.rs","begin":[150,4],"end":[152,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["duration",{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1988:2182","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:451":{"id":"0:451","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1202,0],"end":[1206,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:454:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2754-0:2656:5110":{"id":"b:2:2754-0:2656:5110","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1302:1566":{"id":"0:1302:1566","crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/datetime/mod.rs","begin":[1878,4],"end":[1880,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3558-0:2637:5109":{"id":"b:2:3558-0:2637:5109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2358:3387":{"id":"0:2358:3387","crate_id":0,"name":"LongMonthName","span":{"filename":"src/format/mod.rs","begin":[180,4],"end":[180,17]},"visibility":"default","docs":"Full month names.\n\nPrints a full name in the title case, reads either a short or full name in any case.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2384:3423":{"id":"0:2384:3423","crate_id":0,"name":"TimezoneOffsetColonZ","span":{"filename":"src/format/mod.rs","begin":[235,4],"end":[235,24]},"visibility":"default","docs":"Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace,\nand `Z` can be either in upper case or in lower case.\nThe offset is limited from `-24:00` to `+24:00`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2154:2153":{"id":"0:2154:2153","crate_id":0,"name":"DateTime","span":{"filename":"src/datetime/mod.rs","begin":[59,0],"end":[62,1]},"visibility":"public","docs":"ISO 8601 combined date and time with time zone.\n\nThere are some constructors implemented here (the `from_*` methods), but\nthe general-purpose constructors are all via the methods on the\n[`TimeZone`](./offset/trait.TimeZone.html) implementations.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:325","0:364","0:392","0:400","a:2:42477:9166-0:2154:2153","a:2:2966:253-0:2154:2153","a:2:32882:9016-0:2154:2153","a:2:42476:9167-0:2154:2153","b:0:1983-0:2154:2153","b:2:2754-0:2154:2153","b:2:2744-0:2154:2153","b:2:2748-0:2154:2153","b:2:2441-0:2154:2153","b:2:2444-0:2154:2153","b:2:3558-0:2154:2153","b:2:2759-0:2154:2153","b:5:687-0:2154:2153","b:5:5828-0:2154:2153","0:369","0:433","0:520","0:544","0:383","0:479","0:546","0:464","0:486","0:455","0:457","0:447","0:449","0:524","0:538","0:482","0:504","0:498","0:451","0:1992","0:542","0:508","0:373","0:379","0:385","0:375","0:476","0:528","0:531","0:516","0:512","0:534","0:381","0:2158","0:377","0:490","0:494","0:468","0:408","0:472","0:461","0:807","0:501","0:371"]}}},"0:911-0:2170:2154":{"id":"0:911-0:2170:2154","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[61,0],"end":[61,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"formatting::SecondsFormat","name":"SecondsFormat","id":"0:2170:2154","glob":false}}},"0:1871:2768":{"id":"0:1871:2768","crate_id":0,"name":"today","span":{"filename":"src/offset/local/mod.rs","begin":[122,4],"end":[124,5]},"visibility":"public","docs":"Returns a `Date` which corresponds to the current date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `Local::now()` instead\")]","#[allow(deprecated)]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `Local::now()` instead"},"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2397":{"id":"0:2397","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[171,9],"end":[171,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2398:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1878:7296":{"id":"0:1878:7296","crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/local/mod.rs","begin":[176,4],"end":[179,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3231":{"id":"0:3231","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[245,16],"end":[245,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3232:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1879:4031":{"id":"0:1879:4031","crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/local/mod.rs","begin":[181,4],"end":[183,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32825:244-0:2488:3453":{"id":"a:2:32825:244-0:2488:3453","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2396:1764":{"id":"0:2396:1764","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[251,13],"end":[251,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2586":{"id":"0:2586","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[379,23],"end":[379,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2748-0:2508:171":{"id":"b:2:2748-0:2508:171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:687-0:2600:2177":{"id":"b:5:687-0:2600:2177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2298:3341":{"id":"0:2298:3341","crate_id":0,"name":"IsoYearMod100","span":{"filename":"src/format/mod.rs","begin":[115,4],"end":[115,17]},"visibility":"default","docs":"Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[546,0],"end":[554,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1934:2165","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:266:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1592":{"id":"0:1592","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[129,0],"end":[149,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["timestamp_opt","from_utc_datetime","from_local_datetime","datetime_from_str","isoywd_opt","with_ymd_and_hms","yo_opt","from_local_date","from_utc_date","timestamp_millis_opt","timestamp_micros","ymd","timestamp_millis","timestamp_nanos","ymd_opt","isoywd","timestamp","yo"],"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1593:2164","0:1594:2702","0:1595:7287","0:1596:7289","0:1597:7296","0:1598:4031"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2444-0:2600:2177":{"id":"b:2:2444-0:2600:2177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3137:461":{"id":"0:3137:461","crate_id":0,"name":"clone","span":{"filename":"src/weekday.rs","begin":[32,30],"end":[32,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2102-0:2089:2157":{"id":"0:2102-0:2089:2157","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[558,27],"end":[558,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"traits::Timelike","name":"Timelike","id":"0:2089:2157","glob":false}}},"0:1991:8151":{"id":"0:1991:8151","crate_id":0,"name":"duration_trunc","span":{"filename":"src/round.rs","begin":[144,4],"end":[144,75]},"visibility":"default","docs":"Return a copy truncated by Duration.\n\n# Example\n``` rust\n# use chrono::{DurationRound, Duration, Utc, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 11).unwrap().and_hms_milli_opt(12, 0, 0, 154).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(\n    dt.duration_trunc(Duration::milliseconds(10)).unwrap().to_string(),\n    \"2018-01-11 12:00:00.150 UTC\"\n);\nassert_eq!(\n    dt.duration_trunc(Duration::days(1)).unwrap().to_string(),\n    \"2018-01-11 00:00:00 UTC\"\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["duration",{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1988:2182","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2759-0:2147:2148":{"id":"b:2:2759-0:2147:2148","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2759-0:2565:3498":{"id":"b:2:2759-0:2565:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1003:2407":{"id":"0:1003:2407","crate_id":0,"name":"days","span":{"filename":"src/naive/date.rs","begin":[122,4],"end":[124,5]},"visibility":"public","docs":"Returns a [`RangeInclusive<T>`] representing the whole week bounded by\n[first_day](NaiveWeek::first_day) and [last_day](NaiveWeek::last_day) functions.\n\n# Panics\n\nPanics if the either the first or last day of the week happens to fall just out of range of\n`NaiveDate` (more than ca. 262,000 years away from common era).\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet date = NaiveDate::from_ymd_opt(2022, 4, 18).unwrap();\nlet week = date.week(Weekday::Mon);\nlet days = week.days();\nassert!(days.contains(&date));\n```","links":{"NaiveWeek::first_day":"0:1001:5134","`RangeInclusive<T>`":"2:40046:221","NaiveWeek::last_day":"0:1002:5140"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RangeInclusive","id":"2:40046:221","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2692:461":{"id":"0:2692:461","crate_id":0,"name":"clone","span":{"filename":"src/naive/datetime/mod.rs","begin":[76,53],"end":[76,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32882:9016-0:3108:2158":{"id":"a:2:32882:9016-0:3108:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2441-0:2134:2146":{"id":"b:2:2441-0:2134:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2544:725":{"id":"0:2544:725","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[325,31],"end":[325,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1309:206":{"id":"0:1309:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1944,4],"end":[1944,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:953-0:2170:2154":{"id":"0:953-0:2170:2154","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[529,42],"end":[529,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"format::SecondsFormat","name":"SecondsFormat","id":"0:2170:2154","glob":false}}},"5:5570:41760":{"id":"5:5570:41760","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7571:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:449":{"id":"0:449","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1200,0],"end":[1200,87]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:602:725":{"id":"0:602:725","crate_id":0,"name":"fmt","span":{"filename":"src/format/formatting.rs","begin":[121,4],"end":[139,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1595:7287":{"id":"0:1595:7287","crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/fixed.rs","begin":[136,4],"end":[138,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2563:789":{"id":"0:2563:789","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[367,44],"end":[367,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3229:461":{"id":"0:3229:461","crate_id":0,"name":"clone","span":{"filename":"src/month.rs","begin":[245,9],"end":[245,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2444-0:2234:2605":{"id":"b:2:2444-0:2234:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:254":{"id":"0:254","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[523,0],"end":[528,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:33967:2353","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:256:1566"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:7908-0:2234:2605":{"id":"b:2:7908-0:2234:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8051:176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7904:163","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:7910:171","2:7911:9557","2:7912:847"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:2130:725":{"id":"0:2130:725","crate_id":0,"name":"fmt","span":{"filename":"src/duration.rs","begin":[53,63],"end":[53,68]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1005:1048":{"id":"0:1005:1048","crate_id":0,"name":"new","span":{"filename":"src/naive/date.rs","begin":[138,4],"end":[140,5]},"visibility":"public","docs":"Construct a new `Days` from a number of days","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["num",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2081:2754":{"id":"0:2081:2754","crate_id":0,"name":"with_year","span":{"filename":"src/traits.rs","begin":[119,4],"end":[119,51]},"visibility":"default","docs":"Makes a new value with the year number changed, while keeping the same month and day.\n\nThis method assumes you want to work on the date as a year-month-day value. Don't use it if\nyou want the ordinal to stay the same after changing the year, of if you want the week and\nweekday values to stay the same.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (February 29 in a non-leap year).\n- The year is out of range for [`NaiveDate`].\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n\n[`NaiveDate`]: crate::NaiveDate\n[`DateTime<Tz>`]: crate::DateTime\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2020, 5, 13).unwrap().with_year(2023).unwrap(),\n    NaiveDate::from_ymd_opt(2023, 5, 13).unwrap()\n);\n// Resulting date 2023-02-29 does not exist:\nassert!(NaiveDate::from_ymd_opt(2020, 2, 29).unwrap().with_year(2023).is_none());\n\n// Don't use `with_year` if you want the ordinal date to stay the same:\nassert_ne!(\n    NaiveDate::from_yo_opt(2020, 100).unwrap().with_year(2023).unwrap(),\n    NaiveDate::from_yo_opt(2023, 100).unwrap() // result is 2023-101\n);\n```","links":{"crate::NaiveDate":"0:2620:2161","crate::DateTime":"0:2154:2153"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:2670:1146":{"id":"0:2670:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/date.rs","begin":[2132,46],"end":[2132,56]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1966-0:1934:2165":{"id":"0:1966-0:1934:2165","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[542,38],"end":[542,46]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"inner":{"import":{"source":"offset::TimeZone","name":"TimeZone","id":"0:1934:2165","glob":false}}},"0:457":{"id":"0:457","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1210,0],"end":[1229,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2546:209","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:460:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:378:752":{"id":"0:378:752","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[706,4],"end":[708,5]},"visibility":"default","docs":"Convert this `DateTime<Utc>` instance into a `DateTime<Local>` instance.\n\nConversion is performed via [`DateTime::with_timezone`], accounting for the difference in timezones.","links":{"`DateTime::with_timezone`":"0:343:2705"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:37:2417":{"id":"0:37:2417","crate_id":0,"name":"minutes","span":{"filename":"src/duration.rs","begin":[135,4],"end":[137,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["minutes",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:712:3954":{"id":"0:712:3954","crate_id":0,"name":"set_second","span":{"filename":"src/format/parsed.rs","begin":[263,4],"end":[265,5]},"visibility":"public","docs":"Tries to set the [`second`](#structfield.second) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32825:244-0:2234:2605":{"id":"a:2:32825:244-0:2234:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32882:9016-0:2112:129":{"id":"a:2:32882:9016-0:2112:129","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:687-0:2134:2146":{"id":"b:5:687-0:2134:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2496:725":{"id":"0:2496:725","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[314,9],"end":[314,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1410:3601":{"id":"0:1410:3601","crate_id":0,"name":"week","span":{"filename":"src/naive/isoweek.rs","begin":[98,4],"end":[100,5]},"visibility":"public","docs":"Returns the ISO week number starting from 1.\n\nThe return value ranges from 1 to 53. (The last week of year differs by years.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nlet d = NaiveDate::from_isoywd_opt(2015, 15, Weekday::Mon).unwrap();\nassert_eq!(d.iso_week().week(), 15);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1256:2756":{"id":"0:1256:2756","crate_id":0,"name":"with_month0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1321,4],"end":[1323,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the month number (starting from 0) changed.\n\nSee also the [`NaiveDate::with_month0`] method.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `month0` is\ninvalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_month0(9), Some(NaiveDate::from_ymd_opt(2015, 10, 30).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_month0(12), None); // no month 13\nassert_eq!(dt.with_month0(1), None); // no February 30\n```","links":{"`NaiveDate::with_month0`":"0:1086:2756"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32825:244-0:2746:2163":{"id":"a:2:32825:244-0:2746:2163","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[539,0],"end":[544,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:263:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2757":{"id":"0:2757","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[205,30],"end":[205,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2546:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2758:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:490":{"id":"0:490","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1371,0],"end":[1378,1]},"visibility":"default","docs":"Subtract `chrono::Duration` from `DateTime`.\n\nThis is the same as the addition with a negated `Duration`.\n\nAs a part of Chrono's [leap second handling] the subtraction assumes that **there is no leap\nsecond ever**, except when the `DateTime` itself represents a leap second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`DateTime<Tz>::checked_sub_signed`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_sub_signed`":"0:349:2713"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:492:206","0:493:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2026":{"id":"0:2026","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[179,0],"end":[194,1]},"visibility":"default","docs":"Any weekday can be represented as an integer from 0 to 6, which equals to\n[`Weekday::num_days_from_monday`](#method.num_days_from_monday) in this implementation.\nDo not heavily depend on this though; use explicit methods whenever possible.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2027:135","0:2028:1628"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1602:725":{"id":"0:1602:725","crate_id":0,"name":"fmt","span":{"filename":"src/offset/fixed.rs","begin":[158,4],"end":[170,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32882:9016-0:2746:2163":{"id":"a:2:32882:9016-0:2746:2163","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1601":{"id":"0:1601","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[157,0],"end":[171,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1602:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2748-0:2267:3310":{"id":"b:2:2748-0:2267:3310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2024":{"id":"0:2024","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[162,0],"end":[174,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2025:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32882:9016-0:3152:2156":{"id":"a:2:32882:9016-0:3152:2156","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2744-0:3152:2156":{"id":"b:2:2744-0:3152:2156","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2641":{"id":"0:2641","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2096,16],"end":[2096,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2050":{"id":"0:2050","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[189,0],"end":[224,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_u32","from_u8","from_i16","from_f32","from_f64","from_u16","from_i32","from_isize","from_u128","from_i128","from_i8","from_usize"],"trait":{"name":"FromPrimitive","id":"21:162:8295","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2051:8297","0:2052:8296","0:2053:8384"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3239":{"id":"0:3239","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[598,16],"end":[598,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:441:3142":{"id":"0:441:3142","crate_id":0,"name":"with_minute","span":{"filename":"src/datetime/mod.rs","begin":[1159,4],"end":[1161,5]},"visibility":"default","docs":"Makes a new `DateTime` with the minute number changed.\n\nSee also the [`NaiveTime::with_minute`] method.\n\n# Errors\n\n- The value for `minute` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveTime::with_minute`":"0:1483:3142"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["min",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32825:244-0:2161:2604":{"id":"a:2:32825:244-0:2161:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3099:725":{"id":"0:3099:725","crate_id":0,"name":"fmt","span":{"filename":"src/round.rs","begin":[240,9],"end":[240,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2744-0:2234:2605":{"id":"b:2:2744-0:2234:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2420":{"id":"0:2420","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[255,38],"end":[255,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2421:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1488:206":{"id":"0:1488:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1167,4],"end":[1167,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1037:2666":{"id":"0:1037:2666","crate_id":0,"name":"and_hms_milli_opt","span":{"filename":"src/naive/date.rs","begin":[911,4],"end":[920,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.\n\nThe millisecond part is allowed to exceed 1,000,000,000 in order to represent a [leap second](\n./struct.NaiveTime.html#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute, second and/or millisecond.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nassert!(d.and_hms_milli_opt(12, 34, 56,   789).is_some());\nassert!(d.and_hms_milli_opt(12, 34, 59, 1_789).is_some()); // leap second\nassert!(d.and_hms_milli_opt(12, 34, 59, 2_789).is_none());\nassert!(d.and_hms_milli_opt(12, 34, 60,   789).is_none());\nassert!(d.and_hms_milli_opt(12, 60, 56,   789).is_none());\nassert!(d.and_hms_milli_opt(24, 34, 56,   789).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2109":{"id":"0:2109","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[622,0],"end":[622,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","description","source","cause","type_id"],"trait":{"name":"Error","id":"2:2806:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:342:2646":{"id":"0:342:2646","crate_id":0,"name":"timezone","span":{"filename":"src/datetime/mod.rs","begin":[334,4],"end":[336,5]},"visibility":"public","docs":"Retrieves an associated time zone.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Tz"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2759-0:2355:2793":{"id":"b:2:2759-0:2355:2793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3558-0:3108:2158":{"id":"b:2:3558-0:3108:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:53:2456":{"id":"0:53:2456","crate_id":0,"name":"checked_add","span":{"filename":"src/duration.rs","begin":[262,4],"end":[277,5]},"visibility":"public","docs":"Add two durations, returning `None` if overflow occurred.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:359:2953":{"id":"0:359:2953","crate_id":0,"name":"to_rfc2822","span":{"filename":"src/datetime/mod.rs","begin":[535,4],"end":[540,5]},"visibility":"public","docs":"Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.\n\n# Panics\n\nPanics if the date can not be represented in this format: the year may not be negative and\ncan not have more than 4 digits.","links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42476:9167-0:2549:2174":{"id":"a:2:42476:9167-0:2549:2174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2185":{"id":"0:2185","crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[509,16],"end":[509,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1098:206":{"id":"0:1098:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1937,4],"end":[1937,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2645:789":{"id":"0:2645:789","crate_id":0,"name":"hash","span":{"filename":"src/naive/date.rs","begin":[2096,29],"end":[2096,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1329:60":{"id":"0:1329:60","crate_id":0,"name":"default","span":{"filename":"src/naive/datetime/mod.rs","begin":[2154,4],"end":[2156,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2743":{"id":"0:2743","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,54],"end":[19,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2744:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2290:3332":{"id":"0:2290:3332","crate_id":0,"name":"YearDiv100","span":{"filename":"src/format/mod.rs","begin":[106,4],"end":[106,14]},"visibility":"default","docs":"Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:413:2749":{"id":"0:413:2749","crate_id":0,"name":"day","span":{"filename":"src/datetime/mod.rs","begin":[979,4],"end":[981,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1138":{"id":"0:1138","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2229,0],"end":[2233,1]},"visibility":"default","docs":"The `Display` output of the naive date `d` is the same as\n[`d.format(\"%Y-%m-%d\")`](crate::format::strftime).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(2015,  9,  5).unwrap()), \"2015-09-05\");\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(   0,  1,  1).unwrap()), \"0000-01-01\");\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(9999, 12, 31).unwrap()), \"9999-12-31\");\n```\n\nISO 8601 requires an explicit sign for years before 1 BCE or after 9999 CE.\n\n```\n# use chrono::NaiveDate;\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(   -1,  1,  1).unwrap()),  \"-0001-01-01\");\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(10000, 12, 31).unwrap()), \"+10000-12-31\");\n```","links":{"crate::format::strftime":"0:860:3302"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1139:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2463:3462":{"id":"0:2463:3462","crate_id":0,"name":"Hours","span":{"filename":"src/format/mod.rs","begin":[298,4],"end":[298,9]},"visibility":"default","docs":"Format offset from UTC as only hours. Not recommended, it is not uncommon for timezones to\nhave an offset of 30 minutes, 15 minutes, etc.\nAny minutes and seconds get truncated.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:727:4005":{"id":"0:727:4005","crate_id":0,"name":"to_naive_time","span":{"filename":"src/format/parsed.rs","begin":[502,4],"end":[535,5]},"visibility":"public","docs":"Returns a parsed naive time out of given fields.\n\nThis method is able to determine the time from given subset of fields:\n\n- Hour, minute. (second and nanosecond assumed to be 0)\n- Hour, minute, second. (nanosecond assumed to be 0)\n- Hour, minute, second, nanosecond.\n\nIt is able to handle leap seconds when given second is 60.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2647":{"id":"0:2647","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2096,35],"end":[2096,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2444-0:2161:2604":{"id":"b:2:2444-0:2161:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2441-0:2462:3450":{"id":"b:2:2441-0:2462:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42476:9167-0:3152:2156":{"id":"a:2:42476:9167-0:3152:2156","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1453:2686":{"id":"0:1453:2686","crate_id":0,"name":"from_hms_nano_opt","span":{"filename":"src/naive/time/mod.rs","begin":[421,4],"end":[430,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and nanosecond.\n\nThe nanosecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute, second and/or nanosecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hmsn_opt = NaiveTime::from_hms_nano_opt;\n\nassert!(from_hmsn_opt(0, 0, 0, 0).is_some());\nassert!(from_hmsn_opt(23, 59, 59, 999_999_999).is_some());\nassert!(from_hmsn_opt(23, 59, 59, 1_999_999_999).is_some()); // a leap second after 23:59:59\nassert!(from_hmsn_opt(24, 0, 0, 0).is_none());\nassert!(from_hmsn_opt(23, 60, 0, 0).is_none());\nassert!(from_hmsn_opt(23, 59, 60, 0).is_none());\nassert!(from_hmsn_opt(23, 59, 59, 2_000_000_000).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2966:253-0:2637:5109":{"id":"a:2:2966:253-0:2637:5109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2028:1628":{"id":"0:2028:1628","crate_id":0,"name":"try_from","span":{"filename":"src/weekday.rs","begin":[182,4],"end":[193,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"primitive":"u8"}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2728:263","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2287:3327":{"id":"0:2287:3327","crate_id":0,"name":"Numeric","span":{"filename":"src/format/mod.rs","begin":[101,0],"end":[153,1]},"visibility":"public","docs":"Numeric item types.\nThey have associated formatting width (FW) and parsing width (PW).\n\nThe **formatting width** is the minimal width to be formatted.\nIf the number is too short, and the padding is not [`Pad::None`](./enum.Pad.html#variant.None),\nthen it is left-padded.\nIf the number is too long or (in some cases) negative, it is printed as is.\n\nThe **parsing width** is the maximal width to be scanned.\nThe parser only tries to consume from one to given number of digits (greedily).\nIt also trims the preceding whitespace if any.\nIt cannot parse the negative number, so some date and time cannot be formatted then\nparsed with the same formatting items.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2288:3330","0:2290:3332","0:2292:3334","0:2294:3337","0:2296:3339","0:2298:3341","0:2300:2156","0:2302:3344","0:2304:3346","0:2306:3348","0:2308:2178","0:2310:3351","0:2312:3353","0:2314:3355","0:2316:3357","0:2318:3359","0:2320:3361","0:2322:3363","0:2324:3367","0:2326:3370","0:2328:3374"],"impls":["a:2:42477:9166-0:2287:3327","a:2:2966:253-0:2287:3327","a:2:32825:244-0:2287:3327","a:2:32882:9016-0:2287:3327","a:2:42476:9167-0:2287:3327","b:2:2754-0:2287:3327","b:2:2744-0:2287:3327","b:2:2748-0:2287:3327","b:2:2441-0:2287:3327","b:2:2444-0:2287:3327","b:2:3558-0:2287:3327","b:2:2759-0:2287:3327","b:5:687-0:2287:3327","0:2338","0:2334","0:2331","0:2333","0:2340","0:2336"]}}},"0:2531":{"id":"0:2531","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[325,9],"end":[325,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2533:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:386:752":{"id":"0:386:752","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[752,4],"end":[754,5]},"visibility":"default","docs":"Convert this `DateTime<Local>` instance into a `DateTime<FixedOffset>` instance.\n\nConversion is performed via [`DateTime::with_timezone`].","links":{"`DateTime::with_timezone`":"0:343:2705"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3055":{"id":"0:3055","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,33],"end":[43,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:545:752":{"id":"0:545:752","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[1641,4],"end":[1643,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"resolved_path":{"name":"SystemTime","id":"1:9163:2788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3558-0:2675:2162":{"id":"b:2:3558-0:2675:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1049:2698":{"id":"0:1049:2698","crate_id":0,"name":"pred_opt","span":{"filename":"src/naive/date.rs","begin":[1130,4],"end":[1135,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the previous calendar date.\n\n# Errors\n\nReturns `None` when `self` is the first representable date.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 6, 3).unwrap().pred_opt(),\n           Some(NaiveDate::from_ymd_opt(2015, 6, 2).unwrap()));\nassert_eq!(NaiveDate::MIN.pred_opt(), None);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2137":{"id":"0:2137","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[487,9],"end":[487,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2138:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:330:2166":{"id":"0:330:2166","crate_id":0,"name":"date","span":{"filename":"src/datetime/mod.rs","begin":[148,4],"end":[150,5]},"visibility":"public","docs":"Retrieves the date component with an associated timezone.\n\nUnless you are immediately planning on turning this into a `DateTime`\nwith the same timezone you should use the [`date_naive`](DateTime::date_naive) method.\n\n[`NaiveDate`] is a more well-defined type, and has more traits implemented on it,\nso should be preferred to [`Date`] any time you truly want to operate on dates.\n\n# Panics\n\n[`DateTime`] internally stores the date and time in UTC with a [`NaiveDateTime`]. This\nmethod will panic if the offset from UTC would push the local date outside of the\nrepresentable range of a [`Date`].","links":{"DateTime::date_naive":"0:331:2847","`NaiveDateTime`":"0:2675:2162","`DateTime`":"0:2154:2153","`NaiveDate`":"0:2620:2161","`Date`":"0:2147:2148"},"attrs":["#[inline]","#[deprecated(since = \"0.4.23\", note = \"Use `date_naive()` instead\")]","#[allow(deprecated)]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use `date_naive()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2144:668":{"id":"0:2144:668","crate_id":0,"name":"eq","span":{"filename":"src/duration.rs","begin":[487,29],"end":[487,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:439:3138":{"id":"0:439:3138","crate_id":0,"name":"with_hour","span":{"filename":"src/datetime/mod.rs","begin":[1145,4],"end":[1147,5]},"visibility":"default","docs":"Makes a new `DateTime` with the hour number changed.\n\nSee also the [`NaiveTime::with_hour`] method.\n\n# Errors\n\nReturns `None` if:\n- The value for `hour` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveTime::with_hour`":"0:1482:3138"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:919-0:780:2791":{"id":"0:919-0:780:2791","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[68,23],"end":[68,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"parse::parse_and_remainder","name":"parse_and_remainder","id":"0:780:2791","glob":false}}},"0:2593:789":{"id":"0:2593:789","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[379,44],"end":[379,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1141:134":{"id":"0:1141:134","crate_id":0,"name":"Err","span":{"filename":"src/naive/date.rs","begin":[2252,4],"end":[2252,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1249:2752":{"id":"0:1249:2752","crate_id":0,"name":"ordinal0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1228,4],"end":[1230,5]},"visibility":"default","docs":"Returns the day of year starting from 0.\n\nThe return value ranges from 0 to 365. (The last day of year differs by years.)\n\nSee also the [`NaiveDate::ordinal0`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.ordinal0(), 267);\n```","links":{"`NaiveDate::ordinal0`":"0:1081:2752"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2283:725":{"id":"0:2283:725","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[77,37],"end":[77,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42476:9167-0:2343:3375":{"id":"a:2:42476:9167-0:2343:3375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2406":{"id":"0:2406","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[171,38],"end":[171,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2407:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1000":{"id":"0:1000","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[45,0],"end":[125,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2595:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1001:5134","0:1002:5140","0:1003:2407"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32882:9016-0:2287:3327":{"id":"a:2:32882:9016-0:2287:3327","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:207:2184":{"id":"0:207:2184","crate_id":0,"name":"weekday","span":{"filename":"src/date.rs","begin":[424,4],"end":[426,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3558-0:2287:3327":{"id":"b:2:3558-0:2287:3327","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2212:3132":{"id":"0:2212:3132","crate_id":0,"name":"minute","span":{"filename":"src/format/parsed.rs","begin":[88,4],"end":[88,27]},"visibility":"public","docs":"Minute number (0--59).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"a:2:32882:9016-0:2355:2793":{"id":"a:2:32882:9016-0:2355:2793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3558-0:2565:3498":{"id":"b:2:3558-0:2565:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2744-0:2620:2161":{"id":"b:2:2744-0:2620:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32882:9016-0:2444:3447":{"id":"a:2:32882:9016-0:2444:3447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42477:9166-0:2637:5109":{"id":"a:2:42477:9166-0:2637:5109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2201:3887":{"id":"0:2201:3887","crate_id":0,"name":"isoyear_div_100","span":{"filename":"src/format/parsed.rs","begin":[51,4],"end":[51,36]},"visibility":"public","docs":"Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), divided by 100.\nImplies that the year is >= 1 BCE when set.\n\nDue to the common usage, if this field is missing but\n[`isoyear_mod_100`](#structfield.isoyear_mod_100) is present,\nit is inferred to 19 when `isoyear_mod_100 >= 70` and 20 otherwise.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}}}},"b:5:687-0:3040:2149":{"id":"b:5:687-0:3040:2149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2744-0:2154:2153":{"id":"b:2:2744-0:2154:2153","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2744-0:2161:2604":{"id":"b:2:2744-0:2161:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:728:4014":{"id":"0:728:4014","crate_id":0,"name":"to_naive_datetime_with_offset","span":{"filename":"src/format/parsed.rs","begin":[544,4],"end":[614,5]},"visibility":"public","docs":"Returns a parsed naive date and time out of given fields,\nexcept for the [`offset`](#structfield.offset) field (assumed to have a given value).\nThis is required for parsing a local time or other known-timezone inputs.\n\nThis method is able to determine the combined date and time\nfrom date and time fields or a single [`timestamp`](#structfield.timestamp) field.\nEither way those fields have to be consistent to each other.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["offset",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42476:9167-0:2746:2163":{"id":"a:2:42476:9167-0:2746:2163","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2006:725":{"id":"0:2006:725","crate_id":0,"name":"fmt","span":{"filename":"src/round.rs","begin":[280,4],"end":[292,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2759-0:3206:2188":{"id":"b:2:2759-0:3206:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2966:253-0:3226:2187":{"id":"a:2:2966:253-0:3226:2187","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1538-0:1006:2168":{"id":"0:1538-0:1006:2168","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[15,31],"end":[15,39]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"self::date::MIN_DATE","name":"MIN_DATE","id":"0:1006:2168","glob":false}}},"b:2:2759-0:3235:2221":{"id":"b:2:2759-0:3235:2221","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12963:41066":{"id":"2:12963:41066","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3558-0:2170:2154":{"id":"b:2:3558-0:2170:2154","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1074":{"id":"0:1074","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1496,0],"end":[1857,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["year_ce","num_days_from_ce"],"trait":{"name":"Datelike","id":"0:2070:2155","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1075:2747","0:1076:2186","0:1077:2748","0:1078:2749","0:1079:2750","0:1080:2751","0:1081:2752","0:1082:2184","0:1083:2753","0:1084:2754","0:1085:2755","0:1086:2756","0:1087:2757","0:1088:2758","0:1089:2759","0:1091:2760"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42477:9166-0:2729:2178":{"id":"a:2:42477:9166-0:2729:2178","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2748-0:3206:2188":{"id":"b:2:2748-0:3206:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3087":{"id":"0:3087","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,44],"end":[41,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:3089:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1600:2832":{"id":"0:1600:2832","crate_id":0,"name":"fix","span":{"filename":"src/offset/fixed.rs","begin":[152,4],"end":[154,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:685:3921":{"id":"0:685:3921","crate_id":0,"name":"set_year_mod_100","span":{"filename":"src/format/parsed.rs","begin":[149,4],"end":[154,5]},"visibility":"public","docs":"Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1145:60":{"id":"0:1145:60","crate_id":0,"name":"default","span":{"filename":"src/naive/date.rs","begin":[2283,4],"end":[2285,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2539":{"id":"0:2539","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[325,27],"end":[325,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2615:668":{"id":"0:2615:668","crate_id":0,"name":"eq","span":{"filename":"src/naive/date.rs","begin":[133,39],"end":[133,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2167":{"id":"0:2167","crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[35,9],"end":[35,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["0:2169:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2441-0:2154:2153":{"id":"b:2:2441-0:2154:2153","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1213:2879":{"id":"0:1213:2879","crate_id":0,"name":"timestamp_nanos_opt","span":{"filename":"src/naive/datetime/mod.rs","begin":[545,4],"end":[566,5]},"visibility":"public","docs":"Returns the number of non-leap *nanoseconds* since midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\n# Errors\n\nAn `i64` with nanosecond precision can span a range of ~584 years. This function returns\n`None` on an out of range `NaiveDateTime`.\n\nThe dates that can be represented as nanoseconds are between 1677-09-21T00:12:43.145224192\nand 2262-04-11T23:47:16.854775807.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime};\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_nano_opt(0, 0, 1, 444).unwrap();\nassert_eq!(dt.timestamp_nanos_opt(), Some(1_000_000_444));\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_nano_opt(1, 46, 40, 555).unwrap();\n\nconst A_BILLION: i64 = 1_000_000_000;\nlet nanos = dt.timestamp_nanos_opt().unwrap();\nassert_eq!(nanos, 1_000_000_000_000_000_555);\nassert_eq!(\n    Some(dt),\n    NaiveDateTime::from_timestamp_opt(nanos / A_BILLION, (nanos % A_BILLION) as u32)\n);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2173:3641":{"id":"0:2173:3641","crate_id":0,"name":"Millis","span":{"filename":"src/format/formatting.rs","begin":[516,4],"end":[516,10]},"visibility":"default","docs":"Use fixed 3 subsecond digits. This corresponds to [Fixed::Nanosecond3].","links":{"Fixed::Nanosecond3":"0:2370:3401"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:42476:9167-0:2620:2161":{"id":"a:2:42476:9167-0:2620:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2588:668":{"id":"0:2588:668","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[379,23],"end":[379,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12932:36618":{"id":"2:12932:36618","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:8766","str::rsplitn":"2:12935:36620"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44343:8802","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:40:2404":{"id":"0:40:2404","crate_id":0,"name":"try_seconds","span":{"filename":"src/duration.rs","begin":[160,4],"end":[166,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of seconds.\nReturns `None` when the duration is more than `i64::MAX` milliseconds\nor less than `-i64::MAX` milliseconds.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seconds",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1008":{"id":"0:1008","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[220,0],"end":[1494,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1012:5209","0:1013:2776","0:1014:5227","0:1015:3987","0:1016:5244","0:1017:3998","0:1018:5284","0:1019:5285","0:1020:5309","0:1021:5310","0:1022:3087","0:1023:2791","0:1026:2922","0:1027:2927","0:1029:2929","0:1030:2931","0:1033:2643","0:1034:2652","0:1035:2656","0:1036:2664","0:1037:2666","0:1038:2673","0:1039:2675","0:1040:2682","0:1041:2684","0:1046:2690","0:1047:2691","0:1048:2697","0:1049:2698","0:1050:2711","0:1051:2713","0:1052:2718","0:1053:2726","0:1054:2733","0:1058:737","0:1060:5518","0:1061:5525","0:1062:3601","0:1063:5535","0:1070:2393","0:1071:2394"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1950:7284":{"id":"0:1950:7284","crate_id":0,"name":"datetime_from_str","span":{"filename":"src/offset/mod.rs","begin":[480,4],"end":[484,5]},"visibility":"default","docs":"Parses a string with the specified format string and returns a\n`DateTime` with the current offset.\n\nSee the [`crate::format::strftime`] module on the\nsupported escape sequences.\n\nIf the to-be-parsed string includes an offset, it *must* match the\noffset of the TimeZone, otherwise an error will be returned.\n\nSee also [`DateTime::parse_from_str`] which gives a [`DateTime`] with\nparsed [`FixedOffset`].\n\nSee also [`NaiveDateTime::parse_from_str`] which gives a [`NaiveDateTime`] without\nan offset, but can be converted to a [`DateTime`] with [`NaiveDateTime::and_utc`] or\n[`NaiveDateTime::and_local_timezone`].","links":{"`NaiveDateTime`":"0:2675:2162","`NaiveDateTime::and_local_timezone`":"0:1234:2923","`FixedOffset`":"0:2764:2159","`NaiveDateTime::parse_from_str`":"0:1202:3087","`NaiveDateTime::and_utc`":"0:1236:2998","`crate::format::strftime`":"0:860:3302","`DateTime::parse_from_str`":"0:396:3087","`DateTime`":"0:2154:2153"},"attrs":["#[deprecated(since = \"0.4.29\", note =\n\"use `DateTime::parse_from_str` or `NaiveDateTime::parse_from_str` with `and_utc()` or `and_local_timezone()` instead\")]"],"deprecation":{"since":"0.4.29","note":"use `DateTime::parse_from_str` or `NaiveDateTime::parse_from_str` with `and_utc()` or `and_local_timezone()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2092:3132":{"id":"0:2092:3132","crate_id":0,"name":"minute","span":{"filename":"src/traits.rs","begin":[284,4],"end":[284,28]},"visibility":"default","docs":"Returns the minute number from 0 to 59.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:2322:3363":{"id":"0:2322:3363","crate_id":0,"name":"Second","span":{"filename":"src/format/mod.rs","begin":[139,4],"end":[139,10]},"visibility":"default","docs":"The number of seconds since the last whole minute (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1528":{"id":"0:1528","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1543,0],"end":[1547,1]},"visibility":"default","docs":"The default value for a NaiveTime is midnight, 00:00:00 exactly.\n\n# Example\n\n```rust\nuse chrono::NaiveTime;\n\nlet default_time = NaiveTime::default();\nassert_eq!(default_time, NaiveTime::from_hms_opt(0, 0, 0).unwrap());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2795:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1529:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2044:2697":{"id":"0:2044:2697","crate_id":0,"name":"pred","span":{"filename":"src/month.rs","begin":[100,4],"end":[115,5]},"visibility":"public","docs":"The previous month.\n\n`m`:        | `January`  | `February` | `...` | `December`\n----------- | ---------  | ---------- | --- | ---------\n`m.pred()`: | `December` | `January`  | `...` | `November`","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2096:3142":{"id":"0:2096:3142","crate_id":0,"name":"with_minute","span":{"filename":"src/traits.rs","begin":[302,4],"end":[302,52]},"visibility":"default","docs":"Makes a new value with the minute number changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["min",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1489:301":{"id":"0:1489:301","crate_id":0,"name":"add","span":{"filename":"src/naive/time/mod.rs","begin":[1170,4],"end":[1172,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1115:206":{"id":"0:1115:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[2081,4],"end":[2081,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:159:2666":{"id":"0:159:2666","crate_id":0,"name":"and_hms_milli_opt","span":{"filename":"src/date.rs","begin":[134,4],"end":[142,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute, second and/or millisecond.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2637:5109":{"id":"0:2637:5109","crate_id":0,"name":"NaiveDateDaysIterator","span":{"filename":"src/naive/date.rs","begin":[2097,0],"end":[2099,1]},"visibility":"public","docs":"Iterator over `NaiveDate` with a step size of one day.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42477:9166-0:2637:5109","a:2:2966:253-0:2637:5109","a:2:32825:244-0:2637:5109","a:2:32882:9016-0:2637:5109","a:2:42476:9167-0:2637:5109","b:2:2754-0:2637:5109","b:2:2744-0:2637:5109","b:2:2748-0:2637:5109","b:2:2441-0:2637:5109","b:2:2444-0:2637:5109","b:2:3558-0:2637:5109","b:2:7908-0:2637:5109","b:2:2759-0:2637:5109","b:5:687-0:2637:5109","0:2650","0:1126","0:1124","0:2644","0:2647","0:2639","0:2652","0:1119","0:1123","0:2654","0:2641","0:2648","0:2642"]}}},"b:2:2759-0:2620:2161":{"id":"b:2:2759-0:2620:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1007:2167":{"id":"0:1007:2167","crate_id":0,"name":"MAX_DATE","span":{"filename":"src/naive/date.rs","begin":[208,0],"end":[208,47]},"visibility":"public","docs":"The maximum possible `NaiveDate` (December 31, 262143 CE).","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDate::MAX instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDate::MAX instead"},"inner":{"constant":{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"NaiveDate::MAX","value":null,"is_literal":false}}},"0:2332:461":{"id":"0:2332:461","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[100,9],"end":[100,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1953:7289":{"id":"0:1953:7289","crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/mod.rs","begin":[493,4],"end":[493,93]},"visibility":"default","docs":"Creates the offset(s) for given local `NaiveDateTime` if possible.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1934:2165","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:3121:3993":{"id":"0:3121:3993","crate_id":0,"name":"Fri","span":{"filename":"src/weekday.rs","begin":[52,4],"end":[52,11]},"visibility":"default","docs":"Friday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"4","value":"4"}}}},"0:2055:1048":{"id":"0:2055:1048","crate_id":0,"name":"new","span":{"filename":"src/month.rs","begin":[233,4],"end":[235,5]},"visibility":"public","docs":"Construct a new `Months` from a number of months","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["num",{"primitive":"u32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1077:2748":{"id":"0:1077:2748","crate_id":0,"name":"month0","span":{"filename":"src/naive/date.rs","begin":[1542,4],"end":[1544,5]},"visibility":"default","docs":"Returns the month number starting from 0.\n\nThe return value ranges from 0 to 11.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().month0(), 8);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().month0(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3558-0:3226:2187":{"id":"b:2:3558-0:3226:2187","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2088:5539":{"id":"0:2088:5539","crate_id":0,"name":"num_days_from_ce","span":{"filename":"src/traits.rs","begin":[248,4],"end":[263,5]},"visibility":"default","docs":"Counts the days in the proleptic Gregorian calendar, with January 1, Year 1 (CE) as day 1.\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().num_days_from_ce(), 719_163);\nassert_eq!(NaiveDate::from_ymd_opt(2, 1, 1).unwrap().num_days_from_ce(), 366);\nassert_eq!(NaiveDate::from_ymd_opt(1, 1, 1).unwrap().num_days_from_ce(), 1);\nassert_eq!(NaiveDate::from_ymd_opt(0, 1, 1).unwrap().num_days_from_ce(), -365);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42476:9167-0:2196:2794":{"id":"a:2:42476:9167-0:2196:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2754-0:2549:2174":{"id":"b:2:2754-0:2549:2174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42476:9167-0:2488:3453":{"id":"a:2:42476:9167-0:2488:3453","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2097:3148":{"id":"0:2097:3148","crate_id":0,"name":"with_second","span":{"filename":"src/traits.rs","begin":[309,4],"end":[309,52]},"visibility":"default","docs":"Makes a new value with the second number changed.\n\nReturns `None` when the resulting value would be invalid.\nAs with the [`second`](#tymethod.second) method,\nthe input range is restricted to 0 through 59.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:3049":{"id":"0:3049","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,9],"end":[43,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2570:3510":{"id":"0:2570:3510","crate_id":0,"name":"NotEnough","span":{"filename":"src/format/mod.rs","begin":[395,4],"end":[395,13]},"visibility":"default","docs":"Given set of fields is not enough to make a requested date and time value.\n\nNote that there *may* be a case that given fields constrain the possible values so much\nthat there is a unique possible value. Chrono only tries to be correct for\nmost useful sets of fields however, as such constraint solving can be expensive.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:948:134":{"id":"0:948:134","crate_id":0,"name":"Err","span":{"filename":"src/format/mod.rs","begin":[513,4],"end":[513,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:3224":{"id":"0:3224","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[227,62],"end":[227,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2540:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3225:468"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1412":{"id":"0:1412","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[141,0],"end":[152,1]},"visibility":"default","docs":"The `Debug` output of the ISO week `w` is the same as\n[`d.format(\"%G-W%V\")`](../format/strftime/index.html)\nwhere `d` is any `NaiveDate` value in that week.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(2015,  9,  5).unwrap().iso_week()), \"2015-W36\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(   0,  1,  3).unwrap().iso_week()), \"0000-W01\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(9999, 12, 31).unwrap().iso_week()), \"9999-W52\");\n```\n\nISO 8601 requires an explicit sign for years before 1 BCE or after 9999 CE.\n\n```\n# use chrono::{NaiveDate, Datelike};\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(    0,  1,  2).unwrap().iso_week()),  \"-0001-W52\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(10000, 12, 31).unwrap().iso_week()), \"+10000-W52\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1413:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:479":{"id":"0:479","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1313,0],"end":[1320,1]},"visibility":"default","docs":"Add-assign `std::time::Duration` to `DateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`DateTime<Tz>::checked_add_signed`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_add_signed`":"0:347:2711"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:33908:2348","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:481:302"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:45:2437":{"id":"0:45:2437","crate_id":0,"name":"num_days","span":{"filename":"src/duration.rs","begin":[198,4],"end":[200,5]},"visibility":"public","docs":"Returns the total number of whole days in the duration.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42476:9167-0:2595:2179":{"id":"a:2:42476:9167-0:2595:2179","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2595:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1314":{"id":"0:1314","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[2005,0],"end":[2011,1]},"visibility":"default","docs":"Add `Days` to `NaiveDateTime`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using `checked_add_days` to get an `Option` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1315:206","0:1316:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2744-0:3047:2160":{"id":"b:2:2744-0:3047:2160","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2352":{"id":"0:2352","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[156,26],"end":[156,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2754-0:2565:3498":{"id":"b:2:2754-0:2565:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2214:3134":{"id":"0:2214:3134","crate_id":0,"name":"nanosecond","span":{"filename":"src/format/parsed.rs","begin":[94,4],"end":[94,31]},"visibility":"public","docs":"The number of nanoseconds since the whole second (0--999,999,999).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"0:377":{"id":"0:377","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[702,0],"end":[709,1]},"visibility":"default","docs":"Convert a `DateTime<Utc>` instance into a `DateTime<Local>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:378:752"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2744-0:2549:2174":{"id":"b:2:2744-0:2549:2174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1553:1099":{"id":"0:1553:1099","crate_id":0,"name":"offset","span":{"filename":"src/offset/mod.rs","begin":[4,0],"end":[649,1]},"visibility":"public","docs":"The time zone, which calculates offsets from the local time to UTC.\n\nThere are four operations provided by the `TimeZone` trait:\n\n1. Converting the local `NaiveDateTime` to `DateTime<Tz>`\n2. Converting the UTC `NaiveDateTime` to `DateTime<Tz>`\n3. Converting `DateTime<Tz>` to the local `NaiveDateTime`\n4. Constructing `DateTime<Tz>` objects from various offsets\n\n1 is used for constructors. 2 is used for the `with_timezone` method of date and time types.\n3 is used for other methods, e.g. `year()` or `format()`, and provided by an associated type\nwhich implements `Offset` (which then passed to `TimeZone` for actual implementations).\nTechnically speaking `TimeZone` has a total knowledge about given timescale,\nbut `Offset` is used as a cache to avoid the repeated conversion\nand provides implementations for 1 and 3.\nAn `TimeZone` instance can be reconstructed from the corresponding `Offset` instance.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:1605-0:2764:2159","0:1880-0:3040:2149","0:1913-0:3047:2160","0:3060:2180","0:1932:2164","0:1934:2165"],"is_stripped":false}}},"0:2064-0:3152:2156":{"id":"0:2064-0:3152:2156","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[555,16],"end":[555,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"month::Month","name":"Month","id":"0:3152:2156","glob":false}}},"a:2:32825:244-0:2600:2177":{"id":"a:2:32825:244-0:2600:2177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2776:461":{"id":"0:2776:461","crate_id":0,"name":"clone","span":{"filename":"src/offset/fixed.rs","begin":[22,36],"end":[22,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1877:7289":{"id":"0:1877:7289","crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/local/mod.rs","begin":[171,4],"end":[173,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2441-0:3143:2185":{"id":"b:2:2441-0:3143:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1195":{"id":"0:1195","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[90,0],"end":[1082,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1196:1048","0:1197:2995","0:1198:3007","0:1199:6025","0:1200:6032","0:1201:2997","0:1202:3087","0:1203:2791","0:1206:2166","0:1207:2212","0:1208:2857","0:1210:2864","0:1211:2870","0:1212:2878","0:1213:2879","0:1215:2897","0:1216:2900","0:1217:2903","0:1218:2711","0:1219:2922","0:1220:2938","0:1221:3192","0:1223:2713","0:1224:2927","0:1225:2929","0:1226:2931","0:1227:2718","0:1228:2733","0:1232:737","0:1234:2923","0:1236:2998","0:1237:2393","0:1238:2394","0:1239:2789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2689:468":{"id":"0:2689:468","crate_id":0,"name":"cmp","span":{"filename":"src/naive/datetime/mod.rs","begin":[76,42],"end":[76,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:376:752":{"id":"0:376:752","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[695,4],"end":[697,5]},"visibility":"default","docs":"Convert this `DateTime<Utc>` instance into a `DateTime<FixedOffset>` instance.\n\nConversion is done via [`DateTime::with_timezone`]. Note that the converted value returned by\nthis will be created with a fixed timezone offset of 0.","links":{"`DateTime::with_timezone`":"0:343:2705"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2476:725":{"id":"0:2476:725","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[293,9],"end":[293,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1223:2713":{"id":"0:1223:2713","crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/naive/datetime/mod.rs","begin":[855,4],"end":[865,5]},"visibility":"public","docs":"Subtracts given `Duration` from the current date and time.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when the `NaiveDateTime` itself represents a leap second\nin which case the assumption becomes that **there is exactly a single leap second ever**.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::zero()),\n           Some(hms(3, 5, 7)));\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(1)),\n           Some(hms(3, 5, 6)));\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(-1)),\n           Some(hms(3, 5, 8)));\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(3600 + 60)),\n           Some(hms(2, 4, 7)));\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(86_400)),\n           Some(from_ymd(2016, 7, 7).and_hms_opt(3, 5, 7).unwrap()));\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli_opt(h, m, s, milli).unwrap();\nassert_eq!(hmsm(3, 5, 7, 450).checked_sub_signed(Duration::milliseconds(670)),\n           Some(hmsm(3, 5, 6, 780)));\n```\n\nOverflow returns `None`.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let hms = |h, m, s| NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::days(1_000_000_000)), None);\n```\n\nLeap seconds are handled,\nbut the subtraction assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli_opt(h, m, s, milli).unwrap();\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap.checked_sub_signed(Duration::zero()),\n           Some(hmsm(3, 5, 59, 1_300)));\nassert_eq!(leap.checked_sub_signed(Duration::milliseconds(200)),\n           Some(hmsm(3, 5, 59, 1_100)));\nassert_eq!(leap.checked_sub_signed(Duration::milliseconds(500)),\n           Some(hmsm(3, 5, 59, 800)));\nassert_eq!(leap.checked_sub_signed(Duration::seconds(60)),\n           Some(hmsm(3, 5, 0, 300)));\nassert_eq!(leap.checked_sub_signed(Duration::days(1)),\n           Some(from_ymd(2016, 7, 7).and_hms_milli_opt(3, 6, 0, 300).unwrap()));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2748-0:3152:2156":{"id":"b:2:2748-0:3152:2156","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3216":{"id":"0:3216","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[227,33],"end":[227,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3217:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3214":{"id":"0:3214","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[227,29],"end":[227,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:438:3134":{"id":"0:438:3134","crate_id":0,"name":"nanosecond","span":{"filename":"src/datetime/mod.rs","begin":[1130,4],"end":[1132,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:536:3219":{"id":"0:536:3219","crate_id":0,"name":"from_str","span":{"filename":"src/datetime/mod.rs","begin":[1592,4],"end":[1594,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2744-0:3108:2158":{"id":"b:2:2744-0:3108:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2222:668":{"id":"0:2222:668","crate_id":0,"name":"eq","span":{"filename":"src/format/parsed.rs","begin":[21,16],"end":[21,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:117-0:2675:2162":{"id":"0:117-0:2675:2162","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[506,31],"end":[506,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::NaiveDateTime","name":"NaiveDateTime","id":"0:2675:2162","glob":false}}},"0:3140":{"id":"0:3140","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,44],"end":[32,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3141:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2966:253-0:3108:2158":{"id":"a:2:2966:253-0:3108:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3203:1146":{"id":"0:3203:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/month.rs","begin":[31,50],"end":[31,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:414:2750":{"id":"0:414:2750","crate_id":0,"name":"day0","span":{"filename":"src/datetime/mod.rs","begin":[983,4],"end":[985,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2652":{"id":"0:2652","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2096,58],"end":[2096,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1997":{"id":"0:1997","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[159,0],"end":[169,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DurationRound","id":"0:1988:2182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1998:134","0:1999:8146","0:2000:8151"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42476:9167-0:3040:2149":{"id":"a:2:42476:9167-0:3040:2149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3136":{"id":"0:3136","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,30],"end":[32,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3137:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:103-0:1980:2152":{"id":"0:103-0:1980:2152","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[502,4],"end":[502,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::SubsecRound","name":"SubsecRound","id":"0:1980:2152","glob":false}}},"0:2101-0:2070:2155":{"id":"0:2101-0:2070:2155","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[558,17],"end":[558,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"traits::Datelike","name":"Datelike","id":"0:2070:2155","glob":false}}},"0:1982:8128":{"id":"0:1982:8128","crate_id":0,"name":"trunc_subsecs","span":{"filename":"src/round.rs","begin":[46,4],"end":[46,48]},"visibility":"default","docs":"Return a copy truncated to the specified number of subsecond\ndigits. With 9 or more digits, self is returned unmodified.\n\n# Example\n``` rust\n# use chrono::{SubsecRound, Timelike, Utc, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 11).unwrap().and_hms_milli_opt(12, 0, 0, 154).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.trunc_subsecs(2).nanosecond(), 150_000_000);\nassert_eq!(dt.trunc_subsecs(1).nanosecond(), 100_000_000);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["digits",{"primitive":"u16"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:7912:847":{"id":"2:7912:847","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3108:2158":{"id":"0:3108:2158","crate_id":0,"name":"Weekday","span":{"filename":"src/weekday.rs","begin":[42,0],"end":[57,1]},"visibility":"public","docs":"The day of week.\n\nThe order of the days of week depends on the context.\n(This is why this type does *not* implement `PartialOrd` or `Ord` traits.)\nOne should prefer `*_from_monday` or `*_from_sunday` methods to get the correct result.\n\n# Example\n```\nuse chrono::Weekday;\n\nlet monday = \"Monday\".parse::<Weekday>().unwrap();\nassert_eq!(monday, Weekday::Mon);\n\nlet sunday = Weekday::try_from(6).unwrap();\nassert_eq!(sunday, Weekday::Sun);\n\nassert_eq!(sunday.num_days_from_monday(), 6); // starts counting with Monday = 0\nassert_eq!(sunday.number_from_monday(), 7); // starts counting with Monday = 1\nassert_eq!(sunday.num_days_from_sunday(), 0); // starts counting with Sunday = 0\nassert_eq!(sunday.number_from_sunday(), 1); // starts counting with Sunday = 1\n\nassert_eq!(sunday.succ(), monday);\nassert_eq!(sunday.pred(), Weekday::Sat);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:3109:3598","0:3112:3990","0:3115:3991","0:3118:3992","0:3121:3993","0:3124:3994","0:3127:3596"],"impls":["0:2016","a:2:42477:9166-0:3108:2158","a:2:2966:253-0:3108:2158","a:2:32825:244-0:3108:2158","a:2:32882:9016-0:3108:2158","a:2:42476:9167-0:3108:2158","b:2:2754-0:3108:2158","b:2:2744-0:3108:2158","b:2:2748-0:3108:2158","b:2:2441-0:3108:2158","b:2:2444-0:3108:2158","b:2:3558-0:3108:2158","b:2:2759-0:3108:2158","b:5:687-0:3108:2158","b:5:5828-0:3108:2158","0:3140","0:2026","0:3135","0:2024","0:3136","0:2029","0:3133","0:3131","0:3138","0:944","0:3130"]}}},"0:2688":{"id":"0:2688","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[76,42],"end":[76,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2540:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2689:468"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:549-0:2154:2153":{"id":"0:549-0:2154:2153","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[520,0],"end":[520,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"datetime::DateTime","name":"DateTime","id":"0:2154:2153","glob":false}}},"0:1986:8128":{"id":"0:1986:8128","crate_id":0,"name":"trunc_subsecs","span":{"filename":"src/round.rs","begin":[68,4],"end":[76,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["digits",{"primitive":"u16"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2966:253-0:2764:2159":{"id":"a:2:2966:253-0:2764:2159","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1296:206":{"id":"0:1296:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1835,4],"end":[1835,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:707:3947":{"id":"0:707:3947","crate_id":0,"name":"set_hour12","span":{"filename":"src/format/parsed.rs","begin":[238,4],"end":[243,5]},"visibility":"public","docs":"Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from\ngiven hour number in 12-hour clocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3246":{"id":"0:3246","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[598,39],"end":[598,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2748-0:3143:2185":{"id":"b:2:2748-0:3143:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1935:2164":{"id":"0:1935:2164","crate_id":0,"name":"Offset","span":{"filename":"src/offset/mod.rs","begin":[219,4],"end":[219,24]},"visibility":"default","docs":"An associated offset type.\nThis type is used to store the actual offset in date and time types.\nThe original `TimeZone` value can be recovered via `TimeZone::from_offset`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Offset","id":"0:1932:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"2:12865:882":{"id":"2:12865:882","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12055:457"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3070:1765":{"id":"0:3070:1765","crate_id":0,"name":"1","span":{"filename":"src/offset/mod.rs","begin":[50,25],"end":[50,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"2:12906:7805":{"id":"2:12906:7805","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:8766"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:8782","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1501:206":{"id":"0:1501:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1277,4],"end":[1277,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1908:2832":{"id":"0:1908:2832","crate_id":0,"name":"fix","span":{"filename":"src/offset/utc.rs","begin":[139,4],"end":[141,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:346:2912":{"id":"0:346:2912","crate_id":0,"name":"to_utc","span":{"filename":"src/datetime/mod.rs","begin":[359,4],"end":[361,5]},"visibility":"public","docs":"Turn this `DateTime` into a `DateTime<Utc>`, dropping the offset and associated timezone\ninformation.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1513":{"id":"0:1513","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1383,0],"end":[1390,1]},"visibility":"default","docs":"Subtracts another `NaiveTime` from the current time.\nReturns a `Duration` within +/- 1 day.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\nThe implementation is a wrapper around\n[`NaiveTime::signed_duration_since`](#method.signed_duration_since).\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\n\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 7, 900), Duration::zero());\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 7, 875), Duration::milliseconds(25));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 6, 925), Duration::milliseconds(975));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 0, 900), Duration::seconds(7));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 0, 7, 900), Duration::seconds(5 * 60));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(0, 5, 7, 900), Duration::seconds(3 * 3600));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(4, 5, 7, 900), Duration::seconds(-3600));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(2, 4, 6, 800),\n           Duration::seconds(3600 + 60 + 1) + Duration::milliseconds(100));\n```\n\nLeap seconds are handled, but the subtraction assumes that\nthere were no other leap seconds happened.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\nassert_eq!(from_hmsm(3, 0, 59, 1_000) - from_hmsm(3, 0, 59, 0), Duration::seconds(1));\nassert_eq!(from_hmsm(3, 0, 59, 1_500) - from_hmsm(3, 0, 59, 0),\n           Duration::milliseconds(1500));\nassert_eq!(from_hmsm(3, 0, 59, 1_000) - from_hmsm(3, 0, 0, 0), Duration::seconds(60));\nassert_eq!(from_hmsm(3, 0, 0, 0) - from_hmsm(2, 59, 59, 1_000), Duration::seconds(1));\nassert_eq!(from_hmsm(3, 0, 59, 1_000) - from_hmsm(2, 59, 59, 1_000),\n           Duration::seconds(61));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1514:206","0:1515:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5828-0:3226:2187":{"id":"b:5:5828-0:3226:2187","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5826:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5830:1605"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42477:9166-0:2595:2179":{"id":"a:2:42477:9166-0:2595:2179","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2595:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2405:725":{"id":"0:2405:725","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[171,31],"end":[171,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3225:468":{"id":"0:3225:468","crate_id":0,"name":"cmp","span":{"filename":"src/month.rs","begin":[227,62],"end":[227,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:256:1566":{"id":"0:256:1566","crate_id":0,"name":"sub_assign","span":{"filename":"src/date.rs","begin":[525,4],"end":[527,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1919:933":{"id":"0:1919:933","crate_id":0,"name":"map","span":{"filename":"src/offset/mod.rs","begin":[83,4],"end":[89,5]},"visibility":"public","docs":"Maps a `LocalResult<T>` into `LocalResult<U>` with given function.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3188:139","args":{"parenthesized":{"inputs":[{"generic":"T"}],"output":{"generic":"U"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:7908-0:2637:5109":{"id":"b:2:7908-0:2637:5109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8051:176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7904:163","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:7910:171","2:7911:9557","2:7912:847"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"b:2:2444-0:2764:2159":{"id":"b:2:2444-0:2764:2159","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12877:7851":{"id":"2:12877:7851","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42354:198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10651:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10651:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2759-0:2343:3375":{"id":"b:2:2759-0:2343:3375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2631:1146":{"id":"0:2631:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/date.rs","begin":[191,30],"end":[191,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2485":{"id":"0:2485","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[293,44],"end":[293,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2486:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2209:2749":{"id":"0:2209:2749","crate_id":0,"name":"day","span":{"filename":"src/format/parsed.rs","begin":[79,4],"end":[79,24]},"visibility":"public","docs":"Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"b:2:2748-0:2444:3447":{"id":"b:2:2748-0:2444:3447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3210:461":{"id":"0:3210:461","crate_id":0,"name":"clone","span":{"filename":"src/month.rs","begin":[227,9],"end":[227,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:236":{"id":"0:236","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[486,0],"end":[490,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2540:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:238:468"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:384:752":{"id":"0:384:752","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[741,4],"end":[743,5]},"visibility":"default","docs":"Convert this `DateTime<Local>` instance into a `DateTime<Utc>` instance.\n\nConversion is performed via [`DateTime::with_timezone`], accounting for the difference in\ntimezones.","links":{"`DateTime::with_timezone`":"0:343:2705"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32882:9016-0:2343:3375":{"id":"a:2:32882:9016-0:2343:3375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2441-0:3047:2160":{"id":"b:2:2441-0:3047:2160","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:75":{"id":"0:75","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[403,0],"end":[413,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Mul","id":"2:33302:2350","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:76:206","0:77:1017"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32882:9016-0:3235:2221":{"id":"a:2:32882:9016-0:3235:2221","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:930:870":{"id":"0:930:870","crate_id":0,"name":"kind","span":{"filename":"src/format/mod.rs","begin":[372,4],"end":[374,5]},"visibility":"public","docs":"The category of parse error","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2766":{"id":"0:2766","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[22,9],"end":[22,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12867:41051":{"id":"2:12867:41051","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3558-0:2355:2793":{"id":"b:2:3558-0:2355:2793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2744-0:2267:3310":{"id":"b:2:2744-0:2267:3310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5574:34277":{"id":"5:5574:34277","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12991:34279"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:3091:2183":{"id":"b:5:687-0:3091:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32825:244-0:2196:2794":{"id":"a:2:32825:244-0:2196:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:540:3219":{"id":"0:540:3219","crate_id":0,"name":"from_str","span":{"filename":"src/datetime/mod.rs","begin":[1614,4],"end":[1616,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110-0:2089:2157":{"id":"0:110-0:2089:2157","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[504,37],"end":[504,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::Timelike","name":"Timelike","id":"0:2089:2157","glob":false}}},"0:1095":{"id":"0:1095","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1905,0],"end":[1910,1]},"visibility":"default","docs":"Add-assign of `chrono::Duration` to `NaiveDate`.\n\nThis discards the fractional days in `Duration`, rounding to the closest integral number of days\ntowards `Duration::zero()`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDate::checked_add_signed`] to get an `Option` instead.","links":{"`NaiveDate::checked_add_signed`":"0:1050:2711"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:33908:2348","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1096:302"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2360:3389":{"id":"0:2360:3389","crate_id":0,"name":"ShortWeekdayName","span":{"filename":"src/format/mod.rs","begin":[184,4],"end":[184,20]},"visibility":"default","docs":"Abbreviated day of the week names.\n\nPrints a three-letter-long name in the title case, reads the same name in any case.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2457":{"id":"0:2457","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[280,40],"end":[280,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3115:3991":{"id":"0:3115:3991","crate_id":0,"name":"Wed","span":{"filename":"src/weekday.rs","begin":[48,4],"end":[48,11]},"visibility":"default","docs":"Wednesday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"2","value":"2"}}}},"0:3149:668":{"id":"0:3149:668","crate_id":0,"name":"eq","span":{"filename":"src/weekday.rs","begin":[230,16],"end":[230,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1521":{"id":"0:1521","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1505,0],"end":[1531,1]},"visibility":"default","docs":"Parsing a `str` into a `NaiveTime` uses the same format,\n[`%H:%M:%S%.f`](crate::format::strftime), as in `Debug` and `Display`.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet t = NaiveTime::from_hms_opt(23, 56, 4).unwrap();\nassert_eq!(\"23:56:04\".parse::<NaiveTime>(), Ok(t));\n\nlet t = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(\"23:56:4.012345678\".parse::<NaiveTime>(), Ok(t));\n\nlet t = NaiveTime::from_hms_nano_opt(23, 59, 59, 1_234_567_890).unwrap(); // leap second\nassert_eq!(\"23:59:60.23456789\".parse::<NaiveTime>(), Ok(t));\n\n// Seconds are optional\nlet t = NaiveTime::from_hms_opt(23, 56, 0).unwrap();\nassert_eq!(\"23:56\".parse::<NaiveTime>(), Ok(t));\n\nassert!(\"foo\".parse::<NaiveTime>().is_err());\n```","links":{"crate::format::strftime":"0:860:3302"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12518:3218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1522:134","0:1523:3219"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2188":{"id":"0:2188","crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[509,29],"end":[509,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2744-0:2287:3327":{"id":"b:2:2744-0:2287:3327","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5828-0:2764:2159":{"id":"b:5:5828-0:2764:2159","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5826:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5830:1605"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1280:206":{"id":"0:1280:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1656,4],"end":[1656,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:2966:253-0:2462:3450":{"id":"a:2:2966:253-0:2462:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2759-0:2170:2154":{"id":"b:2:2759-0:2170:2154","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2471:3471":{"id":"0:2471:3471","crate_id":0,"name":"OptionalSeconds","span":{"filename":"src/format/mod.rs","begin":[308,4],"end":[308,19]},"visibility":"default","docs":"Format offset from UTC as hours and minutes, and optionally seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1070:2393":{"id":"0:1070:2393","crate_id":0,"name":"MIN","span":{"filename":"src/naive/date.rs","begin":[1484,4],"end":[1484,92]},"visibility":"public","docs":"The minimum possible `NaiveDate` (January 1, 262144 BCE).","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:2526:2793":{"id":"0:2526:2793","crate_id":0,"name":"Fixed","span":{"filename":"src/format/mod.rs","begin":[341,4],"end":[341,16]},"visibility":"default","docs":"Fixed-format item.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2528:1764"]},"discriminant":null}}},"0:1477":{"id":"0:1477","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[893,0],"end":[1112,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hour12","num_seconds_from_midnight"],"trait":{"name":"Timelike","id":"0:2089:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1478:2653","0:1479:3132","0:1480:3133","0:1481:3134","0:1482:3138","0:1483:3142","0:1484:3148","0:1485:3155","0:1486:6103"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2011-0:3091:2183":{"id":"0:2011-0:3091:2183","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[545,31],"end":[545,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"round::RoundingError","name":"RoundingError","id":"0:3091:2183","glob":false}}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[360,0],"end":[371,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Neg","id":"2:3027:2351","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:63:206","0:64:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2417:668":{"id":"0:2417:668","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[255,23],"end":[255,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2592":{"id":"0:2592","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[379,44],"end":[379,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2593:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1252:2754":{"id":"0:1252:2754","crate_id":0,"name":"with_year","span":{"filename":"src/naive/datetime/mod.rs","begin":[1274,4],"end":[1276,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the year number changed, while keeping the same month and\nday.\n\nSee also the [`NaiveDate::with_year`] method.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or when the `NaiveDateTime` would be\nout of range.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_year(2016), Some(NaiveDate::from_ymd_opt(2016, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_year(-308), Some(NaiveDate::from_ymd_opt(-308, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap()));\n```","links":{"`NaiveDate::with_year`":"0:1084:2754"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2759-0:3091:2183":{"id":"b:2:2759-0:3091:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12900:3608":{"id":"2:12900:3608","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:8766"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42477:9166-0:3047:2160":{"id":"a:2:42477:9166-0:3047:2160","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:50:2450":{"id":"0:50:2450","crate_id":0,"name":"num_milliseconds","span":{"filename":"src/duration.rs","begin":[236,4],"end":[242,5]},"visibility":"public","docs":"Returns the total number of whole milliseconds in the duration,","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269-0:150:2167":{"id":"0:269-0:150:2167","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[515,15],"end":[515,23]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]","#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"date::MAX_DATE","name":"MAX_DATE","id":"0:150:2167","glob":false}}},"0:1198:3007":{"id":"0:1198:3007","crate_id":0,"name":"from_timestamp_millis","span":{"filename":"src/naive/datetime/mod.rs","begin":[162,4],"end":[166,5]},"visibility":"public","docs":"Creates a new [NaiveDateTime] from milliseconds since the UNIX epoch.\n\nThe UNIX epoch starts on midnight, January 1, 1970, UTC.\n\n# Errors\n\nReturns `None` if the number of milliseconds would be out of range for a `NaiveDateTime`\n(more than ca. 262,000 years away from common era)\n\n# Example\n\n```\nuse chrono::NaiveDateTime;\nlet timestamp_millis: i64 = 1662921288000; //Sunday, September 11, 2022 6:34:48 PM\nlet naive_datetime = NaiveDateTime::from_timestamp_millis(timestamp_millis);\nassert!(naive_datetime.is_some());\nassert_eq!(timestamp_millis, naive_datetime.unwrap().timestamp_millis());\n\n// Negative timestamps (before the UNIX epoch) are supported as well.\nlet timestamp_millis: i64 = -2208936075000; //Mon Jan 01 1900 14:38:45 GMT+0000\nlet naive_datetime = NaiveDateTime::from_timestamp_millis(timestamp_millis);\nassert!(naive_datetime.is_some());\nassert_eq!(timestamp_millis, naive_datetime.unwrap().timestamp_millis());\n```","links":{"NaiveDateTime":"0:2675:2162"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["millis",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1326:3219":{"id":"0:1326:3219","crate_id":0,"name":"from_str","span":{"filename":"src/naive/datetime/mod.rs","begin":[2114,4],"end":[2139,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42476:9167-0:2355:2793":{"id":"a:2:42476:9167-0:2355:2793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3217:789":{"id":"0:3217:789","crate_id":0,"name":"hash","span":{"filename":"src/month.rs","begin":[227,33],"end":[227,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:3091:2183":{"id":"b:2:2754-0:3091:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32882:9016-0:2154:2153":{"id":"a:2:32882:9016-0:2154:2153","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:512":{"id":"0:512","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1479,0],"end":[1486,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:514:206","0:515:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2754-0:2600:2177":{"id":"b:2:2754-0:2600:2177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1080:2751":{"id":"0:1080:2751","crate_id":0,"name":"ordinal","span":{"filename":"src/naive/date.rs","begin":[1638,4],"end":[1640,5]},"visibility":"default","docs":"Returns the day of year starting from 1.\n\nThe return value ranges from 1 to 366. (The last day of year differs by years.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().ordinal(), 251);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().ordinal(), 74);\n```\n\nCombined with [`NaiveDate::pred`](#method.pred),\none can determine the number of days in a particular year.\n(Note that this panics when `year` is out of range.)\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nfn ndays_in_year(year: i32) -> u32 {\n    // the first day of the next year...\n    let d = NaiveDate::from_ymd_opt(year + 1, 1, 1).unwrap();\n\n    // ...is preceded by the last day of the original year\n    d.pred_opt().unwrap().ordinal()\n}\n\nassert_eq!(ndays_in_year(2015), 365);\nassert_eq!(ndays_in_year(2016), 366);\nassert_eq!(ndays_in_year(2017), 365);\nassert_eq!(ndays_in_year(2000), 366);\nassert_eq!(ndays_in_year(2100), 365);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2228:60":{"id":"0:2228:60","crate_id":0,"name":"default","span":{"filename":"src/format/parsed.rs","begin":[21,38],"end":[21,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32882:9016-0:2600:2177":{"id":"a:2:32882:9016-0:2600:2177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:431:2760":{"id":"0:431:2760","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/datetime/mod.rs","begin":[1111,4],"end":[1113,5]},"visibility":"default","docs":"Makes a new `DateTime` with the day of year (starting from 0) changed.\n\nSee also the [`NaiveDate::with_ordinal0`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist.\n- The value for `ordinal0` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_ordinal0`":"0:1091:2760"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2413":{"id":"0:2413","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[255,16],"end":[255,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2414:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2411":{"id":"0:2411","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[255,9],"end":[255,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2412:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1299:206":{"id":"0:1299:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1854,4],"end":[1854,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1297:1565":{"id":"0:1297:1565","crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1838,4],"end":[1840,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:416:2752":{"id":"0:416:2752","crate_id":0,"name":"ordinal0","span":{"filename":"src/datetime/mod.rs","begin":[991,4],"end":[993,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1071:2394":{"id":"0:1071:2394","crate_id":0,"name":"MAX","span":{"filename":"src/naive/date.rs","begin":[1486,4],"end":[1486,94]},"visibility":"public","docs":"The maximum possible `NaiveDate` (December 31, 262142 CE).","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:2449":{"id":"0:2449","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[280,9],"end":[280,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2450:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:687-0:2764:2159":{"id":"b:5:687-0:2764:2159","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32882:9016-0:3040:2149":{"id":"a:2:32882:9016-0:3040:2149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:241:789":{"id":"0:241:789","crate_id":0,"name":"hash","span":{"filename":"src/date.rs","begin":[493,4],"end":[495,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3162:3559":{"id":"0:3162:3559","crate_id":0,"name":"April","span":{"filename":"src/month.rs","begin":[49,4],"end":[49,13]},"visibility":"default","docs":"April","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"3","value":"3"}}}},"0:2524:1764":{"id":"0:2524:1764","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[339,12],"end":[339,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2366:3396":{"id":"0:2366:3396","crate_id":0,"name":"UpperAmPm","span":{"filename":"src/format/mod.rs","begin":[196,4],"end":[196,13]},"visibility":"default","docs":"AM/PM.\n\nPrints in upper case, reads in any case.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2729:2178":{"id":"0:2729:2178","crate_id":0,"name":"IsoWeek","span":{"filename":"src/naive/isoweek.rs","begin":[27,0],"end":[32,1]},"visibility":"public","docs":"ISO 8601 week.\n\nThis type, combined with [`Weekday`](../enum.Weekday.html),\nconstitutes the ISO 8601 [week date](./struct.NaiveDate.html#week-date).\nOne can retrieve this type from the existing [`Datelike`](../trait.Datelike.html) types\nvia the [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) method.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:1408","a:2:42477:9166-0:2729:2178","a:2:2966:253-0:2729:2178","a:2:32825:244-0:2729:2178","a:2:32882:9016-0:2729:2178","a:2:42476:9167-0:2729:2178","b:2:2754-0:2729:2178","b:2:2744-0:2729:2178","b:2:2748-0:2729:2178","b:2:2441-0:2729:2178","b:2:2444-0:2729:2178","b:2:3558-0:2729:2178","b:2:2759-0:2729:2178","b:5:687-0:2729:2178","0:2731","0:2734","0:1412","0:2740","0:2736","0:2738","0:2732","0:2741","0:2743"]}}},"0:2758:1146":{"id":"0:2758:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/time/mod.rs","begin":[205,30],"end":[205,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2444-0:2746:2163":{"id":"b:2:2444-0:2746:2163","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1227:2718":{"id":"0:1227:2718","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/naive/datetime/mod.rs","begin":[952,4],"end":[954,5]},"visibility":"public","docs":"Subtracts another `NaiveDateTime` from the current date and time.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveDateTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nlet d = from_ymd(2016, 7, 8);\nassert_eq!(d.and_hms_opt(3, 5, 7).unwrap().signed_duration_since(d.and_hms_opt(2, 4, 6).unwrap()),\n           Duration::seconds(3600 + 60 + 1));\n\n// July 8 is 190th day in the year 2016\nlet d0 = from_ymd(2016, 1, 1);\nassert_eq!(d.and_hms_milli_opt(0, 7, 6, 500).unwrap().signed_duration_since(d0.and_hms_opt(0, 0, 0).unwrap()),\n           Duration::seconds(189 * 86_400 + 7 * 60 + 6) + Duration::milliseconds(500));\n```\n\nLeap seconds are handled, but the subtraction assumes that\nthere were no other leap seconds happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\nlet leap = from_ymd(2015, 6, 30).and_hms_milli_opt(23, 59, 59, 1_500).unwrap();\nassert_eq!(leap.signed_duration_since(from_ymd(2015, 6, 30).and_hms_opt(23, 0, 0).unwrap()),\n           Duration::seconds(3600) + Duration::milliseconds(500));\nassert_eq!(from_ymd(2015, 7, 1).and_hms_opt(1, 0, 0).unwrap().signed_duration_since(leap),\n           Duration::seconds(3600) - Duration::milliseconds(500));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1293:206":{"id":"0:1293:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1775,4],"end":[1775,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:93:725":{"id":"0:93:725","crate_id":0,"name":"fmt","span":{"filename":"src/duration.rs","begin":[491,4],"end":[493,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:2231":{"id":"0:0:2231","crate_id":0,"name":"chrono","span":{"filename":"src/lib.rs","begin":[1,0],"end":[646,1]},"visibility":"public","docs":"# Chrono: Date and Time for Rust\n\nChrono aims to provide all functionality needed to do correct operations on dates and times in the\n[proleptic Gregorian calendar](https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar):\n\n* The [`DateTime`](https://docs.rs/chrono/latest/chrono/struct.DateTime.html) type is timezone-aware\n  by default, with separate timezone-naive types.\n* Operations that may produce an invalid or ambiguous date and time return `Option` or\n  [`LocalResult`](https://docs.rs/chrono/latest/chrono/offset/enum.LocalResult.html).\n* Configurable parsing and formatting with a `strftime` inspired date and time formatting syntax.\n* The [`Local`](https://docs.rs/chrono/latest/chrono/offset/struct.Local.html) timezone works with\n  the current timezone of the OS.\n* Types and operations are implemented to be reasonably efficient.\n\nTimezone data is not shipped with chrono by default to limit binary sizes. Use the companion crate\n[Chrono-TZ](https://crates.io/crates/chrono-tz) or [`tzfile`](https://crates.io/crates/tzfile) for\nfull timezone support.\n\n### Features\n\nChrono supports various runtime environments and operating systems, and has\nseveral features that may be enabled or disabled.\n\nDefault features:\n\n- `alloc`: Enable features that depend on allocation (primarily string formatting)\n- `std`: Enables functionality that depends on the standard library. This\n  is a superset of `alloc` and adds interoperation with standard library types\n  and traits.\n- `clock`: Enables reading the system time (`now`) that depends on the standard library for\nUNIX-like operating systems and the Windows API (`winapi`) for Windows.\n- `wasmbind`: Interface with the JS Date API for the `wasm32` target.\n\nOptional features:\n\n- [`serde`][]: Enable serialization/deserialization via serde.\n- `rkyv`: Enable serialization/deserialization via rkyv.\n- `arbitrary`: construct arbitrary instances of a type with the Arbitrary crate.\n- `unstable-locales`: Enable localization. This adds various methods with a\n  `_localized` suffix. The implementation and API may change or even be\n  removed in a patch release. Feedback welcome.\n- `oldtime`: this feature no langer has a function, but once offered compatibility with the\n  `time` 0.1 crate.\n\n[`serde`]: https://github.com/serde-rs/serde\n[wasm-bindgen]: https://github.com/rustwasm/wasm-bindgen\n\nSee the [cargo docs][] for examples of specifying features.\n\n[cargo docs]: https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#choosing-features\n\n## Overview\n\n### Duration\n\nChrono currently uses its own [`Duration`] type to represent the magnitude\nof a time span. Since this has the same name as the newer, standard type for\nduration, the reference will refer this type as `OldDuration`.\n\nNote that this is an \"accurate\" duration represented as seconds and\nnanoseconds and does not represent \"nominal\" components such as days or\nmonths.\n\nChrono does not yet natively support\nthe standard [`Duration`](https://doc.rust-lang.org/std/time/struct.Duration.html) type,\nbut it will be supported in the future.\nMeanwhile you can convert between two types with\n[`Duration::from_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.from_std)\nand\n[`Duration::to_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.to_std)\nmethods.\n\n### Date and Time\n\nChrono provides a\n[**`DateTime`**](./struct.DateTime.html)\ntype to represent a date and a time in a timezone.\n\nFor more abstract moment-in-time tracking such as internal timekeeping\nthat is unconcerned with timezones, consider\n[`time::SystemTime`](https://doc.rust-lang.org/std/time/struct.SystemTime.html),\nwhich tracks your system clock, or\n[`time::Instant`](https://doc.rust-lang.org/std/time/struct.Instant.html), which\nis an opaque but monotonically-increasing representation of a moment in time.\n\n`DateTime` is timezone-aware and must be constructed from\nthe [**`TimeZone`**](./offset/trait.TimeZone.html) object,\nwhich defines how the local date is converted to and back from the UTC date.\nThere are three well-known `TimeZone` implementations:\n\n* [**`Utc`**](./offset/struct.Utc.html) specifies the UTC time zone. It is most efficient.\n\n* [**`Local`**](./offset/struct.Local.html) specifies the system local time zone.\n\n* [**`FixedOffset`**](./offset/struct.FixedOffset.html) specifies\n  an arbitrary, fixed time zone such as UTC+09:00 or UTC-10:30.\n  This often results from the parsed textual date and time.\n  Since it stores the most information and does not depend on the system environment,\n  you would want to normalize other `TimeZone`s into this type.\n\n`DateTime`s with different `TimeZone` types are distinct and do not mix,\nbut can be converted to each other using\nthe [`DateTime::with_timezone`](./struct.DateTime.html#method.with_timezone) method.\n\nYou can get the current date and time in the UTC time zone\n([`Utc::now()`](./offset/struct.Utc.html#method.now))\nor in the local time zone\n([`Local::now()`](./offset/struct.Local.html#method.now)).\n\n```rust\nuse chrono::prelude::*;\n\nlet utc: DateTime<Utc> = Utc::now();       // e.g. `2014-11-28T12:45:59.324310806Z`\n# let _ = utc;\n```\n\n```rust\nuse chrono::prelude::*;\n\nlet local: DateTime<Local> = Local::now(); // e.g. `2014-11-28T21:45:59.324310806+09:00`\n# let _ = local;\n```\n\nAlternatively, you can create your own date and time.\nThis is a bit verbose due to Rust's lack of function and method overloading,\nbut in turn we get a rich combination of initialization methods.\n\n```rust\nuse chrono::prelude::*;\nuse chrono::offset::LocalResult;\n\n# fn doctest() -> Option<()> {\n\nlet dt = Utc.with_ymd_and_hms(2014, 7, 8, 9, 10, 11).unwrap(); // `2014-07-08T09:10:11Z`\nassert_eq!(dt, NaiveDate::from_ymd_opt(2014, 7, 8)?.and_hms_opt(9, 10, 11)?.and_local_timezone(Utc).unwrap());\n\n// July 8 is 188th day of the year 2014 (`o` for \"ordinal\")\nassert_eq!(dt, NaiveDate::from_yo_opt(2014, 189)?.and_hms_opt(9, 10, 11)?.and_utc());\n// July 8 is Tuesday in ISO week 28 of the year 2014.\nassert_eq!(dt, NaiveDate::from_isoywd_opt(2014, 28, Weekday::Tue)?.and_hms_opt(9, 10, 11)?.and_utc());\n\nlet dt = NaiveDate::from_ymd_opt(2014, 7, 8)?.and_hms_milli_opt(9, 10, 11, 12)?.and_local_timezone(Utc).unwrap(); // `2014-07-08T09:10:11.012Z`\nassert_eq!(dt, NaiveDate::from_ymd_opt(2014, 7, 8)?.and_hms_micro_opt(9, 10, 11, 12_000)?.and_local_timezone(Utc).unwrap());\nassert_eq!(dt, NaiveDate::from_ymd_opt(2014, 7, 8)?.and_hms_nano_opt(9, 10, 11, 12_000_000)?.and_local_timezone(Utc).unwrap());\n\n// dynamic verification\nassert_eq!(Utc.with_ymd_and_hms(2014, 7, 8, 21, 15, 33),\n           LocalResult::Single(NaiveDate::from_ymd_opt(2014, 7, 8)?.and_hms_opt(21, 15, 33)?.and_utc()));\nassert_eq!(Utc.with_ymd_and_hms(2014, 7, 8, 80, 15, 33), LocalResult::None);\nassert_eq!(Utc.with_ymd_and_hms(2014, 7, 38, 21, 15, 33), LocalResult::None);\n\n# #[cfg(feature = \"clock\")] {\n// other time zone objects can be used to construct a local datetime.\n// obviously, `local_dt` is normally different from `dt`, but `fixed_dt` should be identical.\nlet local_dt = Local.from_local_datetime(&NaiveDate::from_ymd_opt(2014, 7, 8).unwrap().and_hms_milli_opt(9, 10, 11, 12).unwrap()).unwrap();\nlet fixed_dt = FixedOffset::east_opt(9 * 3600).unwrap().from_local_datetime(&NaiveDate::from_ymd_opt(2014, 7, 8).unwrap().and_hms_milli_opt(18, 10, 11, 12).unwrap()).unwrap();\nassert_eq!(dt, fixed_dt);\n# let _ = local_dt;\n# }\n# Some(())\n# }\n# doctest().unwrap();\n```\n\nVarious properties are available to the date and time, and can be altered individually.\nMost of them are defined in the traits [`Datelike`](./trait.Datelike.html) and\n[`Timelike`](./trait.Timelike.html) which you should `use` before.\nAddition and subtraction is also supported.\nThe following illustrates most supported operations to the date and time:\n\n```rust\nuse chrono::prelude::*;\nuse chrono::Duration;\n\n// assume this returned `2014-11-28T21:45:59.324310806+09:00`:\nlet dt = FixedOffset::east_opt(9*3600).unwrap().from_local_datetime(&NaiveDate::from_ymd_opt(2014, 11, 28).unwrap().and_hms_nano_opt(21, 45, 59, 324310806).unwrap()).unwrap();\n\n// property accessors\nassert_eq!((dt.year(), dt.month(), dt.day()), (2014, 11, 28));\nassert_eq!((dt.month0(), dt.day0()), (10, 27)); // for unfortunate souls\nassert_eq!((dt.hour(), dt.minute(), dt.second()), (21, 45, 59));\nassert_eq!(dt.weekday(), Weekday::Fri);\nassert_eq!(dt.weekday().number_from_monday(), 5); // Mon=1, ..., Sun=7\nassert_eq!(dt.ordinal(), 332); // the day of year\nassert_eq!(dt.num_days_from_ce(), 735565); // the number of days from and including Jan 1, 1\n\n// time zone accessor and manipulation\nassert_eq!(dt.offset().fix().local_minus_utc(), 9 * 3600);\nassert_eq!(dt.timezone(), FixedOffset::east_opt(9 * 3600).unwrap());\nassert_eq!(dt.with_timezone(&Utc), NaiveDate::from_ymd_opt(2014, 11, 28).unwrap().and_hms_nano_opt(12, 45, 59, 324310806).unwrap().and_local_timezone(Utc).unwrap());\n\n// a sample of property manipulations (validates dynamically)\nassert_eq!(dt.with_day(29).unwrap().weekday(), Weekday::Sat); // 2014-11-29 is Saturday\nassert_eq!(dt.with_day(32), None);\nassert_eq!(dt.with_year(-300).unwrap().num_days_from_ce(), -109606); // November 29, 301 BCE\n\n// arithmetic operations\nlet dt1 = Utc.with_ymd_and_hms(2014, 11, 14, 8, 9, 10).unwrap();\nlet dt2 = Utc.with_ymd_and_hms(2014, 11, 14, 10, 9, 8).unwrap();\nassert_eq!(dt1.signed_duration_since(dt2), Duration::seconds(-2 * 3600 + 2));\nassert_eq!(dt2.signed_duration_since(dt1), Duration::seconds(2 * 3600 - 2));\nassert_eq!(Utc.with_ymd_and_hms(1970, 1, 1, 0, 0, 0).unwrap() + Duration::seconds(1_000_000_000),\n           Utc.with_ymd_and_hms(2001, 9, 9, 1, 46, 40).unwrap());\nassert_eq!(Utc.with_ymd_and_hms(1970, 1, 1, 0, 0, 0).unwrap() - Duration::seconds(1_000_000_000),\n           Utc.with_ymd_and_hms(1938, 4, 24, 22, 13, 20).unwrap());\n```\n\n### Formatting and Parsing\n\nFormatting is done via the [`format`](./struct.DateTime.html#method.format) method,\nwhich format is equivalent to the familiar `strftime` format.\n\nSee [`format::strftime`](./format/strftime/index.html#specifiers)\ndocumentation for full syntax and list of specifiers.\n\nThe default `to_string` method and `{:?}` specifier also give a reasonable representation.\nChrono also provides [`to_rfc2822`](./struct.DateTime.html#method.to_rfc2822) and\n[`to_rfc3339`](./struct.DateTime.html#method.to_rfc3339) methods\nfor well-known formats.\n\nChrono now also provides date formatting in almost any language without the\nhelp of an additional C library. This functionality is under the feature\n`unstable-locales`:\n\n```toml\nchrono = { version = \"0.4\", features = [\"unstable-locales\"] }\n```\n\nThe `unstable-locales` feature requires and implies at least the `alloc` feature.\n\n```rust\n# #[allow(unused_imports)]\nuse chrono::prelude::*;\n\n# #[cfg(all(feature = \"unstable-locales\", feature = \"alloc\"))]\n# fn test() {\nlet dt = Utc.with_ymd_and_hms(2014, 11, 28, 12, 0, 9).unwrap();\nassert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2014-11-28 12:00:09\");\nassert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), \"Fri Nov 28 12:00:09 2014\");\nassert_eq!(dt.format_localized(\"%A %e %B %Y, %T\", Locale::fr_BE).to_string(), \"vendredi 28 novembre 2014, 12:00:09\");\n\nassert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), dt.format(\"%c\").to_string());\nassert_eq!(dt.to_string(), \"2014-11-28 12:00:09 UTC\");\nassert_eq!(dt.to_rfc2822(), \"Fri, 28 Nov 2014 12:00:09 +0000\");\nassert_eq!(dt.to_rfc3339(), \"2014-11-28T12:00:09+00:00\");\nassert_eq!(format!(\"{:?}\", dt), \"2014-11-28T12:00:09Z\");\n\n// Note that milli/nanoseconds are only printed if they are non-zero\nlet dt_nano = NaiveDate::from_ymd_opt(2014, 11, 28).unwrap().and_hms_nano_opt(12, 0, 9, 1).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(format!(\"{:?}\", dt_nano), \"2014-11-28T12:00:09.000000001Z\");\n# }\n# #[cfg(not(all(feature = \"unstable-locales\", feature = \"alloc\")))]\n# fn test() {}\n# if cfg!(all(feature = \"unstable-locales\", feature = \"alloc\")) {\n#    test();\n# }\n```\n\nParsing can be done with three methods:\n\n1. The standard [`FromStr`](https://doc.rust-lang.org/std/str/trait.FromStr.html) trait\n   (and [`parse`](https://doc.rust-lang.org/std/primitive.str.html#method.parse) method\n   on a string) can be used for parsing `DateTime<FixedOffset>`, `DateTime<Utc>` and\n   `DateTime<Local>` values. This parses what the `{:?}`\n   ([`std::fmt::Debug`](https://doc.rust-lang.org/std/fmt/trait.Debug.html))\n   format specifier prints, and requires the offset to be present.\n\n2. [`DateTime::parse_from_str`](./struct.DateTime.html#method.parse_from_str) parses\n   a date and time with offsets and returns `DateTime<FixedOffset>`.\n   This should be used when the offset is a part of input and the caller cannot guess that.\n   It *cannot* be used when the offset can be missing.\n   [`DateTime::parse_from_rfc2822`](./struct.DateTime.html#method.parse_from_rfc2822)\n   and\n   [`DateTime::parse_from_rfc3339`](./struct.DateTime.html#method.parse_from_rfc3339)\n   are similar but for well-known formats.\n\n3. [`Offset::datetime_from_str`](./offset/trait.TimeZone.html#method.datetime_from_str) is\n   similar but returns `DateTime` of given offset.\n   When the explicit offset is missing from the input, it simply uses given offset.\n   It issues an error when the input contains an explicit offset different\n   from the current offset.\n\nMore detailed control over the parsing process is available via\n[`format`](./format/index.html) module.\n\n```rust\nuse chrono::prelude::*;\n\nlet dt = Utc.with_ymd_and_hms(2014, 11, 28, 12, 0, 9).unwrap();\nlet fixed_dt = dt.with_timezone(&FixedOffset::east_opt(9*3600).unwrap());\n\n// method 1\nassert_eq!(\"2014-11-28T12:00:09Z\".parse::<DateTime<Utc>>(), Ok(dt.clone()));\nassert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<Utc>>(), Ok(dt.clone()));\nassert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<FixedOffset>>(), Ok(fixed_dt.clone()));\n\n// method 2\nassert_eq!(DateTime::parse_from_str(\"2014-11-28 21:00:09 +09:00\", \"%Y-%m-%d %H:%M:%S %z\"),\n           Ok(fixed_dt.clone()));\nassert_eq!(DateTime::parse_from_rfc2822(\"Fri, 28 Nov 2014 21:00:09 +0900\"),\n           Ok(fixed_dt.clone()));\nassert_eq!(DateTime::parse_from_rfc3339(\"2014-11-28T21:00:09+09:00\"), Ok(fixed_dt.clone()));\n\n// oops, the year is missing!\nassert!(DateTime::parse_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T %Y\").is_err());\n// oops, the format string does not include the year at all!\nassert!(DateTime::parse_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T\").is_err());\n// oops, the weekday is incorrect!\nassert!(DateTime::parse_from_str(\"Sat Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\").is_err());\n```\n\nAgain : See [`format::strftime`](./format/strftime/index.html#specifiers)\ndocumentation for full syntax and list of specifiers.\n\n### Conversion from and to EPOCH timestamps\n\nUse [`DateTime::from_timestamp(seconds, nanoseconds)`](DateTime::from_timestamp)\nto construct a [`DateTime<Utc>`] from a UNIX timestamp\n(seconds, nanoseconds that passed since January 1st 1970).\n\nUse [`DateTime.timestamp`](DateTime::timestamp) to get the timestamp (in seconds)\nfrom a [`DateTime`]. Additionally, you can use\n[`DateTime.timestamp_subsec_nanos`](DateTime::timestamp_subsec_nanos)\nto get the number of additional number of nanoseconds.\n\n```rust\n// We need the trait in scope to use Utc::timestamp().\nuse chrono::{DateTime, Utc};\n\n// Construct a datetime from epoch:\nlet dt: DateTime<Utc> = DateTime::from_timestamp(1_500_000_000, 0).unwrap();\nassert_eq!(dt.to_rfc2822(), \"Fri, 14 Jul 2017 02:40:00 +0000\");\n\n// Get epoch value from a datetime:\nlet dt = DateTime::parse_from_rfc2822(\"Fri, 14 Jul 2017 02:40:00 +0000\").unwrap();\nassert_eq!(dt.timestamp(), 1_500_000_000);\n```\n\n### Naive date and time\n\nChrono provides naive counterparts to `Date`, (non-existent) `Time` and `DateTime`\nas [**`NaiveDate`**](./naive/struct.NaiveDate.html),\n[**`NaiveTime`**](./naive/struct.NaiveTime.html) and\n[**`NaiveDateTime`**](./naive/struct.NaiveDateTime.html) respectively.\n\nThey have almost equivalent interfaces as their timezone-aware twins,\nbut are not associated to time zones obviously and can be quite low-level.\nThey are mostly useful for building blocks for higher-level types.\n\nTimezone-aware `DateTime` and `Date` types have two methods returning naive versions:\n[`naive_local`](./struct.DateTime.html#method.naive_local) returns\na view to the naive local time,\nand [`naive_utc`](./struct.DateTime.html#method.naive_utc) returns\na view to the naive UTC time.\n\n## Limitations\n\nOnly the proleptic Gregorian calendar (i.e. extended to support older dates) is supported.\nDate types are limited to about +/- 262,000 years from the common epoch.\nTime types are limited to nanosecond accuracy.\nLeap seconds can be represented, but Chrono does not fully support them.\nSee [Leap Second Handling](https://docs.rs/chrono/latest/chrono/naive/struct.NaiveTime.html#leap-second-handling).\n\n## Rust version requirements\n\nThe Minimum Supported Rust Version (MSRV) is currently **Rust 1.61.0**.\n\nThe MSRV is explicitly tested in CI. It may be bumped in minor releases, but this is not done\nlightly.\n\nChrono inherently does not support an inaccurate or partial date and time representation.\nAny operation that can be ambiguous will return `None` in such cases.\nFor example, \"a month later\" of 2014-01-30 is not well-defined\nand consequently `Utc.ymd_opt(2014, 1, 30).unwrap().with_month(2)` returns `None`.\n\nNon ISO week handling is not yet supported.\nFor now you can use the [chrono_ext](https://crates.io/crates/chrono_ext)\ncrate ([sources](https://github.com/bcourtine/chrono-ext/)).\n\nAdvanced time zone handling is not yet supported.\nFor now you can try the [Chrono-tz](https://github.com/chronotope/chrono-tz/) crate instead.\n\n## Relation between chrono and time 0.1\n\nRust first had a `time` module added to `std` in its 0.7 release. It later moved to\n`libextra`, and then to a `libtime` library shipped alongside the standard library. In 2014\nwork on chrono started in order to provide a full-featured date and time library in Rust.\nSome improvements from chrono made it into the standard library; notably, `chrono::Duration`\nwas included as `std::time::Duration` ([rust#15934]) in 2014.\n\nIn preparation of Rust 1.0 at the end of 2014 `libtime` was moved out of the Rust distro and\ninto the `time` crate to eventually be redesigned ([rust#18832], [rust#18858]), like the\n`num` and `rand` crates. Of course chrono kept its dependency on this `time` crate. `time`\nstarted re-exporting `std::time::Duration` during this period. Later, the standard library was\nchanged to have a more limited unsigned `Duration` type ([rust#24920], [RFC 1040]), while the\n`time` crate kept the full functionality with `time::Duration`. `time::Duration` had been a\npart of chrono's public API.\n\nBy 2016 `time` 0.1 lived under the `rust-lang-deprecated` organisation and was not actively\nmaintained ([time#136]). chrono absorbed the platform functionality and `Duration` type of the\n`time` crate in [chrono#478] (the work started in [chrono#286]). In order to preserve\ncompatibility with downstream crates depending on `time` and `chrono` sharing a `Duration`\ntype, chrono kept depending on time 0.1. chrono offered the option to opt out of the `time`\ndependency by disabling the `oldtime` feature (swapping it out for an effectively similar\nchrono type). In 2019, @jhpratt took over maintenance on the `time` crate and released what\namounts to a new crate as `time` 0.2.\n\n[rust#15934]: https://github.com/rust-lang/rust/pull/15934\n[rust#18832]: https://github.com/rust-lang/rust/pull/18832#issuecomment-62448221\n[rust#18858]: https://github.com/rust-lang/rust/pull/18858\n[rust#24920]: https://github.com/rust-lang/rust/pull/24920\n[RFC 1040]: https://rust-lang.github.io/rfcs/1040-duration-reform.html\n[time#136]: https://github.com/time-rs/time/issues/136\n[chrono#286]: https://github.com/chronotope/chrono/pull/286\n[chrono#478]: https://github.com/chronotope/chrono/pull/478\n\n## Security advisories\n\nIn November of 2020 [CVE-2020-26235] and [RUSTSEC-2020-0071] were opened against the `time` crate.\n@quininer had found that calls to `localtime_r` may be unsound ([chrono#499]). Eventually, almost\na year later, this was also made into a security advisory against chrono as [RUSTSEC-2020-0159],\nwhich had platform code similar to `time`.\n\nOn Unix-like systems a process is given a timezone id or description via the `TZ` environment\nvariable. We need this timezone data to calculate the current local time from a value that is\nin UTC, such as the time from the system clock. `time` 0.1 and chrono used the POSIX function\n`localtime_r` to do the conversion to local time, which reads the `TZ` variable.\n\nRust assumes the environment to be writable and uses locks to access it from multiple threads.\nSome other programming languages and libraries use similar locking strategies, but these are\ntypically not shared across languages. More importantly, POSIX declares modifying the\nenvironment in a multi-threaded process as unsafe, and `getenv` in libc can't be changed to\ntake a lock because it returns a pointer to the data (see [rust#27970] for more discussion).\n\nSince version 4.20 chrono no longer uses `localtime_r`, instead using Rust code to query the\ntimezone (from the `TZ` variable or via `iana-time-zone` as a fallback) and work with data\nfrom the system timezone database directly. The code for this was forked from the [tz-rs crate]\nby @x-hgg-x. As such, chrono now respects the Rust lock when reading the `TZ` environment\nvariable. In general, code should avoid modifying the environment.\n\n[CVE-2020-26235]: https://nvd.nist.gov/vuln/detail/CVE-2020-26235\n[RUSTSEC-2020-0071]: https://rustsec.org/advisories/RUSTSEC-2020-0071\n[chrono#499]: https://github.com/chronotope/chrono/pull/499\n[RUSTSEC-2020-0159]: https://rustsec.org/advisories/RUSTSEC-2020-0159.html\n[rust#27970]: https://github.com/rust-lang/rust/issues/27970\n[chrono#677]: https://github.com/chronotope/chrono/pull/677\n[tz-rs crate]: https://crates.io/crates/tz-rs\n\n## Removing time 0.1\n\nBecause time 0.1 has been unmaintained for years, however, the security advisory mentioned\nabove has not been addressed. While chrono maintainers were careful not to break backwards\ncompatibility with the `time::Duration` type, there has been a long stream of issues from\nusers inquiring about the time 0.1 dependency with the vulnerability. We investigated the\npotential breakage of removing the time 0.1 dependency in [chrono#1095] using a crater-like\nexperiment and determined that the potential for breaking (public) dependencies is very low.\nWe reached out to those few crates that did still depend on compatibility with time 0.1.\n\nAs such, for chrono 0.4.30 we have decided to swap out the time 0.1 `Duration` implementation\nfor a local one that will offer a strict superset of the existing API going forward. This\nwill prevent most downstream users from being affected by the security vulnerability in time\n0.1 while minimizing the ecosystem impact of semver-incompatible version churn.\n\n[chrono#1095]: https://github.com/chronotope/chrono/pull/1095","links":{"DateTime::from_timestamp":"0:365:2995","`DateTime`":"0:2154:2153","DateTime::timestamp_subsec_nanos":"0:340:2903","`Duration`":"0:2112:129","`DateTime<Utc>`":"0:2154:2153","DateTime::timestamp":"0:333:2857"},"attrs":["#![doc(html_root_url = \"https://docs.rs/chrono/latest/\",\ntest(attr(deny(warnings))))]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![warn(unreachable_pub)]","#![deny(clippy::tests_outside_test_module)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:100:1180","0:553:737","0:954:2176","0:1553:1099","0:1968:2181","0:97-0:2112:129","0:98-0:2134:2146","0:267-0:2147:2148","0:269-0:150:2167","0:270-0:149:2168","0:549-0:2154:2153","0:551-0:324:2171","0:552-0:323:2172","0:951-0:2549:2174","0:952-0:931:2175","0:953-0:2170:2154","0:1546-0:2600:2177","0:1547-0:2620:2161","0:1548-0:2675:2162","0:1549-0:2746:2163","0:1551-0:2729:2178","0:1552-0:2595:2179","0:1961-0:3040:2149","0:1962-0:3060:2180","0:1964-0:2764:2159","0:1965-0:1932:2164","0:1966-0:1934:2165","0:1967-0:3047:2160","0:2010-0:1988:2182","0:2011-0:3091:2183","0:2012-0:1980:2152","0:2037-0:3143:2185","0:2038-0:3108:2158","0:2062-0:3226:2187","0:2064-0:3152:2156","0:2065-0:3206:2188","0:2101-0:2070:2155","0:2102-0:2089:2157","0:3235:2221"],"is_stripped":false}}},"b:2:3558-0:2154:2153":{"id":"b:2:3558-0:2154:2153","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1597:7296":{"id":"0:1597:7296","crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/fixed.rs","begin":[143,4],"end":[145,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2079:2184":{"id":"0:2079:2184","crate_id":0,"name":"weekday","span":{"filename":"src/traits.rs","begin":[78,4],"end":[78,33]},"visibility":"default","docs":"Returns the day of week.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1210:2864":{"id":"0:1210:2864","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/naive/datetime/mod.rs","begin":[464,4],"end":[467,5]},"visibility":"public","docs":"Returns the number of non-leap *milliseconds* since midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_milli_opt(0, 0, 1, 444).unwrap();\nassert_eq!(dt.timestamp_millis(), 1_444);\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_milli_opt(1, 46, 40, 555).unwrap();\nassert_eq!(dt.timestamp_millis(), 1_000_000_000_555);\n\nlet dt = NaiveDate::from_ymd_opt(1969, 12, 31).unwrap().and_hms_milli_opt(23, 59, 59, 100).unwrap();\nassert_eq!(dt.timestamp_millis(), -900);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2197:2747":{"id":"0:2197:2747","crate_id":0,"name":"year","span":{"filename":"src/format/parsed.rs","begin":[27,4],"end":[27,25]},"visibility":"public","docs":"Year.\n\nThis can be negative unlike [`year_div_100`](#structfield.year_div_100)\nand [`year_mod_100`](#structfield.year_mod_100) fields.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}}}},"0:1598:4031":{"id":"0:1598:4031","crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/fixed.rs","begin":[146,4],"end":[148,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:873":{"id":"0:873","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[178,0],"end":[198,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:875:1048"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2754-0:2196:2794":{"id":"b:2:2754-0:2196:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2349":{"id":"0:2349","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[156,20],"end":[156,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2350:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1604:725":{"id":"0:1604:725","crate_id":0,"name":"fmt","span":{"filename":"src/offset/fixed.rs","begin":[174,4],"end":[176,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5571:41761":{"id":"5:5571:41761","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:281:3299","`String`":"5:7571:250"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:3299","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:690:9598":{"id":"5:690:9598","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2441-0:2267:3310":{"id":"b:2:2441-0:2267:3310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2966:253-0:2147:2148":{"id":"a:2:2966:253-0:2147:2148","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2750:752":{"id":"2:2750:752","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1015:3987":{"id":"0:1015:3987","crate_id":0,"name":"from_yo_opt","span":{"filename":"src/naive/date.rs","begin":[341,4],"end":[344,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n(year and day of the year).\n\n# Errors\n\nReturns `None` if:\n- The specified ordinal day does not exist (for example 2023-366).\n- The value for `ordinal` is invalid (for example: `0`, `400`).\n- `year` is out of range for `NaiveDate`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet from_yo_opt = NaiveDate::from_yo_opt;\n\nassert!(from_yo_opt(2015, 100).is_some());\nassert!(from_yo_opt(2015, 0).is_none());\nassert!(from_yo_opt(2015, 365).is_some());\nassert!(from_yo_opt(2015, 366).is_none());\nassert!(from_yo_opt(-4, 366).is_some()); // 5 BCE is a leap year\nassert!(from_yo_opt(400000, 1).is_none());\nassert!(from_yo_opt(-400000, 1).is_none());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["year",{"primitive":"i32"}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2294:3337":{"id":"0:2294:3337","crate_id":0,"name":"IsoYear","span":{"filename":"src/format/mod.rs","begin":[111,4],"end":[111,11]},"visibility":"default","docs":"Year in the ISO week date (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2595:2179":{"id":"0:2595:2179","crate_id":0,"name":"NaiveWeek","span":{"filename":"src/naive/date.rs","begin":[40,0],"end":[43,1]},"visibility":"public","docs":"A week represented by a [`NaiveDate`] and a [`Weekday`] which is the first\nday of the week.","links":{"`NaiveDate`":"0:2620:2161","`Weekday`":"0:3108:2158"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:1000","a:2:42477:9166-0:2595:2179","a:2:2966:253-0:2595:2179","a:2:32825:244-0:2595:2179","a:2:32882:9016-0:2595:2179","a:2:42476:9167-0:2595:2179","b:2:2754-0:2595:2179","b:2:2744-0:2595:2179","b:2:2748-0:2595:2179","b:2:2441-0:2595:2179","b:2:2444-0:2595:2179","b:2:3558-0:2595:2179","b:2:2759-0:2595:2179","0:2598"]}}},"0:1121:1062":{"id":"0:1121:1062","crate_id":0,"name":"next","span":{"filename":"src/naive/date.rs","begin":[2104,4],"end":[2110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:8051:176","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3098":{"id":"0:3098","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[240,9],"end":[240,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3099:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2681":{"id":"0:2681","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[76,20],"end":[76,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:168:2691":{"id":"0:168:2691","crate_id":0,"name":"succ_opt","span":{"filename":"src/date.rs","begin":[217,4],"end":[219,5]},"visibility":"public","docs":"Makes a new `Date` for the next date.\n\nReturns `None` when `self` is the last representable date.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:170:2697":{"id":"0:170:2697","crate_id":0,"name":"pred","span":{"filename":"src/date.rs","begin":[227,4],"end":[229,5]},"visibility":"public","docs":"Makes a new `Date` for the prior date.\n\nPanics when `self` is the first representable date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use pred_opt() instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use pred_opt() instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2759-0:2409:3432":{"id":"b:2:2759-0:2409:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1951:2702":{"id":"0:1951:2702","crate_id":0,"name":"from_offset","span":{"filename":"src/offset/mod.rs","begin":[487,4],"end":[487,50]},"visibility":"default","docs":"Reconstructs the time zone from the offset.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["offset",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1934:2165","args":null}}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1897":{"id":"0:1897","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[55,0],"end":[114,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"now\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1898:2768","0:1899:1779"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1238:2394":{"id":"0:1238:2394","crate_id":0,"name":"MAX","span":{"filename":"src/naive/datetime/mod.rs","begin":[1077,4],"end":[1077,78]},"visibility":"public","docs":"The maximum possible `NaiveDateTime`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:3195":{"id":"0:3195","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,30],"end":[31,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3196:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1281:301":{"id":"0:1281:301","crate_id":0,"name":"add","span":{"filename":"src/naive/datetime/mod.rs","begin":[1659,4],"end":[1661,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2010-0:1988:2182":{"id":"0:2010-0:1988:2182","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[545,16],"end":[545,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"round::DurationRound","name":"DurationRound","id":"0:1988:2182","glob":false}}},"0:337:2879":{"id":"0:337:2879","crate_id":0,"name":"timestamp_nanos_opt","span":{"filename":"src/datetime/mod.rs","begin":[293,4],"end":[295,5]},"visibility":"public","docs":"Returns the number of non-leap-nanoseconds since January 1, 1970 UTC.\n\n# Errors\n\nAn `i64` with nanosecond precision can span a range of ~584 years. This function returns\n`None` on an out of range `DateTime`.\n\nThe dates that can be represented as nanoseconds are between 1677-09-21T00:12:43.145224192\nand 2262-04-11T23:47:16.854775807.\n\n# Example\n\n```\nuse chrono::{Utc, NaiveDate};\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_nano_opt(0, 0, 1, 444).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_nanos_opt(), Some(1_000_000_444));\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_nano_opt(1, 46, 40, 555).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_nanos_opt(), Some(1_000_000_000_000_000_555));\n\nlet dt = NaiveDate::from_ymd_opt(1677, 9, 21).unwrap().and_hms_nano_opt(0, 12, 43, 145_224_192).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_nanos_opt(), Some(-9_223_372_036_854_775_808));\n\nlet dt = NaiveDate::from_ymd_opt(2262, 4, 11).unwrap().and_hms_nano_opt(23, 47, 16, 854_775_807).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_nanos_opt(), Some(9_223_372_036_854_775_807));\n\nlet dt = NaiveDate::from_ymd_opt(1677, 9, 21).unwrap().and_hms_nano_opt(0, 12, 43, 145_224_191).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_nanos_opt(), None);\n\nlet dt = NaiveDate::from_ymd_opt(2262, 4, 11).unwrap().and_hms_nano_opt(23, 47, 16, 854_775_808).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_nanos_opt(), None);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1247:2750":{"id":"0:1247:2750","crate_id":0,"name":"day0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1190,4],"end":[1192,5]},"visibility":"default","docs":"Returns the day of month starting from 0.\n\nThe return value ranges from 0 to 30. (The last day of month differs by months.)\n\nSee also the [`NaiveDate::day0`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.day0(), 24);\n```","links":{"`NaiveDate::day0`":"0:1079:2750"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2341:789":{"id":"0:2341:789","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[100,38],"end":[100,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42477:9166-0:2620:2161":{"id":"a:2:42477:9166-0:2620:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:227":{"id":"0:227","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[472,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:230:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32882:9016-0:3060:2180":{"id":"a:2:32882:9016-0:3060:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1495":{"id":"0:1495","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1208,0],"end":[1213,1]},"visibility":"default","docs":"Add-assign `std::time::Duration` to `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the addition ignores integral number of days.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:33908:2348","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1496:302"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2221":{"id":"0:2221","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[21,16],"end":[21,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2222:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1452:6885":{"id":"0:1452:6885","crate_id":0,"name":"from_hms_nano","span":{"filename":"src/naive/time/mod.rs","begin":[391,4],"end":[393,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and nanosecond.\n\nThe nanosecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `sec == 59`.\n\n# Panics\n\nPanics on invalid hour, minute, second and/or nanosecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_hms_nano_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_hms_nano_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2966:253-0:2444:3447":{"id":"a:2:2966:253-0:2444:3447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2017:2690":{"id":"0:2017:2690","crate_id":0,"name":"succ","span":{"filename":"src/weekday.rs","begin":[67,4],"end":[77,5]},"visibility":"public","docs":"The next day in the week.\n\n`w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.succ()`: | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun` | `Mon`","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2108:725":{"id":"0:2108:725","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[616,4],"end":[618,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1081:2752":{"id":"0:1081:2752","crate_id":0,"name":"ordinal0","span":{"filename":"src/naive/date.rs","begin":[1655,4],"end":[1657,5]},"visibility":"default","docs":"Returns the day of year starting from 0.\n\nThe return value ranges from 0 to 365. (The last day of year differs by years.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().ordinal0(), 250);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().ordinal0(), 73);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1957:7296":{"id":"0:1957:7296","crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/mod.rs","begin":[530,4],"end":[530,68]},"visibility":"default","docs":"Creates the offset for given UTC `NaiveDate`. This cannot fail.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1934:2165","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1962-0:3060:2180":{"id":"0:1962-0:3060:2180","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[540,0],"end":[540,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"offset::LocalResult","name":"LocalResult","id":"0:3060:2180","glob":false}}},"b:5:687-0:2154:2153":{"id":"b:5:687-0:2154:2153","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:880:1062":{"id":"0:880:1062","crate_id":0,"name":"next","span":{"filename":"src/format/strftime.rs","begin":[205,4],"end":[224,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12988:36501":{"id":"2:12988:36501","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40309:36508","Self::is_ascii":"2:12987:34274"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40309:36508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:92":{"id":"0:92","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[490,0],"end":[494,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:93:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2605":{"id":"0:2605","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[133,16],"end":[133,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12881:36584":{"id":"2:12881:36584","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10651:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10651:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:913-0:603:737":{"id":"0:913-0:603:737","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[64,21],"end":[64,27]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"formatting::format","name":"format","id":"0:603:737","glob":false}}},"0:2121":{"id":"0:2121","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,31],"end":[53,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2122:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:369":{"id":"0:369","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[670,0],"end":[674,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2795:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:370:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:108-0:2070:2155":{"id":"0:108-0:2070:2155","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[504,20],"end":[504,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::Datelike","name":"Datelike","id":"0:2070:2155","glob":false}}},"0:1114":{"id":"0:1114","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2080,0],"end":[2087,1]},"visibility":"default","docs":"Subtracts another `NaiveDate` from the current date.\nReturns a `Duration` of integral numbers.\n\nThis does not overflow or underflow at all,\nas all possible output fits in the range of `Duration`.\n\nThe implementation is a wrapper around\n[`NaiveDate::signed_duration_since`](#method.signed_duration_since).\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2014, 1, 1), Duration::zero());\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2013, 12, 31), Duration::days(1));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2014, 1, 2), Duration::days(-1));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2013, 9, 23), Duration::days(100));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2013, 1, 1), Duration::days(365));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2010, 1, 1), Duration::days(365*4 + 1));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(1614, 1, 1), Duration::days(365*400 + 97));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1115:206","0:1116:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2008:2511":{"id":"0:2008:2511","crate_id":0,"name":"description","span":{"filename":"src/round.rs","begin":[298,4],"end":[300,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2226:725":{"id":"0:2226:725","crate_id":0,"name":"fmt","span":{"filename":"src/format/parsed.rs","begin":[21,31],"end":[21,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2401:668":{"id":"0:2401:668","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[171,16],"end":[171,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2748-0:2549:2174":{"id":"b:2:2748-0:2549:2174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32825:244-0:2595:2179":{"id":"a:2:32825:244-0:2595:2179","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2595:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42476:9167-0:2287:3327":{"id":"a:2:42476:9167-0:2287:3327","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1294:301":{"id":"0:1294:301","crate_id":0,"name":"add","span":{"filename":"src/naive/datetime/mod.rs","begin":[1777,4],"end":[1779,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3012:2347","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2499:461":{"id":"0:2499:461","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[314,22],"end":[314,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1922":{"id":"0:1922","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[93,0],"end":[189,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:1924:2643","0:1925:2656","0:1926:2666","0:1927:2675","0:1928:2684"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1941:5838":{"id":"0:1941:5838","crate_id":0,"name":"yo_opt","span":{"filename":"src/offset/mod.rs","begin":[299,4],"end":[304,5]},"visibility":"default","docs":"Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date and/or invalid DOY.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_local_datetime()` with a `NaiveDateTime` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` with a `NaiveDateTime` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3104:668":{"id":"0:3104:668","crate_id":0,"name":"eq","span":{"filename":"src/round.rs","begin":[240,23],"end":[240,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2082:2755":{"id":"0:2082:2755","crate_id":0,"name":"with_month","span":{"filename":"src/traits.rs","begin":[164,4],"end":[164,53]},"visibility":"default","docs":"Makes a new value with the month number (starting from 1) changed.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (for example `month(4)` when day of the month is 31).\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n- The value for `month` is out of range.\n\n[`DateTime<Tz>`]: crate::DateTime\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2023, 5, 12).unwrap().with_month(9).unwrap(),\n    NaiveDate::from_ymd_opt(2023, 9, 12).unwrap()\n);\n// Resulting date 2023-09-31 does not exist:\nassert!(NaiveDate::from_ymd_opt(2023, 5, 31).unwrap().with_month(9).is_none());\n```\n\nDon't combine multiple `Datelike::with_*` methods. The intermediate value may not exist.\n```\nuse chrono::{NaiveDate, Datelike};\n\nfn with_year_month(date: NaiveDate, year: i32, month: u32) -> Option<NaiveDate> {\n    date.with_year(year)?.with_month(month)\n}\nlet d = NaiveDate::from_ymd_opt(2020, 2, 29).unwrap();\nassert!(with_year_month(d, 2019, 1).is_none()); // fails because of invalid intermediate value\n\n// Correct version:\nfn with_year_month_fixed(date: NaiveDate, year: i32, month: u32) -> Option<NaiveDate> {\n    NaiveDate::from_ymd_opt(year, month, date.day())\n}\nlet d = NaiveDate::from_ymd_opt(2020, 2, 29).unwrap();\nassert_eq!(with_year_month_fixed(d, 2019, 1), NaiveDate::from_ymd_opt(2019, 1, 29));\n```","links":{"crate::DateTime":"0:2154:2153"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1952:7287":{"id":"0:1952:7287","crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/mod.rs","begin":[490,4],"end":[490,85]},"visibility":"default","docs":"Creates the offset(s) for given local `NaiveDate` if possible.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1934:2165","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2748-0:2729:2178":{"id":"b:2:2748-0:2729:2178","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2227":{"id":"0:2227","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[21,38],"end":[21,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2795:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2228:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:553:737":{"id":"0:553:737","crate_id":0,"name":"format","span":{"filename":"src/format/mod.rs","begin":[4,0],"end":[536,1]},"visibility":"public","docs":"Formatting (and parsing) utilities for date and time.\n\nThis module provides the common types and routines to implement,\nfor example, [`DateTime::format`](../struct.DateTime.html#method.format) or\n[`DateTime::parse_from_str`](../struct.DateTime.html#method.parse_from_str) methods.\nFor most cases you should use these high-level interfaces.\n\nInternally the formatting and parsing shares the same abstract **formatting items**,\nwhich are just an [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) of\nthe [`Item`](./enum.Item.html) type.\nThey are generated from more readable **format strings**;\ncurrently Chrono supports a built-in syntax closely resembling\nC's `strftime` format. The available options can be found [here](./strftime/index.html).\n\n# Example\n```rust\nuse chrono::{NaiveDateTime, TimeZone, Utc};\n\nlet date_time = Utc.with_ymd_and_hms(2020, 11, 10, 0, 1, 32).unwrap();\n\nlet formatted = format!(\"{}\", date_time.format(\"%Y-%m-%d %H:%M:%S\"));\nassert_eq!(formatted, \"2020-11-10 00:01:32\");\n\nlet parsed = NaiveDateTime::parse_from_str(&formatted, \"%Y-%m-%d %H:%M:%S\")?.and_utc();\nassert_eq!(parsed, date_time);\n# Ok::<(), chrono::ParseError>(())\n```","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:860:3302","0:911-0:2170:2154","0:913-0:603:737","0:914-0:607:3306","0:915-0:2161:2604","0:918-0:774:2790","0:919-0:780:2791","0:920-0:2196:2794","0:921-0:2234:2605","0:2267:3310","0:2287:3327","0:2343:3375","0:2355:2793","0:2409:3432","0:2444:3447","0:2462:3450","0:2488:3453","0:2508:171","0:2549:2174","0:2565:3498","0:931:2175"],"is_stripped":false}}},"0:3103":{"id":"0:3103","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[240,23],"end":[240,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3104:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2748-0:2112:129":{"id":"b:2:2748-0:2112:129","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:36:2413":{"id":"0:36:2413","crate_id":0,"name":"try_hours","span":{"filename":"src/duration.rs","begin":[126,4],"end":[128,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nReturns `None` when the duration is out of bounds.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["hours",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1211:2870":{"id":"0:1211:2870","crate_id":0,"name":"timestamp_micros","span":{"filename":"src/naive/datetime/mod.rs","begin":[487,4],"end":[490,5]},"visibility":"public","docs":"Returns the number of non-leap *microseconds* since midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_micro_opt(0, 0, 1, 444).unwrap();\nassert_eq!(dt.timestamp_micros(), 1_000_444);\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_micro_opt(1, 46, 40, 555).unwrap();\nassert_eq!(dt.timestamp_micros(), 1_000_000_000_000_555);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3109:3598":{"id":"0:3109:3598","crate_id":0,"name":"Mon","span":{"filename":"src/weekday.rs","begin":[44,4],"end":[44,11]},"visibility":"default","docs":"Monday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"0","value":"0"}}}},"b:2:2754-0:2729:2178":{"id":"b:2:2754-0:2729:2178","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:538":{"id":"0:538","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1611,0],"end":[1617,1]},"visibility":"default","docs":"Accepts a relaxed form of RFC3339.\nA space or a 'T' are accepted as the separator between the date and time\nparts.\n\nAll of these examples are equivalent:\n```\n# use chrono::{DateTime, Local};\n\"2012-12-12T12:12:12Z\".parse::<DateTime<Local>>()?;\n\"2012-12-12 12:12:12Z\".parse::<DateTime<Local>>()?;\n\"2012-12-12 12:12:12+0000\".parse::<DateTime<Local>>()?;\n\"2012-12-12 12:12:12+00:00\".parse::<DateTime<Local>>()?;\n# Ok::<(), chrono::ParseError>(())\n```","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12518:3218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:539:134","0:540:3219"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2421:789":{"id":"0:2421:789","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[255,38],"end":[255,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[441,0],"end":[445,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sum","id":"2:7863:2487","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:87:2488"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1136:725":{"id":"0:1136:725","crate_id":0,"name":"fmt","span":{"filename":"src/naive/date.rs","begin":[2187,4],"end":[2204,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3062:198":{"id":"0:3062:198","crate_id":0,"name":"None","span":{"filename":"src/offset/mod.rs","begin":[45,4],"end":[45,8]},"visibility":"default","docs":"Given local time representation is invalid.\nThis can occur when, for example, the positive timezone transition.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2083:2756":{"id":"0:2083:2756","crate_id":0,"name":"with_month0","span":{"filename":"src/traits.rs","begin":[178,4],"end":[178,55]},"visibility":"default","docs":"Makes a new value with the month number (starting from 0) changed.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (for example `month0(3)` when day of the month is 31).\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n- The value for `month0` is out of range.\n\n[`DateTime<Tz>`]: crate::DateTime","links":{"crate::DateTime":"0:2154:2153"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:2200:3882":{"id":"0:2200:3882","crate_id":0,"name":"isoyear","span":{"filename":"src/format/parsed.rs","begin":[43,4],"end":[43,28]},"visibility":"public","docs":"Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date).\n\nThis can be negative unlike [`isoyear_div_100`](#structfield.isoyear_div_100) and\n[`isoyear_mod_100`](#structfield.isoyear_mod_100) fields.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}}}},"0:1063:5535":{"id":"0:1063:5535","crate_id":0,"name":"leap_year","span":{"filename":"src/naive/date.rs","begin":[1432,4],"end":[1434,5]},"visibility":"public","docs":"Returns `true` if this is a leap year.\n\n```\n# use chrono::NaiveDate;\nassert_eq!(NaiveDate::from_ymd_opt(2000, 1, 1).unwrap().leap_year(), true);\nassert_eq!(NaiveDate::from_ymd_opt(2001, 1, 1).unwrap().leap_year(), false);\nassert_eq!(NaiveDate::from_ymd_opt(2002, 1, 1).unwrap().leap_year(), false);\nassert_eq!(NaiveDate::from_ymd_opt(2003, 1, 1).unwrap().leap_year(), false);\nassert_eq!(NaiveDate::from_ymd_opt(2004, 1, 1).unwrap().leap_year(), true);\nassert_eq!(NaiveDate::from_ymd_opt(2100, 1, 1).unwrap().leap_year(), false);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12917:33500":{"id":"2:12917:33500","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12558:8766","`DoubleEndedIterator`":"2:7942:128","prim@char":"1:12055:457","str::split_whitespace":"2:12895:38560","str::rsplit":"2:12923:36616"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:44239:8799","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2129":{"id":"0:2129","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,63],"end":[53,68]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2130:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2127":{"id":"0:2127","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,58],"end":[53,61]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2540:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2128:468"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:259:206":{"id":"0:259:206","crate_id":0,"name":"Output","span":{"filename":"src/date.rs","begin":[531,4],"end":[531,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2160:461":{"id":"0:2160:461","crate_id":0,"name":"clone","span":{"filename":"src/datetime/mod.rs","begin":[52,9],"end":[52,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2268:198":{"id":"0:2268:198","crate_id":0,"name":"None","span":{"filename":"src/format/mod.rs","begin":[80,4],"end":[80,8]},"visibility":"default","docs":"No padding.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2488:3453":{"id":"0:2488:3453","crate_id":0,"name":"Colons","span":{"filename":"src/format/mod.rs","begin":[315,0],"end":[322,1]},"visibility":"public","docs":"The separator between hours and minutes in an offset.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2489:198","0:2491:3477","0:2493:3479"],"impls":["a:2:42477:9166-0:2488:3453","a:2:2966:253-0:2488:3453","a:2:32825:244-0:2488:3453","a:2:32882:9016-0:2488:3453","a:2:42476:9167-0:2488:3453","b:2:2754-0:2488:3453","b:2:2744-0:2488:3453","b:2:2748-0:2488:3453","b:2:2441-0:2488:3453","b:2:2444-0:2488:3453","b:2:3558-0:2488:3453","b:2:2759-0:2488:3453","b:5:687-0:2488:3453","0:2495","0:2505","0:2503","0:2501","0:2498","0:2497","0:2500"]}}},"0:2243:725":{"id":"0:2243:725","crate_id":0,"name":"fmt","span":{"filename":"src/format/strftime.rs","begin":[165,16],"end":[165,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1144":{"id":"0:1144","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2282,0],"end":[2286,1]},"visibility":"default","docs":"The default value for a NaiveDate is 1st of January 1970.\n\n# Example\n\n```rust\nuse chrono::NaiveDate;\n\nlet default_date = NaiveDate::default();\nassert_eq!(default_date, NaiveDate::from_ymd_opt(1970, 1, 1).unwrap());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2795:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1145:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1228:2733":{"id":"0:1228:2733","crate_id":0,"name":"format_with_items","span":{"filename":"src/naive/datetime/mod.rs","begin":[986,4],"end":[992,5]},"visibility":"public","docs":"Formats the combined date and time with the specified formatting items.\nOtherwise it is the same as the ordinary [`format`](#method.format) method.\n\nThe `Iterator` of items should be `Clone`able,\nsince the resulting `DelayedFormat` value may be formatted multiple times.\n\n# Example\n\n```\nuse chrono::NaiveDate;\nuse chrono::format::strftime::StrftimeItems;\n\nlet fmt = StrftimeItems::new(\"%Y-%m-%d %H:%M:%S\");\nlet dt = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(dt.format_with_items(fmt.clone()).to_string(), \"2015-09-05 23:56:04\");\nassert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(),    \"2015-09-05 23:56:04\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# use chrono::format::strftime::StrftimeItems;\n# let fmt = StrftimeItems::new(\"%Y-%m-%d %H:%M:%S\").clone();\n# let dt = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(format!(\"{}\", dt.format_with_items(fmt)), \"2015-09-05 23:56:04\");\n```","links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8051:176","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2767":{"id":"0:2767","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[22,9],"end":[22,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2768:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2966:253-0:3040:2149":{"id":"a:2:2966:253-0:3040:2149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2060":{"id":"0:2060","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[259,0],"end":[263,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2061:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2585:461":{"id":"0:2585:461","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[379,16],"end":[379,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2045:8377":{"id":"0:2045:8377","crate_id":0,"name":"number_from_month","span":{"filename":"src/month.rs","begin":[124,4],"end":[139,5]},"visibility":"public","docs":"Returns a month-of-year number starting from January = 1.\n\n`m`:                     | `January` | `February` | `...` | `December`\n-------------------------| --------- | ---------- | --- | -----\n`m.number_from_month()`: | 1         | 2          | `...` | 12","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2131":{"id":"0:2131","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,70],"end":[53,74]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2132:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:257":{"id":"0:257","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[530,0],"end":[537,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:259:206","0:260:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2454":{"id":"0:2454","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[280,29],"end":[280,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2452":{"id":"0:2452","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[280,22],"end":[280,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2453:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2444-0:2675:2162":{"id":"b:2:2444-0:2675:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32825:244-0:3235:2221":{"id":"a:2:32825:244-0:3235:2221","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2206:2210":{"id":"0:2206:2210","crate_id":0,"name":"isoweek","span":{"filename":"src/format/parsed.rs","begin":[70,4],"end":[70,28]},"visibility":"public","docs":"[ISO week number](../naive/struct.NaiveDate.html#week-date)\n(1--52 or 1--53 depending on the year).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"b:2:2754-0:2234:2605":{"id":"b:2:2754-0:2234:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42477:9166-0:2154:2153":{"id":"a:2:42477:9166-0:2154:2153","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5828-0:2112:129":{"id":"b:5:5828-0:2112:129","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5826:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5830:1605"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2444-0:2462:3450":{"id":"b:2:2444-0:2462:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:47:2443":{"id":"0:47:2443","crate_id":0,"name":"num_minutes","span":{"filename":"src/duration.rs","begin":[210,4],"end":[212,5]},"visibility":"public","docs":"Returns the total number of whole minutes in the duration.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2362:3391":{"id":"0:2362:3391","crate_id":0,"name":"LongWeekdayName","span":{"filename":"src/format/mod.rs","begin":[188,4],"end":[188,19]},"visibility":"default","docs":"Full day of the week names.\n\nPrints a full name in the title case, reads either a short or full name in any case.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2370:3401":{"id":"0:2370:3401","crate_id":0,"name":"Nanosecond3","span":{"filename":"src/format/mod.rs","begin":[202,4],"end":[202,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2667":{"id":"0:2667","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2132,35],"end":[2132,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2668:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1903:7287":{"id":"0:1903:7287","crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/utc.rs","begin":[123,4],"end":[125,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42477:9166-0:2287:3327":{"id":"a:2:42477:9166-0:2287:3327","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1014:5227":{"id":"0:1014:5227","crate_id":0,"name":"from_yo","span":{"filename":"src/naive/date.rs","begin":[311,4],"end":[313,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n(year and day of the year).\n\n# Panics\n\nPanics if the specified ordinal day does not exist, on invalid values for `ordinal`, or if\n`year` is out of range for `NaiveDate`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_yo_opt()` instead\")]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_yo_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["year",{"primitive":"i32"}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2071:2747":{"id":"0:2071:2747","crate_id":0,"name":"year","span":{"filename":"src/traits.rs","begin":[33,4],"end":[33,26]},"visibility":"default","docs":"Returns the year number in the [calendar date](./naive/struct.NaiveDate.html#calendar-date).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1594:2702":{"id":"0:1594:2702","crate_id":0,"name":"from_offset","span":{"filename":"src/offset/fixed.rs","begin":[132,4],"end":[134,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["offset",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3235:2221":{"id":"0:3235:2221","crate_id":0,"name":"OutOfRange","span":{"filename":"src/lib.rs","begin":[599,0],"end":[601,1]},"visibility":"public","docs":"Out of range error type used in various converting APIs","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42477:9166-0:3235:2221","a:2:2966:253-0:3235:2221","a:2:32825:244-0:3235:2221","a:2:32882:9016-0:3235:2221","a:2:42476:9167-0:3235:2221","b:2:2754-0:3235:2221","b:2:2744-0:3235:2221","b:2:2748-0:3235:2221","b:2:2441-0:3235:2221","b:2:2444-0:3235:2221","b:2:3558-0:3235:2221","b:2:2759-0:3235:2221","b:5:687-0:3235:2221","b:5:5828-0:3235:2221","0:3237","0:2107","0:3244","0:3243","0:3239","0:3246","0:2109","0:2105","0:3240"]}}},"b:5:687-0:2343:3375":{"id":"b:5:687-0:2343:3375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2143":{"id":"0:2143","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[487,29],"end":[487,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2144:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2966:253-0:2729:2178":{"id":"a:2:2966:253-0:2729:2178","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1236:2998":{"id":"0:1236:2998","crate_id":0,"name":"and_utc","span":{"filename":"src/naive/datetime/mod.rs","begin":[1068,4],"end":[1071,5]},"visibility":"public","docs":"Converts the `NaiveDateTime` into the timezone-aware `DateTime<Utc>`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Utc};\nlet dt = NaiveDate::from_ymd_opt(2023, 1, 30).unwrap().and_hms_opt(19, 32, 33).unwrap().and_utc();\nassert_eq!(dt.timezone(), Utc);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3168:3561":{"id":"0:3168:3561","crate_id":0,"name":"June","span":{"filename":"src/month.rs","begin":[53,4],"end":[53,12]},"visibility":"default","docs":"June","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"5","value":"5"}}}},"0:489:301":{"id":"0:489:301","crate_id":0,"name":"add","span":{"filename":"src/datetime/mod.rs","begin":[1354,4],"end":[1356,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3012:2347","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2444-0:3108:2158":{"id":"b:2:2444-0:3108:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:73":{"id":"0:73","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[396,0],"end":[401,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:33967:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:74:1566"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:174:2646":{"id":"0:174:2646","crate_id":0,"name":"timezone","span":{"filename":"src/date.rs","begin":[250,4],"end":[252,5]},"visibility":"public","docs":"Retrieves an associated time zone.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Tz"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2591":{"id":"0:2591","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[379,38],"end":[379,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2444-0:2112:129":{"id":"b:2:2444-0:2112:129","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:484:206":{"id":"0:484:206","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1328,4],"end":[1328,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"b:2:2759-0:2764:2159":{"id":"b:2:2759-0:2764:2159","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1942:7241":{"id":"0:1942:7241","crate_id":0,"name":"isoywd","span":{"filename":"src/offset/mod.rs","begin":[320,4],"end":[322,5]},"visibility":"default","docs":"Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date and/or invalid week number.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_local_datetime()` with a `NaiveDateTime` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` with a `NaiveDateTime` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["week",{"primitive":"u32"}],["weekday",{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:58:2468":{"id":"0:58:2468","crate_id":0,"name":"zero","span":{"filename":"src/duration.rs","begin":[322,4],"end":[324,5]},"visibility":"public","docs":"A duration where the stored seconds and nanoseconds are equal to zero.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:494":{"id":"0:494","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1390,0],"end":[1399,1]},"visibility":"default","docs":"Subtract `std::time::Duration` from `DateTime`.\n\nAs a part of Chrono's [leap second handling] the subtraction assumes that **there is no leap\nsecond ever**, except when the `DateTime` itself represents a leap second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`DateTime<Tz>::checked_sub_signed`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_sub_signed`":"0:349:2713"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:496:206","0:497:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1082:2184":{"id":"0:1082:2184","crate_id":0,"name":"weekday","span":{"filename":"src/naive/date.rs","begin":[1670,4],"end":[1672,5]},"visibility":"default","docs":"Returns the day of week.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().weekday(), Weekday::Tue);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().weekday(), Weekday::Fri);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2966:253-0:3091:2183":{"id":"a:2:2966:253-0:3091:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3196:461":{"id":"0:3196:461","crate_id":0,"name":"clone","span":{"filename":"src/month.rs","begin":[31,30],"end":[31,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2628:789":{"id":"0:2628:789","crate_id":0,"name":"hash","span":{"filename":"src/naive/date.rs","begin":[191,24],"end":[191,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3241:789":{"id":"0:3241:789","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[598,22],"end":[598,26]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1482:3138":{"id":"0:1482:3138","crate_id":0,"name":"with_hour","span":{"filename":"src/naive/time/mod.rs","begin":[996,4],"end":[1002,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with the hour number changed.\n\n# Errors\n\nReturns `None` if the value for `hour` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(dt.with_hour(7), Some(NaiveTime::from_hms_nano_opt(7, 56, 4, 12_345_678).unwrap()));\nassert_eq!(dt.with_hour(24), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:530:725":{"id":"0:530:725","crate_id":0,"name":"fmt","span":{"filename":"src/datetime/mod.rs","begin":[1534,4],"end":[1537,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2441-0:2287:3327":{"id":"b:2:2441-0:2287:3327","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2759-0:2196:2794":{"id":"b:2:2759-0:2196:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42477:9166-0:2462:3450":{"id":"a:2:42477:9166-0:2462:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2639":{"id":"0:2639","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2096,9],"end":[2096,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2640:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:382:752":{"id":"0:382:752","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[729,4],"end":[731,5]},"visibility":"default","docs":"Convert this `DateTime<FixedOffset>` instance into a `DateTime<Local>` instance.\n\nConversion is performed via [`DateTime::with_timezone`]. Returns the equivalent value in local\ntime.","links":{"`DateTime::with_timezone`":"0:343:2705"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32882:9016-0:3047:2160":{"id":"a:2:32882:9016-0:3047:2160","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1481:3134":{"id":"0:1481:3134","crate_id":0,"name":"nanosecond","span":{"filename":"src/naive/time/mod.rs","begin":[976,4],"end":[978,5]},"visibility":"default","docs":"Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](#leap-second-handling).\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(0, 0, 0).unwrap().nanosecond(), 0);\nassert_eq!(NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().nanosecond(), 12_345_678);\n```\n\nLeap seconds may have seemingly out-of-range return values.\nYou can reduce the range with `time.nanosecond() % 1_000_000_000`, or\nuse the proper [formatting method](#method.format) to get a human-readable representation.\n\n```\n# use chrono::{NaiveTime, Timelike};\nlet leap = NaiveTime::from_hms_milli_opt(23, 59, 59, 1_000).unwrap();\nassert_eq!(leap.nanosecond(), 1_000_000_000);\nassert_eq!(leap.format(\"%H:%M:%S%.9f\").to_string(), \"23:59:60.000000000\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1054:2733":{"id":"0:1054:2733","crate_id":0,"name":"format_with_items","span":{"filename":"src/naive/date.rs","begin":[1274,4],"end":[1280,5]},"visibility":"public","docs":"Formats the date with the specified formatting items.\nOtherwise it is the same as the ordinary `format` method.\n\nThe `Iterator` of items should be `Clone`able,\nsince the resulting `DelayedFormat` value may be formatted multiple times.\n\n# Example\n\n```\nuse chrono::NaiveDate;\nuse chrono::format::strftime::StrftimeItems;\n\nlet fmt = StrftimeItems::new(\"%Y-%m-%d\");\nlet d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(d.format_with_items(fmt.clone()).to_string(), \"2015-09-05\");\nassert_eq!(d.format(\"%Y-%m-%d\").to_string(),             \"2015-09-05\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# use chrono::format::strftime::StrftimeItems;\n# let fmt = StrftimeItems::new(\"%Y-%m-%d\").clone();\n# let d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(format!(\"{}\", d.format_with_items(fmt)), \"2015-09-05\");\n```","links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8051:176","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42476:9167-0:2656:5110":{"id":"a:2:42476:9167-0:2656:5110","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2019:3603":{"id":"0:2019:3603","crate_id":0,"name":"number_from_monday","span":{"filename":"src/weekday.rs","begin":[104,4],"end":[106,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)\n\n`w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.number_from_monday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 7","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2748-0:2343:3375":{"id":"b:2:2748-0:2343:3375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:350:2927":{"id":"0:350:2927","crate_id":0,"name":"checked_sub_months","span":{"filename":"src/datetime/mod.rs","begin":[422,4],"end":[427,5]},"visibility":"public","docs":"Subtracts given `Months` from the current date and time.\n\nUses the last day of the month if the day does not exist in the resulting month.\n\nSee [`NaiveDate::checked_sub_months`] for more details on behavior.\n\n# Errors\n\nReturns `None` if:\n- The resulting date would be out of range.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::checked_sub_months`":"0:1027:2927"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2503":{"id":"0:2503","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[314,40],"end":[314,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2501":{"id":"0:2501","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[314,29],"end":[314,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2502:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2213:3133":{"id":"0:2213:3133","crate_id":0,"name":"second","span":{"filename":"src/format/parsed.rs","begin":[91,4],"end":[91,27]},"visibility":"public","docs":"Second number (0--60, accounting for leap seconds).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"b:2:2441-0:2565:3498":{"id":"b:2:2441-0:2565:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:154:2643":{"id":"0:154:2643","crate_id":0,"name":"and_time","span":{"filename":"src/date.rs","begin":[89,4],"end":[92,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid datetime.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["time",{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12888:36608":{"id":"2:12888:36608","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12887:36607","str::split_at_mut_checked":"2:12890:36612"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:2134:2146":{"id":"b:2:2754-0:2134:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2559":{"id":"0:2559","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[367,34],"end":[367,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2557":{"id":"0:2557","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[367,23],"end":[367,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2558:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:76:206":{"id":"0:76:206","crate_id":0,"name":"Output","span":{"filename":"src/duration.rs","begin":[404,4],"end":[404,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1101:206":{"id":"0:1101:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1966,4],"end":[1966,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2314:3355":{"id":"0:2314:3355","crate_id":0,"name":"Ordinal","span":{"filename":"src/format/mod.rs","begin":[131,4],"end":[131,11]},"visibility":"default","docs":"Day of the year (FW=PW=3).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1325:134":{"id":"0:1325:134","crate_id":0,"name":"Err","span":{"filename":"src/naive/datetime/mod.rs","begin":[2112,4],"end":[2112,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:5:687-0:3235:2221":{"id":"b:5:687-0:3235:2221","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2441-0:3091:2183":{"id":"b:2:2441-0:3091:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2338":{"id":"0:2338","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[100,31],"end":[100,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2339:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2336":{"id":"0:2336","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[100,27],"end":[100,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:944":{"id":"0:944","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[475,0],"end":[485,1]},"visibility":"default","docs":"Parsing a `str` into a `Weekday` uses the format [`%A`](./format/strftime/index.html).\n\n# Example\n\n```\nuse chrono::Weekday;\n\nassert_eq!(\"Sunday\".parse::<Weekday>(), Ok(Weekday::Sun));\nassert!(\"any day\".parse::<Weekday>().is_err());\n```\n\nThe parsing is case-insensitive.\n\n```\n# use chrono::Weekday;\nassert_eq!(\"mON\".parse::<Weekday>(), Ok(Weekday::Mon));\n```\n\nOnly the shortest form (e.g. `sun`) and the longest form (e.g. `sunday`) is accepted.\n\n```\n# use chrono::Weekday;\nassert!(\"thurs\".parse::<Weekday>().is_err());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12518:3218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:945:134","0:946:3219"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32825:244-0:2409:3432":{"id":"a:2:32825:244-0:2409:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12899:38541":{"id":"2:12899:38541","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44531:8807","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1226:2931":{"id":"0:1226:2931","crate_id":0,"name":"checked_sub_days","span":{"filename":"src/naive/datetime/mod.rs","begin":[909,4],"end":[911,5]},"visibility":"public","docs":"Subtract a duration in [`Days`] from the date part of the `NaiveDateTime`\n\nReturns `None` if the resulting date would be out of range.","links":{"`Days`":"0:2600:2177"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1208:2857":{"id":"0:1208:2857","crate_id":0,"name":"timestamp","span":{"filename":"src/naive/datetime/mod.rs","begin":[436,4],"end":[441,5]},"visibility":"public","docs":"Returns the number of non-leap seconds since the midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_milli_opt(0, 0, 1, 980).unwrap();\nassert_eq!(dt.timestamp(), 1);\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_opt(1, 46, 40).unwrap();\nassert_eq!(dt.timestamp(), 1_000_000_000);\n\nlet dt = NaiveDate::from_ymd_opt(1969, 12, 31).unwrap().and_hms_opt(23, 59, 59).unwrap();\nassert_eq!(dt.timestamp(), -1);\n\nlet dt = NaiveDate::from_ymd_opt(-1, 1, 1).unwrap().and_hms_opt(0, 0, 0).unwrap();\nassert_eq!(dt.timestamp(), -62198755200);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1142:3219":{"id":"0:1142:3219","crate_id":0,"name":"from_str","span":{"filename":"src/naive/date.rs","begin":[2254,4],"end":[2269,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1534-0:2656:5110":{"id":"0:1534-0:2656:5110","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[13,61],"end":[13,83]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::date::NaiveDateWeeksIterator","name":"NaiveDateWeeksIterator","id":"0:2656:5110","glob":false}}},"0:2533:461":{"id":"0:2533:461","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[325,9],"end":[325,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2966:253-0:2134:2146":{"id":"a:2:2966:253-0:2134:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1596:7289":{"id":"0:1596:7289","crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/fixed.rs","begin":[139,4],"end":[141,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12866:3075":{"id":"2:12866:3075","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1478:2653":{"id":"0:1478:2653","crate_id":0,"name":"hour","span":{"filename":"src/naive/time/mod.rs","begin":[905,4],"end":[907,5]},"visibility":"default","docs":"Returns the hour number from 0 to 23.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(0, 0, 0).unwrap().hour(), 0);\nassert_eq!(NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().hour(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5572:7799":{"id":"5:5572:7799","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7571:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:551-0:324:2171":{"id":"0:551-0:324:2171","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[523,19],"end":[523,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"datetime::MAX_DATETIME","name":"MAX_DATETIME","id":"0:324:2171","glob":false}}},"0:1911":{"id":"0:1911","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[150,0],"end":[154,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1912:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:524":{"id":"0:524","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1525,0],"end":[1531,1]},"visibility":"default","docs":"Subtract `Days` from `DateTime`.\n\n# Panics\n\nPanics if:\n- The resulting date would be out of range.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.\n\nStrongly consider using `DateTime<Tz>::checked_sub_days` to get an `Option` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:526:206","0:527:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42477:9166-0:2134:2146":{"id":"a:2:42477:9166-0:2134:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3139:725":{"id":"0:3139:725","crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[32,37],"end":[32,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1870":{"id":"0:1870","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[117,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1871:2768","0:1872:1779"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42477:9166-0:2196:2794":{"id":"a:2:42477:9166-0:2196:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:7911:9557":{"id":"2:7911:9557","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"I"}}}},"0:2280":{"id":"0:2280","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[77,33],"end":[77,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:63:206":{"id":"0:63:206","crate_id":0,"name":"Output","span":{"filename":"src/duration.rs","begin":[361,4],"end":[361,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2128:468":{"id":"0:2128:468","crate_id":0,"name":"cmp","span":{"filename":"src/duration.rs","begin":[53,58],"end":[53,61]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:91:725":{"id":"0:91:725","crate_id":0,"name":"fmt","span":{"filename":"src/duration.rs","begin":[451,4],"end":[478,5]},"visibility":"default","docs":"Format a duration using the [ISO 8601] format\n\n[ISO 8601]: https://en.wikipedia.org/wiki/ISO_8601#Durations","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2587":{"id":"0:2587","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[379,23],"end":[379,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2588:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1103":{"id":"0:1103","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1979,0],"end":[1985,1]},"visibility":"default","docs":"Add `Days` to `NaiveDate`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using `NaiveDate::checked_add_days` to get an `Option` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1104:206","0:1105:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:687-0:2355:2793":{"id":"b:5:687-0:2355:2793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:116-0:2620:2161":{"id":"0:116-0:2620:2161","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[506,20],"end":[506,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::NaiveDate","name":"NaiveDate","id":"0:2620:2161","glob":false}}},"0:1898:2768":{"id":"0:1898:2768","crate_id":0,"name":"today","span":{"filename":"src/offset/utc.rs","begin":[63,4],"end":[65,5]},"visibility":"public","docs":"Returns a `Date` which corresponds to the current date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `Utc::now()` instead, potentially with `.date_naive()`\")]","#[allow(deprecated)]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `Utc::now()` instead, potentially with `.date_naive()`"},"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3190":{"id":"0:3190","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,9],"end":[31,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3191:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1258:2757":{"id":"0:1258:2757","crate_id":0,"name":"with_day","span":{"filename":"src/naive/datetime/mod.rs","begin":[1343,4],"end":[1345,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of month (starting from 1) changed.\n\nSee also the [`NaiveDate::with_day`] method.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `day` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_day(30), Some(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_day(31), None); // no September 31\n```","links":{"`NaiveDate::with_day`":"0:1087:2757"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1306:206":{"id":"0:1306:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1907,4],"end":[1907,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1988:2182":{"id":"0:1988:2182","crate_id":0,"name":"DurationRound","span":{"filename":"src/round.rs","begin":[103,0],"end":[145,1]},"visibility":"public","docs":"Extension trait for rounding or truncating a DateTime by a Duration.\n\n# Limitations\nBoth rounding and truncating are done via [`Duration::num_nanoseconds`] and\n[`DateTime::timestamp_nanos`]. This means that they will fail if either the\n`Duration` or the `DateTime` are too big to represented as nanoseconds. They\nwill also fail if the `Duration` is bigger than the timestamp.","links":{"`Duration::num_nanoseconds`":"0:52:2459","`DateTime::timestamp_nanos`":"0:336:2878"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:1989:134","0:1990:8146","0:1991:8151"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:1992","0:1997"]}}},"0:2390:3060":{"id":"0:2390:3060","crate_id":0,"name":"RFC2822","span":{"filename":"src/format/mod.rs","begin":[243,4],"end":[243,11]},"visibility":"default","docs":"RFC 2822 date and time syntax. Commonly used for email and MIME date and time.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:32825:244-0:2444:3447":{"id":"a:2:32825:244-0:2444:3447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1113:1566":{"id":"0:1113:1566","crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/date.rs","begin":[2051,4],"end":[2053,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32825:244-0:2343:3375":{"id":"a:2:32825:244-0:2343:3375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2966:253-0:2161:2604":{"id":"a:2:2966:253-0:2161:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2467:3467":{"id":"0:2467:3467","crate_id":0,"name":"Seconds","span":{"filename":"src/format/mod.rs","begin":[303,4],"end":[303,11]},"visibility":"default","docs":"Format offset from UTC as hours, minutes and seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:375":{"id":"0:375","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[690,0],"end":[698,1]},"visibility":"default","docs":"Convert a `DateTime<Utc>` instance into a `DateTime<FixedOffset>` instance.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:376:752"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12973:36624":{"id":"2:12973:36624","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:8766"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:8782","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2292:3334":{"id":"0:2292:3334","crate_id":0,"name":"YearMod100","span":{"filename":"src/format/mod.rs","begin":[108,4],"end":[108,14]},"visibility":"default","docs":"Gregorian year modulo 100 (FW=PW=2). Cannot be negative.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:3198:725":{"id":"0:3198:725","crate_id":0,"name":"fmt","span":{"filename":"src/month.rs","begin":[31,37],"end":[31,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2966:253-0:2409:3432":{"id":"a:2:2966:253-0:2409:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:485:301":{"id":"0:485:301","crate_id":0,"name":"add","span":{"filename":"src/datetime/mod.rs","begin":[1331,4],"end":[1335,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:421:2755":{"id":"0:421:2755","crate_id":0,"name":"with_month","span":{"filename":"src/datetime/mod.rs","begin":[1031,4],"end":[1033,5]},"visibility":"default","docs":"Makes a new `DateTime` with the month number (starting from 1) changed.\n\nSee also the [`NaiveDate::with_month`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist.\n- The value for `month` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_month`":"0:1085:2755"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2059:725":{"id":"0:2059:725","crate_id":0,"name":"fmt","span":{"filename":"src/month.rs","begin":[254,4],"end":[256,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42476:9167-0:3108:2158":{"id":"a:2:42476:9167-0:3108:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3200:789":{"id":"0:3200:789","crate_id":0,"name":"hash","span":{"filename":"src/month.rs","begin":[31,44],"end":[31,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32882:9016-0:2147:2148":{"id":"a:2:32882:9016-0:2147:2148","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:343:2705":{"id":"0:343:2705","crate_id":0,"name":"with_timezone","span":{"filename":"src/datetime/mod.rs","begin":[343,4],"end":[345,5]},"visibility":"public","docs":"Changes the associated time zone.\nThe returned `DateTime` references the same instant of time from the perspective of the\nprovided time zone.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["tz",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Tz2"}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1093:206":{"id":"0:1093:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1888,4],"end":[1888,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:427:2758":{"id":"0:427:2758","crate_id":0,"name":"with_day0","span":{"filename":"src/datetime/mod.rs","begin":[1079,4],"end":[1081,5]},"visibility":"default","docs":"Makes a new `DateTime` with the day of month (starting from 0) changed.\n\nSee also the [`NaiveDate::with_day0`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist.\n- The value for `day0` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_day0`":"0:1088:2758"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2752":{"id":"0:2752","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[205,20],"end":[205,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1507:1565":{"id":"0:1507:1565","crate_id":0,"name":"sub","span":{"filename":"src/naive/time/mod.rs","begin":[1304,4],"end":[1311,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:67:301":{"id":"0:67:301","crate_id":0,"name":"add","span":{"filename":"src/duration.rs","begin":[376,4],"end":[378,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:935":{"id":"0:935","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[433,0],"end":[438,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","description","source","cause","type_id"],"trait":{"name":"Error","id":"2:2806:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:936:2511"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:476":{"id":"0:476","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1293,0],"end":[1301,1]},"visibility":"default","docs":"Add-assign `chrono::Duration` to `DateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`DateTime<Tz>::checked_add_signed`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_add_signed`":"0:347:2711"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:33908:2348","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:478:302"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:774:2790":{"id":"0:774:2790","crate_id":0,"name":"parse","span":{"filename":"src/format/parse.rs","begin":[243,0],"end":[249,1]},"visibility":"public","docs":"Tries to parse given string into `parsed` with given formatting items.\nReturns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).\nThere should be no trailing string after parsing;\nuse a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.\n\nThis particular date and time parser is:\n\n- Greedy. It will consume the longest possible prefix.\n  For example, `April` is always consumed entirely when the long month name is requested;\n  it equally accepts `Apr`, but prefers the longer prefix in this case.\n\n- Padding-agnostic (for numeric items).\n  The [`Pad`](./enum.Pad.html) field is completely ignored,\n  so one can prepend any number of whitespace then any number of zeroes before numbers.\n\n- (Still) obeying the intrinsic parsing width. This allows, for example, parsing `HHMMSS`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["parsed",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"super::Parsed","id":"0:2196:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"super::ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8051:176","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"super::Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1109":{"id":"0:1109","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2030,0],"end":[2037,1]},"visibility":"default","docs":"Subtract `chrono::Duration` from `NaiveDate`.\n\nThis discards the fractional days in `Duration`, rounding to the closest integral number of days\ntowards `Duration::zero()`.\nIt is the same as the addition with a negated `Duration`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDate::checked_sub_signed`] to get an `Option` instead.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nassert_eq!(from_ymd(2014, 1, 1) - Duration::zero(),             from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::seconds(86399),     from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::seconds(-86399),    from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(1),            from_ymd(2013, 12, 31));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(-1),           from_ymd(2014, 1, 2));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(364),          from_ymd(2013, 1, 2));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(365*4 + 1),    from_ymd(2010, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(365*400 + 97), from_ymd(1614, 1, 1));\n```\n\n[`NaiveDate::checked_sub_signed`]: crate::NaiveDate::checked_sub_signed","links":{"crate::NaiveDate::checked_sub_signed":"0:1051:2713"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1110:206","0:1111:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1324":{"id":"0:1324","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[2111,0],"end":[2140,1]},"visibility":"default","docs":"Parsing a `str` into a `NaiveDateTime` uses the same format,\n[`%Y-%m-%dT%H:%M:%S%.f`](crate::format::strftime), as in `Debug`.\n\n# Example\n\n```\nuse chrono::{NaiveDateTime, NaiveDate};\n\nlet dt = NaiveDate::from_ymd_opt(2015, 9, 18).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(\"2015-09-18T23:56:04\".parse::<NaiveDateTime>(), Ok(dt));\n\nlet dt = NaiveDate::from_ymd_opt(12345, 6, 7).unwrap().and_hms_milli_opt(7, 59, 59, 1_500).unwrap(); // leap second\nassert_eq!(\"+12345-6-7T7:59:60.5\".parse::<NaiveDateTime>(), Ok(dt));\n\nassert!(\"foo\".parse::<NaiveDateTime>().is_err());\n```","links":{"crate::format::strftime":"0:860:3302"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12518:3218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1325:134","0:1326:3219"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2020:8276":{"id":"0:2020:8276","crate_id":0,"name":"number_from_sunday","span":{"filename":"src/weekday.rs","begin":[114,4],"end":[116,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Sunday = 1.\n\n`w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.number_from_sunday()`: | 2     | 3     | 4     | 5     | 6     | 7     | 1","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42477:9166-0:3152:2156":{"id":"a:2:42477:9166-0:3152:2156","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32882:9016-0:3226:2187":{"id":"a:2:32882:9016-0:3226:2187","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32882:9016-0:2549:2174":{"id":"a:2:32882:9016-0:2549:2174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:687-0:2462:3450":{"id":"b:5:687-0:2462:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:687-0:2112:129":{"id":"b:5:687-0:2112:129","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32882:9016-0:3091:2183":{"id":"a:2:32882:9016-0:3091:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2441-0:2549:2174":{"id":"b:2:2441-0:2549:2174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2443:2602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:184:2633":{"id":"0:184:2633","crate_id":0,"name":"MIN_UTC","span":{"filename":"src/date.rs","begin":[318,4],"end":[318,78]},"visibility":"public","docs":"The minimum possible `Date`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"default":"_"}}},"0:1599":{"id":"0:1599","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[151,0],"end":[155,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Offset","id":"0:1932:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1600:2832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42477:9166-0:2549:2174":{"id":"a:2:42477:9166-0:2549:2174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:51:2455":{"id":"0:51:2455","crate_id":0,"name":"num_microseconds","span":{"filename":"src/duration.rs","begin":[246,4],"end":[250,5]},"visibility":"public","docs":"Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:113-0:2764:2159":{"id":"0:113-0:2764:2159","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[505,20],"end":[505,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::FixedOffset","name":"FixedOffset","id":"0:2764:2159","glob":false}}},"0:2583:725":{"id":"0:2583:725","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[379,9],"end":[379,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1958:4031":{"id":"0:1958:4031","crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/mod.rs","begin":[533,4],"end":[533,76]},"visibility":"default","docs":"Creates the offset for given UTC `NaiveDateTime`. This cannot fail.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1934:2165","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12987:34274":{"id":"2:12987:34274","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42477:9166-0:2343:3375":{"id":"a:2:42477:9166-0:2343:3375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1251:2753":{"id":"0:1251:2753","crate_id":0,"name":"iso_week","span":{"filename":"src/naive/datetime/mod.rs","begin":[1250,4],"end":[1252,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2481":{"id":"0:2481","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[293,29],"end":[293,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2482:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3124:3994":{"id":"0:3124:3994","crate_id":0,"name":"Sat","span":{"filename":"src/weekday.rs","begin":[54,4],"end":[54,11]},"visibility":"default","docs":"Saturday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"5","value":"5"}}}},"0:2073:2186":{"id":"0:2073:2186","crate_id":0,"name":"month","span":{"filename":"src/traits.rs","begin":[50,4],"end":[50,27]},"visibility":"default","docs":"Returns the month number starting from 1.\n\nThe return value ranges from 1 to 12.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1241:752":{"id":"0:1241:752","crate_id":0,"name":"from","span":{"filename":"src/naive/datetime/mod.rs","begin":[1095,4],"end":[1097,5]},"visibility":"default","docs":"Converts a `NaiveDate` to a `NaiveDateTime` of the same date but at midnight.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime};\n\nlet nd = NaiveDate::from_ymd_opt(2016, 5, 28).unwrap();\nlet ndt = NaiveDate::from_ymd_opt(2016, 5, 28).unwrap().and_hms_opt(0, 0, 0).unwrap();\nassert_eq!(ndt, NaiveDateTime::from(nd));","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["date",{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2690":{"id":"0:2690","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[76,47],"end":[76,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1520:725":{"id":"0:1520:725","crate_id":0,"name":"fmt","span":{"filename":"src/naive/time/mod.rs","begin":[1477,4],"end":[1479,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:155:2652":{"id":"0:155:2652","crate_id":0,"name":"and_hms","span":{"filename":"src/date.rs","begin":[101,4],"end":[103,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute and/or second.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use and_hms_opt() instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use and_hms_opt() instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2147:2148":{"id":"0:2147:2148","crate_id":0,"name":"Date","span":{"filename":"src/date.rs","begin":[60,0],"end":[63,1]},"visibility":"public","docs":"ISO 8601 calendar date with time zone.\n\nYou almost certainly want to be using a [`NaiveDate`] instead of this type.\n\nThis type primarily exists to aid in the construction of DateTimes that\nhave a timezone by way of the [`TimeZone`] datelike constructors (e.g.\n[`TimeZone::ymd`]).\n\nThis type should be considered ambiguous at best, due to the inherent lack\nof precision required for the time zone resolution.\n\nThere are some guarantees on the usage of `Date<Tz>`:\n\n- If properly constructed via [`TimeZone::ymd`] and others without an error,\n  the corresponding local date should exist for at least a moment.\n  (It may still have a gap from the offset changes.)\n\n- The `TimeZone` is free to assign *any* [`Offset`](crate::offset::Offset) to the\n  local date, as long as that offset did occur in given day.\n\n  For example, if `2015-03-08T01:59-08:00` is followed by `2015-03-08T03:00-07:00`,\n  it may produce either `2015-03-08-08:00` or `2015-03-08-07:00`\n  but *not* `2015-03-08+00:00` and others.\n\n- Once constructed as a full `DateTime`, [`DateTime::date`] and other associated\n  methods should return those for the original `Date`. For example, if `dt =\n  tz.ymd_opt(y,m,d).unwrap().hms(h,n,s)` were valid, `dt.date() == tz.ymd_opt(y,m,d).unwrap()`.\n\n- The date is timezone-agnostic up to one day (i.e. practically always),\n  so the local date and UTC date should be equal for most cases\n  even though the raw calculation between `NaiveDate` and `Duration` may not.","links":{"crate::offset::Offset":"0:1932:2164","`DateTime::date`":"0:330:2166","`TimeZone`":"0:1934:2165","`NaiveDate`":"0:2620:2161","`TimeZone::ymd`":"0:1938:3763"},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"Use `NaiveDate` or `DateTime<Tz>` instead\")]"],"deprecation":{"since":"0.4.23","note":"Use `NaiveDate` or `DateTime<Tz>` instead"},"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:151","0:190","a:2:42477:9166-0:2147:2148","a:2:2966:253-0:2147:2148","a:2:32882:9016-0:2147:2148","a:2:42476:9167-0:2147:2148","b:2:2754-0:2147:2148","b:2:2744-0:2147:2148","b:2:2748-0:2147:2148","b:2:2441-0:2147:2148","b:2:2444-0:2147:2148","b:2:3558-0:2147:2148","b:2:2759-0:2147:2148","b:5:687-0:2147:2148","b:5:5828-0:2147:2148","0:247","0:231","0:261","0:257","0:223","0:225","0:264","0:227","0:254","0:250","0:233","0:2151","0:239","0:198","0:236","0:243"]}}},"0:496:206":{"id":"0:496:206","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1391,4],"end":[1391,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:2414:461":{"id":"0:2414:461","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[255,16],"end":[255,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1913-0:3047:2160":{"id":"0:1913-0:3047:2160","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[38,0],"end":[38,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::utc::Utc","name":"Utc","id":"0:3047:2160","glob":false}}},"a:2:32882:9016-0:3143:2185":{"id":"a:2:32882:9016-0:3143:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2057":{"id":"0:2057","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[251,0],"end":[251,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","description","source","cause","type_id"],"trait":{"name":"Error","id":"2:2806:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1909":{"id":"0:1909","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[144,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1910:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12929:41059":{"id":"2:12929:41059","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12558:8766","str::split":"2:12917:33500","prim@char":"1:12055:457","str::split_terminator":"2:12926:41058"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44307:8798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:8782","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2022:3602":{"id":"0:2022:3602","crate_id":0,"name":"num_days_from_sunday","span":{"filename":"src/weekday.rs","begin":[147,4],"end":[149,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Sunday = 0.\n\n`w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n--------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.num_days_from_sunday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 0","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42477:9166-0:3040:2149":{"id":"a:2:42477:9166-0:3040:2149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2568:3505":{"id":"0:2568:3505","crate_id":0,"name":"Impossible","span":{"filename":"src/format/mod.rs","begin":[388,4],"end":[388,14]},"visibility":"default","docs":"There is no possible date and time value with given set of fields.\n\nThis does not include the out-of-range conditions, which are trivially invalid.\nIt includes the case that there are one or more fields that are inconsistent to each other.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2473:3473":{"id":"0:2473:3473","crate_id":0,"name":"OptionalMinutesAndSeconds","span":{"filename":"src/format/mod.rs","begin":[310,4],"end":[310,29]},"visibility":"default","docs":"Format offset from UTC as hours and optionally minutes and seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:158:2664":{"id":"0:158:2664","crate_id":0,"name":"and_hms_milli","span":{"filename":"src/date.rs","begin":[123,4],"end":[125,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute, second and/or millisecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use and_hms_milli_opt() instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use and_hms_milli_opt() instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1288:302":{"id":"0:1288:302","crate_id":0,"name":"add_assign","span":{"filename":"src/naive/datetime/mod.rs","begin":[1714,4],"end":[1716,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2762":{"id":"0:2762","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[205,53],"end":[205,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2763:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2759-0:3040:2149":{"id":"b:2:2759-0:3040:2149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2644":{"id":"0:2644","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2096,29],"end":[2096,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2645:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2642":{"id":"0:2642","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2096,22],"end":[2096,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2643:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:118-0:2746:2163":{"id":"0:118-0:2746:2163","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[506,46],"end":[506,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::NaiveTime","name":"NaiveTime","id":"0:2746:2163","glob":false}}},"0:338:2897":{"id":"0:338:2897","crate_id":0,"name":"timestamp_subsec_millis","span":{"filename":"src/datetime/mod.rs","begin":[302,4],"end":[304,5]},"visibility":"public","docs":"Returns the number of milliseconds since the last second boundary.\n\nIn event of a leap second this may exceed 999.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3245:668":{"id":"0:3245:668","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[598,28],"end":[598,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2759-0:2729:2178":{"id":"b:2:2759-0:2729:2178","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:340:2903":{"id":"0:340:2903","crate_id":0,"name":"timestamp_subsec_nanos","span":{"filename":"src/datetime/mod.rs","begin":[320,4],"end":[322,5]},"visibility":"public","docs":"Returns the number of nanoseconds since the last second boundary\n\nIn event of a leap second this may exceed 999,999,999.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:445:3155":{"id":"0:445:3155","crate_id":0,"name":"with_nanosecond","span":{"filename":"src/datetime/mod.rs","begin":[1193,4],"end":[1195,5]},"visibility":"default","docs":"Makes a new `DateTime` with nanoseconds since the whole non-leap second changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\nAs with the [`NaiveDateTime::nanosecond`] method,\nthe input range can exceed 1,000,000,000 for leap seconds.\n\nSee also the [`NaiveTime::with_nanosecond`] method.\n\n# Errors\n\nReturns `None` if `nanosecond >= 2,000,000,000`.","links":{"`NaiveTime::with_nanosecond`":"0:1485:3155","`NaiveDateTime::nanosecond`":"0:1270:3134"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2738":{"id":"0:2738","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,36],"end":[19,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2540:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2739:468"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:323:2172":{"id":"0:323:2172","crate_id":0,"name":"MIN_DATETIME","span":{"filename":"src/datetime/mod.rs","begin":[66,0],"end":[66,65]},"visibility":"public","docs":"The minimum possible `DateTime<Utc>`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use DateTime::MIN_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use DateTime::MIN_UTC instead"},"inner":{"constant":{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"expr":"DateTime<Utc>::MIN_UTC","value":null,"is_literal":false}}},"0:2565:3498":{"id":"0:2565:3498","crate_id":0,"name":"ParseErrorKind","span":{"filename":"src/format/mod.rs","begin":[380,0],"end":[412,1]},"visibility":"public","docs":"The category of parse error","links":{},"attrs":["#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:2566:2221","0:2568:3505","0:2570:3510","0:2572:3512","0:2574:3514","0:2576:3516","0:2578:3518"],"impls":["a:2:42477:9166-0:2565:3498","a:2:2966:253-0:2565:3498","a:2:32825:244-0:2565:3498","a:2:32882:9016-0:2565:3498","a:2:42476:9167-0:2565:3498","b:2:2754-0:2565:3498","b:2:2744-0:2565:3498","b:2:2748-0:2565:3498","b:2:2441-0:2565:3498","b:2:2444-0:2565:3498","b:2:3558-0:2565:3498","b:2:2759-0:2565:3498","b:5:687-0:2565:3498","0:2592","0:2586","0:2587","0:2589","0:2591","0:2582","0:2584"]}}},"0:2678":{"id":"0:2678","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[76,9],"end":[76,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2035":{"id":"0:2035","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[244,0],"end":[248,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2036:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2274":{"id":"0:2274","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[77,9],"end":[77,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2754-0:3206:2188":{"id":"b:2:2754-0:3206:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2119:60":{"id":"0:2119:60","crate_id":0,"name":"default","span":{"filename":"src/duration.rs","begin":[53,22],"end":[53,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:515:1565":{"id":"0:515:1565","crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1483,4],"end":[1485,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1215:2897":{"id":"0:1215:2897","crate_id":0,"name":"timestamp_subsec_millis","span":{"filename":"src/naive/datetime/mod.rs","begin":[586,4],"end":[588,5]},"visibility":"public","docs":"Returns the number of milliseconds since the last whole non-leap second.\n\nThe return value ranges from 0 to 999,\nor for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_nano_opt(9, 10, 11, 123_456_789).unwrap();\nassert_eq!(dt.timestamp_subsec_millis(), 123);\n\nlet dt = NaiveDate::from_ymd_opt(2015, 7, 1).unwrap().and_hms_nano_opt(8, 59, 59, 1_234_567_890).unwrap();\nassert_eq!(dt.timestamp_subsec_millis(), 1_234);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1486:6103":{"id":"0:1486:6103","crate_id":0,"name":"num_seconds_from_midnight","span":{"filename":"src/naive/time/mod.rs","begin":[1109,4],"end":[1111,5]},"visibility":"default","docs":"Returns the number of non-leap seconds past the last midnight.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(1, 2, 3).unwrap().num_seconds_from_midnight(),\n           3723);\nassert_eq!(NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().num_seconds_from_midnight(),\n           86164);\nassert_eq!(NaiveTime::from_hms_milli_opt(23, 59, 59, 1_000).unwrap().num_seconds_from_midnight(),\n           86399);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3050":{"id":"0:3050","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,15],"end":[43,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3051:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2080:2753":{"id":"0:2080:2753","crate_id":0,"name":"iso_week","span":{"filename":"src/traits.rs","begin":[81,4],"end":[81,34]},"visibility":"default","docs":"Returns the ISO week.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:379":{"id":"0:379","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[712,0],"end":[720,1]},"visibility":"default","docs":"Convert a `DateTime<FixedOffset>` instance into a `DateTime<Utc>` instance.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:380:752"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42476:9167-0:2444:3447":{"id":"a:2:42476:9167-0:2444:3447","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:363:2636":{"id":"0:363:2636","crate_id":0,"name":"MAX_UTC","span":{"filename":"src/datetime/mod.rs","begin":[591,4],"end":[591,94]},"visibility":"public","docs":"The maximum possible `DateTime<Utc>`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"default":"_"}}},"0:1053:2726":{"id":"0:1053:2726","crate_id":0,"name":"years_since","span":{"filename":"src/naive/date.rs","begin":[1230,4],"end":[1242,5]},"visibility":"public","docs":"Returns the number of whole years from the given `base` until `self`.\n\n# Errors\n\nReturns `None` if `base < self`.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["base",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2744-0:2595:2179":{"id":"b:2:2744-0:2595:2179","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2595:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2572:3512":{"id":"0:2572:3512","crate_id":0,"name":"Invalid","span":{"filename":"src/format/mod.rs","begin":[398,4],"end":[398,11]},"visibility":"default","docs":"The input string has some invalid character sequence for given formatting items.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:418:2753":{"id":"0:418:2753","crate_id":0,"name":"iso_week","span":{"filename":"src/datetime/mod.rs","begin":[999,4],"end":[1001,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2051:8297":{"id":"0:2051:8297","crate_id":0,"name":"from_u64","span":{"filename":"src/month.rs","begin":[197,4],"end":[199,5]},"visibility":"default","docs":"Returns an `Option<Month>` from a i64, assuming a 1-index, January = 1.\n\n`Month::from_i64(n: i64)`: | `1`                  | `2`                   | ... | `12`\n---------------------------| -------------------- | --------------------- | ... | -----\n``:                        | Some(Month::January) | Some(Month::February) | ... | Some(Month::December)","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["n",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Month","id":"0:3152:2156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1880-0:3040:2149":{"id":"0:1880-0:3040:2149","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[35,0],"end":[35,27]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"import":{"source":"self::local::Local","name":"Local","id":"0:3040:2149","glob":false}}},"0:1110:206":{"id":"0:1110:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[2031,4],"end":[2031,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2614":{"id":"0:2614","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[133,39],"end":[133,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2615:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:877":{"id":"0:877","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[202,0],"end":[225,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["collect","partial_cmp","is_sorted_by","array_chunks","cycle","reduce","collect_into","map","flatten","for_each","size_hint","next_chunk","min_by","any","ge","is_sorted_by_key","all","sum","product","try_reduce","partition","map_windows","filter_map","advance_by","min_by_key","position","__iterator_get_unchecked","chain","cmp_by","find_map","skip","count","flat_map","fuse","peekable","partition_in_place","nth","min","max_by","ne","fold","partial_cmp_by","try_find","le","is_partitioned","scan","last","skip_while","inspect","step_by","max_by_key","eq","lt","take","max","eq_by","rposition","try_fold","by_ref","take_while","intersperse","cmp","enumerate","copied","find","rev","unzip","is_sorted","try_for_each","try_collect","map_while","intersperse_with","filter","gt","cloned","zip"],"trait":{"name":"Iterator","id":"2:8051:176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:879:171","0:880:1062"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2562":{"id":"0:2562","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[367,44],"end":[367,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2563:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1225:2929":{"id":"0:1225:2929","crate_id":0,"name":"checked_add_days","span":{"filename":"src/naive/datetime/mod.rs","begin":[901,4],"end":[903,5]},"visibility":"public","docs":"Add a duration in [`Days`] to the date part of the `NaiveDateTime`\n\nReturns `None` if the resulting date would be out of range.","links":{"`Days`":"0:2600:2177"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2190":{"id":"0:2190","crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[509,33],"end":[509,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2444-0:2409:3432":{"id":"b:2:2444-0:2409:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:325":{"id":"0:325","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[71,0],"end":[592,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:327:2821","0:328:2639","0:329:2830","0:330:2166","0:331:2847","0:332:2212","0:333:2857","0:334:2864","0:335:2870","0:336:2878","0:337:2879","0:338:2897","0:339:2900","0:340:2903","0:341:1099","0:342:2646","0:343:2705","0:345:2909","0:346:2912","0:347:2711","0:348:2922","0:349:2713","0:350:2927","0:351:2929","0:352:2931","0:353:2718","0:355:2720","0:356:2645","0:358:2726","0:359:2953","0:360:2957","0:361:2977","0:362:2633","0:363:2636"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1319:1565":{"id":"0:1319:1565","crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[2022,4],"end":[2024,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3017:2352","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2211:3902":{"id":"0:2211:3902","crate_id":0,"name":"hour_mod_12","span":{"filename":"src/format/parsed.rs","begin":[85,4],"end":[85,32]},"visibility":"public","docs":"Hour number modulo 12 (0--11).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"0:3165:3560":{"id":"0:3165:3560","crate_id":0,"name":"May","span":{"filename":"src/month.rs","begin":[51,4],"end":[51,11]},"visibility":"default","docs":"May","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"4","value":"4"}}}},"0:929":{"id":"0:929","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[370,0],"end":[375,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:930:870"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1462:2718":{"id":"0:1462:2718","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/naive/time/mod.rs","begin":[727,4],"end":[757,5]},"visibility":"public","docs":"Subtracts another `NaiveTime` from the current time.\nReturns a `Duration` within +/- 1 day.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\nlet since = NaiveTime::signed_duration_since;\n\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 900)),\n           Duration::zero());\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 875)),\n           Duration::milliseconds(25));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 6, 925)),\n           Duration::milliseconds(975));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 0, 900)),\n           Duration::seconds(7));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 0, 7, 900)),\n           Duration::seconds(5 * 60));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(0, 5, 7, 900)),\n           Duration::seconds(3 * 3600));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(4, 5, 7, 900)),\n           Duration::seconds(-3600));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(2, 4, 6, 800)),\n           Duration::seconds(3600 + 60 + 1) + Duration::milliseconds(100));\n```\n\nLeap seconds are handled, but the subtraction assumes that\nthere were no other leap seconds happened.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\n# let since = NaiveTime::signed_duration_since;\nassert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 59, 0)),\n           Duration::seconds(1));\nassert_eq!(since(from_hmsm(3, 0, 59, 1_500), from_hmsm(3, 0, 59, 0)),\n           Duration::milliseconds(1500));\nassert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 0, 0)),\n           Duration::seconds(60));\nassert_eq!(since(from_hmsm(3, 0, 0, 0), from_hmsm(2, 59, 59, 1_000)),\n           Duration::seconds(1));\nassert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(2, 59, 59, 1_000)),\n           Duration::seconds(61));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3082":{"id":"0:3082","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,34],"end":[41,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:687-0:2620:2161":{"id":"b:5:687-0:2620:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2634":{"id":"0:2634","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[191,47],"end":[191,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1267:2653":{"id":"0:1267:2653","crate_id":0,"name":"hour","span":{"filename":"src/naive/datetime/mod.rs","begin":[1444,4],"end":[1446,5]},"visibility":"default","docs":"Returns the hour number from 0 to 23.\n\nSee also the [`NaiveTime::hour`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.hour(), 12);\n```","links":{"`NaiveTime::hour`":"0:1478:2653"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1901:2164":{"id":"0:1901:2164","crate_id":0,"name":"Offset","span":{"filename":"src/offset/utc.rs","begin":[117,4],"end":[117,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2534":{"id":"0:2534","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[325,16],"end":[325,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1022:3087":{"id":"0:1022:3087","crate_id":0,"name":"parse_from_str","span":{"filename":"src/naive/date.rs","begin":[586,4],"end":[590,5]},"visibility":"public","docs":"Parses a string with the specified format string and returns a new `NaiveDate`.\nSee the [`format::strftime` module](crate::format::strftime)\non the supported escape sequences.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet parse_from_str = NaiveDate::parse_from_str;\n\nassert_eq!(parse_from_str(\"2015-09-05\", \"%Y-%m-%d\"),\n           Ok(NaiveDate::from_ymd_opt(2015, 9, 5).unwrap()));\nassert_eq!(parse_from_str(\"5sep2015\", \"%d%b%Y\"),\n           Ok(NaiveDate::from_ymd_opt(2015, 9, 5).unwrap()));\n```\n\nTime and offset is ignored for the purpose of parsing.\n\n```\n# use chrono::NaiveDate;\n# let parse_from_str = NaiveDate::parse_from_str;\nassert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),\n           Ok(NaiveDate::from_ymd_opt(2014, 5, 17).unwrap()));\n```\n\nOut-of-bound dates or insufficient fields are errors.\n\n```\n# use chrono::NaiveDate;\n# let parse_from_str = NaiveDate::parse_from_str;\nassert!(parse_from_str(\"2015/9\", \"%Y/%m\").is_err());\nassert!(parse_from_str(\"2015/9/31\", \"%Y/%m/%d\").is_err());\n```\n\nAll parsed fields should be consistent to each other, otherwise it's an error.\n\n```\n# use chrono::NaiveDate;\n# let parse_from_str = NaiveDate::parse_from_str;\nassert!(parse_from_str(\"Sat, 09 Aug 2013\", \"%a, %d %b %Y\").is_err());\n```","links":{"crate::format::strftime":"0:860:3302"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32825:244-0:3143:2185":{"id":"a:2:32825:244-0:3143:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2179:2958":{"id":"0:2179:2958","crate_id":0,"name":"AutoSi","span":{"filename":"src/format/formatting.rs","begin":[526,4],"end":[526,10]},"visibility":"default","docs":"Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to display all available\nnon-zero sub-second digits.  This corresponds to [Fixed::Nanosecond].","links":{"Fixed::Nanosecond":"0:2368:3367"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1051:2713":{"id":"0:1051:2713","crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/naive/date.rs","begin":[1184,4],"end":[1187,5]},"visibility":"public","docs":"Subtracts the number of whole days in the given `Duration` from the current date.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(d.checked_sub_signed(Duration::days(40)),\n           Some(NaiveDate::from_ymd_opt(2015, 7, 27).unwrap()));\nassert_eq!(d.checked_sub_signed(Duration::days(-40)),\n           Some(NaiveDate::from_ymd_opt(2015, 10, 15).unwrap()));\nassert_eq!(d.checked_sub_signed(Duration::days(1_000_000_000)), None);\nassert_eq!(d.checked_sub_signed(Duration::days(-1_000_000_000)), None);\nassert_eq!(NaiveDate::MIN.checked_sub_signed(Duration::days(1)), None);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2495":{"id":"0:2495","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[314,9],"end":[314,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2496:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2497":{"id":"0:2497","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[314,16],"end":[314,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2966:253-0:2112:129":{"id":"a:2:2966:253-0:2112:129","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:683:3919":{"id":"0:683:3919","crate_id":0,"name":"set_year_div_100","span":{"filename":"src/format/parsed.rs","begin":[140,4],"end":[145,5]},"visibility":"public","docs":"Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12883:36585":{"id":"2:12883:36585","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10651:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10651:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1128:171":{"id":"0:1128:171","crate_id":0,"name":"Item","span":{"filename":"src/naive/date.rs","begin":[2138,4],"end":[2138,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1023:2791":{"id":"0:1023:2791","crate_id":0,"name":"parse_and_remainder","span":{"filename":"src/naive/date.rs","begin":[608,4],"end":[612,5]},"visibility":"public","docs":"Parses a string from a user-specified format into a new `NaiveDate` value, and a slice with\nthe remaining portion of the string.\nSee the [`format::strftime` module](crate::format::strftime)\non the supported escape sequences.\n\nSimilar to [`parse_from_str`](#method.parse_from_str).\n\n# Example\n\n```rust\n# use chrono::{NaiveDate};\nlet (date, remainder) = NaiveDate::parse_and_remainder(\n    \"2015-02-18 trailing text\", \"%Y-%m-%d\").unwrap();\nassert_eq!(date, NaiveDate::from_ymd_opt(2015, 2, 18).unwrap());\nassert_eq!(remainder, \" trailing text\");\n```","links":{"crate::format::strftime":"0:860:3302"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12964:7566":{"id":"2:12964:7566","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:8766"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12583:8781","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2515:1764":{"id":"0:2515:1764","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[331,17],"end":[331,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Box","id":"5:281:3299","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}},"0:1254:2755":{"id":"0:1254:2755","crate_id":0,"name":"with_month","span":{"filename":"src/naive/datetime/mod.rs","begin":[1297,4],"end":[1299,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the month number (starting from 1) changed.\n\nSee also the [`NaiveDate::with_month`] method.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `month` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_month(10), Some(NaiveDate::from_ymd_opt(2015, 10, 30).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_month(13), None); // no month 13\nassert_eq!(dt.with_month(2), None); // no February 30\n```","links":{"`NaiveDate::with_month`":"0:1085:2755"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:335:2870":{"id":"0:335:2870","crate_id":0,"name":"timestamp_micros","span":{"filename":"src/datetime/mod.rs","begin":[237,4],"end":[239,5]},"visibility":"public","docs":"Returns the number of non-leap-microseconds since January 1, 1970 UTC.\n\n# Example\n\n```\nuse chrono::{Utc, NaiveDate};\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_micro_opt(0, 0, 1, 444).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_micros(), 1_000_444);\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_micro_opt(1, 46, 40, 555).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_micros(), 1_000_000_000_000_555);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2574:3514":{"id":"0:2574:3514","crate_id":0,"name":"TooShort","span":{"filename":"src/format/mod.rs","begin":[401,4],"end":[401,12]},"visibility":"default","docs":"The input string has been prematurely ended.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2519:3487":{"id":"0:2519:3487","crate_id":0,"name":"OwnedSpace","span":{"filename":"src/format/mod.rs","begin":[336,4],"end":[336,24]},"visibility":"default","docs":"Same as `Space` but with the string owned by the item.","links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2521:1764"]},"discriminant":null}}},"b:2:2759-0:2134:2146":{"id":"b:2:2759-0:2134:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1523:3219":{"id":"0:1523:3219","crate_id":0,"name":"from_str","span":{"filename":"src/naive/time/mod.rs","begin":[1508,4],"end":[1530,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:223":{"id":"0:223","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[469,0],"end":[469,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1450:6873":{"id":"0:1450:6873","crate_id":0,"name":"from_hms_micro","span":{"filename":"src/naive/time/mod.rs","begin":[340,4],"end":[342,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and microsecond.\n\nThe microsecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `sec == 59`.\n\n# Panics\n\nPanics on invalid hour, minute, second and/or microsecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_hms_micro_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_hms_micro_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5573:34276":{"id":"5:5573:34276","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12990:34278"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2759-0:2488:3453":{"id":"b:2:2759-0:2488:3453","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2491:3477":{"id":"0:2491:3477","crate_id":0,"name":"Colon","span":{"filename":"src/format/mod.rs","begin":[319,4],"end":[319,9]},"visibility":"default","docs":"Colon (`:`) as separator","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:42476:9167-0:2134:2146":{"id":"a:2:42476:9167-0:2134:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:695:3931":{"id":"0:695:3931","crate_id":0,"name":"set_week_from_sun","span":{"filename":"src/format/parsed.rs","begin":[194,4],"end":[196,5]},"visibility":"public","docs":"Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:716:3958":{"id":"0:716:3958","crate_id":0,"name":"set_timestamp","span":{"filename":"src/format/parsed.rs","begin":[275,4],"end":[277,5]},"visibility":"public","docs":"Tries to set the [`timestamp`](#structfield.timestamp) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1956:2647":{"id":"0:1956:2647","crate_id":0,"name":"from_local_datetime","span":{"filename":"src/offset/mod.rs","begin":[508,4],"end":[527,5]},"visibility":"default","docs":"Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.","links":{},"attrs":["#[allow(clippy::wrong_self_convention)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:49:2448":{"id":"0:49:2448","crate_id":0,"name":"subsec_nanos","span":{"filename":"src/duration.rs","begin":[227,4],"end":[233,5]},"visibility":"public","docs":"Returns the number of nanoseconds such that\n`subsec_nanos() + num_seconds() * NANOS_PER_SEC` is the total number of\nnanoseconds in the duration.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:503:1566":{"id":"0:503:1566","crate_id":0,"name":"sub_assign","span":{"filename":"src/datetime/mod.rs","begin":[1435,4],"end":[1439,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2759-0:3226:2187":{"id":"b:2:2759-0:3226:2187","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:135","2:2763:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32825:244-0:3047:2160":{"id":"a:2:32825:244-0:3047:2160","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3153:3556":{"id":"0:3153:3556","crate_id":0,"name":"January","span":{"filename":"src/month.rs","begin":[43,4],"end":[43,15]},"visibility":"default","docs":"January","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"0","value":"0"}}}},"0:1487":{"id":"0:1487","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1166,0],"end":[1173,1]},"visibility":"default","docs":"Add `chrono::Duration` to `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the addition ignores integral number of days.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveTime` itself represents a leap second in which case the\nassumption becomes that **there is exactly a single leap second ever**.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\n\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::zero(),                  from_hmsm(3, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(1),              from_hmsm(3, 5, 8, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(-1),             from_hmsm(3, 5, 6, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(60 + 4),         from_hmsm(3, 6, 11, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(7*60*60 - 6*60), from_hmsm(9, 59, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::milliseconds(80),        from_hmsm(3, 5, 7, 80));\nassert_eq!(from_hmsm(3, 5, 7, 950) + Duration::milliseconds(280),     from_hmsm(3, 5, 8, 230));\nassert_eq!(from_hmsm(3, 5, 7, 950) + Duration::milliseconds(-980),    from_hmsm(3, 5, 6, 970));\n```\n\nThe addition wraps around.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(22*60*60), from_hmsm(1, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(-8*60*60), from_hmsm(19, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::days(800),         from_hmsm(3, 5, 7, 0));\n```\n\nLeap seconds are handled, but the addition assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\nlet leap = from_hmsm(3, 5, 59, 1_300);\nassert_eq!(leap + Duration::zero(),             from_hmsm(3, 5, 59, 1_300));\nassert_eq!(leap + Duration::milliseconds(-500), from_hmsm(3, 5, 59, 800));\nassert_eq!(leap + Duration::milliseconds(500),  from_hmsm(3, 5, 59, 1_800));\nassert_eq!(leap + Duration::milliseconds(800),  from_hmsm(3, 6, 0, 100));\nassert_eq!(leap + Duration::seconds(10),        from_hmsm(3, 6, 9, 300));\nassert_eq!(leap + Duration::seconds(-10),       from_hmsm(3, 5, 50, 300));\nassert_eq!(leap + Duration::days(1),            from_hmsm(3, 5, 59, 300));\n```\n\n[leap second handling]: crate::NaiveTime#leap-second-handling","links":{"crate::NaiveTime#leap-second-handling":"0:2746:2163"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1488:206","0:1489:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42477:9166-0:3108:2158":{"id":"a:2:42477:9166-0:3108:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2525:1765":{"id":"0:2525:1765","crate_id":0,"name":"1","span":{"filename":"src/format/mod.rs","begin":[339,21],"end":[339,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:32825:244-0:2656:5110":{"id":"a:2:32825:244-0:2656:5110","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:361:2977":{"id":"0:361:2977","crate_id":0,"name":"to_rfc3339_opts","span":{"filename":"src/datetime/mod.rs","begin":[581,4],"end":[586,5]},"visibility":"public","docs":"Return an RFC 3339 and ISO 8601 date and time string with subseconds\nformatted as per `SecondsFormat`.\n\nIf `use_z` is true and the timezone is UTC (offset 0), uses `Z` as\nper [`Fixed::TimezoneOffsetColonZ`]. If `use_z` is false, uses\n[`Fixed::TimezoneOffsetColon`]\n\n# Examples\n\n```rust\n# use chrono::{FixedOffset, SecondsFormat, TimeZone, Utc, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 26).unwrap().and_hms_micro_opt(18, 30, 9, 453_829).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Millis, false),\n           \"2018-01-26T18:30:09.453+00:00\");\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Millis, true),\n           \"2018-01-26T18:30:09.453Z\");\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Secs, true),\n           \"2018-01-26T18:30:09Z\");\n\nlet pst = FixedOffset::east_opt(8 * 60 * 60).unwrap();\nlet dt = pst.from_local_datetime(&NaiveDate::from_ymd_opt(2018, 1, 26).unwrap().and_hms_micro_opt(10, 30, 9, 453_829).unwrap()).unwrap();\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Secs, true),\n           \"2018-01-26T10:30:09+08:00\");\n```","links":{"`Fixed::TimezoneOffsetColonZ`":"0:2384:3423","`Fixed::TimezoneOffsetColon`":"0:2378:3413"},"attrs":["#[cfg(feature = \"alloc\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["secform",{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["use_z",{"primitive":"bool"}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2582":{"id":"0:2582","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[379,9],"end":[379,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2583:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:353:2718":{"id":"0:353:2718","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/datetime/mod.rs","begin":[465,4],"end":[470,5]},"visibility":"public","docs":"Subtracts another `DateTime` from the current date and time.\nThis does not overflow or underflow at all.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"impl_trait":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"impl Borrow<DateTime<Tz2>>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1038:2673":{"id":"0:1038:2673","crate_id":0,"name":"and_hms_micro","span":{"filename":"src/naive/date.rs","begin":[947,4],"end":[949,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.\n\nThe microsecond part is allowed to exceed 1,000,000,000 in order to represent a [leap second](\n./struct.NaiveTime.html#leap-second-handling), but only when `sec == 59`.\n\n# Panics\n\nPanics on invalid hour, minute, second and/or microsecond.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\n\nlet dt: NaiveDateTime = d.and_hms_micro_opt(12, 34, 56, 789_012).unwrap();\nassert_eq!(dt.year(), 2015);\nassert_eq!(dt.weekday(), Weekday::Wed);\nassert_eq!(dt.second(), 56);\nassert_eq!(dt.nanosecond(), 789_012_000);\n```","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `and_hms_micro_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `and_hms_micro_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:3226:2187":{"id":"b:2:2754-0:3226:2187","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12885:41055":{"id":"2:12885:41055","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12061:1548","str::slice_mut_unchecked":"2:12886:41056","crate::ops::Index":"2:39955:8697"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1105:301":{"id":"0:1105:301","crate_id":0,"name":"add","span":{"filename":"src/naive/date.rs","begin":[1982,4],"end":[1984,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3012:2347","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2296:3339":{"id":"0:2296:3339","crate_id":0,"name":"IsoYearDiv100","span":{"filename":"src/format/mod.rs","begin":[113,4],"end":[113,17]},"visibility":"default","docs":"Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:173:1099":{"id":"0:173:1099","crate_id":0,"name":"offset","span":{"filename":"src/date.rs","begin":[243,4],"end":[245,5]},"visibility":"public","docs":"Retrieves an associated offset from UTC.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1934:2165","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:918-0:774:2790":{"id":"0:918-0:774:2790","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[68,16],"end":[68,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"parse::parse","name":"parse","id":"0:774:2790","glob":false}}},"a:2:42477:9166-0:3226:2187":{"id":"a:2:42477:9166-0:3226:2187","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2771":{"id":"0:2771","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[22,24],"end":[22,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2772:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1270:3134":{"id":"0:1270:3134","crate_id":0,"name":"nanosecond","span":{"filename":"src/naive/datetime/mod.rs","begin":[1497,4],"end":[1499,5]},"visibility":"default","docs":"Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./struct.NaiveTime.html#leap-second-handling).\n\nSee also the [`NaiveTime#method.nanosecond`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.nanosecond(), 789_000_000);\n```","links":{"`NaiveTime#method.nanosecond`":"0:2746:2163"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1086:2756":{"id":"0:1086:2756","crate_id":0,"name":"with_month0","span":{"filename":"src/naive/date.rs","begin":[1755,4],"end":[1758,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the month number (starting from 0) changed.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `month0` is\ninvalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_month0(9),\n           Some(NaiveDate::from_ymd_opt(2015, 10, 8).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_month0(12), None); // no month 13\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().with_month0(1), None); // no February 30\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1262:2759":{"id":"0:1262:2759","crate_id":0,"name":"with_ordinal","span":{"filename":"src/naive/datetime/mod.rs","begin":[1395,4],"end":[1397,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of year (starting from 1) changed.\n\nSee also the [`NaiveDate::with_ordinal`] method.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `ordinal` is\ninvalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_ordinal(60),\n           Some(NaiveDate::from_ymd_opt(2015, 3, 1).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_ordinal(366), None); // 2015 had only 365 days\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2016, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_ordinal(60),\n           Some(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_ordinal(366),\n           Some(NaiveDate::from_ymd_opt(2016, 12, 31).unwrap().and_hms_opt(12, 34, 56).unwrap()));\n```","links":{"`NaiveDate::with_ordinal`":"0:1089:2759"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42477:9166-0:3206:2188":{"id":"a:2:42477:9166-0:3206:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3206:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2170:2154":{"id":"0:2170:2154","crate_id":0,"name":"SecondsFormat","span":{"filename":"src/format/formatting.rs","begin":[511,0],"end":[531,1]},"visibility":"public","docs":"Specific formatting options for seconds. This may be extended in the\nfuture, so exhaustive matching in external code is not recommended.\n\nSee the `TimeZone::to_rfc3339_opts` function for usage.","links":{},"attrs":["#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:2171:3639","0:2173:3641","0:2175:3643","0:2177:3645","0:2179:2958"],"impls":["a:2:42477:9166-0:2170:2154","a:2:2966:253-0:2170:2154","a:2:32825:244-0:2170:2154","a:2:32882:9016-0:2170:2154","a:2:42476:9167-0:2170:2154","b:2:2754-0:2170:2154","b:2:2744-0:2170:2154","b:2:2748-0:2170:2154","b:2:2441-0:2170:2154","b:2:2444-0:2170:2154","b:2:3558-0:2170:2154","b:2:2759-0:2170:2154","b:5:687-0:2170:2154","0:2193","0:2186","0:2185","0:2191","0:2183","0:2188","0:2190"]}}},"0:1954:2731":{"id":"0:1954:2731","crate_id":0,"name":"from_local_date","span":{"filename":"src/offset/mod.rs","begin":[499,4],"end":[504,5]},"visibility":"default","docs":"Converts the local `NaiveDate` to the timezone-aware `Date` if possible.","links":{},"attrs":["#[allow(clippy::wrong_self_convention)]","#[deprecated(since = \"0.4.23\", note = \"use `from_local_datetime()` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:95:2511":{"id":"0:95:2511","crate_id":0,"name":"description","span":{"filename":"src/duration.rs","begin":[499,4],"end":[501,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1914":{"id":"0:1914","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[53,0],"end":[90,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1916:2648","0:1917:7205","0:1918:7207","0:1919:933"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12985:2790":{"id":"2:12985:2790","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12519:134","`FromStr`":"2:12518:3218"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42495:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12518:3218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12518:3218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:501":{"id":"0:501","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1433,0],"end":[1440,1]},"visibility":"default","docs":"Subtract-assign `std::time::Duration` from `DateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `DateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`DateTime<Tz>::checked_sub_signed`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_sub_signed`":"0:349:2713"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:33967:2353","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:503:1566"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3233":{"id":"0:3233","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[245,27],"end":[245,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2399":{"id":"0:2399","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[171,16],"end":[171,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2444-0:2343:3375":{"id":"b:2:2444-0:2343:3375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2343:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:552-0:323:2172":{"id":"0:552-0:323:2172","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[523,33],"end":[523,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"datetime::MIN_DATETIME","name":"MIN_DATETIME","id":"0:323:2172","glob":false}}},"0:1992":{"id":"0:1992","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[147,0],"end":[157,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DurationRound","id":"0:1988:2182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::datetime::DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:1994:134","0:1995:8146","0:1996:8151"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3135":{"id":"0:3135","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,24],"end":[32,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2961:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2617:1146":{"id":"0:2617:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/date.rs","begin":[133,50],"end":[133,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1106":{"id":"0:1106","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1993,0],"end":[1999,1]},"visibility":"default","docs":"Subtract `Days` from `NaiveDate`.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using `NaiveDate::checked_sub_days` to get an `Option` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1107:206","0:1108:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1483:3142":{"id":"0:1483:3142","crate_id":0,"name":"with_minute","span":{"filename":"src/naive/time/mod.rs","begin":[1020,4],"end":[1026,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with the minute number changed.\n\n# Errors\n\nReturns `None` if the value for `minute` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(dt.with_minute(45), Some(NaiveTime::from_hms_nano_opt(23, 45, 4, 12_345_678).unwrap()));\nassert_eq!(dt.with_minute(60), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["min",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2754-0:2287:3327":{"id":"b:2:2754-0:2287:3327","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2724:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2287:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2757:135","2:2758:1630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1046:2690":{"id":"0:1046:2690","crate_id":0,"name":"succ","span":{"filename":"src/naive/date.rs","begin":[1073,4],"end":[1075,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the next calendar date.\n\n# Panics\n\nPanics when `self` is the last representable date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `succ_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `succ_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:87:2488":{"id":"0:87:2488","crate_id":0,"name":"sum","span":{"filename":"src/duration.rs","begin":[442,4],"end":[444,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iter",{"generic":"I"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8051:176","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2493:3479":{"id":"0:2493:3479","crate_id":0,"name":"Maybe","span":{"filename":"src/format/mod.rs","begin":[321,4],"end":[321,9]},"visibility":"default","docs":"No separator when formatting, colon allowed when parsing.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2521:1764":{"id":"0:2521:1764","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[336,15],"end":[336,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Box","id":"5:281:3299","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}},"0:2671":{"id":"0:2671","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2132,58],"end":[2132,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12976:41067":{"id":"2:12976:41067","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:8766"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:8782","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5828-0:2746:2163":{"id":"b:5:5828-0:2746:2163","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5826:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5830:1605"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1194:2171":{"id":"0:1194:2171","crate_id":0,"name":"MAX_DATETIME","span":{"filename":"src/naive/datetime/mod.rs","begin":[50,0],"end":[50,59]},"visibility":"public","docs":"The maximum possible `NaiveDateTime`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDateTime::MAX instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDateTime::MAX instead"},"inner":{"constant":{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"NaiveDateTime::MAX","value":null,"is_literal":false}}},"0:1912:725":{"id":"0:1912:725","crate_id":0,"name":"fmt","span":{"filename":"src/offset/utc.rs","begin":[151,4],"end":[153,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1510":{"id":"0:1510","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1329,0],"end":[1336,1]},"visibility":"default","docs":"Subtract `FixedOffset` from `NaiveTime`.\n\nThis wraps around and never overflows or underflows.\nIn particular the subtraction ignores integral number of days.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1511:206","0:1512:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:245:206":{"id":"0:245:206","crate_id":0,"name":"Output","span":{"filename":"src/date.rs","begin":[499,4],"end":[499,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:1547-0:2620:2161":{"id":"0:1547-0:2620:2161","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[533,22],"end":[533,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"inner":{"import":{"source":"naive::NaiveDate","name":"NaiveDate","id":"0:2620:2161","glob":false}}},"0:699:3935":{"id":"0:699:3935","crate_id":0,"name":"set_isoweek","span":{"filename":"src/format/parsed.rs","begin":[206,4],"end":[208,5]},"visibility":"public","docs":"Tries to set the [`isoweek`](#structfield.isoweek) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12909:4857":{"id":"2:12909:4857","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42354:198","prim@char":"1:12055:457","self::pattern":"2:12558:8766"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:504":{"id":"0:504","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1447,0],"end":[1456,1]},"visibility":"default","docs":"Subtract `FixedOffset` from the datetime value of `DateTime` (offset remains unchanged).\n\n# Panics\n\nPanics if the resulting date would be out of range.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:506:206","0:507:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42476:9167-0:2508:171":{"id":"a:2:42476:9167-0:2508:171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42476:9167-0:3060:2180":{"id":"a:2:42476:9167-0:3060:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32882:9016-0:2565:3498":{"id":"a:2:32882:9016-0:2565:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2623":{"id":"0:2623","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[191,9],"end":[191,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2624:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3145":{"id":"0:3145","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[230,9],"end":[230,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3146:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3147":{"id":"0:3147","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[230,16],"end":[230,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12967:4162":{"id":"2:12967:4162","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12055:457","self::pattern":"2:12558:8766"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:8780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1096:302":{"id":"0:1096:302","crate_id":0,"name":"add_assign","span":{"filename":"src/naive/date.rs","begin":[1907,4],"end":[1909,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2744-0:3040:2149":{"id":"b:2:2744-0:3040:2149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2444:3447":{"id":"0:2444:3447","crate_id":0,"name":"OffsetFormat","span":{"filename":"src/format/mod.rs","begin":[281,0],"end":[290,1]},"visibility":"public","docs":"Type for specifying the format of UTC offsets.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:2445:3449","0:2446:3452","0:2447:3455","0:2448:3457"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42477:9166-0:2444:3447","a:2:2966:253-0:2444:3447","a:2:32825:244-0:2444:3447","a:2:32882:9016-0:2444:3447","a:2:42476:9167-0:2444:3447","b:2:2754-0:2444:3447","b:2:2744-0:2444:3447","b:2:2748-0:2444:3447","b:2:2441-0:2444:3447","b:2:2444-0:2444:3447","b:2:3558-0:2444:3447","b:2:2759-0:2444:3447","b:5:687-0:2444:3447","0:2459","0:2454","0:2451","0:2452","0:2457","0:2449","0:2455"]}}},"0:1243:2747":{"id":"0:1243:2747","crate_id":0,"name":"year","span":{"filename":"src/naive/datetime/mod.rs","begin":[1114,4],"end":[1116,5]},"visibility":"default","docs":"Returns the year number in the [calendar date](./struct.NaiveDate.html#calendar-date).\n\nSee also the [`NaiveDate::year`](./struct.NaiveDate.html#method.year) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.year(), 2015);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211:2755":{"id":"0:211:2755","crate_id":0,"name":"with_month","span":{"filename":"src/date.rs","begin":[438,4],"end":[440,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1295":{"id":"0:1295","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1834,0],"end":[1841,1]},"visibility":"default","docs":"Subtract `chrono::Duration` from `NaiveDateTime`.\n\nThis is the same as the addition with a negated `Duration`.\n\nAs a part of Chrono's [leap second handling] the subtraction assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDateTime::checked_sub_signed`] to get an `Option` instead.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7) - Duration::zero(),             hms(3, 5, 7));\nassert_eq!(hms(3, 5, 7) - Duration::seconds(1),         hms(3, 5, 6));\nassert_eq!(hms(3, 5, 7) - Duration::seconds(-1),        hms(3, 5, 8));\nassert_eq!(hms(3, 5, 7) - Duration::seconds(3600 + 60), hms(2, 4, 7));\nassert_eq!(hms(3, 5, 7) - Duration::seconds(86_400),\n           from_ymd(2016, 7, 7).and_hms_opt(3, 5, 7).unwrap());\nassert_eq!(hms(3, 5, 7) - Duration::days(365),\n           from_ymd(2015, 7, 9).and_hms_opt(3, 5, 7).unwrap());\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli_opt(h, m, s, milli).unwrap();\nassert_eq!(hmsm(3, 5, 7, 450) - Duration::milliseconds(670), hmsm(3, 5, 6, 780));\n```\n\nLeap seconds are handled,\nbut the subtraction assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli_opt(h, m, s, milli).unwrap();\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap - Duration::zero(),            hmsm(3, 5, 59, 1_300));\nassert_eq!(leap - Duration::milliseconds(200), hmsm(3, 5, 59, 1_100));\nassert_eq!(leap - Duration::milliseconds(500), hmsm(3, 5, 59, 800));\nassert_eq!(leap - Duration::seconds(60),       hmsm(3, 5, 0, 300));\nassert_eq!(leap - Duration::days(1),\n           from_ymd(2016, 7, 7).and_hms_milli_opt(3, 6, 0, 300).unwrap());\n```\n\n[leap second handling]: crate::NaiveTime#leap-second-handling","links":{"crate::NaiveTime#leap-second-handling":"0:2746:2163","`NaiveDateTime::checked_sub_signed`":"0:1223:2713"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1296:206","0:1297:1565"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:365:2995":{"id":"0:365:2995","crate_id":0,"name":"from_timestamp","span":{"filename":"src/datetime/mod.rs","begin":[626,4],"end":[628,5]},"visibility":"public","docs":"Makes a new [`DateTime<Utc>`] from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nThis is guaranteed to round-trip with regard to [`timestamp`](DateTime::timestamp) and\n[`timestamp_subsec_nanos`](DateTime::timestamp_subsec_nanos).\n\nIf you need to create a `DateTime` with a [`TimeZone`] different from [`Utc`], use\n[`TimeZone::timestamp_opt`] or [`DateTime::with_timezone`].\n\nThe nanosecond part can exceed 1,000,000,000 in order to represent a\n[leap second](NaiveTime#leap-second-handling), but only when `secs % 60 == 59`.\n(The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)\n\n# Errors\n\nReturns `None` on out-of-range number of seconds and/or\ninvalid nanosecond, otherwise returns `Some(DateTime {...})`.\n\n# Example\n\n```\nuse chrono::{DateTime, Utc};\n\nlet dt: DateTime<Utc> = DateTime::<Utc>::from_timestamp(1431648000, 0).expect(\"invalid timestamp\");\n\nassert_eq!(dt.to_string(), \"2015-05-15 00:00:00 UTC\");\nassert_eq!(DateTime::from_timestamp(dt.timestamp(), dt.timestamp_subsec_nanos()).unwrap(), dt);\n```","links":{"NaiveTime#leap-second-handling":"0:2746:2163","`Utc`":"0:3047:2160","`DateTime::with_timezone`":"0:343:2705","`TimeZone`":"0:1934:2165","DateTime::timestamp_subsec_nanos":"0:340:2903","`TimeZone::timestamp_opt`":"0:1945:3229","`DateTime<Utc>`":"0:2154:2153","DateTime::timestamp":"0:333:2857"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["secs",{"primitive":"i64"}],["nsecs",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:531":{"id":"0:531","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1565,0],"end":[1574,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1934:2165","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:533:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2759":{"id":"0:2759","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[205,42],"end":[205,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2540:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2760:468"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:603:737":{"id":"0:603:737","crate_id":0,"name":"format","span":{"filename":"src/format/formatting.rs","begin":[146,0],"end":[166,1]},"visibility":"public","docs":"Tries to format given arguments with given formatting items.\nInternally used by `DelayedFormat`.","links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[deprecated(since = \"0.4.32\", note = \"Use DelayedFormat::fmt instead\")]"],"deprecation":{"since":"0.4.32","note":"Use DelayedFormat::fmt instead"},"inner":{"function":{"decl":{"inputs":[["w",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["date",{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"crate::NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["time",{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"crate::NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["off",{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"tuple":[{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"crate::FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}}}],"bindings":[]}}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8051:176","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2435:103","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"super::Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2444-0:2620:2161":{"id":"b:2:2444-0:2620:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2192:668":{"id":"0:2192:668","crate_id":0,"name":"eq","span":{"filename":"src/format/formatting.rs","begin":[509,33],"end":[509,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1132":{"id":"0:1132","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2154,0],"end":[2160,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["rfold","advance_back_by","try_rfold","rfind","nth_back"],"trait":{"name":"DoubleEndedIterator","id":"2:7942:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1133:5727"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1603":{"id":"0:1603","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[173,0],"end":[177,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1604:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3558-0:3047:2160":{"id":"b:2:3558-0:3047:2160","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1456:3087":{"id":"0:1456:3087","crate_id":0,"name":"parse_from_str","span":{"filename":"src/naive/time/mod.rs","begin":[539,4],"end":[543,5]},"visibility":"public","docs":"Parses a string with the specified format string and returns a new `NaiveTime`.\nSee the [`format::strftime` module](crate::format::strftime)\non the supported escape sequences.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet parse_from_str = NaiveTime::parse_from_str;\n\nassert_eq!(parse_from_str(\"23:56:04\", \"%H:%M:%S\"),\n           Ok(NaiveTime::from_hms_opt(23, 56, 4).unwrap()));\nassert_eq!(parse_from_str(\"pm012345.6789\", \"%p%I%M%S%.f\"),\n           Ok(NaiveTime::from_hms_micro_opt(13, 23, 45, 678_900).unwrap()));\n```\n\nDate and offset is ignored for the purpose of parsing.\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),\n           Ok(NaiveTime::from_hms_opt(12, 34, 56).unwrap()));\n```\n\n[Leap seconds](#leap-second-handling) are correctly handled by\ntreating any time of the form `hh:mm:60` as a leap second.\n(This equally applies to the formatting, so the round trip is possible.)\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert_eq!(parse_from_str(\"08:59:60.123\", \"%H:%M:%S%.f\"),\n           Ok(NaiveTime::from_hms_milli_opt(8, 59, 59, 1_123).unwrap()));\n```\n\nMissing seconds are assumed to be zero,\nbut out-of-bound times or insufficient fields are errors otherwise.\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert_eq!(parse_from_str(\"7:15\", \"%H:%M\"),\n           Ok(NaiveTime::from_hms_opt(7, 15, 0).unwrap()));\n\nassert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());\nassert!(parse_from_str(\"12\", \"%H\").is_err());\nassert!(parse_from_str(\"17:60\", \"%H:%M\").is_err());\nassert!(parse_from_str(\"24:00:00\", \"%H:%M:%S\").is_err());\n```\n\nAll parsed fields should be consistent to each other, otherwise it's an error.\nHere `%H` is for 24-hour clocks, unlike `%I`,\nand thus can be independently determined without AM/PM.\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert!(parse_from_str(\"13:07 AM\", \"%H:%M %p\").is_err());\n```","links":{"crate::format::strftime":"0:860:3302"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3071":{"id":"0:3071","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,9],"end":[41,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:3073:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1111:1565":{"id":"0:1111:1565","crate_id":0,"name":"sub","span":{"filename":"src/naive/date.rs","begin":[2034,4],"end":[2036,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:177:2711":{"id":"0:177:2711","crate_id":0,"name":"checked_add_signed","span":{"filename":"src/date.rs","begin":[267,4],"end":[270,5]},"visibility":"public","docs":"Adds given `Duration` to the current date.\n\nReturns `None` when it will result in overflow.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:360:2957":{"id":"0:360:2957","crate_id":0,"name":"to_rfc3339","span":{"filename":"src/datetime/mod.rs","begin":[545,4],"end":[553,5]},"visibility":"public","docs":"Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.","links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2508:171":{"id":"0:2508:171","crate_id":0,"name":"Item","span":{"filename":"src/format/mod.rs","begin":[326,0],"end":[344,1]},"visibility":"public","docs":"A single formatting item. This is used for both formatting and parsing.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:2510:3482","0:2513:3484","0:2516:3315","0:2519:3487","0:2522:3327","0:2526:2793","0:2529:135"],"impls":["a:2:42477:9166-0:2508:171","a:2:2966:253-0:2508:171","a:2:32825:244-0:2508:171","a:2:32882:9016-0:2508:171","a:2:42476:9167-0:2508:171","b:2:2754-0:2508:171","b:2:2744-0:2508:171","b:2:2748-0:2508:171","b:2:2441-0:2508:171","b:2:2444-0:2508:171","b:2:3558-0:2508:171","b:2:2759-0:2508:171","b:5:687-0:2508:171","0:2542","0:2531","0:2536","0:2545","0:2539","0:2534"]}}},"a:2:2966:253-0:2234:2605":{"id":"a:2:2966:253-0:2234:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:542":{"id":"0:542","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1620,0],"end":[1637,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"SystemTime","id":"1:9163:2788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:543:752"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2651:1146":{"id":"0:2651:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/date.rs","begin":[2096,46],"end":[2096,56]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:437:3133":{"id":"0:437:3133","crate_id":0,"name":"second","span":{"filename":"src/datetime/mod.rs","begin":[1126,4],"end":[1128,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2679":{"id":"0:2679","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[76,9],"end":[76,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2680:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1200:6032":{"id":"0:1200:6032","crate_id":0,"name":"from_timestamp_nanos","span":{"filename":"src/naive/datetime/mod.rs","begin":[226,4],"end":[231,5]},"visibility":"public","docs":"Creates a new [NaiveDateTime] from nanoseconds since the UNIX epoch.\n\nThe UNIX epoch starts on midnight, January 1, 1970, UTC.\n\n# Errors\n\nReturns `None` if the number of nanoseconds would be out of range for a `NaiveDateTime`\n(more than ca. 262,000 years away from common era)\n\n# Example\n\n```\nuse chrono::NaiveDateTime;\nlet timestamp_nanos: i64 = 1662921288_000_000_000; //Sunday, September 11, 2022 6:34:48 PM\nlet naive_datetime = NaiveDateTime::from_timestamp_nanos(timestamp_nanos);\nassert!(naive_datetime.is_some());\nassert_eq!(timestamp_nanos, naive_datetime.unwrap().timestamp_nanos_opt().unwrap());\n\n// Negative timestamps (before the UNIX epoch) are supported as well.\nlet timestamp_nanos: i64 = -2208936075_000_000_000; //Mon Jan 01 1900 14:38:45 GMT+0000\nlet naive_datetime = NaiveDateTime::from_timestamp_nanos(timestamp_nanos);\nassert!(naive_datetime.is_some());\nassert_eq!(timestamp_nanos, naive_datetime.unwrap().timestamp_nanos_opt().unwrap());\n```","links":{"NaiveDateTime":"0:2675:2162"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["nanos",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1283:206":{"id":"0:1283:206","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1675,4],"end":[1675,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:329:2830":{"id":"0:329:2830","crate_id":0,"name":"from_local","span":{"filename":"src/datetime/mod.rs","begin":[125,4],"end":[129,5]},"visibility":"public","docs":"Makes a new `DateTime` from a `NaiveDateTime` in *local* time and an `Offset`.\n\n# Panics\n\nPanics if the local datetime can't be converted to UTC because it would be out of range.\n\nThis can happen if `datetime` is near the end of the representable range of `NaiveDateTime`,\nand the offset from UTC pushes it beyond that.","links":{},"attrs":["#[inline]","#[must_use]","#[deprecated(since = \"0.4.27\", note =\n\"Use TimeZone::from_local_datetime() or NaiveDateTime::and_local_timezone instead\")]"],"deprecation":{"since":"0.4.27","note":"Use TimeZone::from_local_datetime() or NaiveDateTime::and_local_timezone instead"},"inner":{"function":{"decl":{"inputs":[["datetime",{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["offset",{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1934:2165","args":null}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1516":{"id":"0:1516","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1420,0],"end":[1446,1]},"visibility":"default","docs":"The `Debug` output of the naive time `t` is the same as\n[`t.format(\"%H:%M:%S%.f\")`](crate::format::strftime).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_opt(23, 56, 4).unwrap()),              \"23:56:04\");\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_milli_opt(23, 56, 4, 12).unwrap()),    \"23:56:04.012\");\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_micro_opt(23, 56, 4, 1234).unwrap()),  \"23:56:04.001234\");\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_nano_opt(23, 56, 4, 123456).unwrap()), \"23:56:04.000123456\");\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveTime;\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_milli_opt(6, 59, 59, 1_500).unwrap()), \"06:59:60.500\");\n```","links":{"crate::format::strftime":"0:860:3302"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1517:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3141:789":{"id":"0:3141:789","crate_id":0,"name":"hash","span":{"filename":"src/weekday.rs","begin":[32,44],"end":[32,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32882:9016-0:2161:2604":{"id":"a:2:32882:9016-0:2161:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1451:2677":{"id":"0:1451:2677","crate_id":0,"name":"from_hms_micro_opt","span":{"filename":"src/naive/time/mod.rs","begin":[370,4],"end":[378,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and microsecond.\n\nThe microsecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute, second and/or microsecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hmsu_opt = NaiveTime::from_hms_micro_opt;\n\nassert!(from_hmsu_opt(0, 0, 0, 0).is_some());\nassert!(from_hmsu_opt(23, 59, 59, 999_999).is_some());\nassert!(from_hmsu_opt(23, 59, 59, 1_999_999).is_some()); // a leap second after 23:59:59\nassert!(from_hmsu_opt(24, 0, 0, 0).is_none());\nassert!(from_hmsu_opt(23, 60, 0, 0).is_none());\nassert!(from_hmsu_opt(23, 59, 60, 0).is_none());\nassert!(from_hmsu_opt(23, 59, 59, 2_000_000).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2030:8296":{"id":"0:2030:8296","crate_id":0,"name":"from_i64","span":{"filename":"src/weekday.rs","begin":[201,4],"end":[212,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["n",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1484:3148":{"id":"0:1484:3148","crate_id":0,"name":"with_second","span":{"filename":"src/naive/time/mod.rs","begin":[1047,4],"end":[1053,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with the second number changed.\n\nAs with the [`second`](#method.second) method,\nthe input range is restricted to 0 through 59.\n\n# Errors\n\nReturns `None` if the value for `second` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(dt.with_second(17), Some(NaiveTime::from_hms_nano_opt(23, 56, 17, 12_345_678).unwrap()));\nassert_eq!(dt.with_second(60), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2746:2163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2240:461":{"id":"0:2240:461","crate_id":0,"name":"clone","span":{"filename":"src/format/strftime.rs","begin":[165,9],"end":[165,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"StrftimeItems","id":"0:2234:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3558-0:2620:2161":{"id":"b:2:3558-0:2620:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2744-0:3143:2185":{"id":"b:2:2744-0:3143:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2400":{"id":"0:2400","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[171,16],"end":[171,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2355:2793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2401:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1876:7287":{"id":"0:1876:7287","crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/local/mod.rs","begin":[166,4],"end":[169,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43:2434":{"id":"0:43:2434","crate_id":0,"name":"nanoseconds","span":{"filename":"src/duration.rs","begin":[186,4],"end":[189,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of nanoseconds.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["nanos",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:156:2656":{"id":"0:156:2656","crate_id":0,"name":"and_hms_opt","span":{"filename":"src/date.rs","begin":[111,4],"end":[113,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute and/or second.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:548:752":{"id":"0:548:752","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[1648,4],"end":[1657,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["dt",{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"SystemTime","id":"1:9163:2788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2058":{"id":"0:2058","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[253,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3226:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2059:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32825:244-0:2462:3450":{"id":"a:2:32825:244-0:2462:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2462:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:42:2431":{"id":"0:42:2431","crate_id":0,"name":"microseconds","span":{"filename":"src/duration.rs","begin":[178,4],"end":[182,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of microseconds.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["microseconds",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2392:3431":{"id":"0:2392:3431","crate_id":0,"name":"RFC3339","span":{"filename":"src/format/mod.rs","begin":[245,4],"end":[245,11]},"visibility":"default","docs":"RFC 3339 & ISO 8601 date and time syntax.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2613":{"id":"0:2613","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[133,39],"end":[133,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32827:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3079":{"id":"0:3079","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,27],"end":[41,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:3081:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3132:668":{"id":"0:3132:668","crate_id":0,"name":"eq","span":{"filename":"src/weekday.rs","begin":[32,9],"end":[32,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:120-0:1932:2164":{"id":"0:120-0:1932:2164","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[507,20],"end":[507,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::Offset","name":"Offset","id":"0:1932:2164","glob":false}}},"0:1285":{"id":"0:1285","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1695,0],"end":[1700,1]},"visibility":"default","docs":"Add-assign `chrono::Duration` to `NaiveDateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDateTime::checked_add_signed`] to get an `Option` instead.","links":{"`NaiveDateTime::checked_add_signed`":"0:1218:2711"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:33908:2348","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1286:302"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42477:9166-0:2161:2604":{"id":"a:2:42477:9166-0:2161:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42477:9166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2604","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2191":{"id":"0:2191","crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[509,33],"end":[509,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy::manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2170:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2192:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32882:9016-0:2620:2161":{"id":"a:2:32882:9016-0:2620:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32882:9016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42476:9167-0:2154:2153":{"id":"a:2:42476:9167-0:2154:2153","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1287":{"id":"0:1287","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1712,0],"end":[1717,1]},"visibility":"default","docs":"Add-assign `std::time::Duration` to `NaiveDateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDateTime::checked_add_signed`] to get an `Option` instead.","links":{"`NaiveDateTime::checked_add_signed`":"0:1218:2711"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:33908:2348","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1288:302"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2742:461":{"id":"0:2742:461","crate_id":0,"name":"clone","span":{"filename":"src/naive/isoweek.rs","begin":[19,47],"end":[19,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1496:302":{"id":"0:1496:302","crate_id":0,"name":"add_assign","span":{"filename":"src/naive/time/mod.rs","begin":[1210,4],"end":[1212,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2056:8388":{"id":"0:2056:8388","crate_id":0,"name":"as_u32","span":{"filename":"src/month.rs","begin":[239,4],"end":[241,5]},"visibility":"public","docs":"Returns the total number of months in the `Months` instance.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2518:1764":{"id":"0:2518:1764","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[333,10],"end":[333,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}},"0:689:3925":{"id":"0:689:3925","crate_id":0,"name":"set_isoyear_div_100","span":{"filename":"src/format/parsed.rs","begin":[164,4],"end":[172,5]},"visibility":"public","docs":"Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:149:2168":{"id":"0:149:2168","crate_id":0,"name":"MIN_DATE","span":{"filename":"src/date.rs","begin":[68,0],"end":[68,53]},"visibility":"public","docs":"The minimum possible `Date`.","links":{},"attrs":["#[allow(deprecated)]","#[deprecated(since = \"0.4.20\", note = \"Use Date::MIN_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use Date::MIN_UTC instead"},"inner":{"constant":{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"expr":"Date<Utc>::MIN_UTC","value":null,"is_literal":false}}},"0:706:3944":{"id":"0:706:3944","crate_id":0,"name":"set_ampm","span":{"filename":"src/format/parsed.rs","begin":[231,4],"end":[233,5]},"visibility":"public","docs":"Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.\n(`false` for AM, `true` for PM)","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"bool"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:362:2633":{"id":"0:362:2633","crate_id":0,"name":"MIN_UTC","span":{"filename":"src/datetime/mod.rs","begin":[589,4],"end":[589,94]},"visibility":"public","docs":"The minimum possible `DateTime<Utc>`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"default":"_"}}},"b:2:2444-0:2565:3498":{"id":"b:2:2444-0:2565:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2446:7440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2655:468":{"id":"0:2655:468","crate_id":0,"name":"cmp","span":{"filename":"src/naive/date.rs","begin":[2096,62],"end":[2096,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5828-0:3143:2185":{"id":"b:5:5828-0:3143:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5826:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5830:1605"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:397:2791":{"id":"0:397:2791","crate_id":0,"name":"parse_and_remainder","span":{"filename":"src/datetime/mod.rs","begin":[879,4],"end":[886,5]},"visibility":"public","docs":"Parses a string from a user-specified format into a `DateTime<FixedOffset>` value, and a\nslice with the remaining portion of the string.\n\nNote that this method *requires a timezone* in the input string. See\n[`NaiveDateTime::parse_and_remainder`] for a version that does not\nrequire a timezone in `s`. The returned [`DateTime`] value will have a [`FixedOffset`]\nreflecting the parsed timezone.\n\nSee the [`format::strftime` module](./format/strftime/index.html) for supported format\nsequences.\n\nSimilar to [`parse_from_str`](#method.parse_from_str).\n\n# Example\n\n```rust\n# use chrono::{DateTime, FixedOffset, TimeZone};\nlet (datetime, remainder) = DateTime::parse_and_remainder(\n    \"2015-02-18 23:16:09 +0200 trailing text\", \"%Y-%m-%d %H:%M:%S %z\").unwrap();\nassert_eq!(\n    datetime,\n    FixedOffset::east_opt(2*3600).unwrap().with_ymd_and_hms(2015, 2, 18, 23, 16, 9).unwrap()\n);\nassert_eq!(remainder, \" trailing text\");\n```","links":{"`NaiveDateTime::parse_and_remainder`":"0:1203:2791","`DateTime`":"0:2154:2153","`FixedOffset`":"0:2764:2159"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:691:9599":{"id":"5:691:9599","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1279":{"id":"0:1279","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1655,0],"end":[1662,1]},"visibility":"default","docs":"Add `chrono::Duration` to `NaiveDateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`NaiveDateTime::checked_add_signed`] to get an `Option` instead.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7) + Duration::zero(),             hms(3, 5, 7));\nassert_eq!(hms(3, 5, 7) + Duration::seconds(1),         hms(3, 5, 8));\nassert_eq!(hms(3, 5, 7) + Duration::seconds(-1),        hms(3, 5, 6));\nassert_eq!(hms(3, 5, 7) + Duration::seconds(3600 + 60), hms(4, 6, 7));\nassert_eq!(hms(3, 5, 7) + Duration::seconds(86_400),\n           from_ymd(2016, 7, 9).and_hms_opt(3, 5, 7).unwrap());\nassert_eq!(hms(3, 5, 7) + Duration::days(365),\n           from_ymd(2017, 7, 8).and_hms_opt(3, 5, 7).unwrap());\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli_opt(h, m, s, milli).unwrap();\nassert_eq!(hmsm(3, 5, 7, 980) + Duration::milliseconds(450), hmsm(3, 5, 8, 430));\n```\n\nLeap seconds are handled,\nbut the addition assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli_opt(h, m, s, milli).unwrap();\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap + Duration::zero(),             hmsm(3, 5, 59, 1_300));\nassert_eq!(leap + Duration::milliseconds(-500), hmsm(3, 5, 59, 800));\nassert_eq!(leap + Duration::milliseconds(500),  hmsm(3, 5, 59, 1_800));\nassert_eq!(leap + Duration::milliseconds(800),  hmsm(3, 6, 0, 100));\nassert_eq!(leap + Duration::seconds(10),        hmsm(3, 6, 9, 300));\nassert_eq!(leap + Duration::seconds(-10),       hmsm(3, 5, 50, 300));\nassert_eq!(leap + Duration::days(1),\n           from_ymd(2016, 7, 9).and_hms_milli_opt(3, 5, 59, 300).unwrap());\n```\n\n[leap second handling]: crate::NaiveTime#leap-second-handling","links":{"crate::NaiveTime#leap-second-handling":"0:2746:2163","`NaiveDateTime::checked_add_signed`":"0:1218:2711"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1280:206","0:1281:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1029:2929":{"id":"0:1029:2929","crate_id":0,"name":"checked_add_days","span":{"filename":"src/naive/date.rs","begin":[753,4],"end":[758,5]},"visibility":"public","docs":"Add a duration in [`Days`] to the date\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\n# use chrono::{NaiveDate, Days};\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_add_days(Days::new(9)),\n    Some(NaiveDate::from_ymd_opt(2022, 3, 1).unwrap())\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 7, 31).unwrap().checked_add_days(Days::new(2)),\n    Some(NaiveDate::from_ymd_opt(2022, 8, 2).unwrap())\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 7, 31).unwrap().checked_add_days(Days::new(1000000000000)),\n    None\n);\n```","links":{"`Days`":"0:2600:2177"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2486:789":{"id":"0:2486:789","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[293,44],"end":[293,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3057":{"id":"0:3057","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,37],"end":[43,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3058:789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:520":{"id":"0:520","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1507,0],"end":[1513,1]},"visibility":"default","docs":"Add `Days` to `NaiveDateTime`.\n\n# Panics\n\nPanics if:\n- The resulting date would be out of range.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.\n\nStrongly consider using `DateTime<Tz>::checked_sub_days` to get an `Option` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:522:206","0:523:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2139":{"id":"0:2139","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[487,16],"end":[487,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2140:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2744-0:2565:3498":{"id":"b:2:2744-0:2565:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2747:3255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2048:135":{"id":"0:2048:135","crate_id":0,"name":"Error","span":{"filename":"src/month.rs","begin":[168,4],"end":[168,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"OutOfRange","id":"0:3235:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2302:3344":{"id":"0:2302:3344","crate_id":0,"name":"Day","span":{"filename":"src/format/mod.rs","begin":[119,4],"end":[119,7]},"visibility":"default","docs":"Day of the month (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2116:461":{"id":"0:2116:461","crate_id":0,"name":"clone","span":{"filename":"src/duration.rs","begin":[53,9],"end":[53,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2270:3313":{"id":"0:2270:3313","crate_id":0,"name":"Zero","span":{"filename":"src/format/mod.rs","begin":[82,4],"end":[82,8]},"visibility":"default","docs":"Zero (`0`) padding.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1004":{"id":"0:1004","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[136,0],"end":[141,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Days","id":"0:2600:2177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1005:1048"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:111-0:3108:2158":{"id":"0:111-0:3108:2158","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[504,47],"end":[504,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::Weekday","name":"Weekday","id":"0:3108:2158","glob":false}}},"0:1943:5841":{"id":"0:1943:5841","crate_id":0,"name":"isoywd_opt","span":{"filename":"src/offset/mod.rs","begin":[338,4],"end":[343,5]},"visibility":"default","docs":"Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date and/or invalid week number.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_local_datetime()` with a `NaiveDateTime` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` with a `NaiveDateTime` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["week",{"primitive":"u32"}],["weekday",{"resolved_path":{"name":"Weekday","id":"0:3108:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2147:2148","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35:2412":{"id":"0:35:2412","crate_id":0,"name":"hours","span":{"filename":"src/duration.rs","begin":[118,4],"end":[120,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["hours",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:383":{"id":"0:383","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[736,0],"end":[744,1]},"visibility":"default","docs":"Convert a `DateTime<Local>` instance into a `DateTime<Utc>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:384:752"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:533:725":{"id":"0:533:725","crate_id":0,"name":"fmt","span":{"filename":"src/datetime/mod.rs","begin":[1569,4],"end":[1573,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2502:668":{"id":"0:2502:668","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[314,29],"end":[314,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:0:1983-0:2154:2153":{"id":"b:0:1983-0:2154:2153","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[49,0],"end":[77,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sub","id":"2:3017:2352","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2112:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Timelike","id":"0:2089:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"SubsecRound","id":"0:1980:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:1985:8123","0:1986:8128"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:488:206":{"id":"0:488:206","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1352,4],"end":[1352,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:3089:789":{"id":"0:3089:789","crate_id":0,"name":"hash","span":{"filename":"src/offset/mod.rs","begin":[41,44],"end":[41,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3558-0:3091:2183":{"id":"b:2:3558-0:3091:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3091:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1541-0:1194:2171":{"id":"0:1541-0:1194:2171","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[20,40],"end":[20,52]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"self::datetime::MAX_DATETIME","name":"MAX_DATETIME","id":"0:1194:2171","glob":false}}},"0:481:302":{"id":"0:481:302","crate_id":0,"name":"add_assign","span":{"filename":"src/datetime/mod.rs","begin":[1315,4],"end":[1319,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42476:9167-0:2409:3432":{"id":"a:2:42476:9167-0:2409:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2757:135":{"id":"2:2757:135","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2728:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:1013:2776":{"id":"0:1013:2776","crate_id":0,"name":"from_ymd_opt","span":{"filename":"src/naive/date.rs","begin":[292,4],"end":[300,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n(year, month and day).\n\n# Errors\n\nReturns `None` if:\n- The specified calendar day does not exist (for example 2023-04-31).\n- The value for `month` or `day` is invalid.\n- `year` is out of range for `NaiveDate`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet from_ymd_opt = NaiveDate::from_ymd_opt;\n\nassert!(from_ymd_opt(2015, 3, 14).is_some());\nassert!(from_ymd_opt(2015, 0, 14).is_none());\nassert!(from_ymd_opt(2015, 2, 29).is_none());\nassert!(from_ymd_opt(-4, 2, 29).is_some()); // 5 BCE is a leap year\nassert!(from_ymd_opt(400000, 1, 1).is_none());\nassert!(from_ymd_opt(-400000, 1, 1).is_none());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:263:725":{"id":"0:263:725","crate_id":0,"name":"fmt","span":{"filename":"src/date.rs","begin":[540,4],"end":[543,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2674:468":{"id":"0:2674:468","crate_id":0,"name":"cmp","span":{"filename":"src/naive/date.rs","begin":[2132,62],"end":[2132,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31574:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1925:2656":{"id":"0:1925:2656","crate_id":0,"name":"and_hms_opt","span":{"filename":"src/offset/mod.rs","begin":[115,4],"end":[122,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3060:2180","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2748-0:2656:5110":{"id":"b:2:2748-0:2656:5110","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2656:5110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:482":{"id":"0:482","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1327,0],"end":[1336,1]},"visibility":"default","docs":"Add `FixedOffset` to the datetime value of `DateTime` (offset remains unchanged).\n\n# Panics\n\nPanics if the resulting date would be out of range.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:484:206","0:485:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1125:5727":{"id":"0:1125:5727","crate_id":0,"name":"next_back","span":{"filename":"src/naive/date.rs","begin":[2121,4],"end":[2126,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:8051:176","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1587:3605":{"id":"0:1587:3605","crate_id":0,"name":"local_minus_utc","span":{"filename":"src/offset/fixed.rs","begin":[109,4],"end":[111,5]},"visibility":"public","docs":"Returns the number of seconds to add to convert from UTC to the local time.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:97-0:2112:129":{"id":"0:97-0:2112:129","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[487,0],"end":[487,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"duration::Duration","name":"Duration","id":"0:2112:129","glob":false}}},"0:393:3058":{"id":"0:393:3058","crate_id":0,"name":"parse_from_rfc2822","span":{"filename":"src/datetime/mod.rs","begin":[800,4],"end":[805,5]},"visibility":"public","docs":"Parses an RFC 2822 date-and-time string into a `DateTime<FixedOffset>` value.\n\nThis parses valid RFC 2822 datetime strings (such as `Tue, 1 Jul 2003 10:52:37 +0200`)\nand returns a new [`DateTime`] instance with the parsed timezone as the [`FixedOffset`].\n\nRFC 2822 is the internet message standard that specifies the representation of times in HTTP\nand email headers. It is the 2001 revision of RFC 822, and is itself revised as RFC 5322 in\n2008.\n\n# Support for the obsolete date format\n\n- A 2-digit year is interpreted to be a year in 1950-2049.\n- The standard allows comments and whitespace between many of the tokens. See [4.3] and\n  [Appendix A.5]\n- Single letter 'military' time zone names are parsed as a `-0000` offset.\n  They were defined with the wrong sign in RFC 822 and corrected in RFC 2822. But because\n  the meaning is now ambiguous, the standard says they should be be considered as `-0000`\n  unless there is out-of-band information confirming their meaning.\n  The exception is `Z`, which remains identical to `+0000`.\n\n[4.3]: https://www.rfc-editor.org/rfc/rfc2822#section-4.3\n[Appendix A.5]: https://www.rfc-editor.org/rfc/rfc2822#appendix-A.5\n\n# Example\n\n```\n# use chrono::{DateTime, FixedOffset, TimeZone};\nassert_eq!(\n    DateTime::parse_from_rfc2822(\"Wed, 18 Feb 2015 23:16:09 GMT\").unwrap(),\n    FixedOffset::east_opt(0).unwrap().with_ymd_and_hms(2015, 2, 18, 23, 16, 9).unwrap()\n);\n```","links":{"`DateTime`":"0:2154:2153","`FixedOffset`":"0:2764:2159"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:931:2175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2276:461":{"id":"0:2276:461","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[77,15],"end":[77,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Pad","id":"0:2267:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3043":{"id":"0:3043","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[106,15],"end":[106,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3044:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3045":{"id":"0:3045","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[106,22],"end":[106,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3040:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3046:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:411:2186":{"id":"0:411:2186","crate_id":0,"name":"month","span":{"filename":"src/datetime/mod.rs","begin":[971,4],"end":[973,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3127:3596":{"id":"0:3127:3596","crate_id":0,"name":"Sun","span":{"filename":"src/weekday.rs","begin":[56,4],"end":[56,11]},"visibility":"default","docs":"Sunday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"6","value":"6"}}}},"2:12890:36612":{"id":"2:12890:36612","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:12889:36611"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2498":{"id":"0:2498","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[314,22],"end":[314,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2488:3453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2499:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:543:752":{"id":"0:543:752","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[1621,4],"end":[1636,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"resolved_path":{"name":"SystemTime","id":"1:9163:2788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3047:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32825:244-0:2764:2159":{"id":"a:2:32825:244-0:2764:2159","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32825:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2764:2159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1083:2753":{"id":"0:1083:2753","crate_id":0,"name":"iso_week","span":{"filename":"src/naive/date.rs","begin":[1675,4],"end":[1677,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"IsoWeek","id":"0:2729:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2446:7440":{"id":"2:2446:7440","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1284:301":{"id":"0:1284:301","crate_id":0,"name":"add","span":{"filename":"src/naive/datetime/mod.rs","begin":[1678,4],"end":[1682,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2416":{"id":"0:2416","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[255,23],"end":[255,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2409:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2417:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:472":{"id":"0:472","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1272,0],"end":[1281,1]},"visibility":"default","docs":"Add `std::time::Duration` to `DateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range.\nConsider using [`DateTime<Tz>::checked_add_signed`] to get an `Option` instead.","links":{"`DateTime<Tz>::checked_add_signed`":"0:347:2711"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1934:2165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3012:2347","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:45005:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2153","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:474:206","0:475:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2558:668":{"id":"0:2558:668","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[367,23],"end":[367,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParseError","id":"0:2549:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2038-0:3108:2158":{"id":"0:2038-0:3108:2158","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[550,0],"end":[550,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"weekday::Weekday","name":"Weekday","id":"0:3108:2158","glob":false}}},"0:1540-0:2675:2162":{"id":"0:1540-0:2675:2162","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[20,25],"end":[20,38]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"self::datetime::NaiveDateTime","name":"NaiveDateTime","id":"0:2675:2162","glob":false}}},"0:2036:725":{"id":"0:2036:725","crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[245,4],"end":[247,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12995:41070":{"id":"2:12995:41070","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4738:41070"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44538:8808","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3558-0:2508:171":{"id":"b:2:3558-0:2508:171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32826:7216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3556:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2508:171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3560:1643"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42476:9167-0:2637:5109":{"id":"a:2:42476:9167-0:2637:5109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42476:9167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2637:5109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2744:789":{"id":"0:2744:789","crate_id":0,"name":"hash","span":{"filename":"src/naive/isoweek.rs","begin":[19,54],"end":[19,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2600:2177":{"id":"0:2600:2177","crate_id":0,"name":"Days","span":{"filename":"src/naive/date.rs","begin":[134,0],"end":[134,32]},"visibility":"public","docs":"A duration in calendar days.\n\nThis is useful because when using `Duration` it is possible\nthat adding `Duration::days(1)` doesn't increment the day value as expected due to it being a\nfixed number of seconds. This difference applies only when dealing with `DateTime<TimeZone>` data types\nand in other cases `Duration::days(n)` and `Days::new(n)` are equivalent.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1004","a:2:42477:9166-0:2600:2177","a:2:2966:253-0:2600:2177","a:2:32825:244-0:2600:2177","a:2:32882:9016-0:2600:2177","a:2:42476:9167-0:2600:2177","b:2:2754-0:2600:2177","b:2:2744-0:2600:2177","b:2:2748-0:2600:2177","b:2:2441-0:2600:2177","b:2:2444-0:2600:2177","b:2:3558-0:2600:2177","b:2:2759-0:2600:2177","b:5:687-0:2600:2177","0:2616","0:2618","0:520","0:2605","0:1103","0:2613","0:1317","0:524","0:1314","0:2610","0:1106","0:2603","0:2606","0:2614","0:2608"]}}},"0:915-0:2161:2604":{"id":"0:915-0:2161:2604","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[64,42],"end":[64,55]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]","#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"formatting::DelayedFormat","name":"DelayedFormat","id":"0:2161:2604","glob":false}}},"0:3146:461":{"id":"0:3146:461","crate_id":0,"name":"clone","span":{"filename":"src/weekday.rs","begin":[230,9],"end":[230,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3143:2185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2364:3394":{"id":"0:2364:3394","crate_id":0,"name":"LowerAmPm","span":{"filename":"src/format/mod.rs","begin":[192,4],"end":[192,13]},"visibility":"default","docs":"AM/PM.\n\nPrints in lower case, reads in any case.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2966:253-0:2620:2161":{"id":"a:2:2966:253-0:2620:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2456:668":{"id":"0:2456:668","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[280,29],"end":[280,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"OffsetFormat","id":"0:2444:3447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2966:253-0:2675:2162":{"id":"a:2:2966:253-0:2675:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2966:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2675:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1133:5727":{"id":"0:1133:5727","crate_id":0,"name":"next_back","span":{"filename":"src/naive/date.rs","begin":[2155,4],"end":[2159,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42352:201","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:8051:176","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2140:461":{"id":"0:2140:461","crate_id":0,"name":"clone","span":{"filename":"src/duration.rs","begin":[487,16],"end":[487,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"OutOfRangeError","id":"0:2134:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:331:2847":{"id":"0:331:2847","crate_id":0,"name":"date_naive","span":{"filename":"src/datetime/mod.rs","begin":[171,4],"end":[174,5]},"visibility":"public","docs":"Retrieves the date component.\n\n# Panics\n\n[`DateTime`] internally stores the date and time in UTC with a [`NaiveDateTime`]. This\nmethod will panic if the offset from UTC would push the local date outside of the\nrepresentable range of a [`NaiveDate`].\n\n# Example\n\n```\nuse chrono::prelude::*;\n\nlet date: DateTime<Utc> = Utc.with_ymd_and_hms(2020, 1, 1, 0, 0, 0).unwrap();\nlet other: DateTime<FixedOffset> = FixedOffset::east_opt(23).unwrap().with_ymd_and_hms(2020, 1, 1, 0, 0, 0).unwrap();\nassert_eq!(date.date_naive(), other.date_naive());\n```","links":{"`NaiveDateTime`":"0:2675:2162","`DateTime`":"0:2154:2153","`NaiveDate`":"0:2620:2161"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2620:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:2565:3498":{"id":"b:5:687-0:2565:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:9597","5:690:9598","5:691:9599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2748-0:2565:3498":{"id":"b:2:2748-0:2565:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2565:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2750:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}}},"paths":{"2:2721:142":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:3435:8831":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:12969:10856":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"5:7319:13318":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"16:7998:11721":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"6:5910:12941":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"21:562:10146":{"crate_id":21,"path":["num_traits","NumRef"],"kind":"trait"},"2:8369:8841":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:3431:8708":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:3310:8989":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:10828:41856":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:13272:10908":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:15168:11362":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"16:7889:12064":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"6:501:12318":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:8939:13776":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:7946:137":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"16:7653:12022":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"6:5004:12825":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"16:6882:11945":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:21565:8948":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:12076:1648":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:15190:11367":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"6:6114:13051":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:6966:10471":{"crate_id":1,"path":["std","sys","pal","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"6:574:12363":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"6:5085:12860":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:40806:8809":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:38552:8687":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:5701:10464":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:4388:12550":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:43984:14445":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"21:527:10191":{"crate_id":21,"path":["num_traits","sign","Signed"],"kind":"trait"},"2:22562:13354":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:43095:8737":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"0:3091:2183":{"crate_id":0,"path":["chrono","round","RoundingError"],"kind":"enum"},"2:46375:13692":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"16:6077:14352":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:43353:12041":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:12318:10801":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"16:7429:41849":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:11269:28594":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"1:7912:8941":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:44443:8803":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:14271:11109":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:39911:8707":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"2:42477:9166":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:8363:8840":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:32809:8747":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"17:15092:11346":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:3268:8987":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:12072:1652":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"17:11634:10741":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"0:2368:3367":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond"],"kind":"variant"},"2:45262:13681":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:2341:642":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"17:14912:11312":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:22699:13360":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:10092:28565":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:23797:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"11:1087:41845":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"6:4523:12624":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:44239:8799":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:1697:12504":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:12707:14340":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"21:487:10185":{"crate_id":21,"path":["num_traits","ops","wrapping","WrappingShr"],"kind":"trait"},"2:4333:8893":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:22211:16596":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"1:10670:13789":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"17:15655:11505":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:12530:14333":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"6:4549:12637":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"5:7653:9891":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"18:643:10550":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:3560:33442":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:3039:8694":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"2:44225:8791":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:8922:13775":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:8407:39068":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:22388:16602":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:22448:16593":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"2:42535:9009":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"16:6099:14367":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:44123:14448":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"5:6631:9557":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"6:6086:13038":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:5015:12828":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"11:430:15665":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"6:4698:12682":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:10431:10439":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:48478:13735":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:47435:13719":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"16:5919:28498":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:7613:14189":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:1602:12215":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"18:623:41865":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"6:4968:12801":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:41365:8871":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:6215:10450":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"16:4733:11746":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:8295:14488":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:11755:10752":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"1:10728:8944":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"18:548:150":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:4809:16429":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:41114:8862":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:4628:8749":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"5:7584:13327":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:13424:10931":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"16:6431:11708":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"5:830:10390":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"17:15426:11427":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:10439:10706":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:15126:11349":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:41206:8868":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:10651:246":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:14516:11149":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:11501:14459":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:2446:8935":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"16:7609:12014":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:12053:407":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:437:10647":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"5:1440:9603":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"19:0:1142":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:14994:11324":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:11825:14309":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"14:160:14169":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:22482:16592":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"11:1923:12216":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:12070:805":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:2032:205":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:11467:10737":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:44864:8785":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"16:6030:11830":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:4376:8746":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:11324:14279":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:15313:11395":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"18:113:15649":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"11:1917:12215":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"0:2469:3469":{"crate_id":0,"path":["chrono","format","OffsetPrecision","OptionalMinutes"],"kind":"variant"},"1:4560:16441":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:12300:28686":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"2:46344:13691":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:7802:16376":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"6:6913:13237":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:6700:13136":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:513:14248":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"16:2355:11676":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:9755:28540":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:11128:10686":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:4706:13158":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"6:1632:12465":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:40910:13590":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"5:2998:15094":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:10463:10445":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"15:306:15657":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:39875:8710":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:14147:11073":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"11:1891:9890":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"0:2308:2178":{"crate_id":0,"path":["chrono","format","Numeric","IsoWeek"],"kind":"variant"},"17:13173:10880":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"11:364:10378":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:3512:8945":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:8908:14493":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"16:2835:11698":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:12328:10802":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:15151:11357":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"6:475:12305":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"1:12054:1044":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:5450:14466":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"16:5662:28496":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:33302:2350":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:2268:8921":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:12371:10854":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"6:569:12361":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:46150:13683":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:48449:13732":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:10877:14266":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"5:4396:10403":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"20:0:2232":{"crate_id":20,"path":["iana_time_zone"],"kind":"module"},"6:4603:12664":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:15748:11533":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"6:6764:13164":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:3556:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"1:3308:8988":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:40721:8809":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:5569:14470":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:7863:2487":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"5:6549:10385":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"11:742:9894":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:10759:10730":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:41013:8845":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:5815:14471":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"0:100:1180":{"crate_id":0,"path":["chrono","prelude"],"kind":"module"},"2:3185:138":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:40066:223":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"6:1604:12441":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:6609:14184":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:13844:11029":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:1207:14250":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:13473:10941":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:38607:8688":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"17:15197:11369":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"11:1160:9903":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:6495:8828":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"5:3211:40430":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:15814:11545":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"16:3709:11728":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"6:495:12316":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"20:61:9920":{"crate_id":20,"path":["iana_time_zone","GetTimezoneError"],"kind":"enum"},"21:477:10186":{"crate_id":21,"path":["num_traits","ops","wrapping","WrappingSub"],"kind":"trait"},"17:12485:28688":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:8343:13756":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"0:2409:3432":{"crate_id":0,"path":["chrono","format","InternalFixed"],"kind":"struct"},"21:0:2233":{"crate_id":21,"path":["num_traits"],"kind":"module"},"17:13064:10864":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:44503:8796":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"6:6666:13117":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"11:1910:12214":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:12106:7804":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:47389:13718":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:40727:13576":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:1795:641":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"6:548:12350":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:16138:11627":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"1:10338:14491":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"21:98:32754":{"crate_id":21,"path":["num_traits","bounds","LowerBounded"],"kind":"trait"},"17:11773:10833":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:2271:7465":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:41167:8865":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:2504:208":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:8616:9011":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:34627:8683":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:12289:10796":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"16:2859:11699":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"5:7594:14177":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:22433:8948":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"0:1932:2164":{"crate_id":0,"path":["chrono","offset","Offset"],"kind":"trait"},"2:21324:39122":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"5:7492:9344":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:7973:7449":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"1:7735:9342":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:21358:39134":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"0:3060:2180":{"crate_id":0,"path":["chrono","offset","LocalResult"],"kind":"enum"},"17:15390:11418":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:2584:8977":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"6:6159:13065":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:31032:8744":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"0:2310:3351":{"crate_id":0,"path":["chrono","format","Numeric","NumDaysFromSun"],"kind":"variant"},"1:4249:15677":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:4813:16432":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"6:1596:12436":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:21302:8731":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:928:9896":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:5278:11758":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:40833:13584":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"6:4854:12744":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:7932:12069":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"17:14246:11106":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"16:3773:11730":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:47075:13713":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"16:7869:12063":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:11382:13808":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:12071:801":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:22975:196":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:44538:8808":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"16:5580:11705":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"6:4800:12716":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:12362:10812":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"6:7556:13275":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:909:9892":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"14:214:12157":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:6012:13003":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:44307:8798":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:4755:12694":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:4814:12722":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:13814:11026":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"6:6047:13024":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:24025:243":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"16:4813:11749":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:4480:12608":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:7740:9343":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"17:3264:14256":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:3739:16412":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"16:5555:14343":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"6:4932:12780":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:3266:8986":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"0:2462:3450":{"crate_id":0,"path":["chrono","format","OffsetPrecision"],"kind":"enum"},"2:31574:203":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:11079:8802":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:15266:11385":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:10718:126":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"16:6692:11921":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"16:8109:135":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:40008:219":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"6:1537:12397":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"11:2140:9901":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"17:10612:14262":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"16:5630:11770":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:4428:12582":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:40884:13589":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"5:1151:15672":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"6:4914:12769":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"1:10155:15188":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"2:46605:13700":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"6:7343:13261":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:4821:14259":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"2:22864:8912":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"0:2374:3405":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond9"],"kind":"variant"},"17:14311:11113":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:44812:21666":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"9:391:27489":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:13877:11037":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:4527:8747":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"1:2728:8980":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"6:6927:13246":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"5:4381:270":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:6679:10469":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:8051:176":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:32795:5790":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"2:42114:13605":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"16:6788:41851":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"5:3232:12215":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:3188:139":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:12563:8780":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"11:2124:9900":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:46819:13707":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:6889:13227":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:12278:14329":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:9445:136":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"2:10254:8904":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"17:12388:10813":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:859:9557":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:14038:11057":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:9107:13783":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:21514:16517":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:3906:14461":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:39959:8699":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:4708:13160":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"17:15635:11502":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:14131:11068":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:2718:160":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"1:9452:8941":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"17:11799:14304":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:10440:8986":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"2:9039:9165":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:48431:13731":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"6:4724:12684":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:40966:14444":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:10008:8737":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:40956:10428":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:5637:13066":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:7449:8822":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"5:3245:40434":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:8879:13773":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"11:1676:10382":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:13116:10869":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"17:10534:41859":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:5123:12883":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"6:7692:13297":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:32826:7216":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"18:507:10550":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:14986:11323":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"6:6059:13029":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"18:531:10555":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"0:2272:3315":{"crate_id":0,"path":["chrono","format","Pad","Space"],"kind":"variant"},"5:2249:40401":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:13972:10761":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:8066:14481":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:44959:8776":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"11:1883:9009":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"0:1934:2165":{"crate_id":0,"path":["chrono","offset","TimeZone"],"kind":"trait"},"21:336:10163":{"crate_id":21,"path":["num_traits","ops","bytes","FromBytes"],"kind":"trait"},"16:5865:11801":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:8210:8991":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"17:12711:135":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:4764:12699":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:47499:13721":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:16151:11633":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"1:951:9899":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:10448:10440":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:48489:13736":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"6:4824:12728":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:13412:10930":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:15616:11496":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:15039:11333":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:10211:150":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:42435:9163":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"18:689:10576":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:5822:14474":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:13187:39352":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:48583:13742":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"16:2995:27637":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:261:14246":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"4:0:8543":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"5:7571:250":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:5309:210":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"16:3177:11667":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"16:6811:28502":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:39296:8691":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"14:31:14169":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"16:7103:41852":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"16:7619:28506":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"16:6201:11700":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:48185:13726":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:41216:8852":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:21356:39126":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"16:5825:11797":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"5:5408:8918":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"5:2196:13303":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:1590:12213":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:26425:272":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:13292:10909":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:15445:11432":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:10737:33258":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"17:11841:14311":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"0:2304:3346":{"crate_id":0,"path":["chrono","format","Numeric","WeekFromSun"],"kind":"variant"},"1:4769:16467":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"5:6893:10011":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:9916:28561":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:48247:13727":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:2234:14255":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:40986:8943":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"17:15418:11425":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:46675:13702":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:22125:16515":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:11841:10489":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"6:4676:12680":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:11618:13813":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:15078:11342":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:14560:11156":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:4453:8880":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"5:1487:9889":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"11:1007:9900":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:22615:13355":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:10675:8938":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"2:44979:8772":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:43576:8905":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"17:15778:11541":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"9:0:8545":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:6612:16481":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:43074:8735":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:5515:112":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"11:787:9889":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2:34281:8681":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"0:2380:3416":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetDoubleColon"],"kind":"variant"},"2:4581:8748":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"21:394:10175":{"crate_id":21,"path":["num_traits","ops","inv","Inv"],"kind":"trait"},"2:40993:8844":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:46843:13708":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:8370:13757":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:10888:8812":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"16:6610:11906":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"5:1287:9902":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:4772:16440":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:40026:222":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:15944:10895":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"2:42352:201":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"21:357:10167":{"crate_id":21,"path":["num_traits","ops","checked","CheckedMul"],"kind":"trait"},"17:10251:10700":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:11567:14293":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"6:123:22102":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"17:15383:11417":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"6:6136:13059":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:9633:725":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"5:1790:9891":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"0:3092:8156":{"crate_id":0,"path":["chrono","round","RoundingError","DurationExceedsTimestamp"],"kind":"variant"},"17:256:14245":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:2035:204":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:9181:7484":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"0:1980:2152":{"crate_id":0,"path":["chrono","round","SubsecRound"],"kind":"trait"},"0:2324:3367":{"crate_id":0,"path":["chrono","format","Numeric","Nanosecond"],"kind":"variant"},"16:4355:11735":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:15249:11378":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:4890:16428":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"5:3622:9603":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:5111:12877":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"17:14933:11317":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"5:5896:9890":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:15678:11518":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"11:123:10376":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"16:7951:12072":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:14356:11122":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:41123:8872":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"21:352:10165":{"crate_id":21,"path":["num_traits","ops","checked","CheckedAdd"],"kind":"trait"},"2:40136:13451":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:8534:9006":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"21:548:10192":{"crate_id":21,"path":["num_traits","sign","Unsigned"],"kind":"trait"},"2:42478:9286":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:6231:10463":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"17:15222:11374":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:32827:251":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:14189:11094":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"0:2382:3419":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetTripleColon"],"kind":"variant"},"1:6366:227":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:40046:221":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:32914:113":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"6:5921:12949":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:9015:14494":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"18:96:15646":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:9938:28562":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:4649:11743":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:9054:14499":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:9130:184":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"5:2269:13309":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"6:6263:13105":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:12030:14314":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:15281:11387":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:11166:10718":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"6:62:22047":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:46405:13693":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"16:4491:11739":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"11:1582:14409":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"5:7391:13320":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:363:9352":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:10769:41860":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:32882:9016":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"0:2300:2156":{"crate_id":0,"path":["chrono","format","Numeric","Month"],"kind":"variant"},"2:43631:13642":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:15720:11524":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:32912:9022":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"17:12724:28566":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"9:329:12263":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:43081:8734":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"6:4947:12786":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"17:10155:10696":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:34026:8679":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"11:1066:27566":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:21684:8948":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"11:434:15666":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:11898:10756":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:15356:11410":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"16:2979:11722":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:6169:13068":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:6691:13135":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:48568:13741":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:12572:8783":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:41607:8837":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:12189:14322":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:16269:10930":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"16:7306:14392":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"16:5959:27607":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"5:4107:9603":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"16:7984:14404":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:13553:10963":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"11:351:15662":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"1:12027:16377":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:12074:1650":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"5:5360:10385":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"5:7311:9557":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:47199:13715":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"11:1728:153":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:8463:9005":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:4805:21685":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"5:1024:10385":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"5:5170:10409":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:11647:10742":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:10229:112":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"17:15473:11440":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:42495:233":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:14177:11092":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"11:1896:9891":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"17:16198:11643":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"16:2419:11679":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:10845:8799":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:9654:39065":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"11:875:9898":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"16:6282:11851":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:44165:14450":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"6:507:12321":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:2729:11693":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:42898:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:46464:13696":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"0:2312:3353":{"crate_id":0,"path":["chrono","format","Numeric","WeekdayFromMon"],"kind":"variant"},"2:10002:8734":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:44971:8777":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"21:479:10182":{"crate_id":21,"path":["num_traits","ops","wrapping","WrappingMul"],"kind":"trait"},"17:15116:11348":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"5:3596:180":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:9198:9354":{"crate_id":1,"path":["std","sys","pal","common","thread_local","fast_local","Key"],"kind":"struct"},"1:7788:16375":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:12671:14337":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"5:3768:14417":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"16:6230:11843":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"16:7355:12004":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"5:2063:14417":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"6:4595:12660":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"0:2234:2605":{"crate_id":0,"path":["chrono","format","strftime","StrftimeItems"],"kind":"struct"},"2:48504:13737":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"5:4881:224":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"21:162:8295":{"crate_id":21,"path":["num_traits","cast","FromPrimitive"],"kind":"trait"},"1:5484:14468":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:8354:14489":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:41551:13601":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:47153:13714":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"0:2320:3361":{"crate_id":0,"path":["chrono","format","Numeric","Minute"],"kind":"variant"},"0:2510:3482":{"crate_id":0,"path":["chrono","format","Item","Literal"],"kind":"variant"},"17:13437:10932":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:7924:8942":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:7332:8853":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:2275:8922":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"18:735:32745":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:8055:5790":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:12022:7442":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:8413:13758":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:11043:13772":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"5:1131:15092":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"16:6221:11842":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:1885:9964":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:10997:10713":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:40866:13588":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:41091:13594":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:22348:21749":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"11:2326:9901":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"0:2378:3413":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetColon"],"kind":"variant"},"1:11478:10486":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"6:5152:12892":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:4005:16413":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"16:7152:11982":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:23609:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:41144:8849":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:44185:7483":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:5464:14467":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"6:4364:12532":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:44686:13663":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:1929:2225":{"crate_id":1,"path":["std","error"],"kind":"module"},"17:14298:11112":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:2971:8752":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:11228:14188":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"1:1809:665":{"crate_id":1,"path":["std","env"],"kind":"module"},"17:10710:14264":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:15342:11403":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"16:6394:11864":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:13753:11014":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"2:41157:8864":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"11:2548:12220":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"6:5969:12974":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:8966:16485":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:11214:14276":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"6:5992:12987":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:3494:7544":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:10665:13787":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"17:10720:41857":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:7453:36218":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:11605:7773":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:13046:10861":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:15138:11352":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"21:136:10159":{"crate_id":21,"path":["num_traits","cast","ToPrimitive"],"kind":"trait"},"2:9799:8758":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"2:44846:8784":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"6:1674:12494":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"18:765:32746":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:15214:11372":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"0:3064:4023":{"crate_id":0,"path":["chrono","offset","LocalResult","Single"],"kind":"variant"},"2:3665:9890":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"16:6941:28503":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:597:10693":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:10915:41863":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"16:2336:11670":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"6:1514:12387":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:13594:10974":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:43835:13645":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:11051:14270":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:8446:9240":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:78:1707":{"crate_id":2,"path":["core","usize"],"kind":"module"},"1:5708:13749":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:12056:1668":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"5:7383:217":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:11368:13807":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:4217:10020":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:10054:9958":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"18:0:8553":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:5681:8956":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"0:2388:3428":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetZ"],"kind":"variant"},"2:3397:8703":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:44823:13667":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"16:4907:11752":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:12578:8782":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:8071:14482":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"16:6152:11837":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"6:6943:13252":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:9737:28542":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"13:0:8542":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:15456:11433":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:46627:13701":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"6:6100:13049":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:43584:13637":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"5:3240:12213":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:12572:10730":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"2:70:805":{"crate_id":2,"path":["core","i64"],"kind":"module"},"17:10661:14263":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:2959:8891":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:1887:9965":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"1:10869:33262":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:8589:9008":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:3220:8698":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"0:2549:2174":{"crate_id":0,"path":["chrono","format","ParseError"],"kind":"struct"},"5:1478:9888":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"16:8022:28508":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:47229:13716":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"6:7610:13278":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:2438:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:45223:178":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:44493:8794":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"21:331:10164":{"crate_id":21,"path":["num_traits","ops","bytes","ToBytes"],"kind":"trait"},"5:2990:13306":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:4975:16465":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"0:2328:3374":{"crate_id":0,"path":["chrono","format","Numeric","Internal"],"kind":"variant"},"1:3801:14459":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:12647:14335":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"1:8076:7663":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:6595:10434":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"2:42332:13623":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:32755:12222":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:44035:13345":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"16:3010:10593":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:2666:10440":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:3799:9557":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:40309:36508":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:15582:11484":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:14475:11144":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"17:14752:11188":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"5:6870:10010":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:5601:28495":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:12342:10807":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:9026:9335":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:4170:14428":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:13738:11010":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:12629:21659":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"11:774:9888":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:13387:10925":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:3386:260":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:11293:28595":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"1:10646:14512":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"1:9457:10478":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"18:613:41867":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:44951:8771":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"0:3067:4024":{"crate_id":0,"path":["chrono","offset","LocalResult","Ambiguous"],"kind":"variant"},"2:34144:8680":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"6:4473:12604":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:5316:10696":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:11915:28662":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:10284:10701":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:42476:9167":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:16069:11613":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"18:651:10550":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"16:6579:28501":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"5:1506:9893":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"16:4283:11734":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"0:2516:3315":{"crate_id":0,"path":["chrono","format","Item","Space"],"kind":"variant"},"2:44963:8775":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"0:2513:3484":{"crate_id":0,"path":["chrono","format","Item","OwnedLiteral"],"kind":"variant"},"5:1537:14416":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"18:754:10590":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:8362:14486":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:11562:14461":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:7982:14480":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:13999:11052":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:3999:16414":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"5:7669:10006":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:44955:8774":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:11318:10484":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"17:14079:11063":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:22477:16594":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"16:6849:14382":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:11764:10753":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"21:369:10171":{"crate_id":21,"path":["num_traits","ops","checked","CheckedShr"],"kind":"trait"},"16:3830:11731":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:42487:9345":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:39986:217":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"16:6348:11703":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"18:481:10548":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:10317:10702":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:44343:8802":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:3012:2347":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:21312:39122":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"2:7995:5726":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"0:1968:2181":{"crate_id":0,"path":["chrono","round"],"kind":"module"},"21:264:10161":{"crate_id":21,"path":["num_traits","identities","One"],"kind":"trait"},"9:481:27487":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:12074:21806":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"5:692:117":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"0:2343:3375":{"crate_id":0,"path":["chrono","format","InternalNumeric"],"kind":"struct"},"6:6798:13170":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"0:2376:3408":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneName"],"kind":"variant"},"2:44063:13348":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:44361:8801":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:5485:11701":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:867:9888":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"11:102:12207":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:45040:8714":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:44053:14446":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:12353:10811":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"1:8233:8947":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"21:387:10173":{"crate_id":21,"path":["num_traits","ops","euclid","CheckedEuclid"],"kind":"trait"},"17:13606:10977":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:12055:457":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"17:14968:11318":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:3313:218":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"16:5238:11757":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:640:14453":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:11557:14292":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"6:7371:13264":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:40847:21691":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:41135:8863":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"5:0:313":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:10259:8906":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"6:6128:13056":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:5894:10458":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:41580:8831":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"5:4426:8956":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:11865:14313":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"5:4065:10385":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:621:8718":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"5:7521:38537":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:11730:10749":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"16:4518:11740":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:12808:10847":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:4867:10456":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:45202:14011":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:31100:38563":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"2:2509:132":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"6:6898:13230":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"16:5568:11765":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"6:5104:12874":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"6:4666:12679":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"5:281:3299":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:16121:11625":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"1:4107:16420":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:11056:13773":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:45161:234":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"6:1734:12517":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"21:95:10155":{"crate_id":21,"path":["num_traits","bounds","Bounded"],"kind":"trait"},"2:22747:13363":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:9087:33260":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"17:14503:11148":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:1832:1199":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"5:3702:10385":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:2420:7450":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:8263:8869":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:44987:8712":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:42543:9603":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"0:931:2175":{"crate_id":0,"path":["chrono","format","ParseResult"],"kind":"type_alias"},"1:9145:159":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:8300:16410":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"0:2267:3310":{"crate_id":0,"path":["chrono","format","Pad"],"kind":"enum"},"2:40764:13580":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"6:0:887":{"crate_id":6,"path":["libc"],"kind":"module"},"1:6318:10464":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"16:6244:28499":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"5:7375:9557":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:11075:8712":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"2:1923:13333":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"0:2316:3357":{"crate_id":0,"path":["chrono","format","Numeric","Hour"],"kind":"variant"},"17:10457:136":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"17:13899:11038":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:9467:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"16:4761:11747":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:7917:8938":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"5:7063:10424":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:23425:197":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"5:1528:217":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"5:6011:10409":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:16093:11618":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"5:7508:13321":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:44084:13646":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:10443:8988":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"2:41341:8869":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:42818:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:6056:227":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:8348:16439":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:32791:3374":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"6:5928:12953":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:10886:13774":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"6:7622:13280":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:8605:9010":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:11661:10743":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:6079:13037":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:3230:34708":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:12557:10716":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"2:21586:13352":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:836:9009":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:22791:38559":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"16:6462:28500":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:16176:11641":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"17:14386:11125":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"5:3199:9009":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:41022:8855":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"9:356:27503":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:12238:14326":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:11026:28577":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"16:5878:11660":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:1975:712":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"2:44110:8844":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:14012:11054":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:3170:8692":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:14051:11059":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"6:527:12338":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:7913:8842":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"11:1107:14407":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:9135:241":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:11637:13814":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:4844:11750":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"11:328:12211":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"0:3094:8153":{"crate_id":0,"path":["chrono","round","RoundingError","DurationExceedsLimit"],"kind":"variant"},"6:7365:13262":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"6:4578:12653":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:5025:8992":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"2:23891:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"11:1142:14408":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:12213:14324":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"16:6858:11944":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:2175:28620":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"8:0:8544":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:13497:10945":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:922:9895":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"0:2356:3384":{"crate_id":0,"path":["chrono","format","Fixed","ShortMonthName"],"kind":"variant"},"0:954:2176":{"crate_id":0,"path":["chrono","naive"],"kind":"module"},"0:2386:3426":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffset"],"kind":"variant"},"17:11142:10730":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:2712:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:41599:8835":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:44531:8807":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:12175:14318":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:21512:8948":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"17:11392:14284":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"16:3600:10598":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:14212:11103":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"21:579:10149":{"crate_id":21,"path":["num_traits","NumAssign"],"kind":"trait"},"6:5075:12855":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:15760:11535":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"6:1664:12488":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:4:1125":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"5:6503:9890":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:10246:15102":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"16:6555:11893":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:40821:21690":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"18:573:10550":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:4093:8956":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"0:2372:3403":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond6"],"kind":"variant"},"1:7823:9969":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:44975:8778":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:22733:10154":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:13526:10954":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"6:5023:12833":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:21567:16513":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:4444:228":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"21:4415:8909":{"crate_id":21,"path":["num_traits","ParseFloatError"],"kind":"struct"},"6:1718:12512":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:42292:13755":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:42130:13607":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:1802:13330":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:10820:9603":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:13214:212":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:13406:149":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"5:2987:9597":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:43416:8745":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"6:1570:12420":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"16:7482:14400":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"0:2318:3359":{"crate_id":0,"path":["chrono","format","Numeric","Hour12"],"kind":"variant"},"2:44461:8804":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:5776:8956":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:2457:111":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:11680:8788":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:33967:2353":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:4884:12755":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"6:7604:13277":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"6:4556:12640":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"6:1703:12505":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:16105:11620":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"1:2266:136":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:12260:8816":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"6:4902:12764":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:14402:11128":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"21:485:10184":{"crate_id":21,"path":["num_traits","ops","wrapping","WrappingShl"],"kind":"trait"},"1:4049:16416":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"6:7657:13288":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:12090:14181":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"21:211:32756":{"crate_id":21,"path":["num_traits","float","FloatCore"],"kind":"trait"},"21:447:32765":{"crate_id":21,"path":["num_traits","ops","overflowing","OverflowingMul"],"kind":"trait"},"1:5849:14475":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:12297:8818":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:2652:8978":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:46445:13695":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"21:364:10168":{"crate_id":21,"path":["num_traits","ops","checked","CheckedNeg"],"kind":"trait"},"1:1803:7435":{"crate_id":1,"path":["std","collections","hash_map"],"kind":"module"},"1:8253:8855":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:8916:9557":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:43369:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"6:4789:12710":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:4300:14462":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:14587:11159":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"16:6803:14381":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:48645:13744":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"0:2306:3348":{"crate_id":0,"path":["chrono","format","Numeric","WeekFromMon"],"kind":"variant"},"6:555:12353":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:13344:10920":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:4830:12731":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:1650:12477":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"12:0:8548":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"0:2529:135":{"crate_id":0,"path":["chrono","format","Item","Error"],"kind":"variant"},"17:12264:14328":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:7907:8940":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:10796:9009":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:42779:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"21:195:10157":{"crate_id":21,"path":["num_traits","cast","AsPrimitive"],"kind":"trait"},"15:0:8550":{"crate_id":15,"path":["addr2line"],"kind":"module"},"16:6116:14370":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:10486:9341":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"6:6804:13172":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:3579:8965":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"21:417:10177":{"crate_id":21,"path":["num_traits","ops","mul_add","MulAddAssign"],"kind":"trait"},"17:13766:11016":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"17:10350:10703":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:6713:240":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"6:7598:13276":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"0:2522:3327":{"crate_id":0,"path":["chrono","format","Item","Numeric"],"kind":"variant"},"5:5669:10010":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:12478:10823":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:30979:10000":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:15400:11421":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:12089:10791":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:10905:14267":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"11:2423:9557":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"1:637:14451":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:23245:195":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"2:10160:789":{"crate_id":2,"path":["core","hash"],"kind":"module"},"17:11497:14287":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:3416:38795":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:15646:11503":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"11:2569:8900":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"0:2578:3518":{"crate_id":0,"path":["chrono","format","ParseErrorKind","BadFormat"],"kind":"variant"},"2:2110:10021":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:2418:8925":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"21:361:10169":{"crate_id":21,"path":["num_traits","ops","checked","CheckedRem"],"kind":"trait"},"0:2326:3370":{"crate_id":0,"path":["chrono","format","Numeric","Timestamp"],"kind":"variant"},"1:8221:8944":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"16:2399:11678":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:5966:8848":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"21:412:10176":{"crate_id":21,"path":["num_traits","ops","mul_add","MulAdd"],"kind":"trait"},"16:2375:11677":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:44198:8790":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"6:4977:12807":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:7942:128":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:13797:11023":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:48309:13728":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"6:4955:12791":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"16:6045:213":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"21:552:10144":{"crate_id":21,"path":["num_traits","Num"],"kind":"trait"},"0:860:3302":{"crate_id":0,"path":["chrono","format","strftime"],"kind":"module"},"16:7444:14399":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:41176:8866":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:13461:10003":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:9995:118":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:11128:159":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"17:14066:11062":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"16:3260:11725":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"17:11537:14290":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"11:2562:12223":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:12038:33250":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"6:5052:12847":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:12075:1651":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"1:9020:114":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:2434:8929":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:580:12366":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"16:6362:11720":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"6:4535:12629":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:13538:10957":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:22319:8948":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"1:7602:10693":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"16:7452:28505":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:9074:13780":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:15992:11599":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"2:41105:8861":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:6682:13129":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:15176:11365":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:12076:14317":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:43816:13643":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:11639:14440":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"11:687:9603":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:22806:38592":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:13235:10896":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:557:9338":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:3406:11726":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"21:4408:10154":{"crate_id":21,"path":["num_traits","FloatErrorKind"],"kind":"enum"},"3:0:484":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:10010:213":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"5:2167:13301":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:9886:28560":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:21695:13352":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:9163:2788":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"16:7684:12026":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:44833:13671":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:46242:13687":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:3376:8701":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:11189:10720":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:13211:10895":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:7227:3779":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:44513:8795":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:588:16369":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:10218:10699":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:23515:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"16:7914:12067":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:32802:14443":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"5:6713:10385":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:6718:13145":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"11:832:9892":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"21:291:10162":{"crate_id":21,"path":["num_traits","int","PrimInt"],"kind":"trait"},"2:46326:13690":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"0:2489:198":{"crate_id":0,"path":["chrono","format","Colons","None"],"kind":"variant"},"1:12077:857":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:357:9351":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"18:563:10560":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"21:475:10181":{"crate_id":21,"path":["num_traits","ops","wrapping","WrappingAdd"],"kind":"trait"},"21:328:32762":{"crate_id":21,"path":["num_traits","ops","bytes","NumBytes"],"kind":"trait"},"2:39971:220":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:12584:14265":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"0:2394:3374":{"crate_id":0,"path":["chrono","format","Fixed","Internal"],"kind":"variant"},"16:7507:217":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"16:6773:11929":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:44547:8809":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"6:7679:13293":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:2435:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:3001:9019":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:47997:13724":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:10381:10479":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"2:41351:8870":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:7962:126":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:23155:194":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:44145:14449":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"16:3993:11733":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"18:706:8783":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:40895:38537":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:15333:11402":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:588:12371":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:48515:13738":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:10950:10483":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"5:7331:9890":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:5346:11759":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"16:6895:11948":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:8866:13772":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:45029:8713":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:11413:13811":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:11606:14439":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"2:12558:8766":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:31017:13380":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:14341:11118":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:15368:11413":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:15734:11526":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"5:6136:8956":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:11407:13810":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:16235:11652":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"5:886:10392":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"5:2994:15093":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:12066:701":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:5033:9236":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"6:5829:12896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:10944:10482":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:3463:8956":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:403:14247":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"0:2465:3465":{"crate_id":0,"path":["chrono","format","OffsetPrecision","Minutes"],"kind":"variant"},"6:5117:12880":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"16:4545:11741":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:11354:14283":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"11:2383:9009":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"16:7118:9163":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:34800:8685":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"11:2403:9603":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"1:6849:2789":{"crate_id":1,"path":["std","time","UNIX_EPOCH"],"kind":"constant"},"2:42146:16411":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:15206:11370":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"14:202:2174":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:14575:10818":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"0:2566:2221":{"crate_id":0,"path":["chrono","format","ParseErrorKind","OutOfRange"],"kind":"variant"},"6:1576:12422":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"6:5897:12940":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:15463:11435":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:3569:8946":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:31043:38571":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"5:1425:9009":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:7653:10474":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:21971:8948":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:1063:9902":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:3227:34006":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:6499:14477":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:10446:8984":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"3:234:233":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:4616:12668":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:12929:10854":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:14325:11116":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"5:4792:725":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:13165:162":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:3017:2352":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:9140:242":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"17:15273:11386":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"17:15836:11551":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"16:5331:10697":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"16:2509:11683":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:36676:8686":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:11110:13799":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"0:2576:3516":{"crate_id":0,"path":["chrono","format","ParseErrorKind","TooLong"],"kind":"variant"},"17:10170:10697":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:9970:141":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:1446:153":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:42560:203":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:12443:10820":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"0:3096:8155":{"crate_id":0,"path":["chrono","round","RoundingError","TimestampExceedsLimit"],"kind":"variant"},"17:15931:10881":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"11:800:9890":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:22001:13353":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"5:2718:13313":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:42258:38589":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:6590:13339":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"1:7934:8939":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"5:6903:10012":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"16:7366:11715":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"0:2355:2793":{"crate_id":0,"path":["chrono","format","Fixed"],"kind":"enum"},"5:4459:10403":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"6:4908:12766":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:41073:8858":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:42498:200":{"crate_id":2,"path":["chrono","format","ParseResult","Ok"],"kind":"variant"},"2:43623:13641":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:34454:8682":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:12062:1633":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:7900:143":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"16:7565:12012":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:43831:13644":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:46941:13710":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:8511:7770":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:1578:9557":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:9952:2787":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"5:7536:13324":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:2675:8948":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:4538:16440":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:9951:233":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"1:11396:13952":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:4220:15675":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"6:4506:12618":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"18:598:41868":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:11102:14273":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:7619:8825":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:14868:11281":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:22755:13364":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:4989:12816":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"21:454:243":{"crate_id":21,"path":["num_traits","ops","saturating","Saturating"],"kind":"trait"},"17:12543:14334":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"16:2641:11689":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:15769:11539":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"11:1566:27567":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:13089:7808":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"16:4702:11745":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"6:4610:12666":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"0:2288:3330":{"crate_id":0,"path":["chrono","format","Numeric","Year"],"kind":"variant"},"16:2819:11697":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:1596:12214":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:42662:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:4694:16418":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"6:4449:12590":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"11:811:9891":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"1:12080:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"16:6929:11953":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"15:394:27599":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"1:12073:1649":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"6:4783:12707":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:22833:13374":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"5:5980:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"11:856:9897":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:45151:226":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"6:1558:12412":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:2665:11690":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"14:40:10896":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:5377:127":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:44044:13346":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"16:2439:11680":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"0:2358:3387":{"crate_id":0,"path":["chrono","format","Fixed","LongMonthName"],"kind":"variant"},"17:10524:14261":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"0:2384:3423":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetColonZ"],"kind":"variant"},"2:43613:7770":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:15058:11334":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"6:596:12375":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:13509:10946":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:15410:11424":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"6:4434:12583":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:1990:186":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:11107:14437":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:13146:10873":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"0:2298:3341":{"crate_id":0,"path":["chrono","format","Numeric","IsoYearMod100"],"kind":"variant"},"2:39955:8697":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:12099:1548":{"crate_id":2,"path":["core","str"],"kind":"module"},"2:46797:13706":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"16:3856:11732":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:4966:425":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"6:489:12313":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"6:4647:12678":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"16:7706:28507":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:16187:11642":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"6:1691:12501":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:4488:12610":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:2749:11694":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:46130:13682":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:939:9897":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:11121:14438":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:5955:12973":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:12251:14327":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:14111:11067":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:42857:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"16:2917:27636":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:10699:8942":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"11:700:9557":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:2806:135":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:25:665":{"crate_id":2,"path":["core","env"],"kind":"macro"},"1:1054:9901":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:3233:34711":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:44257:8797":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:8391:13145":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:12006:14016":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:6584:8850":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"17:13832:11027":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:4448:8879":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"16:6331:11856":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:10854:14470":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"16:6599:11905":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:11158:13800":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"1:3392:8974":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"16:5541:11761":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:10887:41864":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"16:7345:12003":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:6711:13141":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:7904:163":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"16:2459:11681":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"16:3545:11727":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"16:536:11658":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"16:2553:11685":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"6:4375:12540":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"5:2157:9331":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"21:574:10148":{"crate_id":21,"path":["num_traits","NumAssignOps"],"kind":"trait"},"5:1316:9903":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"16:5521:11706":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:12508:10827":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:22722:8909":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"0:2290:3332":{"crate_id":0,"path":["chrono","format","Numeric","YearDiv100"],"kind":"variant"},"1:6263:14476":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"6:7388:13274":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:12065:699":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"0:2463:3462":{"crate_id":0,"path":["chrono","format","OffsetPrecision","Hours"],"kind":"variant"},"2:0:539":{"crate_id":2,"path":["core"],"kind":"module"},"17:13959:11047":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:6254:11848":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"16:6445:11868":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"5:5020:8956":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:41558:8826":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"17:13308:10913":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:11016:14268":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:16249:11653":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"0:2287:3327":{"crate_id":0,"path":["chrono","format","Numeric"],"kind":"enum"},"1:880:9889":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:918:9894":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:11153:14265":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"20:47:10547":{"crate_id":20,"path":["iana_time_zone","platform","openwrt","BrokenQuote"],"kind":"struct"},"14:7:14169":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:11367:10716":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:13252:10898":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"16:6759:11711":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:43601:154":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:12454:10821":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"6:5885:12936":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:9472:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"9:177:14754":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:11877:10754":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:42280:13621":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"2:46529:13698":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"11:2151:9902":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:10688:13795":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"2:3027:2351":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"5:7411:9557":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"6:5982:12980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"21:482:10183":{"crate_id":21,"path":["num_traits","ops","wrapping","WrappingNeg"],"kind":"trait"},"16:6134:14378":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:9659:14763":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"5:2988:40300":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"20:29:15644":{"crate_id":20,"path":["iana_time_zone","platform","openwrt","IterWords"],"kind":"struct"},"2:10004:8735":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"21:359:10166":{"crate_id":21,"path":["num_traits","ops","checked","CheckedDiv"],"kind":"trait"},"6:4496:12612":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"9:52:14744":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"6:542:12347":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:9807:28548":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:13356:114":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:46894:13709":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:10073:14504":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"2:3008:9021":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"17:14723:11168":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"5:5462:1548":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"0:2322:3363":{"crate_id":0,"path":["chrono","format","Numeric","Second"],"kind":"variant"},"16:7376:12005":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"6:6120:13054":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:3181:8693":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:11688:10745":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:44761:13665":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:12433:10818":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:2966:253":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:11405:14285":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:8599:9009":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"16:5696:11777":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"6:4745:12687":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:3468:8709":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:10573:41862":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:15822:11548":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:44289:8800":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"17:10982:28576":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:42092:168":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"5:7351:13319":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"16:4433:11737":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"21:375:10174":{"crate_id":21,"path":["num_traits","ops","euclid","Euclid"],"kind":"trait"},"1:7968:8903":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"6:6813:13176":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:45148:147":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"1:8900:9009":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"5:1115:15671":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:3804:14460":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:12225:14325":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:15376:11416":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:14414:11130":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:8360:5119":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"0:2570:3510":{"crate_id":0,"path":["chrono","format","ParseErrorKind","NotEnough"],"kind":"variant"},"2:6395:8873":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"6:4998:12822":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:14529:11150":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"21:463:10179":{"crate_id":21,"path":["num_traits","ops","saturating","SaturatingMul"],"kind":"trait"},"5:790:10387":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:13375:10924":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:48458:13733":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"18:608:14239":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"18:670:14244":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:7668:13292":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"6:6107:13050":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:23065:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:3349:8985":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"17:12201:14323":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"0:1553:1099":{"crate_id":0,"path":["chrono","offset"],"kind":"module"},"2:1708:8956":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:38717:8690":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"17:13946:11044":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:2529:11684":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:9671:28543":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:10075:14503":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"17:12824:28567":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:10622:41861":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:5066:863":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:8549:9007":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"17:15701:11519":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:1939:8716":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"6:4847:12742":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"5:2074:14418":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"17:11256:10722":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"17:12150:10794":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:10671:41858":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"10:36:12226":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:4380:14463":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:7717:9353":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:5694:227":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:12058:1162":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:16050:10908":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"18:589:10561":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:1581:9890":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"11:1887:9557":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"21:1966:10156":{"crate_id":21,"path":["num_traits","float","FloatConst"],"kind":"trait"},"2:44669:13662":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:1824:9947":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:41565:8828":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"6:4628:12677":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"5:3358:9891":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:11583:14298":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:1913:23447":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"6:5009:12827":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:11644:13814":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"5:903:9009":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:1826:9948":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:22123:8948":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:45250:10024":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"6:7651:13287":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"17:12695:14339":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"6:5130:12886":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"11:2231:12217":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"1:11335:13804":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:44073:14447":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:40777:13581":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"18:515:10553":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"18:659:14240":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:2847:8721":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"1:8201:8825":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"16:2284:27608":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:11541:14460":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"16:5897:28497":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:1900:21759":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:12374:8812":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"5:1456:9557":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"16:7176:41854":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:2546:209":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"11:1603:14410":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"6:5867:12923":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"18:726:10585":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"11:2554:41844":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"6:6248:13094":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:3473:14257":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:2728:263":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:12683:14338":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"17:13855:11030":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:8855:206":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"14:165:27572":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"11:710:9893":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"9:423:27490":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:723:151":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:11115:14274":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"6:4440:12585":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"18:680:10573":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:22668:13356":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:9949:13618":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"17:15596:11490":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"0:2360:3389":{"crate_id":0,"path":["chrono","format","Fixed","ShortWeekdayName"],"kind":"variant"},"13:226:12206":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:43395:135":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:14025:11055":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:22334:16601":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1:914:9893":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:10044:28564":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"0:2471:3471":{"crate_id":0,"path":["chrono","format","OffsetPrecision","OptionalSeconds"],"kind":"variant"},"2:42701:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:4182:14429":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"0:2526:2793":{"crate_id":0,"path":["chrono","format","Item","Fixed"],"kind":"variant"},"21:461:10180":{"crate_id":21,"path":["num_traits","ops","saturating","SaturatingSub"],"kind":"trait"},"18:718:10582":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:12851:10849":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:31205:38540":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"11:1051:9902":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:46721:13703":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:8283:8794":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:42401:171":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"17:12408:10815":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"5:1496:9892":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:43592:8907":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:1072:9903":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"16:7523:11718":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"18:635:10572":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:10419:10705":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:4063:16418":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"16:8097:12081":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:42976:14433":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"5:7302:10004":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:46575:13699":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:40840:13585":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:11443:10735":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"16:7491:12010":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"6:1521:12389":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:4984:16466":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"1:6040:10464":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:14463:11143":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:14489:11145":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:46773:13705":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:14855:11274":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"6:5941:12962":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"0:2366:3396":{"crate_id":0,"path":["chrono","format","Fixed","UpperAmPm"],"kind":"variant"},"17:14235:11104":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:13785:11021":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"11:2498:27562":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"0:0:2231":{"crate_id":0,"path":["chrono"],"kind":"module"},"1:12079:1258":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"11:2304:9900":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"17:15324:11399":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"16:6422:10375":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"2:15:2223":{"crate_id":2,"path":["core","write"],"kind":"macro"},"14:220:12159":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:10954:28575":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:9984:28563":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"21:355:10172":{"crate_id":21,"path":["num_traits","ops","checked","CheckedSub"],"kind":"trait"},"17:11042:14269":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:47465:13720":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:3157:124":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:13015:10818":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:4808:12720":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"10:44:12227":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"16:7324:12000":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"17:12043:14315":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"5:3753:7769":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:23985:8911":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"0:2294:3337":{"crate_id":0,"path":["chrono","format","Numeric","IsoYear"],"kind":"variant"},"18:581:8731":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:13363:10921":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:41053:8856":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:43341:38587":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"6:5068:12852":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:563:12358":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:40798:8810":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:12107:10730":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:1098:14249":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"16:2489:11682":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:6188:11840":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:8849:14491":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:44655:13659":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:11341:14282":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"5:634:14176":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"17:10818:14265":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"6:7616:13279":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"6:4893:12758":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:48469:13734":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:4572:8888":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:2688:8970":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"6:1546:12403":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:16079:11614":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"6:483:12310":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"11:837:9895":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:6741:13163":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"16:6292:11852":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"6:1507:12384":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"5:7548:13326":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:10927:14434":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:645:16372":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"5:266:10385":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:10965:14435":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"17:14977:11322":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:4686:12681":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:4987:39442":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:10006:8736":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"6:4584:12656":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"16:5846:14345":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"16:3741:11729":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:4119:16423":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:6139:10459":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"16:2769:11695":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"16:7537:11719":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:21573:16516":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:3080:8684":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"16:6745:11710":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:6965:13780":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:14599:11166":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"21:187:10158":{"crate_id":21,"path":["num_traits","cast","NumCast"],"kind":"trait"},"11:883:9899":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"16:8012:12074":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:10365:10437":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"17:11510:14288":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:44389:8805":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:47649:13722":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:11419:10730":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:23703:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:12336:8817":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:15010:11325":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"16:7294:11999":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:3347:8984":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"0:553:737":{"crate_id":0,"path":["chrono","format"],"kind":"module"},"2:34085:8678":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"16:7400:11717":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:2351:21749":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"16:7971:14401":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:15301:11394":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:9220:34195":{"crate_id":1,"path":["std","sys","pal","common","thread_local","fast_local","DtorState"],"kind":"enum"},"2:41574:8830":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:33488:2349":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"16:6646:11919":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:1862:9958":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"17:15799:11544":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"0:3062:198":{"crate_id":0,"path":["chrono","offset","LocalResult","None"],"kind":"variant"},"1:7672:10476":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:32883:9023":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"5:7419:9557":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:2540:202":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"0:2268:198":{"crate_id":0,"path":["chrono","format","Pad","None"],"kind":"variant"},"2:40123:13450":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"0:2488:3453":{"crate_id":0,"path":["chrono","format","Colons"],"kind":"enum"},"2:41192:8867":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"15:288:15653":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:15521:11477":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:21341:39128":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"16:2573:11686":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"6:7645:13286":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:44983:8773":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"16:7335:11714":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:40923:16392":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"1:5640:16469":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:41044:8847":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:11853:14312":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"9:501:12286":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"6:4922:12774":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:3191:140":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:41082:8859":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"0:2362:3391":{"crate_id":0,"path":["chrono","format","Fixed","LongWeekdayName"],"kind":"variant"},"0:2370:3401":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond3"],"kind":"variant"},"1:7808:9968":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"13:110:41846":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"5:1686:10385":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:5197:211":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:903:9891":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"0:3235:2221":{"crate_id":0,"path":["chrono","OutOfRange"],"kind":"struct"},"17:12597:10829":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"17:12659:14336":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"17:11089:14272":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"11:2352:9902":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"1:11288:12283":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"5:3206:12214":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:46995:13712":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"18:521:32747":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:7716:8948":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:42426:9557":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:48530:13739":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:40116:8702":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"16:4572:11742":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:9858:28559":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"16:5726:11783":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:4198:15674":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:11621:10739":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:42466:9164":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:4194:108":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"11:1025:9901":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:945:9898":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"21:513:10188":{"crate_id":21,"path":["num_traits","pow","Pow"],"kind":"trait"},"16:7414:12006":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:13723:11006":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:1585:9891":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"16:2883:27635":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"17:12863:10850":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"6:6222:13079":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:22771:38528":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"6:1682:12495":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:4516:12621":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"10:0:8546":{"crate_id":10,"path":["adler"],"kind":"module"},"5:3266:12216":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:3139:8706":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:46304:13689":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:16223:11649":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"2:2715:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:7397:15673":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"6:6837:13188":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"5:6370:16604":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:46751:13704":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:9033:33256":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:8336:13755":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"18:698:10577":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:45169:214":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"6:5859:12921":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:12887:10851":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:44522:8811":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:415:182":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:45210:13677":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:3391:144":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:22346:38748":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"2:9150:8780":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"11:1903:12213":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"16:6737:11927":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:10399:8791":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"0:2314:3355":{"crate_id":0,"path":["chrono","format","Numeric","Ordinal"],"kind":"variant"},"6:4529:12626":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:1968:8717":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"11:2469:9891":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"17:15569:11478":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:1040:9900":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"5:6994:269":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"6:6868:13213":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:40086:8700":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"11:0:8547":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"16:5616:11767":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:21693:16514":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"16:4968:11754":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:6426:183":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:33674:8677":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:22295:16598":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"5:7038:10421":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:11063:14271":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:48606:13743":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"21:567:10147":{"crate_id":21,"path":["num_traits","RefNum"],"kind":"trait"},"2:42501:134":{"crate_id":2,"path":["chrono","format","ParseResult","Err"],"kind":"variant"},"2:44619:21665":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"16:6215:14380":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"1:8892:13774":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"6:1501:12381":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:2242:7436":{"crate_id":1,"path":["std","fs"],"kind":"module"},"17:12399:10814":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:22840:8910":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"11:490:151":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:11493:14286":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:14372:11123":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"0:1988:2182":{"crate_id":0,"path":["chrono","round","DurationRound"],"kind":"trait"},"1:8289:14486":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:11313:10727":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"0:2390:3060":{"crate_id":0,"path":["chrono","format","Fixed","RFC2822"],"kind":"variant"},"21:103:32755":{"crate_id":21,"path":["num_traits","bounds","UpperBounded"],"kind":"trait"},"1:11093:2788":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"17:11595:10738":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:12067:806":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"16:6376:11857":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:11093:8801":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:44407:8806":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:5852:8860":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:43314:13630":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"0:2467:3467":{"crate_id":0,"path":["chrono","format","OffsetPrecision","Seconds"],"kind":"variant"},"2:11038:14436":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"5:1302:9901":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:40787:13582":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"0:2292:3334":{"crate_id":0,"path":["chrono","format","Numeric","YearMod100"],"kind":"variant"},"5:2049:7769":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"17:11227:14277":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:10000:127":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:3403:8705":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"5:5826:257":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"16:4674:11744":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:42418:9603":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"6:1496:12379":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:21370:39131":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"6:4841:12739":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"16:7386:11716":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:46274:13688":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:13399:10928":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:22256:16597":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"17:15023:11330":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:8387:14490":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:46972:13711":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:12993:28568":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:42410:9009":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:11674:10744":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:47855:13723":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"5:7341:10395":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"5:6032:15095":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"5:4035:9890":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:4638:16458":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:13367:10450":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:1607:12216":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"6:7639:13285":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:11242:14278":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:2203:14252":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:44734:13664":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"16:5713:11782":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:38662:8689":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"16:149:10373":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"1:7990:8979":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:13485:10944":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"5:4267:9009":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"5:4227:8956":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"5:1517:9894":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:7679:8827":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:10018:28544":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"16:6669:11920":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:13774:11018":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:4111:16421":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:46196:13685":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"7:78:27481":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:12422:10816":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:11341:14517":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:44209:8793":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:654:2646":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"16:0:8551":{"crate_id":16,"path":["gimli"],"kind":"module"},"16:7194:41853":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"1:2977:10455":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:23335:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"6:5140:12887":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"0:2568:3505":{"crate_id":0,"path":["chrono","format","ParseErrorKind","Impossible"],"kind":"variant"},"0:2473:3473":{"crate_id":0,"path":["chrono","format","OffsetPrecision","OptionalMinutesAndSeconds"],"kind":"variant"},"2:4236:21676":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"16:2617:11688":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"11:2542:12219":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:15957:11569":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"1:5120:14465":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:46174:13684":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"16:6408:11866":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:7760:9341":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"16:2709:11692":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:11574:12217":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"6:4870:12751":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"0:2565:3498":{"crate_id":0,"path":["chrono","format","ParseErrorKind"],"kind":"enum"},"6:4738:12685":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"11:299:12208":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"5:2487:13310":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:21339:39133":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"21:443:32763":{"crate_id":21,"path":["num_traits","ops","overflowing","OverflowingAdd"],"kind":"trait"},"2:44155:13350":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:6535:10468":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:43378:8744":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"16:4937:11753":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:42551:9557":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"16:6141:41850":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"6:5033:12839":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:41063:8857":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"5:3170:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"15:327:14741":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:12494:10824":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"6:7633:13284":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:13986:11051":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"11:2536:12218":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:119:22101":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"17:15102:11347":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"0:2572:3512":{"crate_id":0,"path":["chrono","format","ParseErrorKind","Invalid"],"kind":"variant"},"2:40749:38539":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:6781:13165":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:6819:13177":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:5298:28494":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:0:1540":{"crate_id":1,"path":["std"],"kind":"module"},"9:237:7770":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"17:15624:11497":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:40738:13577":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"6:533:12341":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:11715:10747":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"2:11000:8797":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:482:10452":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"17:2037:14251":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:11630:34235":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:11067:33248":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"6:6934:13249":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:12320:8815":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"6:6658:13112":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"11:2369:14413":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"17:16032:10898":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"17:11702:10746":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"6:6961:13255":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:4704:13156":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"1:849:9603":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:5500:14469":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:13922:11043":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:46220:13686":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"16:4871:11751":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:6665:15098":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:30749:8908":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"6:4566:12647":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:11524:14289":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:893:9890":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:13024:28569":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:8981:16487":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:41035:8846":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"0:2574:3514":{"crate_id":0,"path":["chrono","format","ParseErrorKind","TooShort"],"kind":"variant"},"0:2519:3487":{"crate_id":0,"path":["chrono","format","Item","OwnedSpace"],"kind":"variant"},"2:41589:8833":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"21:366:10170":{"crate_id":21,"path":["num_traits","ops","checked","CheckedShl"],"kind":"trait"},"6:5974:12975":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:14284:11111":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"5:212:10025":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"6:4860:12747":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:45005:129":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:21976:10164":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"17:12768:28545":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"11:844:9896":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"0:2491:3477":{"crate_id":0,"path":["chrono","format","Colons","Colon"],"kind":"variant"},"1:12059:338":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:11743:10750":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"16:5499:11704":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:6546:11892":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:22013:39135":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:13455:10940":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:10014:8739":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"16:5794:11791":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:43088:8736":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:42937:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"17:14449:11142":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:12464:28687":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"17:15289:11388":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"14:0:8549":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:12949:10801":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:4878:12754":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"16:4399:11736":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:40879:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:8270:8791":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:2676:21695":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:7209:15678":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:1914:13331":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:46482:13697":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:8951:16486":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:10641:8948":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:4601:8750":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"6:6071:13036":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:1528:12392":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:2436:8930":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"1:7998:7769":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:4236:16438":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:4710:12683":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:4517:8887":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:12900:10853":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:31601:8731":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"0:2296:3339":{"crate_id":0,"path":["chrono","format","Numeric","IsoYearDiv100"],"kind":"variant"},"16:5645:11772":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:10846:9969":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"6:4939:1112":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"5:7466:8900":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:12518:3218":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:4035:16415":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:4986:14260":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"17:12516:14331":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"1:12061:1548":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:43324:8744":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"6:1710:12508":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"16:6320:11855":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"18:80:15645":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:12068:803":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:7056:14187":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:3012:135":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:5891:12939":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"18:491:10549":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:9061:14500":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:48107:13725":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:42174:13614":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:10933:10481":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:48393:13730":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:504:9331":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:16165:11636":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"1:533:9336":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:10219:154":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"6:1639:12469":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"16:5006:11755":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:10746:33263":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"0:2493:3479":{"crate_id":0,"path":["chrono","format","Colons","Maybe"],"kind":"variant"},"1:4057:16417":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"16:7595:11707":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:10185:10698":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:45239:13680":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:4228:15676":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"21:445:32764":{"crate_id":21,"path":["num_traits","ops","overflowing","OverflowingSub"],"kind":"trait"},"17:12792:10661":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"7:0:1697":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:47311:13717":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:7225:28504":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:0:8552":{"crate_id":17,"path":["object"],"kind":"module"},"17:14847:11271":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"1:12060:1515":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:12056:10788":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:31011:10001":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"5:1271:9900":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:14091:11064":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"7:31:27474":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:42314:13622":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:2961:116":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:13187:10881":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"16:2319:11668":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:4811:16431":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"21:254:3313":{"crate_id":21,"path":["num_traits","identities","Zero"],"kind":"trait"},"11:396:10380":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"14:187:27579":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:44640:13653":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:44556:8810":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:40814:8808":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"5:40:10005":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:8276:8799":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"16:6062:11835":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:13568:10969":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:14436:11141":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:15608:11493":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"0:2444:3447":{"crate_id":0,"path":["chrono","format","OffsetFormat"],"kind":"struct"},"5:1388:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:3597:14258":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:11812:14307":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:14260:11108":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"17:13325:10915":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:13239:14441":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:6228:13080":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"0:2508:171":{"crate_id":0,"path":["chrono","format","Item"],"kind":"enum"},"16:4787:11748":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"16:2689:11691":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:16259:10925":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"2:22853:7482":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:4097:16419":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:2724:264":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:42623:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:10709:137":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"5:3833:9891":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"5:3609:9009":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:14876:11282":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:15434:11428":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"16:5759:11789":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:2492:7485":{"crate_id":1,"path":["std","io"],"kind":"module"},"6:4776:12706":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"6:5044:12845":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:46427:13694":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:9002:13779":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:44136:13349":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"16:7270:11805":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:3044:8695":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"0:2392:3431":{"crate_id":0,"path":["chrono","format","Fixed","RFC3339"],"kind":"variant"},"2:22402:21749":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"2:32825:244":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:48355:13729":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"16:2593:11687":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"6:4455:12592":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:4452:14464":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:3010:233":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"18:538:10558":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"21:459:10178":{"crate_id":21,"path":["num_traits","ops","saturating","SaturatingAdd"],"kind":"trait"},"17:13674:10981":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:683:256":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:7333:8854":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:11547:10640":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"9:446:27488":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"11:2443:9890":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"6:4461:12595":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"16:2304:27634":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"1:12078:1707":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"5:7477:8901":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:16212:11647":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"6:5146:12889":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"16:4462:11738":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:4302:8892":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:22:739":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"0:2302:3344":{"crate_id":0,"path":["chrono","format","Numeric","Day"],"kind":"variant"},"2:22683:13357":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:12583:8781":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"6:4401:12560":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"5:4197:8956":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"0:2270:3313":{"crate_id":0,"path":["chrono","format","Pad","Zero"],"kind":"variant"},"17:14545:11152":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:13581:10973":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:12789:118":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:44967:8779":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"16:7551:11709":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:2353:21750":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"2:44215:8792":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:44798:13666":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:7867:8843":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:10012:8738":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"21:555:10145":{"crate_id":21,"path":["num_traits","NumOps"],"kind":"trait"},"1:1574:9009":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"16:6724:11925":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:9284:9964":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"5:5404:8917":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"6:4351:12523":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:48553:13740":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:9066:14501":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"1:6880:16511":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:14788:11219":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:3049:8696":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"16:2789:11696":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:32816:7443":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:42740:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"5:7361:40399":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:10068:28547":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"16:6908:11951":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:3551:2787":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"16:5038:11756":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:11788:14303":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"5:7560:10410":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"6:4543:12634":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"6:7702:13299":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:12127:10793":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:11075:10716":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:12069:804":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:33908:2348":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:42584:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"6:1591:12434":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:12621:10830":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"0:2364:3394":{"crate_id":0,"path":["chrono","format","Fixed","LowerAmPm"],"kind":"variant"},"11:673:9009":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:10137:28541":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"16:6268:11702":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:9781:28558":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:7099:10472":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:2795:123":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:5151:14465":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"5:786:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"21:582:10150":{"crate_id":21,"path":["num_traits","NumAssignRef"],"kind":"trait"}},"external_crates":{"20":{"name":"iana_time_zone","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"num_traits","html_root_url":"https://docs.rs/num-traits/0.2/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}